### YamlMime:ApiPage
title: Namespace Alis.Core.Physic.Collision
body:
- api1: Namespace Alis.Core.Physic.Collision
  id: Alis_Core_Physic_Collision
  metadata:
    uid: Alis.Core.Physic.Collision
    commentId: N:Alis.Core.Physic.Collision
- h3: Namespaces
- parameters:
  - type:
      text: Alis.Core.Physic.Collision.Shapes
      url: Alis.Core.Physic.Collision.Shapes.html
- h3: Classes
- parameters:
  - type:
      text: Collision
      url: Alis.Core.Physic.Collision.Collision.html
    description: Collision methods
  - type:
      text: Distance
      url: Alis.Core.Physic.Collision.Distance.html
    description: The Gilbert–Johnson–Keerthi distance algorithm that provides the distance between shapes.
  - type:
      text: DynamicTree<TNode>
      url: Alis.Core.Physic.Collision.DynamicTree-1.html
    description: >-
      A dynamic tree arranges data in a binary tree to accelerate

      queries such as volume queries and ray casts. Leafs are proxies

      with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor

      so that the proxy AABB is bigger than the client object. This allows the client

      object to move by small amounts without triggering a tree update.

      Nodes are pooled and relocatable, so we use node indices rather than pointers.
  - type:
      text: DynamicTreeBroadPhase
      url: Alis.Core.Physic.Collision.DynamicTreeBroadPhase.html
    description: >-
      The broad-phase is used for computing pairs and performing volume queries and ray casts.

      This broad-phase does not persist pairs. Instead, this reports potentially new pairs.

      It is up to the client to consume the new pairs and to track subsequent overlap.
  - type:
      text: DynamicTreeBroadPhase<TNode>
      url: Alis.Core.Physic.Collision.DynamicTreeBroadPhase-1.html
    description: >-
      The broad-phase is used for computing pairs and performing volume queries and ray casts.

      This broad-phase does not persist pairs. Instead, this reports potentially new pairs.

      It is up to the client to consume the new pairs and to track subsequent overlap.
  - type:
      text: Collision.EPCollider
      url: Alis.Core.Physic.Collision.Collision.EPCollider.html
    description: The ep collider class
  - type:
      text: SeparationFunction
      url: Alis.Core.Physic.Collision.SeparationFunction.html
    description: The separation function class
  - type:
      text: TOIInput
      url: Alis.Core.Physic.Collision.TOIInput.html
    description: Input parameters for CalculateTimeOfImpact
  - type:
      text: TimeOfImpact
      url: Alis.Core.Physic.Collision.TimeOfImpact.html
    description: The time of impact class
- h3: Structs
- parameters:
  - type:
      text: AABB
      url: Alis.Core.Physic.Collision.AABB.html
    description: An axis aligned bounding box.
  - type:
      text: ClipVertex
      url: Alis.Core.Physic.Collision.ClipVertex.html
    description: Used for computing contact manifolds.
  - type:
      text: ContactFeature
      url: Alis.Core.Physic.Collision.ContactFeature.html
    description: >-
      The features that intersect to form the contact point

      This must be 4 bytes or less.
  - type:
      text: ContactID
      url: Alis.Core.Physic.Collision.ContactID.html
    description: Contact ids to facilitate warm starting.
  - type:
      text: DistanceInput
      url: Alis.Core.Physic.Collision.DistanceInput.html
    description: >-
      Input for Distance.ComputeDistance().

      You have to option to use the shape radii in the computation.
  - type:
      text: DistanceOutput
      url: Alis.Core.Physic.Collision.DistanceOutput.html
    description: Output for Distance.ComputeDistance().
  - type:
      text: DistanceProxy
      url: Alis.Core.Physic.Collision.DistanceProxy.html
    description: >-
      A distance proxy is used by the GJK algorithm.

      It encapsulates any shape.
  - type:
      text: EPAxis
      url: Alis.Core.Physic.Collision.EPAxis.html
    description: This structure is used to keep track of the best separating axis.
  - type:
      text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: >-
      A manifold for two touching convex Shapes.

      Box2D supports multiple types of contact:

      - Clip point versus plane with radius

      - Point versus point with radius (circles)

      The local point usage depends on the manifold type:

      - ShapeType.Circles: the local center of circleA

      - SeparationFunction.FaceA: the center of faceA

      - SeparationFunction.FaceB: the center of faceB

      Similarly the local normal usage:

      - ShapeType.Circles: not used

      - SeparationFunction.FaceA: the normal on polygonA

      - SeparationFunction.FaceB: the normal on polygonB

      We store contacts in this way so that position correction can

      account for movement, which is critical for continuous physics.

      All contact scenarios must be expressed in one of these types.

      This structure is stored across time steps, so we keep it small.
  - type:
      text: ManifoldPoint
      url: Alis.Core.Physic.Collision.ManifoldPoint.html
    description: >-
      A manifold point is a contact point belonging to a contact

      manifold. It holds details related to the geometry and dynamics

      of the contact points.

      The local point usage depends on the manifold type:

      -ShapeType.Circles: the local center of circleB

      -SeparationFunction.FaceA: the local center of cirlceB or the clip point of polygonB

      -SeparationFunction.FaceB: the clip point of polygonA

      This structure is stored across time steps, so we keep it small.

      Note: the impulses are used for internal caching and may not

      provide reliable contact forces, especially for high speed collisions.
  - type:
      text: Pair
      url: Alis.Core.Physic.Collision.Pair.html
    description: The pair
  - type:
      text: RayCastInput
      url: Alis.Core.Physic.Collision.RayCastInput.html
    description: Ray-cast input data.
  - type:
      text: RayCastOutput
      url: Alis.Core.Physic.Collision.RayCastOutput.html
    description: Ray-cast output data.
  - type:
      text: ReferenceFace
      url: Alis.Core.Physic.Collision.ReferenceFace.html
    description: Reference face used for clipping
  - type:
      text: Simplex
      url: Alis.Core.Physic.Collision.Simplex.html
    description: The simplex
  - type:
      text: SimplexCache
      url: Alis.Core.Physic.Collision.SimplexCache.html
    description: >-
      Used to warm start ComputeDistance.

      Set count to zero on first call.
  - type:
      text: SimplexVertex
      url: Alis.Core.Physic.Collision.SimplexVertex.html
    description: The simplex vertex
  - type:
      text: TOIOutput
      url: Alis.Core.Physic.Collision.TOIOutput.html
    description: The toi output
  - type:
      text: Collision.EPCollider.TempPolygon
      url: Alis.Core.Physic.Collision.Collision.EPCollider.TempPolygon.html
    description: This holds polygon B expressed in frame A.
  - type:
      text: TreeNode<TNode>
      url: Alis.Core.Physic.Collision.TreeNode-1.html
    description: A node in the dynamic tree. The client does not interact with this directly.
- h3: Interfaces
- parameters:
  - type:
      text: IBroadPhase<TNode>
      url: Alis.Core.Physic.Collision.IBroadPhase-1.html
    description: The broad phase interface
  - type:
      text: IBroadPhase
      url: Alis.Core.Physic.Collision.IBroadPhase.html
    description: The broad phase interface
- h3: Enums
- parameters:
  - type:
      text: ContactFeatureType
      url: Alis.Core.Physic.Collision.ContactFeatureType.html
    description: The contact feature type enum
  - type:
      text: EPAxisType
      url: Alis.Core.Physic.Collision.EPAxisType.html
    description: The ep axis type enum
  - type:
      text: ManifoldType
      url: Alis.Core.Physic.Collision.ManifoldType.html
    description: The manifold type enum
  - type:
      text: PointState
      url: Alis.Core.Physic.Collision.PointState.html
    description: This is used for determining the state of contact points.
  - type:
      text: SeparationFunctionType
      url: Alis.Core.Physic.Collision.SeparationFunctionType.html
    description: The separation function type enum
  - type:
      text: TOIOutputState
      url: Alis.Core.Physic.Collision.TOIOutputState.html
    description: The toi output state enum
- h3: Delegates
- parameters:
  - type:
      text: BroadPhaseQueryCallback
      url: Alis.Core.Physic.Collision.BroadPhaseQueryCallback.html
    description: The broad phase query callback
  - type:
      text: BroadPhaseRayCastCallback
      url: Alis.Core.Physic.Collision.BroadPhaseRayCastCallback.html
    description: The broad phase ray cast callback
  - type:
      text: BroadphaseDelegate
      url: Alis.Core.Physic.Collision.BroadphaseDelegate.html
    description: The broadphase delegate
languageId: csharp
