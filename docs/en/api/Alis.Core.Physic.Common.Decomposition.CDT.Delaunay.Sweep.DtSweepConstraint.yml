### YamlMime:ApiPage
title: Class DtSweepConstraint
body:
- api1: Class DtSweepConstraint
  id: Alis_Core_Physic_Common_Decomposition_CDT_Delaunay_Sweep_DtSweepConstraint
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/CDT/Delaunay/Sweep/DTSweepConstraint.cs#L38
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint
    commentId: T:Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep
      url: Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.html
  - name: Assembly
    value: Alis.dll
- markdown: The dt sweep constraint class
- code: 'internal class DtSweepConstraint : TriangulationConstraint'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: TriangulationConstraint
    url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html
  - text: DtSweepConstraint
    url: Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint.html
- h4: Inherited Members
- list:
  - text: TriangulationConstraint.P
    url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html#Alis_Core_Physic_Common_Decomposition_CDT_TriangulationConstraint_P
  - text: TriangulationConstraint.Q
    url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html#Alis_Core_Physic_Common_Decomposition_CDT_TriangulationConstraint_Q
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: DtSweepConstraint(TriangulationPoint, TriangulationPoint)
  id: Alis_Core_Physic_Common_Decomposition_CDT_Delaunay_Sweep_DtSweepConstraint__ctor_Alis_Core_Physic_Common_Decomposition_CDT_TriangulationPoint_Alis_Core_Physic_Common_Decomposition_CDT_TriangulationPoint_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/CDT/Delaunay/Sweep/DTSweepConstraint.cs#L44
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint.#ctor(Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint,Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint)
    commentId: M:Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint.#ctor(Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint,Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint)
- markdown: >-
    Give two points in any order. Will always be ordered so

    that q.y &gt; p.y and q.x &gt; p.x if same y value
- code: public DtSweepConstraint(TriangulationPoint p1, TriangulationPoint p2)
- h4: Parameters
- parameters:
  - name: p1
    type:
    - text: TriangulationPoint
      url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint.html
  - name: p2
    type:
    - text: TriangulationPoint
      url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint.html
- h2: See Also
- list:
  - - text: TriangulationConstraint
      url: Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html
languageId: csharp
metadata:
  description: The dt sweep constraint class
