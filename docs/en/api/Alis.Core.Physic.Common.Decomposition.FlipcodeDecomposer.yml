### YamlMime:ApiPage
title: Class FlipcodeDecomposer
body:
- api1: Class FlipcodeDecomposer
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L46
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer
    commentId: T:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Common.Decomposition
      url: Alis.Core.Physic.Common.Decomposition.html
  - name: Assembly
    value: Alis.dll
- markdown: >-
    Convex decomposition algorithm created by unknown

    Properties:

    - No support for holes

    - Very fast

    - Only works on simple polygons

    - Only works on counter clockwise polygons

    More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
- code: internal static class FlipcodeDecomposer
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: FlipcodeDecomposer
    url: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Fields
- api3: _tmpA
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer__tmpA
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L51
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpA
    commentId: F:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpA
- markdown: The tmp
- code: private static Vector2 _tmpA
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: _tmpB
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer__tmpB
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L56
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpB
    commentId: F:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpB
- markdown: The tmp
- code: private static Vector2 _tmpB
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: _tmpC
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer__tmpC
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L61
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpC
    commentId: F:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer._tmpC
- markdown: The tmp
- code: private static Vector2 _tmpC
- h4: Field Value
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- h2: Methods
- api3: ConvexPartition(Vertices)
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer_ConvexPartition_Alis_Core_Physic_Common_Vertices_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L69
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.ConvexPartition(Alis.Core.Physic.Common.Vertices)
    commentId: M:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.ConvexPartition(Alis.Core.Physic.Common.Vertices)
- markdown: >-
    Decompose the polygon into triangles.

    Properties:

    - Only works on counter clockwise polygons
- code: public static List<Vertices> ConvexPartition(Vertices vertices)
- h4: Parameters
- parameters:
  - name: vertices
    type:
    - text: Vertices
      url: Alis.Core.Physic.Common.Vertices.html
    description: The list of points describing the polygon
- h4: Returns
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: Vertices
      url: Alis.Core.Physic.Common.Vertices.html
    - '>'
- api3: InsideTriangle(ref Vector2, ref Vector2, ref Vector2, ref Vector2)
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer_InsideTriangle_Alis_Core_Aspect_Math_Vector_Vector2__Alis_Core_Aspect_Math_Vector_Vector2__Alis_Core_Aspect_Math_Vector_Vector2__Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L146
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.InsideTriangle(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.InsideTriangle(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: >-
    Check if the point P is inside the triangle defined by

    the points A, B, C
- code: private static bool InsideTriangle(ref Vector2 a, ref Vector2 b, ref Vector2 c, ref Vector2 p)
- h4: Parameters
- parameters:
  - name: a
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The A point.
  - name: b
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The B point.
  - name: c
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The C point.
  - name: p
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The point to be tested.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: True if the point is inside the triangle
- api3: Snip(Vertices, int, int, int, int, int[])
  id: Alis_Core_Physic_Common_Decomposition_FlipcodeDecomposer_Snip_Alis_Core_Physic_Common_Vertices_System_Int32_System_Int32_System_Int32_System_Int32_System_Int32___
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/FlipcodeDecomposer.cs#L171
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.Snip(Alis.Core.Physic.Common.Vertices,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])
    commentId: M:Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.Snip(Alis.Core.Physic.Common.Vertices,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])
- markdown: >-
    Cut a the contour and add a triangle into V to describe the

    location of the cut
- code: private static bool Snip(Vertices contour, int u, int v, int w, int n, int[] V)
- h4: Parameters
- parameters:
  - name: contour
    type:
    - text: Vertices
      url: Alis.Core.Physic.Common.Vertices.html
    description: The list of points defining the polygon
  - name: u
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index of the first point
  - name: v
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index of the second point
  - name: w
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index of the third point
  - name: n
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The number of elements in the array.
  - name: V
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    - '['
    - ']'
    description: The array to populate with indicies of triangles.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: True if a triangle was found
languageId: csharp
metadata:
  description: >-
    Convex decomposition algorithm created by unknown

    Properties:

    - No support for holes

    - Very fast

    - Only works on simple polygons

    - Only works on counter clockwise polygons

    More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
