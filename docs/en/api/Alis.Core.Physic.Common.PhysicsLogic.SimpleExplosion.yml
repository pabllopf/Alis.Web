### YamlMime:ApiPage
title: Class SimpleExplosion
body:
- api1: Class SimpleExplosion
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L41
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion
    commentId: T:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Common.PhysicsLogic
      url: Alis.Core.Physic.Common.PhysicsLogic.html
  - name: Assembly
    value: Alis.dll
- markdown: Creates a simple explosion that ignores other bodies hiding behind static bodies.
- code: 'public sealed class SimpleExplosion : PhysicsLogic'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: FilterData
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html
  - text: PhysicsLogic
    url: Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html
  - text: SimpleExplosion
    url: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.html
- h4: Inherited Members
- list:
  - text: PhysicsLogic.ControllerCategory
    url: Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html#Alis_Core_Physic_Common_PhysicsLogic_PhysicsLogic_ControllerCategory
  - text: PhysicsLogic.World
    url: Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html#Alis_Core_Physic_Common_PhysicsLogic_PhysicsLogic_World
  - text: PhysicsLogic.IsActiveOn(Body)
    url: Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html#Alis_Core_Physic_Common_PhysicsLogic_PhysicsLogic_IsActiveOn_Alis_Core_Physic_Dynamics_Body_
  - text: FilterData.DisabledOnCategories
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_DisabledOnCategories
  - text: FilterData.DisabledOnGroup
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_DisabledOnGroup
  - text: FilterData.EnabledOnCategories
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_EnabledOnCategories
  - text: FilterData.EnabledOnGroup
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_EnabledOnGroup
  - text: FilterData.IsActiveOn(Body)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_IsActiveOn_Alis_Core_Physic_Dynamics_Body_
  - text: FilterData.AddDisabledCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_AddDisabledCategory_Alis_Core_Physic_Dynamics_Category_
  - text: FilterData.RemoveDisabledCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_RemoveDisabledCategory_Alis_Core_Physic_Dynamics_Category_
  - text: FilterData.IsInDisabledCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_IsInDisabledCategory_Alis_Core_Physic_Dynamics_Category_
  - text: FilterData.AddEnabledCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_AddEnabledCategory_Alis_Core_Physic_Dynamics_Category_
  - text: FilterData.RemoveEnabledCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_RemoveEnabledCategory_Alis_Core_Physic_Dynamics_Category_
  - text: FilterData.IsInEnabledInCategory(Category)
    url: Alis.Core.Physic.Common.PhysicsLogic.FilterData.html#Alis_Core_Physic_Common_PhysicsLogic_FilterData_IsInEnabledInCategory_Alis_Core_Physic_Dynamics_Category_
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: SimpleExplosion(World)
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion__ctor_Alis_Core_Physic_Dynamics_World_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L47
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.#ctor(Alis.Core.Physic.Dynamics.World)
    commentId: M:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.#ctor(Alis.Core.Physic.Dynamics.World)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion" data-throw-if-not-resolved="false"></xref> class
- code: public SimpleExplosion(World world)
- h4: Parameters
- parameters:
  - name: world
    type:
    - text: World
      url: Alis.Core.Physic.Dynamics.World.html
    description: The world
- h2: Properties
- api3: Power
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion_Power
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L53
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.Power
    commentId: P:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.Power
- markdown: >-
    This is the power used in the power function. A value of 1 means the force

    applied to bodies in the explosion is linear. A value of 2 means it is exponential.
- code: public float Power { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
- h2: Methods
- api3: Activate(Vector2, float, float, float)
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion_Activate_Alis_Core_Aspect_Math_Vector_Vector2_System_Single_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L63
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.Activate(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.Activate(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)
- markdown: Activate the explosion at the specified position.
- code: public Dictionary<Body, Vector2> Activate(Vector2 pos, float radius, float force, float maxForce = 3.4028235E+38)
- h4: Parameters
- parameters:
  - name: pos
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The position (center) of the explosion.
  - name: radius
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The radius of the explosion.
  - name: force
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The force applied
  - name: maxForce
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: A maximum amount of force. When force gets over this value, it will be equal to maxForce
    optional: true
- h4: Returns
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - text: Body
      url: Alis.Core.Physic.Dynamics.Body.html
    - ','
    - " "
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    - '>'
    description: A list of bodies and the amount of force that was applied to them.
- api3: ApplyImpulse(Vector2, float, float, float, HashSet<Body>)
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion_ApplyImpulse_Alis_Core_Aspect_Math_Vector_Vector2_System_Single_System_Single_System_Single_System_Collections_Generic_HashSet_Alis_Core_Physic_Dynamics_Body__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L95
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.ApplyImpulse(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single,System.Collections.Generic.HashSet{Alis.Core.Physic.Dynamics.Body})
    commentId: M:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.ApplyImpulse(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single,System.Collections.Generic.HashSet{Alis.Core.Physic.Dynamics.Body})
- markdown: Applies the impulse using the specified pos
- code: private Dictionary<Body, Vector2> ApplyImpulse(Vector2 pos, float radius, float force, float maxForce, HashSet<Body> overlappingBodies)
- h4: Parameters
- parameters:
  - name: pos
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The pos
  - name: radius
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The radius
  - name: force
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The force
  - name: maxForce
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The max force
  - name: overlappingBodies
    type:
    - text: HashSet
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
    - <
    - text: Body
      url: Alis.Core.Physic.Dynamics.Body.html
    - '>'
    description: The overlapping bodies
- h4: Returns
- parameters:
  - type:
    - text: Dictionary
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
    - <
    - text: Body
      url: Alis.Core.Physic.Dynamics.Body.html
    - ','
    - " "
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    - '>'
    description: The forces
- api3: GetPercent(float, float)
  id: Alis_Core_Physic_Common_PhysicsLogic_SimpleExplosion_GetPercent_System_Single_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/PhysicsLogic/SimpleExplosion.cs#L125
  metadata:
    uid: Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.GetPercent(System.Single,System.Single)
    commentId: M:Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.GetPercent(System.Single,System.Single)
- markdown: Gets the percent using the specified distance
- code: private float GetPercent(float distance, float radius)
- h4: Parameters
- parameters:
  - name: distance
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The distance
  - name: radius
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The radius
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The float
languageId: csharp
metadata:
  description: Creates a simple explosion that ignores other bodies hiding behind static bodies.
