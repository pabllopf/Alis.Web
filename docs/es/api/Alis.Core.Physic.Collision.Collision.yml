### YamlMime:ApiPage
title: Class Collision
body:
- api1: Class Collision
  id: Alis_Core_Physic_Collision_Collision
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L45
  metadata:
    uid: Alis.Core.Physic.Collision.Collision
    commentId: T:Alis.Core.Physic.Collision.Collision
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Collision
      url: Alis.Core.Physic.Collision.html
  - name: Assembly
    value: Alis.dll
- markdown: Collision methods
- code: public static class Collision
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: Collision
    url: Alis.Core.Physic.Collision.Collision.html
- h4: Inherited Members
- list:
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Methods
- api3: ClipSegmentToLine(out FixedArray2<ClipVertex>, ref FixedArray2<ClipVertex>, Vector2, float, int)
  id: Alis_Core_Physic_Collision_Collision_ClipSegmentToLine_Alis_Core_Physic_Common_FixedArray2_Alis_Core_Physic_Collision_ClipVertex___Alis_Core_Physic_Common_FixedArray2_Alis_Core_Physic_Collision_ClipVertex___Alis_Core_Aspect_Math_Vector_Vector2_System_Single_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L593
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.ClipSegmentToLine(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Int32)
    commentId: M:Alis.Core.Physic.Collision.Collision.ClipSegmentToLine(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Int32)
- markdown: Clipping for contact manifolds.
- code: private static int ClipSegmentToLine(out FixedArray2<ClipVertex> vOut, ref FixedArray2<ClipVertex> vIn, Vector2 normal, float offset, int vertexIndexA)
- h4: Parameters
- parameters:
  - name: vOut
    type:
    - text: FixedArray2
      url: Alis.Core.Physic.Common.FixedArray2-1.html
    - <
    - text: ClipVertex
      url: Alis.Core.Physic.Collision.ClipVertex.html
    - '>'
    description: The v out.
  - name: vIn
    type:
    - text: FixedArray2
      url: Alis.Core.Physic.Common.FixedArray2-1.html
    - <
    - text: ClipVertex
      url: Alis.Core.Physic.Collision.ClipVertex.html
    - '>'
    description: The v in.
  - name: normal
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The normal.
  - name: offset
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The offset.
  - name: vertexIndexA
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The vertex index A.
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: ''
- api3: CollideCircles(ref Manifold, CircleShape, ref Transform, CircleShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_CollideCircles_Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Shapes_CircleShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_CircleShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L122
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.CollideCircles(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.CollideCircles(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
- markdown: Compute the collision manifold between two circles.
- code: public static void CollideCircles(ref Manifold manifold, CircleShape circleA, ref Transform xfA, CircleShape circleB, ref Transform xfB)
- h4: Parameters
- parameters:
  - name: manifold
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
  - name: circleA
    type:
    - text: CircleShape
      url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
  - name: xfA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
  - name: circleB
    type:
    - text: CircleShape
      url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
  - name: xfB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
- api3: CollideEdgeAndCircle(ref Manifold, EdgeShape, ref Transform, CircleShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_CollideEdgeAndCircle_Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Shapes_EdgeShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_CircleShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L437
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.CollideEdgeAndCircle(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.CollideEdgeAndCircle(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
- markdown: >-
    Compute contact points for edge versus circle.

    This accounts for edge connectivity.
- code: public static void CollideEdgeAndCircle(ref Manifold manifold, EdgeShape edgeA, ref Transform transformA, CircleShape circleB, ref Transform transformB)
- h4: Parameters
- parameters:
  - name: manifold
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold.
  - name: edgeA
    type:
    - text: EdgeShape
      url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
    description: The edge A.
  - name: transformA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform A.
  - name: circleB
    type:
    - text: CircleShape
      url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
    description: The circle B.
  - name: transformB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform B.
- api3: CollideEdgeAndPolygon(ref Manifold, EdgeShape, ref Transform, PolygonShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_CollideEdgeAndPolygon_Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Shapes_EdgeShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L579
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.CollideEdgeAndPolygon(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.CollideEdgeAndPolygon(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
- markdown: Collides and edge and a polygon, taking into account edge adjacency.
- code: public static void CollideEdgeAndPolygon(ref Manifold manifold, EdgeShape edgeA, ref Transform xfA, PolygonShape polygonB, ref Transform xfB)
- h4: Parameters
- parameters:
  - name: manifold
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold.
  - name: edgeA
    type:
    - text: EdgeShape
      url: Alis.Core.Physic.Collision.Shapes.EdgeShape.html
    description: The edge A.
  - name: xfA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The xf A.
  - name: polygonB
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The polygon B.
  - name: xfB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The xf B.
- api3: CollidePolygonAndCircle(ref Manifold, PolygonShape, ref Transform, CircleShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_CollidePolygonAndCircle_Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_CircleShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L158
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.CollidePolygonAndCircle(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.CollidePolygonAndCircle(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Physic.Common.Transform@)
- markdown: Compute the collision manifold between a polygon and a circle.
- code: public static void CollidePolygonAndCircle(ref Manifold manifold, PolygonShape polygonA, ref Transform xfA, CircleShape circleB, ref Transform xfB)
- h4: Parameters
- parameters:
  - name: manifold
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold.
  - name: polygonA
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The polygon A.
  - name: xfA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform of A.
  - name: circleB
    type:
    - text: CircleShape
      url: Alis.Core.Physic.Collision.Shapes.CircleShape.html
    description: The circle B.
  - name: xfB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform of B.
- api3: CollidePolygons(ref Manifold, PolygonShape, ref Transform, PolygonShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_CollidePolygons_Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L304
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.CollidePolygons(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.CollidePolygons(Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
- markdown: Compute the collision manifold between two polygons.
- code: public static void CollidePolygons(ref Manifold manifold, PolygonShape polyA, ref Transform transformA, PolygonShape polyB, ref Transform transformB)
- h4: Parameters
- parameters:
  - name: manifold
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold.
  - name: polyA
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly A.
  - name: transformA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform A.
  - name: polyB
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly B.
  - name: transformB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform B.
- api3: EdgeSeparation(PolygonShape, ref Transform, int, PolygonShape)
  id: Alis_Core_Physic_Collision_Collision_EdgeSeparation_Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__System_Int32_Alis_Core_Physic_Collision_Shapes_PolygonShape_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L645
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.EdgeSeparation(Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,System.Int32,Alis.Core.Physic.Collision.Shapes.PolygonShape)
    commentId: M:Alis.Core.Physic.Collision.Collision.EdgeSeparation(Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,System.Int32,Alis.Core.Physic.Collision.Shapes.PolygonShape)
- markdown: Find the separation between poly1 and poly2 for a give edge normal on poly1.
- code: private static float EdgeSeparation(PolygonShape poly1, ref Transform xf1To2, int edge1, PolygonShape poly2)
- h4: Parameters
- parameters:
  - name: poly1
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly1.
  - name: xf1To2
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
  - name: edge1
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The edge1.
  - name: poly2
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly2.
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: ''
- api3: FindIncidentEdge(out FixedArray2<ClipVertex>, PolygonShape, ref Transform, int, PolygonShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_FindIncidentEdge_Alis_Core_Physic_Common_FixedArray2_Alis_Core_Physic_Collision_ClipVertex___Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__System_Int32_Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L779
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.FindIncidentEdge(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,System.Int32,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.FindIncidentEdge(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.ClipVertex}@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,System.Int32,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
- markdown: Finds the incident edge using the specified c
- code: private static void FindIncidentEdge(out FixedArray2<ClipVertex> c, PolygonShape poly1, ref Transform xf1, int edge1, PolygonShape poly2, ref Transform xf2)
- h4: Parameters
- parameters:
  - name: c
    type:
    - text: FixedArray2
      url: Alis.Core.Physic.Common.FixedArray2-1.html
    - <
    - text: ClipVertex
      url: Alis.Core.Physic.Collision.ClipVertex.html
    - '>'
    description: The
  - name: poly1
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly
  - name: xf1
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The xf
  - name: edge1
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The edge
  - name: poly2
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly
  - name: xf2
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The xf
- api3: FindMaxSeparation(out int, PolygonShape, ref Transform, PolygonShape, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_FindMaxSeparation_System_Int32__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Collision_Shapes_PolygonShape_Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L688
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.FindMaxSeparation(System.Int32@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.FindMaxSeparation(System.Int32@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Physic.Common.Transform@)
- markdown: Find the max separation between poly1 and poly2 using edge normals from poly1.
- code: private static float FindMaxSeparation(out int edgeIndex, PolygonShape poly1, ref Transform xf1, PolygonShape poly2, ref Transform xf2)
- h4: Parameters
- parameters:
  - name: edgeIndex
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: Index of the edge.
  - name: poly1
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly1.
  - name: xf1
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The XF1.
  - name: poly2
    type:
    - text: PolygonShape
      url: Alis.Core.Physic.Collision.Shapes.PolygonShape.html
    description: The poly2.
  - name: xf2
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The XF2.
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: ''
- api3: GetPointStates(out FixedArray2<PointState>, out FixedArray2<PointState>, ref Manifold, ref Manifold)
  id: Alis_Core_Physic_Collision_Collision_GetPointStates_Alis_Core_Physic_Common_FixedArray2_Alis_Core_Physic_Collision_PointState___Alis_Core_Physic_Common_FixedArray2_Alis_Core_Physic_Collision_PointState___Alis_Core_Physic_Collision_Manifold__Alis_Core_Physic_Collision_Manifold__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L79
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.GetPointStates(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.PointState}@,Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.PointState}@,Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Manifold@)
    commentId: M:Alis.Core.Physic.Collision.Collision.GetPointStates(Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.PointState}@,Alis.Core.Physic.Common.FixedArray2{Alis.Core.Physic.Collision.PointState}@,Alis.Core.Physic.Collision.Manifold@,Alis.Core.Physic.Collision.Manifold@)
- markdown: Gets the point states using the specified state 1
- code: public static void GetPointStates(out FixedArray2<PointState> state1, out FixedArray2<PointState> state2, ref Manifold manifold1, ref Manifold manifold2)
- h4: Parameters
- parameters:
  - name: state1
    type:
    - text: FixedArray2
      url: Alis.Core.Physic.Common.FixedArray2-1.html
    - <
    - text: PointState
      url: Alis.Core.Physic.Collision.PointState.html
    - '>'
    description: The state
  - name: state2
    type:
    - text: FixedArray2
      url: Alis.Core.Physic.Common.FixedArray2-1.html
    - <
    - text: PointState
      url: Alis.Core.Physic.Collision.PointState.html
    - '>'
    description: The state
  - name: manifold1
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold
  - name: manifold2
    type:
    - text: Manifold
      url: Alis.Core.Physic.Collision.Manifold.html
    description: The manifold
- api3: TestOverlap(Shape, int, Shape, int, ref Transform, ref Transform)
  id: Alis_Core_Physic_Collision_Collision_TestOverlap_Alis_Core_Physic_Collision_Shapes_Shape_System_Int32_Alis_Core_Physic_Collision_Shapes_Shape_System_Int32_Alis_Core_Physic_Common_Transform__Alis_Core_Physic_Common_Transform__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Collision/Collision.cs#L57
  metadata:
    uid: Alis.Core.Physic.Collision.Collision.TestOverlap(Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Common.Transform@)
    commentId: M:Alis.Core.Physic.Collision.Collision.TestOverlap(Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Physic.Common.Transform@,Alis.Core.Physic.Common.Transform@)
- markdown: Test overlap between the two shapes.
- code: public static bool TestOverlap(Shape shapeA, int indexA, Shape shapeB, int indexB, ref Transform xfA, ref Transform xfB)
- h4: Parameters
- parameters:
  - name: shapeA
    type:
    - text: Shape
      url: Alis.Core.Physic.Collision.Shapes.Shape.html
    description: The first shape.
  - name: indexA
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index for the first shape.
  - name: shapeB
    type:
    - text: Shape
      url: Alis.Core.Physic.Collision.Shapes.Shape.html
    description: The second shape.
  - name: indexB
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The index for the second shape.
  - name: xfA
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform for the first shape.
  - name: xfB
    type:
    - text: Transform
      url: Alis.Core.Physic.Common.Transform.html
    description: The transform for the seconds shape.
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: ''
languageId: csharp
metadata:
  description: Collision methods
