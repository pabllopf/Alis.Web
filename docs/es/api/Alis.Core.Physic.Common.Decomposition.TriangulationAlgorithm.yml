### YamlMime:ApiPage
title: Enum TriangulationAlgorithm
body:
- api1: Enum TriangulationAlgorithm
  id: Alis_Core_Physic_Common_Decomposition_TriangulationAlgorithm
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Decomposition/TriangulationAlgorithm.cs#L35
  metadata:
    uid: Alis.Core.Physic.Common.Decomposition.TriangulationAlgorithm
    commentId: T:Alis.Core.Physic.Common.Decomposition.TriangulationAlgorithm
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Common.Decomposition
      url: Alis.Core.Physic.Common.Decomposition.html
  - name: Assembly
    value: Alis.dll
- markdown: The triangulation algorithm enum
- code: public enum TriangulationAlgorithm
- h2: Fields
- parameters:
  - name: Earclip
    default: "0"
    description: >+
      Convex decomposition algorithm using ear clipping

      Properties:

      - Only works on simple polygons.

      - Does not support holes.

      - Running time is O(n^2), n = number of vertices.

  - name: Bayazit
    default: "1"
    description: >+
      Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)

      Properties:

      - Tries to decompose using polygons instead of triangles.

      - Tends to produce optimal results with low processing time.

      - Running time is O(nr), n = number of vertices, r = reflex vertices.

      - Does not support holes.

  - name: Flipcode
    default: "2"
    description: >+
      Convex decomposition algorithm created by unknown

      Properties:

      - No support for holes

      - Very fast

      - Only works on simple polygons

      - Only works on counter clockwise polygons

  - name: Seidel
    default: "3"
    description: >+
      Convex decomposition algorithm created by Raimund Seidel

      Properties:

      - Decompose the polygon into trapezoids, then triangulate.

      - To use the trapezoid data, use ConvexPartitionTrapezoid()

      - Generate a lot of garbage due to incapsulation of the Poly2Tri library.

      - Running time is O(n log n), n = number of vertices.

      - Running time is almost linear for most simple polygons.

      - Does not care about winding order.

  - name: SeidelTrapezoids
    default: "4"
    description: >+
      The seidel trapezoids triangulation algorithm

  - name: Delauny
    default: "5"
    description: >+
      2D constrained Delaunay triangulation algorithm.

      Based on the paper "Sweep-line algorithm for constrained Delaunay triangulation" by V. Domiter and and B. Zalik

      Properties:

      - Creates triangles with a large interior angle.

      - Supports holes

      - Generate a lot of garbage due to incapsulation of the Poly2Tri library.

      - Running time is O(n^2), n = number of vertices.

      - Does not care about winding order.

languageId: csharp
metadata:
  description: The triangulation algorithm enum
