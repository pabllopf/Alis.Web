### YamlMime:ApiPage
title: Class Vertices
body:
- api1: Class Vertices
  id: Alis_Core_Physic_Common_Vertices
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L44
  metadata:
    uid: Alis.Core.Physic.Common.Vertices
    commentId: T:Alis.Core.Physic.Common.Vertices
- facts:
  - name: Namespace
    value:
      text: Alis.Core.Physic.Common
      url: Alis.Core.Physic.Common.html
  - name: Assembly
    value: Alis.dll
- markdown: The vertices class
- code: 'public class Vertices : List<Vector2>, IList<Vector2>, ICollection<Vector2>, IReadOnlyList<Vector2>, IReadOnlyCollection<Vector2>, IEnumerable<Vector2>, IList, ICollection, IEnumerable'
- h4: Inheritance
- inheritance:
  - text: object
    url: https://learn.microsoft.com/dotnet/api/system.object
  - text: List<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - text: Vertices
    url: Alis.Core.Physic.Common.Vertices.html
- h4: Derived
- list:
  - text: EarclipDecomposer.Triangle
    url: Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.Triangle.html
- h4: Implements
- list:
  - text: IList<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ilist-1
  - text: ICollection<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - text: IReadOnlyList<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - text: IReadOnlyCollection<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - text: IEnumerable<Vector2>
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - text: IList
    url: https://learn.microsoft.com/dotnet/api/system.collections.ilist
  - text: ICollection
    url: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  - text: IEnumerable
    url: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
- h4: Inherited Members
- list:
  - text: List<Vector2>.IList.get_Item(int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-get_item
  - text: List<Vector2>.IList.set_Item(int, object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-set_item
  - text: List<Vector2>.Add(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.add
  - text: List<Vector2>.AddRange(IEnumerable<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.addrange
  - text: List<Vector2>.AsReadOnly()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.asreadonly
  - text: List<Vector2>.BinarySearch(int, int, Vector2, IComparer<Vector2>?)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(system-int32-system-int32-0-system-collections-generic-icomparer((-0)))
  - text: List<Vector2>.BinarySearch(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0)
  - text: List<Vector2>.BinarySearch(Vector2, IComparer<Vector2>?)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.binarysearch#system-collections-generic-list-1-binarysearch(-0-system-collections-generic-icomparer((-0)))
  - text: List<Vector2>.Clear()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.clear
  - text: List<Vector2>.Contains(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.contains
  - text: List<Vector2>.ConvertAll<TOutput>(Converter<Vector2, TOutput>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.convertall
  - text: List<Vector2>.CopyTo(int, Vector2[], int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(system-int32-0()-system-int32-system-int32)
  - text: List<Vector2>.CopyTo(Vector2[])
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0())
  - text: List<Vector2>.CopyTo(Vector2[], int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.copyto#system-collections-generic-list-1-copyto(-0()-system-int32)
  - text: List<Vector2>.Exists(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.exists
  - text: List<Vector2>.Find(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.find
  - text: List<Vector2>.FindAll(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findall
  - text: List<Vector2>.FindIndex(int, int, Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-int32-system-predicate((-0)))
  - text: List<Vector2>.FindIndex(int, Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-int32-system-predicate((-0)))
  - text: List<Vector2>.FindIndex(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findindex#system-collections-generic-list-1-findindex(system-predicate((-0)))
  - text: List<Vector2>.FindLast(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlast
  - text: List<Vector2>.FindLastIndex(int, int, Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-int32-system-predicate((-0)))
  - text: List<Vector2>.FindLastIndex(int, Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-int32-system-predicate((-0)))
  - text: List<Vector2>.FindLastIndex(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.findlastindex#system-collections-generic-list-1-findlastindex(system-predicate((-0)))
  - text: List<Vector2>.ForEach(Action<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.foreach
  - text: List<Vector2>.GetEnumerator()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getenumerator
  - text: List<Vector2>.GetRange(int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.getrange
  - text: List<Vector2>.IndexOf(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0)
  - text: List<Vector2>.IndexOf(Vector2, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32)
  - text: List<Vector2>.IndexOf(Vector2, int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.indexof#system-collections-generic-list-1-indexof(-0-system-int32-system-int32)
  - text: List<Vector2>.Insert(int, Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insert
  - text: List<Vector2>.InsertRange(int, IEnumerable<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.insertrange
  - text: List<Vector2>.LastIndexOf(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0)
  - text: List<Vector2>.LastIndexOf(Vector2, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32)
  - text: List<Vector2>.LastIndexOf(Vector2, int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.lastindexof#system-collections-generic-list-1-lastindexof(-0-system-int32-system-int32)
  - text: List<Vector2>.Remove(Vector2)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.remove
  - text: List<Vector2>.RemoveAll(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeall
  - text: List<Vector2>.RemoveAt(int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removeat
  - text: List<Vector2>.RemoveRange(int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.removerange
  - text: List<Vector2>.Reverse()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse
  - text: List<Vector2>.Reverse(int, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.reverse#system-collections-generic-list-1-reverse(system-int32-system-int32)
  - text: List<Vector2>.Sort()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort
  - text: List<Vector2>.Sort(IComparer<Vector2>?)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-collections-generic-icomparer((-0)))
  - text: List<Vector2>.Sort(Comparison<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-comparison((-0)))
  - text: List<Vector2>.Sort(int, int, IComparer<Vector2>?)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.sort#system-collections-generic-list-1-sort(system-int32-system-int32-system-collections-generic-icomparer((-0)))
  - text: List<Vector2>.IEnumerable<Vector2>.GetEnumerator()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-generic-ienumerable-t--getenumerator
  - text: List<Vector2>.ICollection.CopyTo(Array, int)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-icollection-copyto
  - text: List<Vector2>.IEnumerable.GetEnumerator()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ienumerable-getenumerator
  - text: List<Vector2>.IList.Add(object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-add
  - text: List<Vector2>.IList.Contains(object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-contains
  - text: List<Vector2>.IList.IndexOf(object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-indexof
  - text: List<Vector2>.IList.Insert(int, object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-insert
  - text: List<Vector2>.IList.Remove(object)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-remove
  - text: List<Vector2>.ToArray()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.toarray
  - text: List<Vector2>.TrimExcess()
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trimexcess
  - text: List<Vector2>.TrueForAll(Predicate<Vector2>)
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.trueforall
  - text: List<Vector2>.Capacity
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.capacity
  - text: List<Vector2>.Count
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.count
  - text: List<Vector2>.this[int]
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.item
  - text: List<Vector2>.ICollection<Vector2>.IsReadOnly
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-generic-icollection-t--isreadonly
  - text: List<Vector2>.ICollection.IsSynchronized
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-icollection-issynchronized
  - text: List<Vector2>.ICollection.SyncRoot
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-icollection-syncroot
  - text: List<Vector2>.IList.IsFixedSize
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-isfixedsize
  - text: List<Vector2>.IList.IsReadOnly
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-isreadonly
  - text: List<Vector2>.IList.Item[int]
    url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1.system-collections-ilist-item
  - text: object.Equals(object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - text: object.Equals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - text: object.GetHashCode()
    url: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - text: object.GetType()
    url: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - text: object.MemberwiseClone()
    url: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - text: object.ReferenceEquals(object?, object?)
    url: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - text: object.ToString()
    url: https://learn.microsoft.com/dotnet/api/system.object.tostring
- h2: Constructors
- api3: Vertices()
  id: Alis_Core_Physic_Common_Vertices__ctor
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L50
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.#ctor
    commentId: M:Alis.Core.Physic.Common.Vertices.#ctor
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Common.Vertices" data-throw-if-not-resolved="false"></xref> class
- code: public Vertices()
- api3: Vertices(int)
  id: Alis_Core_Physic_Common_Vertices__ctor_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L58
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.#ctor(System.Int32)
    commentId: M:Alis.Core.Physic.Common.Vertices.#ctor(System.Int32)
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Common.Vertices" data-throw-if-not-resolved="false"></xref> class
- code: public Vertices(int capacity)
- h4: Parameters
- parameters:
  - name: capacity
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The capacity
- api3: Vertices(IEnumerable<Vector2>)
  id: Alis_Core_Physic_Common_Vertices__ctor_System_Collections_Generic_IEnumerable_Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L66
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.#ctor(System.Collections.Generic.IEnumerable{Alis.Core.Aspect.Math.Vector.Vector2})
    commentId: M:Alis.Core.Physic.Common.Vertices.#ctor(System.Collections.Generic.IEnumerable{Alis.Core.Aspect.Math.Vector.Vector2})
- markdown: Initializes a new instance of the <xref href="Alis.Core.Physic.Common.Vertices" data-throw-if-not-resolved="false"></xref> class
- code: public Vertices(IEnumerable<Vector2> vertices)
- h4: Parameters
- parameters:
  - name: vertices
    type:
    - text: IEnumerable
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
    - <
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    - '>'
    description: The vertices
- h2: Properties
- api3: AttachedToBody
  id: Alis_Core_Physic_Common_Vertices_AttachedToBody
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L74
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.AttachedToBody
    commentId: P:Alis.Core.Physic.Common.Vertices.AttachedToBody
- markdown: Gets or sets the value of the attached to body
- code: internal bool AttachedToBody { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: Holes
  id: Alis_Core_Physic_Common_Vertices_Holes
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L80
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Holes
    commentId: P:Alis.Core.Physic.Common.Vertices.Holes
- markdown: >-
    You can add holes to this collection.

    It will get respected by some of the triangulation algoithms, but otherwise not used.
- code: public List<Vertices> Holes { get; set; }
- h4: Property Value
- parameters:
  - type:
    - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - text: Vertices
      url: Alis.Core.Physic.Common.Vertices.html
    - '>'
- h2: Methods
- api3: CheckPolygon()
  id: Alis_Core_Physic_Common_Vertices_CheckPolygon
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L407
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.CheckPolygon
    commentId: M:Alis.Core.Physic.Common.Vertices.CheckPolygon
- markdown: >-
    Checks if the polygon is valid for use in the engine.

    Performs a full check, for simplicity, convexity,

    orientation, minimum angle, and volume.

    From Eric Jordan's convex decomposition library
- code: public PolygonError CheckPolygon()
- h4: Returns
- parameters:
  - type:
    - text: PolygonError
      url: Alis.Core.Physic.Common.PolygonError.html
    description: PolygonError.NoError if there were no error.
- api3: ForceCounterClockWise()
  id: Alis_Core_Physic_Common_Vertices_ForceCounterClockWise
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L362
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.ForceCounterClockWise
    commentId: M:Alis.Core.Physic.Common.Vertices.ForceCounterClockWise
- markdown: Forces the vertices to be counter clock wise order.
- code: public void ForceCounterClockWise()
- api3: GetAABB()
  id: Alis_Core_Physic_Common_Vertices_GetAABB
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L181
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.GetAABB
    commentId: M:Alis.Core.Physic.Common.Vertices.GetAABB
- markdown: Returns an AABB that fully contains this polygon.
- code: public AABB GetAABB()
- h4: Returns
- parameters:
  - type:
    - text: AABB
      url: Alis.Core.Physic.Collision.AABB.html
- api3: GetArea()
  id: Alis_Core_Physic_Common_Vertices_GetArea
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L139
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.GetArea
    commentId: M:Alis.Core.Physic.Common.Vertices.GetArea
- markdown: Gets the area.
- code: public float GetArea()
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: ''
- api3: GetCentroid()
  id: Alis_Core_Physic_Common_Vertices_GetCentroid
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L149
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.GetCentroid
    commentId: M:Alis.Core.Physic.Common.Vertices.GetCentroid
- markdown: Gets the centroid.
- code: public Vector2 GetCentroid()
- h4: Returns
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: ''
- api3: GetSignedArea()
  id: Alis_Core_Physic_Common_Vertices_GetSignedArea
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L111
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.GetSignedArea
    commentId: M:Alis.Core.Physic.Common.Vertices.GetSignedArea
- markdown: >-
    Gets the signed area.

    If the area is less than 0, it indicates that the polygon is clockwise winded.
- code: public float GetSignedArea()
- h4: Returns
- parameters:
  - type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The signed area
- api3: IsConvex()
  id: Alis_Core_Physic_Common_Vertices_IsConvex
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L312
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.IsConvex
    commentId: M:Alis.Core.Physic.Common.Vertices.IsConvex
- markdown: >-
    Determines whether the polygon is convex.

    O(n^2) running time.

    Assumptions:

    - The polygon is in counter clockwise order

    - The polygon has no overlapping edges
- code: public bool IsConvex()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
    description: <code>true</code> if it is convex; otherwise, <code>false</code>.
- api3: IsCounterClockWise()
  id: Alis_Core_Physic_Common_Vertices_IsCounterClockWise
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L350
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.IsCounterClockWise
    commentId: M:Alis.Core.Physic.Common.Vertices.IsCounterClockWise
- markdown: >-
    Indicates if the vertices are in counter clockwise order.

    Warning: If the area of the polygon is 0, it is unable to determine the winding.
- code: public bool IsCounterClockWise()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: IsSimple()
  id: Alis_Core_Physic_Common_Vertices_IsSimple
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L375
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.IsSimple
    commentId: M:Alis.Core.Physic.Common.Vertices.IsSimple
- markdown: Checks if the vertices forms an simple polygon by checking for edge crossings.
- code: public bool IsSimple()
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: NextIndex(int)
  id: Alis_Core_Physic_Common_Vertices_NextIndex_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L86
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.NextIndex(System.Int32)
    commentId: M:Alis.Core.Physic.Common.Vertices.NextIndex(System.Int32)
- markdown: Gets the next index. Used for iterating all the edges with wrap-around.
- code: public int NextIndex(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The current index
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: NextVertex(int)
  id: Alis_Core_Physic_Common_Vertices_NextVertex_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L92
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.NextVertex(System.Int32)
    commentId: M:Alis.Core.Physic.Common.Vertices.NextVertex(System.Int32)
- markdown: Gets the next vertex. Used for iterating all the edges with wrap-around.
- code: public Vector2 NextVertex(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The current index
- h4: Returns
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: PointInPolygon(ref Vector2)
  id: Alis_Core_Physic_Common_Vertices_PointInPolygon_Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L478
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.PointInPolygon(Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Common.Vertices.PointInPolygon(Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: Winding number test for a point in a polygon.
- code: public int PointInPolygon(ref Vector2 point)
- h4: Parameters
- parameters:
  - name: point
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The point to be tested.
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: >-
      -1 if the winding number is zero and the point is outside

      the polygon, 1 if the point is inside the polygon, and 0 if the point

      is on the polygons edge.
- api3: PointInPolygonAngle(ref Vector2)
  id: Alis_Core_Physic_Common_Vertices_PointInPolygonAngle_Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L523
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.PointInPolygonAngle(Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Common.Vertices.PointInPolygonAngle(Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: >-
    Compute the sum of the angles made between the test point and each pair of points making up the polygon.

    If this sum is 2pi then the point is an interior point, if 0 then the point is an exterior point.

    ref: http://ozviz.wasp.uwa.edu.au/~pbourke/geometry/insidepoly/  - Solution 2
- code: public bool PointInPolygonAngle(ref Vector2 point)
- h4: Parameters
- parameters:
  - name: point
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- h4: Returns
- parameters:
  - type:
    - text: bool
      url: https://learn.microsoft.com/dotnet/api/system.boolean
- api3: PreviousIndex(int)
  id: Alis_Core_Physic_Common_Vertices_PreviousIndex_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L98
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.PreviousIndex(System.Int32)
    commentId: M:Alis.Core.Physic.Common.Vertices.PreviousIndex(System.Int32)
- markdown: Gets the previous index. Used for iterating all the edges with wrap-around.
- code: public int PreviousIndex(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The current index
- h4: Returns
- parameters:
  - type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
- api3: PreviousVertex(int)
  id: Alis_Core_Physic_Common_Vertices_PreviousVertex_System_Int32_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L104
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.PreviousVertex(System.Int32)
    commentId: M:Alis.Core.Physic.Common.Vertices.PreviousVertex(System.Int32)
- markdown: Gets the previous vertex. Used for iterating all the edges with wrap-around.
- code: public Vector2 PreviousVertex(int index)
- h4: Parameters
- parameters:
  - name: index
    type:
    - text: int
      url: https://learn.microsoft.com/dotnet/api/system.int32
    description: The current index
- h4: Returns
- parameters:
  - type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
- api3: ProjectToAxis(ref Vector2, out float, out float)
  id: Alis_Core_Physic_Common_Vertices_ProjectToAxis_Alis_Core_Aspect_Math_Vector_Vector2__System_Single__System_Single__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L444
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.ProjectToAxis(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,System.Single@)
    commentId: M:Alis.Core.Physic.Common.Vertices.ProjectToAxis(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,System.Single@)
- markdown: Projects to axis.
- code: public void ProjectToAxis(ref Vector2 axis, out float min, out float max)
- h4: Parameters
- parameters:
  - name: axis
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The axis.
  - name: min
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The min.
  - name: max
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The max.
- api3: Rotate(float)
  id: Alis_Core_Physic_Common_Vertices_Rotate_System_Single_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L280
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Rotate(System.Single)
    commentId: M:Alis.Core.Physic.Common.Vertices.Rotate(System.Single)
- markdown: >-
    Rotate the vertices with the defined value in radians.

    Warning: Using this method on an active set of vertices of a Body,

    will cause problems with collisions. Use Body.Rotation instead.
- code: public void Rotate(float value)
- h4: Parameters
- parameters:
  - name: value
    type:
    - text: float
      url: https://learn.microsoft.com/dotnet/api/system.single
    description: The amount to rotate by in radians.
- api3: Scale(Vector2)
  id: Alis_Core_Physic_Common_Vertices_Scale_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L249
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Common.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Scales the vertices with the specified vector.
- code: public void Scale(Vector2 value)
- h4: Parameters
- parameters:
  - name: value
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The Value.
- api3: Scale(ref Vector2)
  id: Alis_Core_Physic_Common_Vertices_Scale_Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L258
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Common.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: Scales the vertices with the specified vector.
- code: public void Scale(ref Vector2 value)
- h4: Parameters
- parameters:
  - name: value
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The Value.
- api3: ToString()
  id: Alis_Core_Physic_Common_Vertices_ToString
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L550
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.ToString
    commentId: M:Alis.Core.Physic.Common.Vertices.ToString
- markdown: Returns the string
- code: public override string ToString()
- h4: Returns
- parameters:
  - type:
    - text: string
      url: https://learn.microsoft.com/dotnet/api/system.string
    description: The string
- api3: Translate(Vector2)
  id: Alis_Core_Physic_Common_Vertices_Translate_Alis_Core_Aspect_Math_Vector_Vector2_
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L220
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2)
    commentId: M:Alis.Core.Physic.Common.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2)
- markdown: Translates the vertices with the specified vector.
- code: public void Translate(Vector2 value)
- h4: Parameters
- parameters:
  - name: value
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The value.
- api3: Translate(ref Vector2)
  id: Alis_Core_Physic_Common_Vertices_Translate_Alis_Core_Aspect_Math_Vector_Vector2__
  src: https://github.com/pabllopf/Alis/blob/master/4_Operation/Physic/src/Common/Vertices.cs#L229
  metadata:
    uid: Alis.Core.Physic.Common.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2@)
    commentId: M:Alis.Core.Physic.Common.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2@)
- markdown: Translates the vertices with the specified vector.
- code: public void Translate(ref Vector2 value)
- h4: Parameters
- parameters:
  - name: value
    type:
    - text: Vector2
      url: Alis.Core.Aspect.Math.Vector.Vector2.html
    description: The vector.
- h2: See Also
- list:
  - - text: List
      url: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
    - <
    - T
    - '>'
languageId: csharp
metadata:
  description: The vertices class
