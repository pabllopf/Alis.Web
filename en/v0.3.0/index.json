{
  "about/Changelog.html": {
    "href": "about/Changelog.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog, and this project adheres to Semantic Versioning. v0.4.2 - 2024-08-13 ‚ú® New Features 679a4dd - do more simple the dungeon module and introduce new items on sample generator (commit by @pabllopf) üêõ Bug Fixes e46753b - the tests of imgui ( commit by @pabllopf) ‚úÖ Tests 490c544 - 100% test of dungeon module (commit by @pabllopf) 9234935 - add new ImDrawCmdTest (commit by @pabllopf) 6e4cf16 - 2% test imgui module (commit by @pabllopf) 94de09b - 250 test to imgui module (commit by @pabllopf) 9034c18 - include new 30 test ( commit by @pabllopf) 5930907 - covert 7% imgui module (commit by @pabllopf) 859b9e2 - covert 10% imgui module (commit by @pabllopf) a6e58cf - add tests of ImGuiIOPtr struct (commit by @pabllopf) 0587f5a - add new 100 test to imgui module (commit by @pabllopf) 7f07e26 - fix tests of imgui ( commit by @pabllopf) 267f6d9 - covert 20% of imgui ( commit by @pabllopf) 1450451 - fix port number ( commit by @pabllopf) efd4696 - fix port number ( commit by @pabllopf) 08ea249 - create the server on the custom ports (commit by @pabllopf) 8385275 - fix GetStyle_ShouldGetStyle (commit by @pabllopf) a795d20 - pro check all platforms (commit by @pabllopf) d6b54e1 - delete ImGuiNative ( commit by @pabllopf) 498addd - set 1600 test to imgui module (commit by @pabllopf) 11ddc68 - add new 150 test ( commit by @pabllopf) 7fa22c6 - add new 300 test ( commit by @pabllopf) e19ca1a - add tests to all implot parts (commit by @pabllopf) e7c20d1 - fix igPopStyleVar tests (commit by @pabllopf) c994203 - fix v2_PopStyleVar_ThrowsDllNotFoundException (commit by @pabllopf) 0ad8921 - fix cache on github actions (commit by @pabllopf) 6a8433d - run check (commit by @pabllopf) fec95dc - fix the workflow ( commit by @pabllopf) 99dd719 - fix load imgui dll ( commit by @pabllopf) 85f0648 - fix the call cimgui ( commit by @pabllopf) fed7512 - include ImGuiP5 fix ( commit by @pabllopf) d3b8bf9 - pro check all versions (commit by @pabllopf) v0.4.1 - 2024-07-30 ‚ú® New Features 5b60db8 - add new extension to create custom updaters of platforms (commit by @pabllopf) 5e06606 - implement a new tiny arquitecture on updater module to do more flexible (commit by @pabllopf) ca780d1 - add dungeon generator (commit by @pabllopf) b2a9a3e - create simple sample to console print the dungeon (commit by @pabllopf) d5c0005 - include simple sample of updater module (commit by @pabllopf) üêõ Bug Fixes 3040bd0 - test on windows platform (commit by @pabllopf) 3dfc512 - scene load json test (commit by @pabllopf) 37a4315 - include only the xunit runner into the test modules (commit by @pabllopf) ce866da - Set custom var to introduce hight validator al methods (commit by @pabllopf) ‚úÖ Tests 2bc174b - pro check all tests ( commit by @pabllopf) 3815e03 - pro fix the target frameworks (commit by @pabllopf) 507f64b - pro check the new config (commit by @pabllopf) 028cfcb - pro fix plugins folders (commit by @pabllopf) 1537e27 - pro test and config ( commit by @pabllopf) 79c1f7f - pro check the best option to unzzip (commit by @pabllopf) 632bf34 - pro fix test release mode plugins (commit by @pabllopf) 0cf6496 - pro fix test of unit player (commit by @pabllopf) 4a5252c - pro check unix player (commit by @pabllopf) 008f049 - pro set not parallel all tests (commit by @pabllopf) d54cf9f - pro fix wuth delay the test play (commit by @pabllopf) 3af7aab - pro add check playing state (commit by @pabllopf) üìù Documentation Changes edfc659 - add docs to updater module (commit by @pabllopf) üé® Code Style Changes 9c86137 - refactor the dungeon module to reduce complex and include comments on methods (commit by @pabllopf) 4d46158 - move the updater to main dir and delete github of names (commit by @pabllopf) v0.4.0 - 2024-07-21 üêõ Bug Fixes 971eeb6 - build the macos apps on .dmg (commit by @pabllopf) v0.3.9 - 2024-07-21 üêõ Bug Fixes 206fcfb - names and creation of json files (commit by @pabllopf) v0.3.8 - 2024-07-20 ‚ú® New Features 79a4b24 - create simple installer (commit by @pabllopf) 7b3869e - add icon for engine and installer (commit by @pabllopf) c2f4911 - new installer for update the engine (commit by @pabllopf) 768e5a4 - include in the engine the updater (commit by @pabllopf) üêõ Bug Fixes 85bb63f - delete unseless icons and sprites from installer (commit by @pabllopf) 48c5949 - the main dir of engine builds. (commit by @pabllopf) v0.3.7 - 2024-07-20 ‚ú® New Features 609e694 - new system of dialogue (commit by @pabllopf) üêõ Bug Fixes 055fbc2 - delete unless files of engine (commit by @pabllopf) 0c4b5e1 - define defaults target frameworks to build (commit by @pabllopf) ‚úÖ Tests f22855e - fix some spaces ( commit by @pabllopf) a28a25a - check app testing ( commit by @pabllopf) 8d69e12 - pro check of all platforms (commit by @pabllopf) 2dca569 - pro check all (commit by @pabllopf) 2f94df8 - pro fix the elapsedTime time (commit by @pabllopf) e8eab55 - covert 100% of plugin module (commit by @pabllopf) üé® Code Style Changes 589b882 - delete all [ExcludeFromCodeCoverage] to have real covert tests (commit by @pabllopf) v0.3.5 - 2024-07-18 üêõ Bug Fixes d17075f - readme of nugets ( commit by @pabllopf) ad21109 - reduce to -400 code smells (commit by @pabllopf) ‚úÖ Tests 60b1c69 - add GlTest (commit by @pabllopf) 0a50e67 - 100% covert of math module (commit by @pabllopf) üìù Documentation Changes 0ea78a1 - add comments to all new classes and structs (commit by @pabllopf) üé® Code Style Changes 0b34dd3 - refactor the code to do more clean. And delete spaces and tabs of empty lines (commit by @pabllopf) 398d5a7 - rename all names of public properties of math module with the correct format. (commit by @pabllopf) v0.3.4 - 2024-07-17 üêõ Bug Fixes b06c10f - target framework, to include more frameworks. (commit by @pabllopf) 5b372ac - PackageReleaseNotes ( commit by @pabllopf) fbdaa6c - add new config to csprojs to include a readme and new targets (commit by @pabllopf) 98a67e6 - when compile to test the apps modules (commit by @pabllopf) üé® Code Style Changes 3440cc4 - move all config of .csproj to custom file in configs files to dont need restar sln every time. (commit by @pabllopf) v0.3.3 - 2024-07-17 ‚ú® New Features 8ab5c8f - new publish with all engine builds (commit by @pabllopf) v0.3.2 - 2024-07-17 ‚ú® New Features f37f3a8 - icons on engine ( commit by @pabllopf) f407519 - include the solid, regular and light fonts to custom. (commit by @pabllopf) 2d4bf95 - add game demo on engine (commit by @pabllopf) 2b0a4c4 - render basic on engine (commit by @pabllopf) 560350e - close window when click red button (commit by @pabllopf) a8b1313 - add new audioPlayerWindow and fix the imgui.begin (commit by @pabllopf) d292c9e - add AssetsWindow to engine (commit by @pabllopf) e6edd95 - add new IRuntime ( commit by @pabllopf) 680706c - add preview render ( commit by @pabllopf) üêõ Bug Fixes 82b5de5 - delegate error when is seriacing (commit by @pabllopf) 58324ba - move sample of game to the custom demo. (commit by @pabllopf) 44cea4c - independent render context for game sample (commit by @pabllopf) c23ad6a - window dll sld2 ( commit by @pabllopf) ‚úÖ Tests 1956a54 - pro check actual state (commit by @pabllopf) 1684600 - pro check pro test ( commit by @pabllopf) üé® Code Style Changes 18d1adf - move the sample to the scene view (commit by @pabllopf) v0.3.1 - 2024-07-07 ‚ú® New Features 190fcd7 - add simple ImGuizmoDemo (commit by @pabllopf) üêõ Bug Fixes afdce39 - rename parameter ' item' to 'node' to match the interface declaration (commit by @pabllopf) cbb8fa0 - sln csprojs (commit by @pabllopf) e49be52 - names of interfaces ( commit by @pabllopf) 9a570d7 - the name ImNodesAttribute (commit by @pabllopf) 4f1d0ab - the ImGuiStyle vars ( commit by @pabllopf) 48e23d9 - Make this field ' private' and encapsulate it in a 'public' property. (commit by @pabllopf) 2ebf0e8 - Make this field ' private' and encapsulate it in a 'public' property. (commit by @pabllopf) fb4ecf4 - dock focus when click background (commit by @pabllopf) 7c49c92 - mouse zoom (commit by @pabllopf) f2aaf8a - ImGuizmo_IsOver_Nil ( commit by @pabllopf) ‚úÖ Tests c8a377e - fix the test with properties. (commit by @pabllopf) üìù Documentation Changes 5ca62d6 - add descriptions to methods (commit by @pabllopf) üé® Code Style Changes 286cf6c - refactor the main sln to update spaces, tabs, and comments (commit by @pabllopf) v0.3.0 - 2024-07-06 üêõ Bug Fixes b9fc4a0 - delete vars and covert 100% transform struct (commit by @pabllopf) 10a01bf - format ImFontAtlasPtr (commit by @pabllopf) 14b16c5 - delete RangeAccessor (commit by @pabllopf) 513cd28 - Use the return value of method 'Add'. (commit by @pabllopf) c15abb4 - 18 issues of float ( commit by @pabllopf) ‚úÖ Tests 3169f20 - covert 50% HighSpeedPriorityQueue (commit by @pabllopf) d934b1f - create empty tests of PathGenerator (commit by @pabllopf) bb480a5 - covert 100% Profile module (commit by @pabllopf) c7c40e1 - create empty test of OpenGL (commit by @pabllopf) 29ad5a2 - check new config sonarcloud (commit by @pabllopf) v0.2.9 - 2024-07-03 ‚ú® New Features 174df27 - divide in 21 parts the ImPlot (commit by @pabllopf) 1322e50 - divide on 7 parts the imgui (commit by @pabllopf) fd0d08b - splir imgui to 7 parts (commit by @pabllopf) üêõ Bug Fixes 387dfc7 - DeathZone sample ( commit by @pabllopf) a1fa53c - samples of the paths (commit by @pabllopf) 633da04 - 4 bugs of sonarcloud (commit by @pabllopf) 43db357 - delete unsafe code of Vector4* (commit by @pabllopf) e41d131 - delete unsafe code of ImVector (commit by @pabllopf) a96bbd5 - delete unsafe code from RangePtrAccessor (commit by @pabllopf) 39c2b94 - delete ImPtrVector ( commit by @pabllopf) 1a010d4 - delete ImDrawDataPtr (commit by @pabllopf) 14401df - delete ImPlotPointPtr (commit by @pabllopf) 5bc8ef8 - delete ImPlotRangePtr (commit by @pabllopf) ebefeb1 - delete ImNodesEditorContextPtr (commit by @pabllopf) 93b1d6c - delete LinkDetachWithModifierClickPtr and MultipleSelectModifierPtr (commit by @pabllopf) 9bb7a12 - delete IoPtr (commit by @pabllopf) d6adcdd - change name Guizmo and delete unsafe code (commit by @pabllopf) 9cf0ddf - delete unsafe code from EmulateThreeButtonMouse (commit by @pabllopf) 6974c0d - delete all code unsafe of ImNodes (commit by @pabllopf) af0552c - delete unseless usings (commit by @pabllopf) b9daacc - delete unsafe code from implot part 1 (commit by @pabllopf) e0f62b4 - ImPlotP22 (commit by @pabllopf) 8c9d737 - ImPlotP13 (commit by @pabllopf) 1060619 - delete all unsafe code of implot (commit by @pabllopf) 3a4ebfe - the implot values ( commit by @pabllopf) 01fc459 - the issues of serialize math module (commit by @pabllopf) d2799b1 - reduce all input pointers (commit by @pabllopf) 5a785e1 - delete all unsafe code of sln (commit by @pabllopf) 6c04f06 - dlls from imgui ( commit by @pabllopf) e2c9adf - entrypoints on ImNodesNative (commit by @pabllopf) 4373bc9 - EntryPoints of implot (commit by @pabllopf) d96e854 - EntryPoints of ImPlotNative (commit by @pabllopf) 51d9531 - EntryPoints of ImPlotNative (commit by @pabllopf) c40a3c4 - delete unsafe code of ImGuiNative (commit by @pabllopf) 6bee9bc - delete unsafe code ( commit by @pabllopf) 47d061b - delete unsafe code ImGuiNative (commit by @pabllopf) 658fa1a - delete unsafe code ( commit by @pabllopf) 7d19766 - delete unsafe code ImGuiNative (commit by @pabllopf) c8f4555 - ImFontPtr (commit by @pabllopf) 07dc994 - ImFontPtr unsafe code (commit by @pabllopf) 3722bce - delete unsafe code ( commit by @pabllopf) 41e6880 - delete unsafe code ImGuiIO (commit by @pabllopf) ‚úÖ Tests 642597e - covert 99% code ( commit by @pabllopf) e64a895 - covert the 100% ( commit by @pabllopf) 4b6710a - pro fix all unsafe code (commit by @pabllopf) üë∑ Build System 2462464 - deps: bump akhilmhdh/contributors-readme-action (commit by @dependabot[bot]) üìù Documentation Changes 34c9ed2 - contributor: contrib-readme-action has updated readme (commit by @github-actions[bot]) 5acb64f - contributor: contrib-readme-action has updated readme (commit by @github-actions[bot]) d647807 - contributor: contrib-readme-action has updated readme (commit by @github-actions[bot]) bcb143e - contributor: contrib-readme-action has updated readme (commit by @github-actions[bot]) v0.2.8 - 2024-06-01 ‚ú® New Features 97acd15 - create a simple sample to Alis.Core.Aspect.Sample (commit by @pabllopf) 8549ed4 - create simple sample of aspect module (commit by @pabllopf) 0ee9a0b - add 2 new samples to the sln (commit by @pabllopf) ae585ba - simple flip animation (commit by @pabllopf) 931c638 - add simple transition to animations (commit by @pabllopf) d8a378a - add new control player (commit by @pabllopf) 169b9a2 - add simple camera system (commit by @pabllopf) 323c986 - add new type of extensions core of Alis, to do a core and core extension id needed (commit by @pabllopf) 502adde - create extension to imgui (commit by @pabllopf) 57fa14b - Add simple Profiler to the framework (commit by @pabllopf) b9057d9 - optimice the modules (commit by @pabllopf) 56f5e4e - add secure vars to include more security to the framework (commit by @pabllopf) c1ff206 - delete all logger system when compile release mode (commit by @pabllopf) 3a154d8 - new atribute to skip test on mode release than only need execute on mode debug (commit by @pabllopf) b603c1e - big refactor to move plugin system to extension and do optional to install to the game engine (commit by @pabllopf) a1827cc - new extension with path generator (commit by @pabllopf) 4526235 - introduce the game context to delete the singletons of architecture (commit by @pabllopf) 848150a - add jsonignore ( commit by @pabllopf) 38f0b9a - implement the save/load scene controller. (commit by @pabllopf) üêõ Bug Fixes aea5018 - the validator method on atributes code (commit by @pabllopf) 74bddbd - NotEmptyException test (commit by @pabllopf) d1bc9fa - the test of memory module (commit by @pabllopf) 72562aa - SYSLIB0050 (commit by @pabllopf) 8df5567 - format of BlendMode ( commit by @pabllopf) 6eb3112 - timemanager to do synch with real time (commit by @pabllopf) 55f5cb0 - frames AverageFrame to int (commit by @pabllopf) c562e9f - size and type of files of samples (commit by @pabllopf) 6d8904e - render sprite (commit by @pabllopf) 2fce3e6 - the sample of the network (commit by @pabllopf) 331a877 - the cancellation token (commit by @pabllopf) dc7e933 - refactor complex of methods. (commit by @pabllopf) 7bd3bdb - the TimeSpan serialize (commit by @pabllopf) b5cc085 - the json serializer ( commit by @pabllopf) 111b4cb - the AdvancingFront ( commit by @pabllopf) e56b756 - delete the SimpleCombiner (commit by @pabllopf) 08e85e4 - return the vertices method (commit by @pabllopf) ac86f53 - the ProcessOutstandingVertex (commit by @pabllopf) c6a9cb6 - Refactor this constructor to reduce its Cognitive Complexity from 18 to the 15 allowed. (commit by @pabllopf) 59562f8 - Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed. (commit by @pabllopf) e65f266 - RayCastHelper (commit by @pabllopf) 259e82c - the main style ( commit by @pabllopf) 8c5594e - the epaxis fields ( commit by @pabllopf) 0de717b - field names (commit by @pabllopf) 35375f9 - names of ContactId ( commit by @pabllopf) 0c6850e - the factory methods delete safely (commit by @pabllopf) 373520a - names of idispose ( commit by @pabllopf) 2e37aad - names of texts ( commit by @pabllopf) b8aa4e6 - names of class TimeOfImpact (commit by @pabllopf) 6131e69 - names and throw new NotImplementedException(); (commit by @pabllopf) ff97283 - code duplicated ( commit by @pabllopf) 3e966e6 - add trace to managers (commit by @pabllopf) 180edf2 - for windows encode video (commit by @pabllopf) 096ddc7 - the solution path ( commit by @pabllopf) 4165980 - add the module of external control of video and audio. (commit by @pabllopf) eb0ee26 - the conversion of json on ffmeg (commit by @pabllopf) fec9895 - optimize space of dlls (commit by @pabllopf) b9c0a87 - change the dlls ( commit by @pabllopf) 8b32662 - dll of macos on extension modules (commit by @pabllopf) 3299aef - the Regex format ( commit by @pabllopf) 2f30580 - LangVersion to 8 ( commit by @pabllopf) e6b920e - 0 comparation (commit by @pabllopf) 60392fd - sample extension of alis (commit by @pabllopf) b621bcc - the resources of extensions module. (commit by @pabllopf) 8eb0725 - do readonly pointers of unsafe code (commit by @pabllopf) e2dc816 - delete partial class (commit by @pabllopf) b16c9e3 - delete StbTexteditStatePtr (commit by @pabllopf) 9454f72 - Alis.Core.Extension.ImGui (commit by @pabllopf) df14c32 - delete ImFontAtlasCustomRectPtr (commit by @pabllopf) b7555b9 - the extension (commit by @pabllopf) db2edf7 - delete base projects and refactor math module (commit by @pabllopf) 489fe1f - the dll (commit by @pabllopf) e9660ac - cimgui dll on win x64 (commit by @pabllopf) 6179108 - comile config (commit by @pabllopf) ffec233 - delete ptr ImDrawDataPtr (commit by @pabllopf) 00dc232 - config and delete benchmark (commit by @pabllopf) 47ce582 - names of dlls on zip (commit by @pabllopf) 305edc5 - arm64 config (commit by @pabllopf) 9397981 - dlls of encode and permissons (commit by @pabllopf) 202d2e1 - sln arquitecture ( commit by @pabllopf) 581119b - all dlls with names and space on disk (commit by @pabllopf) 9f12fd9 - delete sensor methods and add new checks on decompress zip files (commit by @pabllopf) 40d507a - delete useless methods of graphic module (commit by @pabllopf) 8f6af1f - sdl2 ttf build ( commit by @pabllopf) 6360927 - delete Joystick triggers (commit by @pabllopf) bd3ac85 - api graphic tests ( commit by @pabllopf) 671053e - delete useless methods and fix tests (commit by @pabllopf) a5a4abc - Change this code to not construct the path from file name entry of an archive. (commit by @pabllopf) 4660f65 - delete the atributte ExcludeFromCodeCoverage from TypeDef (commit by @pabllopf) d5a5f19 - Alis.Core.Aspect.Data.Test.Json (commit by @pabllopf) f889a6c - the test of JsonSerializerTest (commit by @pabllopf) b94cbc0 - resources build on mode release (commit by @pabllopf) f1065e5 - resturation code ( commit by @pabllopf) 7ccca4b - the path namespace ( commit by @pabllopf) 736bc56 - delete PolyClipError (commit by @pabllopf) 3dda0f0 - delete KeyValueTypeDictionaryTest (commit by @pabllopf) c73b064 - automatic test ( commit by @pabllopf) c0d0b30 - workflow (commit by @pabllopf) b64e25d - dll not found on windows test (commit by @pabllopf) d99b7fc - audio test on windows x64 (commit by @pabllopf) 517afa8 - secuencial test of audio (commit by @pabllopf) b50408a - unit test of play module (commit by @pabllopf) 92c2303 - Make sure that using this pseudorandom number generator is safe here (commit by @pabllopf) 24c1b9b - the TargetFrameworks (commit by @pabllopf) 5166145 - the 30 bugs of float compartion with 0 (commit by @pabllopf) b4f4ae0 - the target framework on samples (commit by @pabllopf) 54bf301 - dont use math module of system (commit by @pabllopf) c2528b6 - 3 issues with float comparation (commit by @pabllopf) 93b3bb1 - bug on init VelocityConstraints (commit by @pabllopf) fbe4118 - 2 issues of async code (commit by @pabllopf) 3df4ff9 - Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation. (commit by @pabllopf) 430e356 - samples TargetFrameworks (commit by @pabllopf) 350ad4d - delete SecureBool ( commit by @pabllopf) dc9dc74 - first version of json parser (commit by @pabllopf) 8797e2f - add new JsonIgnore to context vars. (commit by @pabllopf) 107faf8 - add new control to create intancies on Deserialize (commit by @pabllopf) ‚úÖ Tests c92d1c4 - add new 20 test ( commit by @pabllopf) fcbfcb1 - covert 100% memory module (commit by @pabllopf) a64610b - covert the 100% of cases of math module (commit by @pabllopf) 2434ed0 - covert 100% base module (commit by @pabllopf) 8aef53f - covert the 50% of data module (commit by @pabllopf) ee55823 - add new test to JsonEventArgs (commit by @pabllopf) 5ffc27f - add 100 test to json (commit by @pabllopf) 9d2cfde - fix some methods of covert test (commit by @pabllopf) 6145e0c - covert 100% of json module (commit by @pabllopf) 0d4b350 - covert 100% of alis.core module (commit by @pabllopf) 03ec9fc - covert 100% of plugin module (commit by @pabllopf) 2009521 - create simple test of audio module (commit by @pabllopf) 2f070f8 - covert 100% time module (commit by @pabllopf) a99e444 - add new test for new colors (commit by @pabllopf) 061ccf9 - add all test of security module (commit by @pabllopf) 66551b5 - add covert 100% of security module (commit by @pabllopf) 3e203f6 - add new 10 test to json parser (commit by @pabllopf) d9ba13b - add more than 50 testo to math module (commit by @pabllopf) aff49c6 - add 2 test to data module (commit by @pabllopf) 082dec4 - covert 100% plugin module (commit by @pabllopf) 527e142 - add 24 test to world class (commit by @pabllopf) 0e8ef7b - covert 100% of graphic (commit by @pabllopf) df48c71 - covert 100% dll static class (commit by @pabllopf) a180d90 - 73% covert JsonSerializer class (commit by @pabllopf) d0cc831 - add new 20 test to key managers (commit by @pabllopf) eb19a07 - covert to 78% Conversions class (commit by @pabllopf) 1de955a - covert 98% Conversions class (commit by @pabllopf) 5b07b12 - covert to 80% TypeDef class (commit by @pabllopf) b9ae7fc - 100% KeyValueTypeDictionary (commit by @pabllopf) 5051419 - covert 80% JsonSerializer class (commit by @pabllopf) f10e73f - covert 83% JsonSerializer (commit by @pabllopf) 34ff013 - add 10 more tests ( commit by @pabllopf) 103a8ff - add more 20 test ( commit by @pabllopf) 27cd4b5 - the GetHexValue ( commit by @pabllopf) 8c1168c - add test to ProcessInputBasedOnCondition (commit by @pabllopf) 54958bc - add new 30 test to UpdateValueBasedOnContext (commit by @pabllopf) 5b2c591 - covert 88% of JsonSerializer class (commit by @pabllopf) 5739e8b - 800 test to json module (commit by @pabllopf) 5190ba1 - WriteValueCallback 5 test (commit by @pabllopf) e2d3b0b - covert 9% of Alis.Core.Physic module (commit by @pabllopf) 29ae730 - covert 11% Alis.Core.Physic module (commit by @pabllopf) f24f074 - add 19% Alis.Core.Physic (commit by @pabllopf) c4dcd33 - add the 23% Alis.Core.Physic (commit by @pabllopf) fc5ef4d - add 26% covert Alis.Core.Physic module (commit by @pabllopf) 2f155f0 - add 28% test of Physic module (commit by @pabllopf) b60e5ec - 91% json (commit by @pabllopf) 5e5a0a7 - 92% test json module (commit by @pabllopf) 425771d - covert 100% ListObject (commit by @pabllopf) 0a3e0a3 - add 3 test (commit by @pabllopf) 7d6e4c2 - add new 20 test to json module (commit by @pabllopf) a1c526d - covert 100% TypeDef ( commit by @pabllopf) 708c2d9 - add 5 test to ConvertToEnum (commit by @pabllopf) 8863996 - covert 95% json module (commit by @pabllopf) 2e0551b - add 5 test to videogame class (commit by @pabllopf) da3c81c - fix macos test ( commit by @pabllopf) 2d7ce71 - add new 40 test to alis module (commit by @pabllopf) e1190e7 - covert 100% of class Conversions (commit by @pabllopf) 609948d - StringWriterThrowingExceptionOnWrite (commit by @pabllopf) d54fa1a - add new 50 test to network module (commit by @pabllopf) 918e1f5 - covert the 100% audio module (commit by @pabllopf) e650315 - 50% of Network module (commit by @pabllopf) 319388f - 55% of alis module ( commit by @pabllopf) b0bb9fb - add new 40 test to alis (commit by @pabllopf) 797d8c2 - add 5 test to Physic module (commit by @pabllopf) b0244bd - covert 100% of ideation (commit by @pabllopf) 8d9c55f - covert to 60% (commit by @pabllopf) 6f247ab - covert 100% network module (commit by @pabllopf) 4711edc - 100% alis module ( commit by @pabllopf) 144736a - covert 100% of World (commit by @pabllopf) b0b82bd - covert 100% rectangle (commit by @pabllopf) 9c81946 - covert 100% of lines (commit by @pabllopf) 2565da3 - figures class covert 100% (commit by @pabllopf) 747cb73 - covert 100 % class Aabb (commit by @pabllopf) ea92a64 - covert 100% Vertices (commit by @pabllopf) 18b7bb1 - covert 100% raycast ( commit by @pabllopf) 917e065 - covert 100% of TestPointHelper (commit by @pabllopf) abdd9c5 - covert 100% of shapes (commit by @pabllopf) 9d597cb - covert 100% of RayCastHelperTest (commit by @pabllopf) 5979e33 - covert 70% of alis ( commit by @pabllopf) 7856748 - covert 100% Collision (commit by @pabllopf) 331ab5c - covert 100% of alis ( commit by @pabllopf) 55bc754 - covert 100% alis ( commit by @pabllopf) 74a7ed8 - covert 100% logger ( commit by @pabllopf) 63ba886 - covert all the keycode enum (commit by @pabllopf) e0eba3f - Update KeyCodeTest.cs (commit by @pabllopf) f112e54 - fix the network test (commit by @pabllopf) 3910b09 - pro check (commit by @pabllopf) 33584af - pro update the parallel exec (commit by @pabllopf) ce2e159 - pro fix windows run ( commit by @pabllopf) b6070e9 - pro check and fix windows tests (commit by @pabllopf) 0bd8150 - change names of keycode (commit by @pabllopf) 155c95b - pro quit windows player tests (commit by @pabllopf) 2265ae2 - pro fixed on macos ( commit by @pabllopf) 84d7d62 - pro fix the spaces ( commit by @pabllopf) d99791b - fix some keycodes ( commit by @pabllopf) 0425b58 - SecureBoolTests ( commit by @pabllopf) 1d1b6d6 - update secure bool ( commit by @pabllopf) 9fd71fe - fix all test of alis module (commit by @pabllopf) 77980dc - fix the parallel testing on alis module (commit by @pabllopf) b7531de - fix and build with 100% covert (commit by @pabllopf) 9c110ac - pro fix all test ( commit by @pabllopf) üë∑ Build System 0634584 - deps: bump actions/dependency-review-action from 3 to 4 (commit by @dependabot[bot]) 0e4f91a - deps: bump actions/cache from 3 to 4 (commit by @dependabot[bot]) dfafeab - deps: bump emibcn/badge-action from 2.0.2 to 2.0.3 (commit by @dependabot[bot]) 5172abc - deps: bump akhilmhdh/contributors-readme-action (commit by @dependabot[bot]) üìù Documentation Changes 377bdb3 - update the AssetManager md file (commit by @pabllopf) fbf39e9 - add .md files to Alis.Core.Aspect.Fluent (commit by @pabllopf) 6d2572b - add xml comments to audio test module (commit by @pabllopf) 410f67c - add docs to math extension (commit by @pabllopf) 790737a - add xml syntax to security module (commit by @pabllopf) e75ec01 - add coments to class secure (commit by @pabllopf) üé® Code Style Changes 17907a7 - refactor the json parser to reduce complexity of code (commit by @pabllopf) 2223819 - refactor sln to fix spaces and tabs (commit by @pabllopf) 45771fe - refactor name of vars to do more simple (commit by @pabllopf) cd457f3 - fix the names and class of json module (commit by @pabllopf) 7aa27ab - delte sdlbool to use bool native (commit by @pabllopf) 06c3c8e - delete sdl from init struct and enum of graphics module (commit by @pabllopf) 0589217 - change name of sample to do a split camera sample (commit by @pabllopf) f5f68b4 - delete dont use methods on sprite (commit by @pabllopf) fdd7a25 - refactor the init and update methods of GraphicManager (commit by @pabllopf) 68eb2e1 - refactor to do more simple the input manager (commit by @pabllopf) d8ffedb - refactor and clean spaces and tans (commit by @pabllopf) beeeceb - delete coments and refactor texture converter (commit by @pabllopf) 63c7a97 - fields private ( commit by @pabllopf) 3e5e347 - refactor names ( commit by @pabllopf) 6d2b46b - refactor spaces and tabs of sln (commit by @pabllopf) 4dad3ad - refactor vector 2 struct (commit by @pabllopf) 3e3a5e3 - refactor the videoframe (commit by @pabllopf) 203a29c - union ImDrawChannel ( commit by @pabllopf) af9d3ef - union ImDrawCmdHeader (commit by @pabllopf) 72638dd - union ImDrawCmd ( commit by @pabllopf) 28b88bb - delete useless NonVersionableAttribute (commit by @pabllopf) 220da40 - refactor the spaces and tabs (commit by @pabllopf) 14e8102 - refactor all the props to do more clean (commit by @pabllopf) 3c665b3 - refactor the main EmbeddedResource method (commit by @pabllopf) bcac326 - self conteined on sln (commit by @pabllopf) b83ecd9 - refactor sln (commit by @pabllopf) ce9368a - delete .md files of compilation when is release mode (commit by @pabllopf) 7baa107 - delete all Console.WriteLine (commit by @pabllopf) 0a7466d - delete console print and include logger (commit by @pabllopf) be2b9e0 - delete console print and include logger (commit by @pabllopf) d2f12ce - refactor the PointOnEdgeException (commit by @pabllopf) 02c1cd2 - delete console writeline (commit by @pabllopf) fcf7f9f - refactor the physic module to extract the path generator to extension (commit by @pabllopf) 924de0a - move tools of physic module to extension module (commit by @pabllopf) 7ede7b3 - refactor the data module to do more simple (commit by @pabllopf) 26c6485 - refactor internal methods of json (commit by @pabllopf) d0cbaf2 - refactor the json to to more simple Apply method (commit by @pabllopf) b6f0f1d - do more simple InvokeCreateInstanceCallback (commit by @pabllopf) 6edeb6c - refactor the ReadDictionary (commit by @pabllopf) 4699313 - refactor and do more simple ListObject (commit by @pabllopf) ad5f5b3 - refactor and simple tje json serielizer (commit by @pabllopf) 03950c4 - refactor the Serialize method (commit by @pabllopf) 407d8cd - simple the GetConverter (commit by @pabllopf) 6c0e70e - refactor the sln to adjust the space and tabs (commit by @pabllopf) b1509db - refactor spaces and tabs (commit by @pabllopf) 0f04f46 - delete unless class ( commit by @pabllopf) 4b0ff9d - big refactor to delete singletons (commit by @pabllopf) c65b4ee - big refactor to do more simple Alis.Core module and create a real context game to do more flexible and delete singletons of arquitecture (commit by @pabllopf) 812b0bc - fix name on physic module (commit by @pabllopf) 91c1076 - the refactor sln spaces and tabs (commit by @pabllopf) dbaeef5 - delete FixedArray2 ( commit by @pabllopf) 333c93a - delete FixedArray3 ( commit by @pabllopf) 49c812f - move position to math module (commit by @pabllopf) 42a0559 - delete AudioBackendType to select backend (commit by @pabllopf) c626430 - refactor the audio module and test the 50% (commit by @pabllopf) v0.2.7 - 2024-02-01 ‚ú® New Features 09a11f3 - create the sample to time module (commit by @pabllopf) f04eeef - new version of thread an create test and docs (commit by @pabllopf) 36c409b - add netcoreapp3.1 and netcoreapp3.0 (commit by @pabllopf) üêõ Bug Fixes cd233de - json files parser ( commit by @pabllopf) 466bab5 - change AssetPath definition (commit by @pabllopf) cc277d6 - test execution with .netcoreapp (commit by @pabllopf) ‚úÖ Tests 20bfab2 - the thread manager and add cancel token (commit by @pabllopf) 72481b2 - add 5 test to assetmanager (commit by @pabllopf) 1037f4c - add 10 test to assetmanager test (commit by @pabllopf) ee142e7 - covert 100% the Threading module (commit by @pabllopf) 3d58d90 - add test to color and depth color (commit by @pabllopf) üìù Documentation Changes 3ce17f8 - add documentation to class of time module (commit by @pabllopf) 869795f - update the changes of Alis.Core.Aspect.Thread module (commit by @pabllopf) 2a5040c - update the Matrix3X3 xmls (commit by @pabllopf) a069dea - add docs for atribbute class (commit by @pabllopf) 08e43b5 - add documentation to Exceptions of Memory module (commit by @pabllopf) v0.2.6 - 2024-01-29 ‚ú® New Features 1890dcb - add net5.0 compatibility (commit by @pabllopf) 2a0db83 - include a new enum to select type init of sdl2 (commit by @pabllopf) d8626ca - add new /p: Analyze=true (commit by @pabllopf) üêõ Bug Fixes f76d56b - delete default value on contructor of sdlcolor (commit by @pabllopf) 099ce30 - test of sdl2 methods (commit by @pabllopf) 5a7a6df - the intptr strings on p-invoke code (commit by @pabllopf) bbf8a22 - load icon the sdlcontroller (commit by @pabllopf) 568ee1b - delete the sw save bmp (commit by @pabllopf) 4e234aa - test of sdl2 test ( commit by @pabllopf) a70b2b3 - some methods of mouse of sdl2 (commit by @pabllopf) 2915e45 - sdl2 test with rgb colors (commit by @pabllopf) c9664c2 - the main test of sln (commit by @pabllopf) 6174008 - spaces and tabs of tests (commit by @pabllopf) b0d8078 - name of atributtes ( commit by @pabllopf) ‚úÖ Tests ef541f9 - add new test for SdlVertex (commit by @pabllopf) a314bb6 - delete default test of graphic module (commit by @pabllopf) 9345995 - add 20 test to sdl2 module (commit by @pabllopf) 20b81d8 - add new 7 test to sdl2 main class (commit by @pabllopf) 757d686 - add new test of TestNumHaptics and fix 5 tests (commit by @pabllopf) 5972083 - add new 7 test to sdl2 class and delete rw methods (commit by @pabllopf) 7651529 - add new 20 test to class sdl2 (commit by @pabllopf) ff02387 - 400 test of sln! ( commit by @pabllopf) 7eb5af4 - 445 test! (commit by @pabllopf) 2be3945 - add 15 more test to sdl2 (commit by @pabllopf) 886dd1c - 600 test added to sln (commit by @pabllopf) f73fb41 - 728 test on sln ( commit by @pabllopf) adf57c9 - add the sdl2 test on 4 parts (commit by @pabllopf) 733e884 - add new test wexclude to pollevent (commit by @pabllopf) üé® Code Style Changes 3925375 - reduce size of api sdl2 deleting some useless methods (commit by @pabllopf) 9d66584 - reduce size api sdl2, delete 7 methods useless (commit by @pabllopf) b46fe16 - delete get GetPlatform of sdl2 because alis have the same method (commit by @pabllopf) 4dd6a7a - delete some methods of sdl2 api and include .net5.0 on pack nuget (commit by @pabllopf) e7e4a67 - delete ticks methods and delay methods of sdl2 because exits this method on c# (commit by @pabllopf) 8c963b5 - remove android methos useless (commit by @pabllopf) a9463b2 - refactor name of TypePixel (commit by @pabllopf) ccf7b01 - refactor to clean sln tans and spaces (commit by @pabllopf) 0ad64d6 - refactor sln to adjust spaces and tans. (commit by @pabllopf) v0.2.5 - 2024-01-21 ‚ú® New Features 95de5e0 - define the death moment on flappy bird (commit by @pabllopf) 69875ad - add new json serializer to data module with zero dependencies (commit by @pabllopf) f38d6a1 - create test reporter (commit by @pabllopf) dc77740 - add simple report to ubuntu (commit by @pabllopf) 84acb8e - add xunit.runner.json (commit by @pabllopf) 5f098c1 - add xml config of sonarcloud (commit by @pabllopf) cce0dc5 - add a new form to create a wrapper (commit by @pabllopf) 153c99c - new integration with .netstandard 2.1 net6.0 net7.0 and net8.0 (commit by @pabllopf) 7ac9be3 - add modules compatibility with net6.0 net7.0 and net8.0 (commit by @pabllopf) üêõ Bug Fixes 63c7bc6 - the release math import (commit by @pabllopf) b5da589 - report path (commit by @pabllopf) 46f22a0 - json serializer ( commit by @pabllopf) 8b6b410 - the CancellationTokenSource (commit by @pabllopf) 0ec5598 - Change this condition so that it does not always evaluate to 'False'. Some code paths are unreachable (commit by @pabllopf) 4636c73 - Make sure that using this pseudorandom number generator is safe here. (commit by @pabllopf) f1f7c18 - the math system methods of data module (commit by @pabllopf) 665f769 - scripts of macos when run with xml config files (commit by @pabllopf) 3765981 - wrapper of sdl2 image (commit by @pabllopf) f3edceb - methods name of sdl2 (commit by @pabllopf) e376899 - the spaces and tabs of all code (commit by @pabllopf) b276f05 - dlls of platforms ( commit by @pabllopf) 29f1d77 - dlls of macos (commit by @pabllopf) b3d6076 - dlls of macos system (commit by @pabllopf) e919a98 - the linux sdl ttf and image (commit by @pabllopf) d096734 - trim fixed the params (commit by @pabllopf) ff33de8 - the dir output to extract the dlls (commit by @pabllopf) 473f292 - the test of ttf ( commit by @pabllopf) d5fe406 - test of InternalSizeUnicode (commit by @pabllopf) 11b701c - the test of wasinit method (commit by @pabllopf) 83f9b69 - version of xunit ( commit by @pabllopf) c9ddd16 - the creation of sdl init (commit by @pabllopf) 75f0296 - all unit test of ttf on windows 11 (commit by @pabllopf) 8c8de36 - delete linkedversion method because is useless (commit by @pabllopf) 3b66bc9 - detect when sdl_image load (commit by @pabllopf) 77f26d1 - image version (commit by @pabllopf) 9b29226 - linux x64 libs ( commit by @pabllopf) ae02f78 - dlls sdl2image ( commit by @pabllopf) f14d4d6 - init sdl2image ( commit by @pabllopf) c3aaea2 - name sld2 image dlls (commit by @pabllopf) 5e8094b - delete sdl_image because is not posible use in minimal api. A lot of dependencies that need to to istall. (commit by @pabllopf) d7fb825 - trim the error when is the mode release (commit by @pabllopf) 820993d - game samples (commit by @pabllopf) 6f5880e - add the plugin assets to git (commit by @pabllopf) 9d6ceda - trim config (commit by @pabllopf) e89aba8 - dir to extract the dlls (commit by @pabllopf) 20168f5 - pack system and include extra runtimes (commit by @pabllopf) ‚úÖ Tests 717cdca - covert 100% NativeSdlTtf (commit by @pabllopf) 29b84ae - TtfLinkedVersion ( commit by @pabllopf) 95090f5 - OpenFontIndex_NoExceptionThrown (commit by @pabllopf) 7bed0c9 - add new 7 new test ( commit by @pabllopf) 1be7ee1 - covert all test of ttf module of font graphic module (commit by @pabllopf) 2a81da1 - delete some methods of sdl2 and sdl2ttf (commit by @pabllopf) 2e4671b - add new test Test_GetVersion (commit by @pabllopf) b9112fd - add load image test ( commit by @pabllopf) 6bb7f2c - add new test loadrw ( commit by @pabllopf) 6f38ab2 - add new test Test_LoadTypedRw (commit by @pabllopf) üé® Code Style Changes 5159222 - change the format of file name header of severals files (commit by @pabllopf) e52334b - delete imgui native partial class and introduce , EntryPoint = to methods. (commit by @pabllopf) 4d0e301 - refactor the name of sdl to sdl2 (commit by @pabllopf) 68ef51d - refactor the sdl2image lib to include new nativecode call. (commit by @pabllopf) a4073aa - delete utf8manager to do more simple all. (commit by @pabllopf) 00da05a - refactor sdl ttf files to include better wrappers (commit by @pabllopf) a801768 - add to sdl [return: NotNull] [MethodImpl(MethodImplOptions.AggressiveInlining)] (commit by @pabllopf) 6023669 - refactor the sdl native code to include all wrappers (commit by @pabllopf) 7bd9837 - refactor the name of sdl native (commit by @pabllopf) b326446 - delete the native sdl SDL_RenderGeometryRaw (commit by @pabllopf) dc14f7b - delete methods with more than 7 parameters (commit by @pabllopf) 770c86f - delete CreateRgbSurfaceFrom (commit by @pabllopf) 6a02e36 - the style of sdl2 format (commit by @pabllopf) 09730b8 - refactor the name of some structs and var on sdl2 (commit by @pabllopf) 35acfcc - refactor the names of structs (commit by @pabllopf) f4b10ca - refactor the names of sdl2 key maps (commit by @pabllopf) 7fb4e1e - refactor the names of structs and classes (commit by @pabllopf) 4b8fd01 - add logs to test ( commit by @pabllopf) b46c972 - optimize spaces on files (commit by @pabllopf) 3b9867b - delete some class of physic module to do more simple and refactor to quito tuples and use custom class. (commit by @pabllopf) v0.2.4 - 2024-01-02 ‚ú® New Features ef57c8f - new method on managers to \"calculate\" things (commit by @pabllopf) 5684521 - add class diagrams for modules (commit by @pabllopf) c72d5bc - add new clock, time manager and default configuration of Time module. (commit by @pabllopf) 866e9dd - add new word \"add\" to language (commit by @pabllopf) 11b52af - add new word \"Ai\" to language (commit by @pabllopf) bac65a2 - add new word \"Cloud\" to language (commit by @pabllopf) 9c1a51d - add new word \"Input\" to language (commit by @pabllopf) 35266dc - add new word \"License\" to language (commit by @pabllopf) aa17756 - add new word \"Network\" to language (commit by @pabllopf) 3e18598 - add new word \"Profile\" to language (commit by @pabllopf) dd6788e - add new word \"Plugin\" to language (commit by @pabllopf) aec557e - add new word \"Scene\" to language (commit by @pabllopf) 43934ca - add new word \"Script\" to language (commit by @pabllopf) 3b7943e - add new word \"Store\" to language (commit by @pabllopf) 0637768 - add new word \"Version\" to language (commit by @pabllopf) bda8e2d - add new word \"World\" to language (commit by @pabllopf) c37d128 - add new core integration with the new module \"Ecs\" (commit by @pabllopf) ed76833 - version 1.0 of Translation module with simple sample. (commit by @pabllopf) f3ef811 - define the global.json (commit by @pabllopf) 91cc935 - define default test to all modules (commit by @pabllopf) 2198102 - include the basic logic on the physic manager. (commit by @pabllopf) 98a717e - add new sample game flappy bird, create new custom render textures and create new loader of assets (commit by @pabllopf) 2a30f1d - add the soundtrack to the new sample game flappy bird. (commit by @pabllopf) 1c8f945 - add the floor animation to game sample flaply bird (commit by @pabllopf) bae725b - add the main menu test, the counter and the bird textures. (commit by @pabllopf) 790c308 - add animation to the bird (commit by @pabllopf) be796cd - implement the basic change of scenes. (commit by @pabllopf) b5884f7 - add new sound when fly the bird. (commit by @pabllopf) 1198075 - add new icon and controller to pong game (commit by @pabllopf) 8e6cec5 - implement simple counter on flappy bird (commit by @pabllopf) edeb99a - add new simple font render and create new collisions and refactor code of flappy bird sample (commit by @pabllopf) c80bda9 - add the collision and trigger methods to component base object (commit by @pabllopf) 29500c0 - delete sprites of flappy bird (commit by @pabllopf) 074a6aa - move licence file of alis to output dir when compile a game. (commit by @pabllopf) 99dcb95 - add new pipeline controller to flappy bird (commit by @pabllopf) 013e25f - add new collision detection methods to component of alis. (commit by @pabllopf) eebac11 - add new default black windows sample game (commit by @pabllopf) 9cfc570 - update the build script to test compilation (commit by @pabllopf) üêõ Bug Fixes d507c99 - deltatime of collisions and windows (commit by @pabllopf) fdeb840 - windows loop with automatic backend (commit by @pabllopf) b880928 - delete the opengl backend of linux and set automatic detection. (commit by @pabllopf) 48523e4 - don't include on compilation the *.md and *.cd files. (commit by @pabllopf) 95df01d - implement the Input and Graphic managers and optimice with new builder. (commit by @pabllopf) 7533e9e - the transform position of component (commit by @pabllopf) 1748b9a - include the engine to the sln (commit by @pabllopf) dec3c60 - delete true config on debug mode (commit by @pabllopf) 545ad32 - the Assert.Equal(\"<7, 8>\", result); test (commit by @pabllopf) df5ce1e - delete public readonly override string ToString() => ToString(\"G\", CultureInfo.CurrentCulture); (commit by @pabllopf) 2859247 - the target trim ( commit by @pabllopf) e948a7c - auto trim detection ( commit by @pabllopf) ab884b5 - the space of videogame (commit by @pabllopf) 1b10c02 - the Path combine ( commit by @pabllopf) fa15fb2 - 3 bugs of Dispose when it is no longer needed. (commit by @pabllopf) e8147d7 - trim error (commit by @pabllopf) d14aec9 - trim error checker ( commit by @pabllopf) 1359743 - workflow (commit by @pabllopf) 6a4b161 - the Box2d body ' vibrates' when it is in contact. (commit by @pabllopf) a8d83e8 - trim error (commit by @pabllopf) 2556506 - soundtrack when start the game of flappy bird (commit by @pabllopf) 9d1a15e - the name file on editor template for rider (commit by @pabllopf) 526a1e7 - the comments on windows 10 and optimice input controller. (commit by @pabllopf) de27816 - audio crash when try to play a lot of sound at the same time. (commit by @pabllopf) 95efc74 - main theme of the sample (commit by @pabllopf) a5fee4a - set red color to default mode of pong game (commit by @pabllopf) b17599b - name of default build for desktops (commit by @pabllopf) ‚úÖ Tests aa4f762 - add new GameTests to Alis.Core and Alis.Core.Ecs modules. (commit by @pabllopf) 0551bc9 - simple test to check uncover test (commit by @pabllopf) 6626745 - covert 100% of test the logger module. (commit by @pabllopf) 4a770fc - cover the 100% of tests on the namespace Alis.Core.Aspect.Time (commit by @pabllopf) e64a902 - add simple tests to memory module. (commit by @pabllopf) e32a349 - cover 100% of namespace Alis.Core.Aspect.Translation (commit by @pabllopf) 5a59cdb - cover 100% with test the namespace Alis.Core.Aspect.Data (commit by @pabllopf) b54d1e6 - cover 100% of vector2 class (commit by @pabllopf) a2ced08 - fix the asset manager tests. (commit by @pabllopf) üë∑ Build System d8f6fa4 - deps: bump actions/setup-java from 3 to 4 (commit by @dependabot[bot]) 1dc0518 - deps: bump actions/stale from 8 to 9 (commit by @dependabot[bot]) üìù Documentation Changes 0ba5632 - change Visible to false on docs folder (commit by @pabllopf) bde1c8c - add new ESC.md file to document the module. (commit by @pabllopf) a1bd2e4 - define and write the objetives to develop the Alis.Core.Script module. (commit by @pabllopf) e4204d6 - define and write the Alis.Core.Store module (commit by @pabllopf) a895f16 - add new alis.md file and alis.cd diagram class (commit by @pabllopf) 6d6d0cf - copy by default a simple .md with licence (commit by @pabllopf) üé® Code Style Changes 2c8c6bb - set default value to logger details: LogLevel = Info and DetailLevel = Full (commit by @pabllopf) 39acf7c - change struct to class transform entity. (commit by @pabllopf) 66e525f - change namespace of math aspect to adjust to the new directories. (commit by @pabllopf) 06d2877 - delete empty static constructor of AssetManager (commit by @pabllopf) c79c576 - adjust the sample to the new core. (commit by @pabllopf) abaaab3 - delete all dependencies with SFML and change File:Utf8Manager.cs to namespace Alis.Core.Graphic.SDL (commit by @pabllopf) bb83205 - move class and exceptions to the namespace Alis.Core.Physic.Exceptions and delete some old class (commit by @pabllopf) 4a79ff5 - include new filter for covert test ant measure the correct % of test. (commit by @pabllopf) 10149c2 - delete public readonly string ToString(string format) => ToString(format, CultureInfo.CurrentCulture); (commit by @pabllopf) 5b50275 - add comment on component floor animation. (commit by @pabllopf) ccbe69c - add new comment ( commit by @pabllopf) d70560f - delete all unnecessary sound files of flappy bird sample (commit by @pabllopf) üõ∏ Other Changes 8144178 - delete unnecessary usings of sample. (commit by @pabllopf) 20a2294 - disable engine project to check repo settings (commit by @pabllopf) v0.2.3 - 2023-10-11 üé® Code Style Changes 0fbb988 - update the Physic sample (commit by @pabllopf) 9a36512 - add 100 iterations to sample of Physic and simple creation of the world to test. (commit by @pabllopf) v0.2.2 - 2023-10-08 ‚ú® New Features d81e0c0 - automatic detect backend render (commit by @pabllopf) üêõ Bug Fixes 7aa1521 - the physics and graphic modules to render with clock (commit by @pabllopf) a4b9a93 - collisions and velocity on osx systems (commit by @pabllopf) 0abaabe - select backend api graphic to get hight performance (commit by @pabllopf) fc08524 - libs of linux arm ( commit by @pabllopf) v0.2.1 - 2023-10-06 üêõ Bug Fixes aa5137f - simple pong game collisions (commit by @pabllopf) v0.2.0 - 2023-10-04 ‚ú® New Features 9c877c3 - run windows, macos and linux test on deploy version to master branch (commit by @pabllopf) üêõ Bug Fixes 453ef15 - add new input manager with specific controls (commit by @pabllopf) 286bfd6 - the ecs system ( commit by @pabllopf) v0.1.9 - 2023-10-02 üêõ Bug Fixes 6dce735 - the main audio module with native backend (commit by @pabllopf) v0.1.8 - 2023-10-02 ‚ú® New Features d7ba807 - fix all repository and the workflows (commit by @pabllopf) 4aa5585 - refactor the main publish workflow (commit by @pabllopf) üêõ Bug Fixes d7bf530 - the version to publish (commit by @pabllopf) v0.1.7 ‚ú® New Features 47437e2 - new network module with cross-platform code and native full on c# (commit by @pabllopf) f3b4ca3 - add new defaults builders for main components of Alis (commit by @pabllopf) ea550df - add id for settings of Alis (commit by @pabllopf) üêõ Bug Fixes a07668d - delete static reference on GraphicManager (commit by @pabllopf) 05d81f0 - delete static reference on singleton on SceneManager (commit by @pabllopf) bf6edc5 - create new method for setview on GraphicManager (commit by @pabllopf) b73f2aa - delete all module network because is only for windows. And start to creating a cross-platform network. (commit by @pabllopf) 382ba19 - add static program on samples of alis (commit by @pabllopf) d50e485 - delete comments of Fixture (commit by @pabllopf) bff4998 - delete comments of RayCastHelper (commit by @pabllopf) a46d8f0 - add new type MaskKeyLengthException (commit by @pabllopf) 713ba41 - extract Identification struct and IdentificationMarshalData struct (commit by @pabllopf) 94360ee - Remove the field ' localCenterB' and declare it as a local variable in the relevant methods. (commit by @pabllopf) d748ea6 - default build for IBuild (commit by @pabllopf) a3743d5 - Remove the member initializer, all constructors set an initial value for the member of SplashScreen class (commit by @pabllopf) 4339f8e - Remove the field ' videoMode' and declare it as a local variable in the relevant methods on videogame class (commit by @pabllopf) 2812248 - implement default methods of TimeManager (commit by @pabllopf) 710d2ba - Use ' string.IsNullOrEmpty()' instead of comparing to empty string on AudioClipBase (commit by @pabllopf) e7e0ccd - Use ' string.IsNullOrEmpty()' instead of comparing to empty string on AudioClipBase (commit by @pabllopf) a78747d - delete deprecated code sfRenderTexture_create (commit by @pabllopf) 2aea21c - delete using that dont use (commit by @pabllopf) a19dfcf - Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed. (commit by @pabllopf) f0c6913 - Refactor this method to reduce its Cognitive Complexity from 17 to the 15 allowed. (commit by @pabllopf) 7f30297 - Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed. (commit by @pabllopf) a93fa01 - Refactor this method to reduce its Cognitive Complexity from 21 to the 15 allowed. (commit by @pabllopf) c5c638d - Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed of DTSweep (commit by @pabllopf) 66e2e1a - Refactor this method to reduce its Cognitive Complexity from 69 to the 15 allowed of TextureConverter (commit by @pabllopf) 996fff7 - Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed of SimplifyTools (commit by @pabllopf) 6d6dbbe - Refactor this method to reduce its Cognitive Complexity from 30 to the 15 allowed of SimpleCombiner (commit by @pabllopf) 3ecb9d8 - Refactor this method to reduce its Cognitive Complexity from SimpleCombiner 57 to the 15 allowed of (commit by @pabllopf) f93f75b - Refactor this method to reduce its Cognitive Complexity from 20 to the 15 allowed of DTSweep (commit by @pabllopf) 20354d2 - Remove this unread private field '_pingPongManager' or refactor the code to use its value. (commit by @pabllopf) 5138fb3 - remove _pingTask ( commit by @pabllopf) af6c320 - Refactor this method to reduce its Cognitive Complexity from DynamicTree 16 to the 15 allowed of (commit by @pabllopf) 163a482 - Refactor this method to reduce its Cognitive Complexity from 24 to the 15 allowed of DynamicTree (commit by @pabllopf) 6a92f12 - Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed of DynamicTree (commit by @pabllopf) 289f51d - Refactor this method to reduce its Cognitive Complexity from 36 to the 15 allowed of PolygonShape (commit by @pabllopf) cb91d69 - Either remove this useless object instantiation of class 'PingPongManager' or use it. (commit by @pabllopf) 9a7c6ef - Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed of DistanceGJK (commit by @pabllopf) b77ca4c - Refactor this method to reduce its Cognitive Complexity from 33 to the 15 allowed of ChainHull (commit by @pabllopf) b059f58 - Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed of Vertices (commit by @pabllopf) 22f5ff5 - Refactor this method to reduce its Cognitive Complexity from 16 to the 15 allowed of Curve (commit by @pabllopf) üìù Documentation Changes cc4bb30 - add default samples for modules (commit by @pabllopf) 579ebf2 - delete some comments of ContactManager (commit by @pabllopf) üé® Code Style Changes 1eb8b1d - delete Test_To_Load_A_Shader_From_Assembly_Resources test (commit by @pabllopf) d20def4 - refactor the main class line to reduce Complexity (commit by @pabllopf) 936ed78 - reduce Complexity of Triangulate (commit by @pabllopf) 434bc66 - refactor Triangulator (commit by @pabllopf) 655891e - reduce size of BoundingBox (commit by @pabllopf) d7605f9 - refactor names of vars on PulleyJoint class (commit by @pabllopf) 83364d2 - new Identification condtructor (commit by @pabllopf) 6d0dfb9 - reduce complexity FrictionJoint (commit by @pabllopf) fe93237 - delete key \"this\" from sln (commit by @pabllopf) ec10d61 - extract body test class of benchmarks (commit by @pabllopf) 5ea4252 - add default AudioManager methods (commit by @pabllopf) 91c9222 - delete useless button class (commit by @pabllopf) 7b85f74 - change the name EarClip (commit by @pabllopf) 5a57e19 - EarClipDecomposer names (commit by @pabllopf) 986927d - DTSweep conventions names (commit by @pabllopf) 040b215 - name conventions of vars SimplifyTools (commit by @pabllopf) 8e58e94 - refactor SimpleCombiner with name conventions (commit by @pabllopf) 0cb9b09 - name vars of DistanceGJK (commit by @pabllopf) 0cad471 - refactor names of ChainHull (commit by @pabllopf) 64259b7 - refactor names of Vertices (commit by @pabllopf) dffe188 - refactor names of Curve (commit by @pabllopf) v0.1.6 - 2023-09-13 üé® Code Style Changes 14fd971 - delete .personal folder and delete temp files *(commit by @pabllopf)* v0.1.5 - 2023-09-12 ‚ú® New Features 54ebf53 - include a new default demo to render colors, and test if run the game with only one line \"VideoGame.Builder().Run();\" (commit by @pabllopf) üêõ Bug Fixes 13b63c9 - delete zip compress LZMA (commit by @pabllopf) 94df1c4 - windows systems ( commit by @pabllopf) 3958a96 - compile to windows and linux platforms. And include on windows the openal lib (commit by @pabllopf) v0.1.4 - 2023-09-11 ‚ú® New Features df4a9e5 - new config to optimice the release libs (commit by @pabllopf) 158487e - new type of compress dlls (commit by @pabllopf) b9d3273 - compress all dlls of all platforms 8%. The big dll is 1.8mb (commit by @pabllopf) v0.1.3 - 2023-09-10 ‚ú® New Features b94beca - compress on zip native dlls (commit by @pabllopf) 2e58475 - can compress on .zip all native dlls (commit by @pabllopf) 16e96f7 - compress all dlls natives of graphic to less than 1mb (commit by @pabllopf) 2f09b09 - redue size of dlls of native audio than less 1mb (commit by @pabllopf) üêõ Bug Fixes 4eedcc2 - the main loop with simple game (commit by @pabllopf) 18182b3 - default samples of alis games (commit by @pabllopf) 348818d - win-x64 zip files ( commit by @pabllopf) 873bdb1 - win-x86 zip (commit by @pabllopf) 5f6ba7e - win-arm zip (commit by @pabllopf) 14a2470 - win-arm64 zip (commit by @pabllopf) 7fd165e - osx-x64 zip (commit by @pabllopf) c609c46 - linux-x64 zip (commit by @pabllopf) 0219f03 - linux-x86 zip (commit by @pabllopf) 3cf384c - linux-arm zip (commit by @pabllopf) 2d5a36f - linux arm64 (commit by @pabllopf) 8592bfb - physic error when open clean project (commit by @pabllopf) v0.1.2 - 2023-09-10 ‚ú® New Features f63fd4c - compile depend of platform to reduce size (commit by @pabllopf) ec89d65 - include new configurations to compile tiny modules (commit by @pabllopf) 1bfc60b - tiny windows compilation 1MB Alis. (commit by @pabllopf) b4030ce - windows arm 64 bits configuration (commit by @pabllopf) e12c670 - add new win arm64 platform. (commit by @pabllopf) 5170720 - update namespace of engine module (commit by @pabllopf) 0f27aaf - auto pack with diferents platforms (commit by @pabllopf) 439b507 - add new custom build for linux x64 (commit by @pabllopf) 79eca3c - add custom build for linux x86 (commit by @pabllopf) 654fc26 - add custom build for linux arm64 (commit by @pabllopf) 4fca5e2 - add new custom build for linux arm (commit by @pabllopf) 811ecf7 - add win x86 platform (commit by @pabllopf) 1a0b902 - add new platform win arm (commit by @pabllopf) üêõ Bug Fixes 8923729 - namespace of engine ( commit by @pabllopf) 451ae90 - windows platform optimization for x64 bits (commit by @pabllopf) 0328fb8 - the engine module with new bakend with opengl and sdl2 (commit by @pabllopf) 4d4d914 - the dlls audio of sdl2 on engine (commit by @pabllopf) 04b4d76 - reduce the size of dlls (commit by @pabllopf) eeb7ad4 - windows x64 build ( commit by @pabllopf) 0694e4c - dlls of windows arm 64 (commit by @pabllopf) 45631a4 - the sfml controller ( commit by @pabllopf) 44b8a6c - 3 issues of public to change internal class (commit by @pabllopf) 7dada55 - add dll system to audio module (commit by @pabllopf) 26c40a4 - audio module to include sfml backend (commit by @pabllopf) adc0b1e - the osx x64 bilding of engine, audio and graphic modules (commit by @pabllopf) c7d0c11 - native engine platform osx-arm64 (commit by @pabllopf) 5bcd1d3 - windows platforms ( commit by @pabllopf) 1e50177 - add build all platforms (commit by @pabllopf) v0.1.1 - 2023-08-29 ‚ú® New Features 25ede11 - include native aot to compile c code (commit by @pabllopf) 5d78486 - add new menus for engine (commit by @pabllopf) 55ab483 - 0 dependencies with nugets (commit by @pabllopf) üêõ Bug Fixes 41837f3 - add all comments to sln (commit by @pabllopf) e1b4a39 - names of sln (commit by @pabllopf) 0b5399c - linux .so files to arm64 systems (commit by @pabllopf) 6ad8c61 - delete unsafe keyword of class and change name of imguizmo (commit by @pabllopf) 04145d9 - implicit conversions (commit by @pabllopf) 6e32cb4 - private dlls (commit by @pabllopf) c2aa23b - the infinite loop of gamebase (commit by @pabllopf) 5902c65 - names and refactor sln (commit by @pabllopf) db354a7 - change namespace from Imgui to UI (commit by @pabllopf) üé® Code Style Changes 4d44bbd - change name of imnodes (commit by @pabllopf) 8c78621 - change names of implot (commit by @pabllopf) 7e85ac0 - change names of main class of implot (commit by @pabllopf) 69d2317 - refactor implot file to change names (commit by @pabllopf) v0.1.0 - 2023-08-14 ‚ú® New Features f62f07e - generate automatic binding for csfml (commit by @pabllopf) 60fb38b - add binding sdl2 ( commit by @pabllopf) üêõ Bug Fixes c7b47e4 - delete all csproj of csfml binding (commit by @pabllopf) v0.0.9 - 2023-08-13 ‚ú® New Features 15058b5 - plugin manager and iplugin to control plugins (commit by @pabllopf) 1b0f850 - new plugin module and a simple sample. (commit by @pabllopf) 1994426 - the Cloud, ADS and ECS(entity component system) modules (commit by @pabllopf) b03743a - do compatible with .netstandard 2.0 (commit by @pabllopf) 8dccfd0 - add null checker on security module (commit by @pabllopf) cd0e7a7 - new proxy config ( commit by @pabllopf) fbe189b - new attributes to check not null, not empty and not zero. (commit by @pabllopf) 4cfac7e - new utf8 manager ( commit by @pabllopf) 963cefd - add demo to web ( commit by @pabllopf) 7479d79 - add the engine to web format (commit by @pabllopf) 314bc68 - integrate vulkan, opengl, metal and directx backends (commit by @pabllopf) üêõ Bug Fixes d79057b - move all extern code to custom class of SdlTtf (commit by @pabllopf) ff20713 - the dlls extractor ( commit by @pabllopf) b808e9d - the buf with the buffers and LayoutKind.Sequential (commit by @pabllopf) 3f51d96 - random security level issue (commit by @pabllopf) 61ce295 - gethashcode of matrices (commit by @pabllopf) 4dd5da4 - gethashcode of vector3f (commit by @pabllopf) dbc1936 - to internal ImGuiNative (commit by @pabllopf) 062665e - 3 bugs with private and readonly class (commit by @pabllopf) 404db67 - resources of core and alis module (commit by @pabllopf) 9bf7db8 - the default value of methods (commit by @pabllopf) d06880e - logger sln format and create new log levels (commit by @pabllopf) 44698af - some critical issues of logger (commit by @pabllopf) 2b0b2a8 - readonly values ( commit by @pabllopf) 3d8b81e - Obsolete code (commit by @pabllopf) 7a124a0 - check and refactor names and comments of sdl structs (commit by @pabllopf) a7ad1b2 - names and format sdl code of graphic module (commit by @pabllopf) 77580cc - the engine start method (commit by @pabllopf) afb01f2 - Refactor this method to reduce its Cognitive Complexity from 19 to the 15 allowed. (commit by @pabllopf) a547854 - Refactor this constructor to reduce its Cognitive Complexity from 18 to the 15 allowed. (commit by @pabllopf) c810bb4 - flag name of imgui module (commit by @pabllopf) 8e2eecf - some methods of extern ttf module (commit by @pabllopf) c707092 - format folder of sdl (commit by @pabllopf) 4141153 - enums names (commit by @pabllopf) f0acc23 - NotNull attribute ( commit by @pabllopf) f2db666 - ' TTF_ByteSwappedUNICODE' less trivial. (commit by @pabllopf) dfb7c1c - the wrapper of sdl ttf (commit by @pabllopf) 31ab0c1 - all sdl ttf (commit by @pabllopf) 092d751 - the sdl image (commit by @pabllopf) 1a7cc79 - the name (commit by @pabllopf) f0cb2e2 - one line sdl image class (commit by @pabllopf) 51020ac - sdl main class names and delegates (commit by @pabllopf) 803acd9 - names and sdl vars ( commit by @pabllopf) 92dd1b1 - move out struct on music class (commit by @pabllopf) 819b1b0 - names of sln (commit by @pabllopf) 471ad17 - the validator of all entities (commit by @pabllopf) edf5242 - name entry point ( commit by @pabllopf) b6c85ac - names of SdlPixelType (commit by @pabllopf) 6cd01e8 - names of PackedOrder (commit by @pabllopf) 7cbf05b - PixelType name ( commit by @pabllopf) 1bb5179 - names of PackedLayout (commit by @pabllopf) de94bc9 - names of sdl (commit by @pabllopf) a44ecbd - sdl new changes ( commit by @pabllopf) 7d53177 - name attributes of sdl class (commit by @pabllopf) 1b009d8 - sdl warper (commit by @pabllopf) dee9927 - sdl names of init method (commit by @pabllopf) 5b34414 - add new wrapers and names corrections (commit by @pabllopf) aa7c0da - sdl names (commit by @pabllopf) 87a8a5d - correct 30 names ( commit by @pabllopf) 72292a4 - 40 names of sdl ( commit by @pabllopf) b63cae0 - 100 names of sdl ( commit by @pabllopf) 45cfbe4 - 100 names of sdl ( commit by @pabllopf) 5fe1e77 - sdl 79 change names ( commit by @pabllopf) d682724 - all imgui (commit by @pabllopf) cfa30ea - alis engine web with new main (commit by @pabllopf) f85adb3 - web imgui (commit by @pabllopf) 60d7339 - net version (commit by @pabllopf) cb9a0f7 - the imgui loader ( commit by @pabllopf) 31cd1f1 - build folder (commit by @pabllopf) f816c33 - the main js (commit by @pabllopf) d826bfd - font (commit by @pabllopf) 3fc6f57 - add new imgui plot, grizmo and nodes extras (commit by @pabllopf) 3868813 - warning as errors and new class of engine (commit by @pabllopf) c98a954 - veldrid config ( commit by @pabllopf) ae086b9 - osx dlls of sdl2 sfmal and cimgui (commit by @pabllopf) cc9a349 - windows loader ( commit by @pabllopf) 64fed43 - config file (commit by @pabllopf) üìù Documentation Changes e84d559 - update the main xmls folder format (commit by @pabllopf) 918f8fb - add new comments to imgui extras (commit by @pabllopf) ae5987f - create new samples of opengl opengles vulkan dx11 and metal (commit by @pabllopf) üé® Code Style Changes 7e35ed6 - delete comment and regions zones (commit by @pabllopf) 1527856 - refactor and clean the sln (commit by @pabllopf) 1fa2387 - clean and refactor sln (commit by @pabllopf) 1875628 - change name of vector and matrix to include Type float (commit by @pabllopf) 9e688f3 - change name of matrix with new format (commit by @pabllopf) a5fdc1f - refactor style of math module (commit by @pabllopf) db48bd8 - big refactor of opengl module, extract the enums and delegates and change names format. (commit by @pabllopf) d8b4e92 - delete useless class (commit by @pabllopf) e106dc3 - organize the imgui folder (commit by @pabllopf) 580b27f - refactor sln to include a new namespace (commit by @pabllopf) 02959f3 - refactor the ImDrawList (commit by @pabllopf) a6ef227 - wrapper sdl ttf ( commit by @pabllopf) 66ab6c9 - refactor namespaces to do more simple (commit by @pabllopf) v0.0.8 - 2023-06-09 ‚ú® New Features f69c4b4 - add the gravity config to physic settings of the videogame (commit by @pabllopf) 37beb39 - add the angulr velocity to the boxcollider (commit by @pabllopf) 793b734 - create new directory to engine Alis.App.Engine (commit by @pabllopf) fbe66a7 - add native sdl2, imgui and opengl (commit by @pabllopf) 247fad2 - add support with sdl2 and opengl (commit by @pabllopf) 98685a2 - add new sln file to templates of alis (commit by @pabllopf) 6114c95 - add new sln to alis.templates (commit by @pabllopf) 6dbc2f8 - new module Ia and new module profiling (commit by @pabllopf) 5b8b791 - add sdl audio backend to audio module. (commit by @pabllopf) 55e68ab - refactor sdl main class (commit by @pabllopf) fdd681b - add new 2 controller of windows (commit by @pabllopf) 8a5f623 - new module \"Scripting\" (commit by @pabllopf) b10e3b8 - delete all unsafe code to do more security of sdl module (commit by @pabllopf) bb4991f - create store and translation modules (commit by @pabllopf) 5dd931f - new module \"store\" to include the system pay. (commit by @pabllopf) üêõ Bug Fixes 44df77f - resources of api graphic (commit by @pabllopf) 31c6e36 - the unsafe block of code (commit by @pabllopf) 6080680 - delete dependencie with unsafe code (commit by @pabllopf) ac73804 - restore the sln and update the assets folder of engine. (commit by @pabllopf) 8239997 - imgui module and gen code (commit by @pabllopf) 409c7a5 - refactor the resources folder to equals on input graphic and audio modules (commit by @pabllopf) aa85caa - the resources files ( commit by @pabllopf) 0e403fa - sdl sintax of the main solution (commit by @pabllopf) 1542166 - the dir access on windows machines (commit by @pabllopf) d7dd99c - Unvalidated local pointer arithmetic (commit by @pabllopf) 96915bd - Unvalidated local pointer arithmetic (commit by @pabllopf) 6556c13 - the last memory Unvalidated local pointer arithmetic (commit by @pabllopf) 48d978e - the ramdon generator (commit by @pabllopf) 9dbc58e - Make sure that using this pseudorandom number generator is safe here (commit by @pabllopf) e35987b - Remove this unread private field '_seed' or refactor the code to use its value. (commit by @pabllopf) 8e8833a - Use the 'value' parameter in this property set accessor declaration (commit by @pabllopf) 91f4d71 - Make sure this weak hash algorithm is not used in a sensitive context here. (commit by @pabllopf) 43ad053 - the sdl audio (commit by @pabllopf) 6b0c449 - the input system of alis (commit by @pabllopf) 539d624 - sdl error with vars ( commit by @pabllopf) e2ad49c - separate the calls of OpenGL and context code. (commit by @pabllopf) 1682f83 - the main sln names ( commit by @pabllopf) 44ec8d9 - 'preb' is null on at least one execution path. (commit by @pabllopf) efff881 - Add a nested comment explaining why this method is empty, throw a 'NotSupportedException' or complete the implementation. (commit by @pabllopf) 97b7787 - Dispose 'tcpClient' when it is no longer needed. (commit by @pabllopf) ed62613 - Refactor Vector2F ' GetHashCode' to not reference mutable fields. (commit by @pabllopf) d1a04d6 - Vector3F Refactor ' GetHashCode' to not reference mutable fields (commit by @pabllopf) 2258072 - Matrix4X4F Refactor ' GetHashCode' to not reference mutable fields. (commit by @pabllopf) 0cc58e6 - RectangleF Refactor ' GetHashCode' to not reference mutable fields (commit by @pabllopf) 4bbf783 - reduce size of the Sdl file (commit by @pabllopf) 41ac71c - the main sdl class ( commit by @pabllopf) b7a6b8c - delete all unsafe code of audio module (commit by @pabllopf) 159c75f - resolve some unsafe code to to safe (commit by @pabllopf) fb6c6b0 - delete some unsafe code of graphic module (commit by @pabllopf) 73d8319 - the encoding text ( commit by @pabllopf) 035d853 - delete all unsafe code of sfml module (commit by @pabllopf) 377002b - abstract the input system (commit by @pabllopf) b63a640 - the sdl unsafe code ( commit by @pabllopf) 2b8caf2 - the event unsafe code (commit by @pabllopf) 7b92206 - delete unsafe code SdlHapticCondition (commit by @pabllopf) 31f7a96 - allow SizeConst of arrays (commit by @pabllopf) ad75acf - delete all unsafe code of byte[] (commit by @pabllopf) 9ddaf77 - the sdl unsafe code of events (commit by @pabllopf) 1bb469e - byte[] unsafe code to do with intptr (commit by @pabllopf) d056781 - the SdlSensorEvent ( commit by @pabllopf) e1f9e9a - SdlRendererInfo ( commit by @pabllopf) d8da437 - delete unsafe code of opengl module (commit by @pabllopf) 4dcc5fe - the engine with imgui (commit by @pabllopf) 6260ad6 - delete unsafe code of ImDrawCmd (commit by @pabllopf) 3b7fb5b - the byte sdl input event (commit by @pabllopf) abeb900 - padding byte converter (commit by @pabllopf) 0cfa609 - quite unsafe code of rendered sdl imgui (commit by @pabllopf) bc6899d - the imgui unsafe code to compile (commit by @pabllopf) ‚úÖ Tests dc2dfb3 - new 4 test to world class (commit by @pabllopf) 19f22be - 4 new test for world class to checj add and remove of joints (commit by @pabllopf) üë∑ Build System 72a843c - deps: bump SkiaSharp.NativeAssets.Linux from 2.88.1 to 2.88.3 (commit by @dependabot[bot]) bb4f4ba - deps: bump SkiaSharp.Views.Maui.Controls.Compatibility (commit by @dependabot[bot]) 541b120 - deps: bump Microsoft.AspNetCore.Components.WebAssembly (commit by @dependabot[bot]) 8302a07 - deps: bump Microsoft.AspNetCore.Components.WebAssembly.DevServer (commit by @dependabot[bot]) 283764c - deps: bump SkiaSharp.Views.Maui.Controls from 2.88.1 to 2.88.3 (commit by @dependabot[bot]) 220af10 - deps: bump actions/dependency-review-action from 2 to 3 (commit by @dependabot[bot]) üé® Code Style Changes d4537d9 - update the sln with new scripts and configs (commit by @pabllopf) 4ec3d77 - refactor all class and structs of imgui to do more clean code. (commit by @pabllopf) e6db497 - refactor to do more clean code the sln files (commit by @pabllopf) b451740 - move sln templates to folder templates (commit by @pabllopf) 28c4dc2 - extract class of sdl_mixer (commit by @pabllopf) 0699bd6 - Use the 'value' parameter in this property set accessor declaration (commit by @pabllopf) cc3ec2c - refactor names of sln (commit by @pabllopf) 5d87492 - refactor the main sln files (commit by @pabllopf) 69294cf - delete all bugs of Graph (commit by @pabllopf) 0163c08 - refactor the main sdl2 file (commit by @pabllopf) 1b813a8 - moce delegates to files (commit by @pabllopf) 107dc2f - reset sln with new modules (commit by @pabllopf) üõ∏ Other Changes 6e10cf0 - delete the class consolegame and soundgame (commit by @pabllopf) fe931d1 - delete matrix2x2f of physic module (commit by @pabllopf) de37ae2 - reduce langversion to 8 (commit by @pabllopf) v0.0.7 - 2023-04-30 ‚ú® New Features c3086e5 - create a custom math entities. (commit by @pabllopf) 69f28a1 - add new entities of math (commit by @pabllopf) 288bcc1 - add new matrix and vector namespace of math module (commit by @pabllopf) b300666 - new input system based on sdl2 (commit by @pabllopf) f571eb1 - add buttons controller for input manager (commit by @pabllopf) 76d2dc1 - include sdl2 dlls on compilation (commit by @pabllopf) fed11dd - new sample of game \" 7colors\" of cards (commit by @pabllopf) 4e8a2b5 - add the universe that contains worlds on physics module. (commit by @pabllopf) ba78c06 - create a workflow to update changelog (commit by @pabllopf) 2a605cd - update all scripts with the same name of the main sln (commit by @pabllopf) üêõ Bug Fixes 3b6fc6a - delete dependencies of vector2 with system libs (commit by @pabllopf) 79e4fd4 - the runtime of windows arm64 platforms (commit by @pabllopf) 20dbdc0 - keyboard input when press on windows (commit by @pabllopf) 8f5dc35 - keyboard input when updateEvents (commit by @pabllopf) de7c8b4 - fix the changelog file (commit by @pabllopf) 9f0822e - delete test on changelog workflow (commit by @pabllopf) 44ca3ba - delete the changelog (commit by @pabllopf) 938b6c1 - test without install workloads (commit by @pabllopf) 8578e03 - windows test (commit by @pabllopf) 73ebd49 - delete tools of repository (commit by @pabllopf) 3049688 - update sln files ( commit by @pabllopf) ed4a5d8 - the for of the workflows (commit by @pabllopf) a7a5e02 - the for test (commit by @pabllopf) 08c1c48 - the dev test on windows (commit by @pabllopf) f1630c0 - the main workflow of test (commit by @pabllopf) 02fedc0 - test (commit by @pabllopf) 2a0791e - resources path ( commit by @pabllopf) 8d870c8 - the resources path ( commit by @pabllopf) bd75fc6 - update the dirs of templates (commit by @pabllopf) 861c69a - alis test that return exceptions (commit by @pabllopf) b986c64 - the dir of unit tests (commit by @pabllopf) 23ac407 - the name of test scripts (commit by @pabllopf) 1ae8f32 - change || to && on scripts of linux and macos (commit by @pabllopf) c4caa07 - update the scripts to linux and macos (commit by @pabllopf) 2b917ac - windows input module (commit by @pabllopf) ‚úÖ Tests a842cab - create 3 new unit test for method ClearForces of World class. (commit by @pabllopf) e85a578 - add new tests to method addbody of world class (commit by @pabllopf) e7b93ec - add test to remove a body from world (commit by @pabllopf) üë∑ Build System 1179d33 - deps: bump SkiaSharp.Views.Maui.Controls.Compatibility (commit by @dependabot[bot]) a661956 - deps: bump SkiaSharp.NativeAssets.Linux from 2.88.1 to 2.88.3 (commit by @dependabot[bot]) d5c2f11 - deps: bump Microsoft.AspNetCore.Components.WebAssembly (commit by @dependabot[bot]) 65f9dca - deps: bump Microsoft.AspNetCore.Components.WebAssembly.DevServer (commit by @dependabot[bot]) e68e0ad - deps: bump SkiaSharp.Views.Maui.Controls from 2.88.1 to 2.88.3 (commit by @dependabot[bot]) c9c794f - deps: bump Microsoft.AspNetCore.Components.WebAssembly (commit by @dependabot[bot]) 62a9810 - deps: bump Microsoft.AspNetCore.Components.WebAssembly.DevServer (commit by @dependabot[bot]) bb93572 - deps: bump actions/stale from 5 to 8 (commit by @dependabot[bot]) üìù Documentation Changes d30c821 - create automatic web. üé® Code Style Changes 022dfe8 - change the names of workflows of github (commit by @pabllopf) 538bd9a - refactor matrix and vector of numerics module. (commit by @pabllopf) c304839 - refactor main sln ( commit by @pabllopf) a50c18d - refactor name of matrix of physic module. (commit by @pabllopf) 69360e8 - refactor name of transform var of position and rotation (commit by @pabllopf) 941af60 - move transform and rot struct to math module (commit by @pabllopf) 769ffee - refactor name rot to rotation (commit by @pabllopf) 02d80c6 - delete dependecies of numerics module on physics and create custom vectors (commit by @pabllopf) ed486ba - refactor the main sln files (commit by @pabllopf) 3bccc85 - refactor delete fixturedef of physic module (commit by @pabllopf) a2a06b8 - delete body def to simply the class (commit by @pabllopf) e24cfbf - delete all def of physic module. (commit by @pabllopf) 2f506d1 - change timeStep to time module. (commit by @pabllopf) 31bd68e - delete misc folder of physic module (commit by @pabllopf) cdff2ce - delete cont of max value float to float.MaxValue (commit by @pabllopf) 0e4b5b3 - delete regions of code (commit by @pabllopf) 7a0d175 - refactor rogue sample deleting the native old libs (commit by @pabllopf) ab89372 - update the xml files (commit by @pabllopf) b72aa0d - refactor the math helper to include on the math module (commit by @pabllopf) 187afd5 - include new matrix3x3 on math module (commit by @pabllopf) 7c314cf - add the pong game to web interactive (commit by @pabllopf) 2bd593d - refactor the matrix 2x2 (commit by @pabllopf) 8010512 - refactor names of sln files and vars. (commit by @pabllopf) 3a1b17d - run cleanup and refactor code (commit by @pabllopf) 6b0f886 - extract class and struct of sdlmixer (commit by @pabllopf) 132979b - refactor the input module to include new class/struct of sdl lib (commit by @pabllopf) 0bb60de - end refactor of sdl to extract all class and struct in files. (commit by @pabllopf) a96faaf - refactor the static text of files sln (commit by @pabllopf) 9d2ba0d - refactor the physic module and include new properties on world class (commit by @pabllopf) b4caad8 - create simple class world (commit by @pabllopf) beb2731 - new docs md for class world (commit by @pabllopf) 494bb29 - update docs of world class (commit by @pabllopf) fafc89f - refactor workflow of test (commit by @pabllopf) a46dd39 - refactoring the world class of physic module (commit by @pabllopf) d3d0bed - refactor contact list to do a real list (commit by @pabllopf) 40a5875 - refactor the world ClearFlags() (commit by @pabllopf) 92ffd7b - remove rest method from island (commit by @pabllopf) b03dfd1 - delete BodiesStack on world class (commit by @pabllopf) 15af303 - refactor to do more simple the solve method (commit by @pabllopf) 4a976ea - create new methods on body and world to do more simple the class (commit by @pabllopf) 90e48d1 - change body[] to list on island class (commit by @pabllopf) d7235ec - change arrays to list on class island and contactsolver (commit by @pabllopf) 270a7ad - refactor style of the solution (commit by @pabllopf) 8daf77d - remove contact manager reference of island class (commit by @pabllopf) 8d9f0af - simple solve method of world class (commit by @pabllopf) f76def1 - add new method to invalidate TOI (commit by @pabllopf) 584f8b5 - new method called SynchronizeBodies on island (commit by @pabllopf) b9dd6f8 - simple more toi events method of wold class (commit by @pabllopf) e1d7c7b - create new method to get mincontact (commit by @pabllopf) 76863ad - add new method called AdvanceBody on world class (commit by @pabllopf) 6536db4 - create the fast iterator of list (commit by @pabllopf) ef0695e - refactor the world class and create new method IsMinAlphaGreaterThanEpsilon (commit by @pabllopf) 9d33957 - refactor the island class to include a timestep (commit by @pabllopf) 62fc6a1 - delete a ref of minalpha (commit by @pabllopf) 409cff9 - refactor the world class to do bodies list private. (commit by @pabllopf) 058d59a - delete the static world copies on objects. (commit by @pabllopf) e0937e6 - delete dummies test ( commit by @pabllopf) 8a6f4ef - creating new figures to delete the factory methods (commit by @pabllopf) v0.0.6 - 2023-04-28 ‚ú® New Features da7b547 - update automatic wiki. (commit by @pabllopf) fdcde42 - change the structure of docs folder to include wiki, web, documentation, and resources folder (commit by @pabllopf) 31dab88 - first version of web (commit by @pabllopf) e86a06e - add Content Security Policy to web (commit by @pabllopf) bd81036 - add new policy ( commit by @pabllopf) 02d9697 - add new control of logs. (commit by @pabllopf) a976136 - add new style logs and new tool to see full logs. (commit by @pabllopf) f9bde5f - add new template to create games withs alis and 2d new render manager. (commit by @pabllopf) 962034d - add new extract method to load resources dlls (commit by @pabllopf) d4bcec3 - add template to build game on web. (commit by @pabllopf) 7334131 - add .runtimes folder on sln (commit by @pabllopf) f5c27d6 - adapt the packages config for graphic modules (commit by @pabllopf) 6ce06d5 - add native dlls on audio module. (commit by @pabllopf) b0193a3 - compile the alis lib with native dlls (commit by @pabllopf) üêõ Bug Fixes 5f67f24 - workflows of github ( commit by @pabllopf) 3e5bc8f - size of web (commit by @pabllopf) bb9df06 - email send of web ( commit by @pabllopf) 81e9186 - the Indexing of the web (commit by @pabllopf) 4003a59 - change gifs to video (commit by @pabllopf) c52566b - footer web and time load of scripts (commit by @pabllopf) 16b237d - web jquery version ( commit by @pabllopf) 5c84c21 - video format of web ( commit by @pabllopf) 8819bd1 - logo web format ( commit by @pabllopf) e517ca8 - update bootstrap ( commit by @pabllopf) 88dc942 - resolution logo alis on web (commit by @pabllopf) 6d7bb99 - console errors ( commit by @pabllopf) dd02d93 - web Ensure CSP ( commit by @pabllopf) 78dcb86 - web contact form ( commit by @pabllopf) b3002fe - navegation menu web ( commit by @pabllopf) f26d084 - change images folder of wiki (commit by @pabllopf) 76f9217 - the index canonical web deploy on google domains (commit by @pabllopf) 05244a0 - homepage redirection on nav header (commit by @pabllopf) d737d1b - change id marks and color of namenu of web. (commit by @pabllopf) 76399b6 - logo imagen ref of web (commit by @pabllopf) 177cedb - resolution web icon ( commit by @pabllopf) f964a23 - video load source ( commit by @pabllopf) 019859c - homepage video play ( commit by @pabllopf) 4202090 - nav menu control jquery (commit by @pabllopf) 73cd06d - change workflows to install macos workload (commit by @pabllopf) f9a3b97 - the templates of alis (commit by @pabllopf) f6cce0f - icon problen (commit by @pabllopf) 84a58be - add new template with windows for arm (commit by @pabllopf) 02f8713 - windows template builder (commit by @pabllopf) c1ef08c - simple render of web (commit by @pabllopf) 827aaf3 - add new conditions on the linux template csproj (commit by @pabllopf) 40e9353 - change the dir of resources to load dlls of systems. (commit by @pabllopf) 8d4145e - change folder of resources location (commit by @pabllopf) 09ad3ae - the dll extract of native files (commit by @pabllopf) baf30a8 - compilation on windows for external dlls (commit by @pabllopf) 8da2575 - vector 2 structure ( commit by @pabllopf) 8e6b359 - the automatic create test (commit by @pabllopf) ‚úÖ Tests 04b1a2c - create 240 empty test for alis.test module (commit by @pabllopf) 94d427c - fixed default tests and start to testing videogame class (commit by @pabllopf) üìù Documentation Changes de5bc04 - create automatic web. 71811cc - create automatic web. 1d0cb26 - create automatic web. fe7ce86 - refactor the docs folder to include wiki documentation and web. (commit by @pabllopf) 71b3441 - update wiki with new structure. (commit by @pabllopf) 1970890 - include footer ( commit by @pabllopf) cc601c3 - create automatic web. b29c24e - create automatic web. df6ef96 - delete templates of web folder (commit by @pabllopf) 2043f2f - create automatic web. 3fbb522 - create donation web section (commit by @pabllopf) üé® Code Style Changes 8a07408 - change names of docs subfolders (commit by @pabllopf) 2a90ed6 - remove all cansole.writeline to inclide logs messages (commit by @pabllopf) 312dd22 - refactor the sln of templates (commit by @pabllopf) 67fd0b0 - refactor the tmeplate of ios to do more simple (commit by @pabllopf) üõ∏ Other Changes a4ec78a - update bookmarks of log tool. (commit by @pabllopf) b1d1605 - change the resource files (commit by @pabllopf) v0.0.5 - 2022-10-23 ‚ú® New Features 607bdac - add bot to check security (commit by @pabllopf) 376596d - create workflow to auto create web (commit by @pabllopf) 94423ea - Add gpg4win tool for windows (commit by @pabllopf) 97b981d - add rider for windows tool (commit by @pabllopf) 91d3616 - add git tool for windows (commit by @pabllopf) de37217 - add github desktop to windows tools (commit by @pabllopf) ee67417 - add SFML (commit by @pabllopf) eec1de1 - add .net6.0 (commit by @pabllopf) 9940504 - simple render cross-platform (commit by @pabllopf) 0bbcbd0 - add new script to macos os for develop on alis (commit by @pabllopf) c44c934 - add global.json with net6.0 (commit by @pabllopf) d6df8e7 - new render cross-platform (commit by @pabllopf) a42580c - add new network socket module. (commit by @pabllopf) 2bdbdfc - add simple structure of a game on alis. (commit by @pabllopf) 53c9fb3 - add installer of rider. (commit by @pabllopf) faa8f8d - add installer github desktop (commit by @pabllopf) 4e11c10 - add installer dotnet (commit by @pabllopf) 0cd30dc - add controller xbox/play module (commit by @pabllopf) 0b0a002 - add test for all class of physics module (commit by @pabllopf) 8ca2bca - add empty unit test of physic module (commit by @pabllopf) 3041698 - delete body linkedlist, and create simple list on world class (commit by @pabllopf) 5a29a42 - add new expection of lock world (commit by @pabllopf) 8b8fd2e - refactor to create a world more simple. (commit by @pabllopf) 986654d - create entity shape on world. (commit by @pabllopf) d6240c2 - add new entity joint to world (commit by @pabllopf) bce7b1c - PublishTrimmed ( commit by @pabllopf) 21ae75b - add new arquitecture (commit by @pabllopf) 7ad08db - create new arquitecture of alis.core (commit by @pabllopf) 740e5d4 - create system and manager control (commit by @pabllopf) cb66212 - change mode on debug and release with files linked (commit by @pabllopf) c3e0f6f - add default tools to build project (commit by @pabllopf) 223a986 - add managers controller (commit by @pabllopf) ffcb0f0 - add transform for 2d games (commit by @pabllopf) b5f5533 - add new builder of scene and scenemanager (commit by @pabllopf) b9f5037 - add grapich sample and add compability with macos (commit by @pabllopf) 0fcfcbd - add graphic manager and simple windows (commit by @pabllopf) db15105 - add new audio cross platform with net standar (commit by @pabllopf) 1ac3e4b - assets folder include automatic in sample projects (commit by @pabllopf) aa27e61 - add timer control ( commit by @pabllopf) db27866 - add sprite component builder and add new sample with this component (commit by @pabllopf) 9976bec - add new builder for components of alis.core (commit by @pabllopf) 7c449e7 - integrate sfml modules of grapichs, audio and input (commit by @pabllopf) 187c813 - new input manager ( commit by @pabllopf) 9e6b057 - implement the native and sfml audio module. (commit by @pabllopf) e58388f - create audio general clases for build components (commit by @pabllopf) 7bcf0bd - add new words for api fluent and integrate the audiosource builder. (commit by @pabllopf) 0bba00c - new builders of lights and meshs (commit by @pabllopf) b0364a1 - add new builders config for audioclip and audiosource (commit by @pabllopf) 4c614d8 - setting builder ( commit by @pabllopf) 0f68c8a - add new simple input manager (commit by @pabllopf) f2d0135 - add animator simple ( commit by @pabllopf) bd8eb78 - add player move controller with simple input (commit by @pabllopf) 8647b7e - implement managerbase clases to create interface into alis.core and alis (commit by @pabllopf) 4b0a3be - add tool to create comments (commit by @pabllopf) 1bd6db7 - add animator simple builder with api fluent (commit by @pabllopf) 1c0ef96 - change animation by name (commit by @pabllopf) ca1609f - add camera (commit by @pabllopf) 080124a - add new debug (commit by @pabllopf) 2dc87cc - add icon setting on general settings. (commit by @pabllopf) 975ab29 - add new setting of window and general. (commit by @pabllopf) 26937f1 - resize the windows ( commit by @pabllopf) 2cce91f - can change to resize and fullscreen mode with alt + enter (commit by @pabllopf) a9fd920 - add benchmark module. (commit by @pabllopf) fd020a8 - add basic templates of game with alis. (commit by @pabllopf) 8e06194 - simple template cross-platform of alis. (commit by @pabllopf) 19c3af6 - basic physics with dynamic/static objects. (commit by @pabllopf) 053d5ae - add simple game ping pong with physics. (commit by @pabllopf) 9e1920c - add simple player controller of ping pong game (commit by @pabllopf) 4d1206c - detect collision of two object. (commit by @pabllopf) f425b95 - add simple geometrydash controller (commit by @pabllopf) 45e2436 - add simple sample of collisions (commit by @pabllopf) üêõ Bug Fixes e3b827a - change config file of bot dependency (commit by @pabllopf) 926f652 - generation of xmls files by targetframework (commit by @pabllopf) 3a3cbfa - namespace of timestep class in the time module (commit by @pabllopf) 9d9e787 - the output dir of build sln include $configuration in the path. (commit by @pabllopf) 59891ad - netstandar 1.3 ( commit by @pabllopf) 74e5cb8 - add dlls for macos m1 (commit by @pabllopf) 30583e8 - dont include xml files in repo (commit by @pabllopf) cf1fa2f - give permission files sln (commit by @pabllopf) 73ef303 - android manifiest ( commit by @pabllopf) 3610521 - the tests on dev branche (commit by @pabllopf) 5791a4a - example of the desktop windows (commit by @pabllopf) 3d043bf - change names of folders and rules. (commit by @pabllopf) 57500e0 - change all class to individual files on input module. (commit by @pabllopf) 168a3a8 - refactor a style of code. (commit by @pabllopf) 078fb22 - dependency of samples alis. (commit by @pabllopf) a250b64 - run desktop template on macos (commit by @pabllopf) 350a674 - windows platform for develop (commit by @pabllopf) 41634df - add new option to see internal var on projest of testing. (commit by @pabllopf) 4e1239b - namespaces of solution (commit by @pabllopf) 8862b5c - combine all partials class of collision in one class. (commit by @pabllopf) d81f392 - some name usings. ( commit by @pabllopf) a08034a - add nuget config. ( commit by @pabllopf) 8eebac8 - refactor world class to reduce menbers (commit by @pabllopf) 155378f - null reference to bodylist on world class (commit by @pabllopf) 932eea0 - refactor world class to more simple (commit by @pabllopf) afea91d - refactor world class to do more simple class (commit by @pabllopf) dfd2a9e - delete raycast of world class. (commit by @pabllopf) b9d0de5 - change names of create/delete to add/remove of list world class (commit by @pabllopf) e16346d - change color class to logging module (commit by @pabllopf) 136ac6d - refactor the math module to add the helper class. (commit by @pabllopf) 0229c45 - diagram class of sln (commit by @pabllopf) c956ef4 - 2000 errors (commit by @pabllopf) 871b912 - compile the original files (commit by @pabllopf) 82cff54 - the folder names sln (commit by @pabllopf) 32e9ade - delete input module and updater module (commit by @pabllopf) 0050d83 - delete some unit files and order folder of modules (commit by @pabllopf) e651f66 - obsolete code (commit by @pabllopf) 4166706 - change base module ( commit by @pabllopf) 5923d59 - refactor contac class to extract enums definitions (commit by @pabllopf) 153a203 - namespace on sln ( commit by @pabllopf) 43b41db - debug mode with projects references (commit by @pabllopf) 2284c27 - base module to new arquitecture (commit by @pabllopf) f2236d3 - dir and files name capitals (commit by @pabllopf) 0941c0b - delete temp files ( commit by @pabllopf) 8300398 - add new arquitecure with new names and folders (commit by @pabllopf) 1f4880b - smple rogue when run debug and release config (commit by @pabllopf) d068fd7 - csfml dlls on windows x64 x86 (commit by @pabllopf) dc3bbd2 - the setting builder ( commit by @pabllopf) ec1b1d4 - add runtimes to sample rogue (commit by @pabllopf) 5f3118f - change name add and remove component (commit by @pabllopf) 64a32b9 - using on debug mode ( commit by @pabllopf) 71cf747 - src folder compiler names (commit by @pabllopf) b3c3ec1 - videogame sample dont found input manager (commit by @pabllopf) 3f91a44 - input manager obsolete keys. (commit by @pabllopf) 7e7e085 - change import of alis because the dlls of smfl cant be loaded with xamarin (commit by @pabllopf) 4959e99 - linex workflow of github (commit by @pabllopf) 6375a64 - dev code scan (commit by @pabllopf) b8805c5 - delete workflow net6.0-macos (commit by @pabllopf) 8b86a28 - workflow of github ( commit by @pabllopf) 0b1944c - name sln namespaces of modules (commit by @pabllopf) 3ca85bd - names, some docs files, and update version of readme. (commit by @pabllopf) 47d8c7a - fixed the workflows. (commit by @pabllopf) fa9ee51 - packs of nuget templates (commit by @pabllopf) c6ecd6e - automatic packs ( commit by @pabllopf) d5c22f5 - create publish ( commit by @pabllopf) ‚úÖ Tests e4aa8f4 - add simple test to math module (commit by @pabllopf) 9b7adbf - add test simple to matrix22 on math module. (commit by @pabllopf) üìù Documentation Changes cce9b68 - create web config auto documentation (commit by @pabllopf) a11c1e3 - update the main readme to include new sections (commit by @pabllopf) 37efcbd - update readme with new spaces (commit by @pabllopf) a2fc0ab - document text automatic (commit by @pabllopf) 48dc37c - create security file. (commit by @pabllopf) befa0c0 - document code. ( commit by @pabllopf) 7e6f304 - add the min lang version comment (commit by @pabllopf) 5beb44b - add test cover ( commit by @pabllopf) b13b5cd - create page folder to document all things of framework. (commit by @pabllopf) üé® Code Style Changes 191bf44 - refactor name of vector2 (commit by @pabllopf) 241f97a - refactor name of vec3 -> vector3 (commit by @pabllopf) f20dc4d - refactor name of matrix2x2 (commit by @pabllopf) 9f80538 - refactor name of matrix3x3 (commit by @pabllopf) 8bb6399 - refactor name of matrix22 and matrix33 (commit by @pabllopf) 6b2aadc - refactor the default sln file. (commit by @pabllopf) 1c5ccbb - restore the sln ( commit by @pabllopf) cfe8736 - change names of projects of test. (commit by @pabllopf) 97dfeef - change the world class to main directory of physic module (commit by @pabllopf) 6f29fc1 - change TimeStep struct to module Time (commit by @pabllopf) 8b30f73 - delete TODOs of some file on physic module (commit by @pabllopf) 1a04b97 - add header licence on all files. (commit by @pabllopf) f89ca3f - refactor folders of physics module (commit by @pabllopf) dca72a8 - refactor and cleanup. (commit by @pabllopf) b792726 - add class diagram ( commit by @pabllopf) d14dbae - upgrade the diagram class of solution (commit by @pabllopf) 579e596 - refactor editor config (commit by @pabllopf) 460e85e - refactor with news rules (commit by @pabllopf) dc6a98f - refactor sln with new rules (commit by @pabllopf) 38f4104 - change folder names ( commit by @pabllopf) 7be117b - refactor the main style of sln (commit by @pabllopf) 37ae840 - refactor and delete all using than don¬¥t used by code. (commit by @pabllopf) 77fce4f - refactor style code. (commit by @pabllopf) 03f5695 - refactor other files style. (commit by @pabllopf) d27d1e0 - refactor the modules of 4_operation to control the warnings. (commit by @pabllopf) e930434 - remove all TODO that are trash of other versions (commit by @pabllopf) üõ∏ Other Changes f2abee6 - refactor the class diagram to include new definition of physics module (commit by @pabllopf) v0.0.4 - 2022-07-13 ‚ú® New Features 176f0b5 - automatic deploy version (commit by @pabllopf) üêõ Bug Fixes 46ac1a9 - workflow of release ( commit by @pabllopf) ‚úÖ Tests f2e24f1 - correect one test of examples (commit by @pabllopf) üé® Code Style Changes 3142a9c - delete some spaces ( commit by @pabllopf) üõ∏ Other Changes 87ee9d4 - example of other label (commit by @pabllopf) v0.0.3 - 2022-07-13 ‚ú® New Features e114c9e - delete some spaces of class program (commit by @pabllopf) v0.0.2 - 2022-07-13 ‚ú® New Features e114c9e - delete some spaces of class program (commit by @pabllopf) v0.0.1 - 2022-07-13 üêõ Bug Fixes 027e2c3 - the version flow ( commit by @pabllopf)"
  },
  "about/License.html": {
    "href": "about/License.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Licence GNU GENERAL PUBLIC LICENSE V3 29 June 2007 Preamble The GNU General Public License is a free, copyleft license for software and other kinds of works. The licenses for most software and other practical works are designed to take away your freedom to share and change the works. By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users. We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors. You can apply it to your programs, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things. To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights. Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others. For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received. You must make sure that they, too, receive or can get the source code. And you must show them these terms so they know their rights. Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it. For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software. For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions. Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so. This is fundamentally incompatible with the aim of protecting users' freedom to change the software. The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable. Therefore, we have designed this version of the GPL to prohibit the practice for those products. If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users. Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary. To prevent this, the GPL assures that patents cannot be used to render the program non-free. The precise terms and conditions for copying, distribution and modification follow. Terms and Conditions 0. Definitions \"This License\" refers to version 3 of the GNU General Public License. \"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks. \"The Program\" refers to any copyrightable work licensed under this License. Each licensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals or organizations. To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy. The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work. A \"covered work\" means either the unmodified Program or a work based on the Program. To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy. Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well. To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies. Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying. An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License. If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion. 1. Source Code The \"source code\" for a work means the preferred form of the work for making modifications to it. \"Object code\" means any non-source form of a work. A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language. The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form. A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it. The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities. However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work. For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work. The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source. The Corresponding Source for a work in source code form is that same work. 2. Basic Permissions All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met. This License explicitly affirms your unlimited permission to run the unmodified Program. The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work. This License acknowledges your rights of fair use or other equivalent, as provided by copyright law. You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force. You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright. Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you. Conveying under any other circumstances is permitted solely under the conditions stated below. Sublicensing is not allowed; section 10 makes it unnecessary. 3. Protecting Users' Legal Rights From Anti-Circumvention Law No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures. When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures. 4. Conveying Verbatim Copies You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program. You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee. 5. Conveying Modified Source Versions You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions: a) The work must carry prominent notices stating that you modified it, and giving a relevant date. b) The work must carry prominent notices stating that it is released under this License and any conditions added under section 7. This requirement modifies the requirement in section 4 to \"keep intact all notices\". c) You must license the entire work, as a whole, under this License to anyone who comes into possession of a copy. This License will therefore apply, along with any applicable section 7 additional terms, to the whole of the work, and all its parts, regardless of how they are packaged. This License gives no permission to license the work in any other way, but it does not invalidate such permission if you have separately received it. d) If the work has interactive user interfaces, each must display Appropriate Legal Notices; however, if the Program has interactive interfaces that do not display Appropriate Legal Notices, your work need not make them do so. A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate. 6. Conveying Non-Source Forms You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways: a) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by the Corresponding Source fixed on a durable physical medium customarily used for software interchange. b) Convey the object code in, or embodied in, a physical product (including a physical distribution medium), accompanied by a written offer, valid for at least three years and valid for as long as you offer spare parts or customer support for that product model, to give anyone who possesses the object code either (1) a copy of the Corresponding Source for all the software in the product that is covered by this License, on a durable physical medium customarily used for software interchange, for a price no more than your reasonable cost of physically performing this conveying of source, or (2) access to copy the Corresponding Source from a network server at no charge. c) Convey individual copies of the object code with a copy of the written offer to provide the Corresponding Source. This alternative is allowed only occasionally and noncommercially, and only if you received the object code with such an offer, in accord with subsection 6b. d) Convey the object code by offering access from a designated place (gratis or for a charge), and offer equivalent access to the Corresponding Source in the same way through the same place at no further charge. You need not require recipients to copy the Corresponding Source along with the object code. If the place to copy the object code is a network server, the Corresponding Source may be on a different server (operated by you or a third party) that supports equivalent copying facilities, provided you maintain clear directions next to the object code saying where to find the Corresponding Source. Regardless of what server hosts the Corresponding Source, you remain obligated to ensure that it is available for as long as needed to satisfy these requirements. e) Convey the object code using peer-to-peer transmission, provided you inform other peers where the object code and Corresponding Source of the work are being offered to the general public at no charge under subsection 6d. A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work. A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling. In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage. For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product. A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product. \"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source. The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made. If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information. But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM). The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed. Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network. Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying. 7. Additional Terms \"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law. If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions. When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it. (Additional permissions may be written to require their own removal in certain cases when you modify the work.) You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission. Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms: a) Disclaiming warranty or limiting liability differently from the terms of sections 15 and 16 of this License; or b) Requiring preservation of specified reasonable legal notices or author attributions in that material or in the Appropriate Legal Notices displayed by works containing it; or c) Prohibiting misrepresentation of the origin of that material, or requiring that modified versions of such material be marked in reasonable ways as different from the original version; or d) Limiting the use for publicity purposes of names of licensors or authors of the material; or e) Declining to grant rights under trademark law for use of some trade names, trademarks, or service marks; or f) Requiring indemnification of licensors and authors of that material by anyone who conveys the material (or modified versions of it) with contractual assumptions of liability to the recipient, for any liability that these contractual assumptions directly impose on those licensors and authors. All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10. If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term. If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying. If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms. Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way. Termination. You may not propagate or modify a covered work except as expressly provided under this License. Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11). However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation. Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice. Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License. If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10. Acceptance Not Required for Having Copies. You are not required to accept this License in order to receive or run a copy of the Program. Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance. However, nothing other than this License grants you permission to propagate or modify any covered work. These actions infringe copyright if you do not accept this License. Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so. Automatic Licensing of Downstream Recipients. Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License. You are not responsible for enforcing compliance by third parties with this License. An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations. If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts. You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License. For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it. Patents. A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based. The work thus licensed is called the contributor's \"contributor version\". A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version. For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License. Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version. In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement). To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party. If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients. \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid. If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it. A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License. You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007. Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law. No Surrender of Others' Freedom. If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all. For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program. Use with the GNU Affero General Public License. Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work. The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such. Revised Versions of this License. The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation. If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation. If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program. Later license versions may give you additional or different permissions. However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version. Disclaimer of Warranty. THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. Limitation of Liability. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. Interpretation of Sections 15 and 16. If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee. END OF TERMS AND CONDITIONS How to Apply These Terms to Your New Programs If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms. To do so, attach the following notices to the program. It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found. <one line to give the program's name and a brief idea of what it does.> Copyright (C) <year> <name of author> This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>. Also add information on how to contact you by electronic and paper mail. If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode: Copyright (C) This program comes with ABSOLUTELY NO WARRANTY; for details type show w'. This is free software, and you are welcome to redistribute it under certain conditions; type show c' for details. The hypothetical commands show w' and show c' should show the appropriate parts of the General Public License. Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\". You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/. The GNU General Public License does not permit incorporating your program into proprietary programs. If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library. If this is what you want to do, use the GNU Lesser General Public License instead of this License. But first, please read https://www.gnu.org/licenses/why-not-lgpl.html."
  },
  "about/Origin.html": {
    "href": "about/Origin.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Origin The Alis project originated from the Bachelor‚Äôs Degree Final Project (TFG) of Pablo Perdomo Falc√≥n, presented as part of his studies at the University of Las Palmas de Gran Canaria (ULPGC). Context The video game industry is one of the most significant sectors in entertainment. This means that more companies and independent developers are choosing to get involved in this field. Creating a video game is a complex task, involving the development of various aspects (updates, resource management, data persistence, etc.) that require significant effort yet add little value, as consumers expect these features to be present. This project aims to enhance developer productivity by minimizing production costs. Consequently, Alis has been developed‚Äîa cross-platform framework that includes an intuitive API and up-to-date documentation. Additionally, as an open-source project, it fosters the creation of a collaborative community that can contribute to its development. First Version The first version of Alis was developed as part of this TFG and consisted of a complete framework for game development on Windows and macOS. In addition to the framework itself, the project included an application designed to facilitate game creation, acting as an intuitive and accessible graphics engine. This tool allowed developers to design, build, and test their games within an integrated environment, simplifying the development process. Acknowledgments I would like to dedicate this work to my family and sincerely thank my parents and sister for their unconditional support. I also want to thank those GitHub users who, without any ulterior motives or self-interest, have offered their support during the testing phase and after the project's release, actively participating in various tasks and fostering the creation of a small collaborative community: SPEEDCROW98, Chgv99, suarez0965, GabrielRT01, RaulLozanoPonce, Claudia2000pf. Lastly, I thank my tutors for the help they provided, making it easier for me to complete this final degree project. Academic Recognition Pablo Perdomo Falc√≥n‚Äôs TFG was awarded Honors, the highest academic recognition given by the university. This achievement not only reflected the quality and potential of the project but also underscored the importance of continuing to develop and expand Alis as a reference tool in the field of game development. Publication The TFG that gave rise to Alis is publicly available and can be accessed at the following link: TFG Pablo Perdomo Falc√≥n. This document provides a detailed overview of the project's beginnings, including the challenges faced and the solutions implemented, serving as a solid foundation for the continued development of Alis."
  },
  "about/Privacy_policy.html": {
    "href": "about/Privacy_policy.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Privacy Policy At Alis, the privacy and security of our users are of utmost importance to us. We want to assure you that your privacy is protected and that we do not collect or store any personal information. Below is an overview of our privacy policy. üìú Information We Do Not Collect Alis does not collect or store any of the following types of information: Personal Data: We do not collect any personal data, including names, email addresses, phone numbers, or any other identifiable information from our users. Device Data: We do not obtain information about the device running Alis, including IP addresses, device types, operating systems, or any other technical characteristics of the device. Usage Data: We do not collect data on how you interact with the framework or any information related to the use of the software. Web Data: Our website does not use cookies or tracking technologies to collect data about your visits or online behavior. üîí Information Security Since Alis does not collect or store personal data, there is no need to implement specific security measures to protect such information. However, we take general measures to protect the framework code and the infrastructure of our servers. üö´ Third-Party Information We do not share, sell, or rent information to third parties. Since we do not collect personal information, there is no data that can be shared or sold to others. üîÑ Changes to the Privacy Policy We reserve the right to update this privacy policy at any time. Changes will be posted on this page and will take effect from the date of publication. We encourage you to review this policy periodically to stay informed of any changes. üì© Contact If you have any questions or concerns about our privacy policy, please feel free to contact us at the following email address: **support@alis.org**: For privacy-related inquiries and any other questions you may have. Alis is committed to maintaining the transparency and trust of our community. We appreciate your support and understanding."
  },
  "about/Purpose.html": {
    "href": "about/Purpose.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Purpose of the Alis Project Alis is an open-source game development framework designed to facilitate the creation of cross-platform games. Our goal is to provide developers of all levels with a powerful and accessible tool that allows them to build high-quality gaming experiences without having to worry about the complexities of adapting to different operating systems. Main Objectives Accessibility: Alis is designed to be user-friendly, even for those with limited experience in game development, offering an approachable learning curve without sacrificing functionality or flexibility. Cross-Platform: Alis supports multiple platforms, including Windows, Linux, and macOS. Support for Android and iOS will be added soon, allowing developers to bring their games to mobile devices without having to rewrite their codebase. Flexibility and Power: While Alis is accessible, it does not skimp on advanced features. The framework is robust enough to handle both simple and complex games, providing a wide range of tools and libraries that enable developers to customize their projects to meet specific needs. Community and Collaboration: As an open-source project, Alis greatly benefits from community collaboration. We encourage active participation in the development of the framework, whether through code contributions, bug reports, or creating documentation and tutorials to assist other developers. Future Vision Alis is not just a framework; it is a growing community committed to innovation in game development. Our long-term goal is to make Alis one of the preferred choices for game developers worldwide, regardless of their experience level or the platforms they wish to target. Join us on this exciting journey and contribute to the evolution of game development with Alis!"
  },
  "about/Security_policy.html": {
    "href": "about/Security_policy.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Security Policy Supported Versions The following are the compatible versions (target frameworks) of the project that are supported with security updates: .NET: net5.0, net5.0-windows net6.0, net6.0-android, net6.0-ios, net6.0-maccatalyst, net6.0-macos, net6.0-tvos, net6.0-windows net7.0, net7.0-android, net7.0-ios, net7.0-maccatalyst, net7.0-macos, net7.0-tvos, net7.0-windows net8.0, net8.0-android, net8.0-browser, net8.0-ios, net8.0-maccatalyst, net8.0-macos, net8.0-tvos, net8.0-windows .NET Core: netcoreapp2.0, netcoreapp2.1, netcoreapp2.2 netcoreapp3.0, netcoreapp3.1 .NET Standard: netstandard2.0, netstandard2.1 .NET Framework: net461, net462, net463, net47, net471, net472, net48, net481 MonoAndroid: monoandroid MonoMac: monomac MonoTouch: monotouch Tizen: tizen40, tizen60 Xamarin.iOS: xamarinios Xamarin.Mac: xamarinmac Xamarin.TVOS: xamarintvos Xamarin.WatchOS: xamarinwatchos Reporting a Vulnerability If you discover a security vulnerability in this project, please follow these steps to report it: Contact Us: Send an email to pabloperdomofalcon@gmail.com. Please include detailed information about the vulnerability, including steps to reproduce and any potential impact. Response Time: We aim to respond to all security reports within 72 hours. We will acknowledge receipt of your report and provide you with an estimated timeline for resolution. Evaluation: Our team will review the report and assess the severity of the vulnerability. We will then determine whether the vulnerability is valid and how it will be addressed. You will receive an update on the status of your report, whether it is accepted or declined. Disclosure: Once a fix has been implemented and released, we will provide a detailed description of the vulnerability and the resolution in our release notes and security updates. We will also notify you directly. Responsible Disclosure: Please do not disclose the vulnerability publicly until a fix has been released. This helps us to address the issue effectively and protect users. Security Updates Release Schedule: Security updates are released as part of our regular release cycle. Critical fixes may be released as hotfixes outside of the regular schedule if necessary. Changelog: Detailed information about each security update, including the nature of the fix and affected components, will be documented in our changelog. Security Practices Code Review: All code changes, especially those affecting security, are reviewed by multiple team members to ensure adherence to security best practices. Testing: We use automated and manual testing to identify vulnerabilities. Security-related tests are included in our continuous integration pipeline. Dependencies: We regularly update and audit our dependencies to address known vulnerabilities in third-party libraries. Known Vulnerabilities Disclosure: Information about known vulnerabilities, including details on affected versions and mitigation steps, will be shared in our public issue tracker or release notes. Updates: We will provide updates on the status of known vulnerabilities and the steps we are taking to address them. Contact For any questions or additional information regarding our security policy, please contact us at pabloperdomofalcon@gmail.com."
  },
  "about/framework.html": {
    "href": "about/framework.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Framework Concept The solution proposed in this project is the implementation of a framework to facilitate video game development. In software development, a framework is defined as: \"An object-oriented model of a particular system that includes the definition of the mechanisms and protocols for interaction between objects. This framework provides a blueprint of the application's program architecture within which the programmer inserts application-specific code.\" [10] Other relevant definitions of the term include: \"A framework is a reusable design of all or part of a system that is represented by a set of abstract classes and the way their instances interact.\" [11] \"A framework is a reusable, semi-complete application that can be specialized to produce concrete and specific applications. The framework describes the objects that make up the system and how they interact, their interfaces and the flow of control between them, and how the system's responsibilities are mapped to objects.\" [1] The following diagram illustrates a generic framework scenario, where a core provides a set of functionalities and some flexible points (or hot spots). These points need to be configured or connected so that a specific application can leverage those functionalities. Advantages and Disadvantages of Using Frameworks It is crucial to understand the advantages and drawbacks of frameworks to have a clear perspective of their limits. According to M. Eduardo [12], these are: Advantages Use of Design Patterns Frameworks utilize design patterns, which result in clean and extensible code for future expansions. [12] Generic Services and Tested Code Frameworks provide generic services needed in most projects, allowing the use of pre-tested code and avoiding the repetition of errors in the future. [12] Code Reuse Frameworks promote code reuse, simplifying the development process, resulting in significant time savings in programming and design. [12] Disadvantages Generation of Unnecessary Code Frameworks tend to generalize component functionality, which can lead to unnecessary computational resource demands. [12] Costly Learning Curve The time saved by not programming can be lost learning to use the framework if it will not be used in other projects. [12] High Dependency on Source Code There is a high dependency of the application‚Äôs source code on the framework. Additionally, each framework has its own code convention, making it difficult to switch to another framework. [12] Difficulty in Debugging If a library fails, debugging becomes complicated because the programmer is not familiar with the internal code of the framework. For this reason, it is important to use frameworks and modules in advanced versions. [12] The Reality of Frameworks in C# This section analyzes the current state of software applications designed to meet the needs of indie developers: game engines and frameworks, both designed for video game creation. Upon closely examining the available options, it is concluded that most commercial games are developed using closed-source, proprietary game engines, as noted in [13]. These tools limit the developer, as they prevent modification or improvement of the engine to suit their needs, and restrict the formation of collaborative communities that could add value to the product. Additionally, many of these engines are expensive or, if free, impose requirements that may affect the developers' performance. Examples of these engines include RPG Maker, Unity, Leadwerks, and HeroEngine. In September 2020, a group of researchers from two Canadian universities and one Brazilian university published the results of a study [13] that exposes the reality surrounding open-source game engines and frameworks. This study included three phases: first, they explored and summarized the academic literature on game engines; second, they analyzed 282 frameworks and 282 popular game engines on GitHub; and finally, they surveyed 124 engine developers about their experience in developing these tools. Some of the key conclusions from the study, which were especially considered when developing this project, are as follows: Complexity and Popularity \"Open-source game engines are slightly larger in terms of size and complexity, and less popular and attractive than traditional frameworks.\" [13] Programming Languages and Licenses \"Engines are larger and more complex than frameworks. They mainly use compiled programming languages versus interpreted ones for frameworks. Both often use the MIT license.\" [13] Version Control and Releases \"Engine projects have shorter histories with fewer releases. Version control does not seem to be a well-followed practice in engine development, with fewer versions compared to frameworks.\" [13] It was found that the median number of releases for engines was 1, while for frameworks it was 32. 40% of engines had no tags, which might indicate that they were still under development and no builds were available. Life Cycle Engines were also observed to be younger and have a shorter lifespan compared to frameworks. Community Size \"Projects developed with game engines are mainly personal, while the community around projects developed with frameworks is larger.\" [13] Popularity of C# Frameworks written in C# are the most popular, however, the number of available frameworks is limited. \"JavaScript and C are the second and third, respectively. Java is barely present despite its age and general popularity.\" [13]"
  },
  "about/game_indies.html": {
    "href": "about/game_indies.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Indie Games Currently, there is no exact or widely accepted definition of what constitutes an indie game. However, several common traits can be observed that characterize this type of game: Characteristics of Indie Games Independent Development Indie games are often developed by a single person, small teams, or companies that do not fall into the AAA category. The term \"AAA\" emerged in the latter half of the 1990s as a marketing label used by major developers like Electronic Arts or Sony to refer to video games involving significant investment in development and marketing, with high return expectations. Duration and Content Generally, indie games have less duration or content compared to games developed by large distribution companies. This is due to the time and resource constraints faced by independent developers. Funding Independent developers do not have the same financial support as those working for major industry companies. In many cases, they do not receive external financial backing and must cover their own costs. Budget and Tools Indie games often have a reduced or zero budget. To overcome these limitations, developers often use open-source creation tools and distribute their products through digital distribution systems on the Internet. Creativity and Freedom Unbound by commercial agreements, corporate guidelines, or player expectations, indie developers enjoy greater creative freedom. This allows them to create products that reflect their personalities and, at times, have been considered true works of art by experts in the field. Artistic Design and Innovation Indie games often stand out from conventional games due to the special attention given to artistic design or the development of new functionalities in the user experience. This innovation and creativity often result in unique and memorable experiences for players. Indie games represent a vibrant and creative facet of the video game industry, offering unique and personalized experiences that stand out for their originality and the passion of their creators. Their Importance in the Sector Indie games play a crucial role in the video game industry for several reasons: Pioneers of Innovation Indie game developers are a driving force of innovation in the industry. They often incorporate new mechanics, varied themes, and alternative design approaches that may be considered risky by major companies. This is due to the need to experiment and sharpen their ingenuity to overcome budget limitations and the absence of rigid guidelines or pre-established expectations. Thanks to this freedom, indie developers can explore new genres and concepts, enriching the global market offering. Enhancers of Market Offerings If only games developed by large companies were published, consumers would have a much more limited and less varied game catalog. Major developers are fewer and usually release only a few games per year, sometimes only one every few years. In contrast, indie games expand and diversify the available offerings, providing players with a greater variety of experiences and styles. Fosters Collaborative Communities When indie developers release the source code of their games, it increases the chances of others contributing to their development. This not only enriches the final product by incorporating different perspectives and skills but also fosters the creation of collaborative communities around a project. This collaborative approach can lead to the evolution of more complex and successful projects. Platforms for Professional Growth Indie games often serve as an excellent introduction for developers looking to make a name for themselves in the industry. Such projects can open doors and motivate new developers to create their first video game, contributing to the growth and renewal of the sector. According to the White Paper on Spanish Video Game Development 2020, small and indie studios are predominant in the Spanish video game industry. This highlights the importance of indie games as a vital and creative force in the video game development landscape. Factors Affecting Their Development The development of indie games is influenced by various factors that can facilitate or hinder their progress: Access to Development Tools Indie games emerged when individuals and small teams began to gain access to development tools previously available only to large companies with significant financial resources. Therefore, any action that helps democratize access to these tools will be crucial for sustaining and enhancing this sector of the industry. Digital Creation and Sales Platforms In the video game industry, there are digital platforms that connect developers with end-users. However, these platforms often impose conditions that increase production costs, such as service fees. For indie games to continue thriving, it is essential that these platforms grow in number and continue to ensure that developers can recover their financial investments. Reduction of Development Complexity If developers have access to tools that reduce task complexity, they can decrease the time needed to achieve their goals. This will not only help maintain motivation but also reduce the chances of frustration by making project completion more tangible. Financial Limitations Indie developers often operate with limited budgets and have little or no access to funding sources. If their game sales do not meet expectations, they have little room to recover and start new projects. According to the White Paper on Spanish Video Game Development 2020, most Spanish indie studios fail due to a lack of capital and deficiencies in business management. Proposed Measures to Support Indie Game Development: Optimal Technological Infrastructure It is necessary to provide indie developers with a greater number of technological infrastructures that allow them to reduce production costs. Strategies to Measure Profitability Develop studies or strategies that allow accurate assessment of the economic profitability of projects. According to Guivernau Albert, 9 out of 10 indie games do not exceed 3,000 sales, and the maximum investment they can afford should be between $25,000 and $30,000. Industrial and Fiscal Support Some of the measures proposed in the White Paper on Spanish Video Game Development include creating an appropriate industrial and fiscal ecosystem, attracting private investments, generating a strong network of external agents (such as investors, crowdfunding, mentors, training centers, and more), and exporting successful cases of video game applications in areas of public interest, such as education and health."
  },
  "about/open_source.html": {
    "href": "about/open_source.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Software: Free vs Open Source The aim of this project is to reduce developers' costs in building their video games. Therefore, providing a free tool with an Open Source philosophy is an ideal solution. The concept of free software was born in the mid-1980s when Richard M. Stallman, a researcher at the Artificial Intelligence Laboratory of the Massachusetts Institute of Technology (MIT), observed that by the time he joined the institute in 1971, the idea of software ownership had become established. In 1984, he conceived the idea of the GNU Project and founded the Free Software Foundation (FSF) in 1985, drafting the foundational document of the community: the GNU Manifesto, which can be consulted, with updates and clarifications, on the official website [14]. GNU is a recursive acronym that stands for \"G(NU) N(o) U(nix)\" [15], and it was used to name the project's first practical goal: to create an operating system different from the then-relevant UNIX (proprietary software). This code granted users the freedom to run, copy, distribute, study, modify, and improve it, creating a community around it. Since then, the FSF defines a program as free software if it grants users four essential freedoms: Freedom 0: The freedom to run the program as you wish, for any purpose [16]. Freedom 1: The freedom to study how the program works and change it so it does what you want. Access to the source code is a necessary condition for this [16]. Freedom 2: The freedom to redistribute copies to help others [16]. Freedom 3: The freedom to distribute copies of your modified versions to others. This allows the entire community to benefit from the modifications. Access to the source code is a necessary condition for this [16]. A program being considered free software does not mean it cannot be commercialized. If software were published with a license that restricted these freedoms, it would no longer be considered free by the Free Software Foundation. Any user, whether individual or corporate (such as a company), can obtain copies of free software, and regardless of how they do so (for free or for a fee), they must always have the freedom to copy, modify, and even sell copies of the software. Despite this philosophy, the message of the free software movement, seen as radical by many software companies, led these companies to reject it because their main goal was not to provide a body of knowledge to the community but to make money. This led, in 1997, to a group of movement leaders, including computer scientists and writers Eric S. Raymond and Bruce Perens, coming together to reverse the negative perception that many people and institutions had of free software. They concluded that it was necessary to create a foundation distinct from the FSF that promoted free software with a more practical approach. Thus, in 1998, the Open Source Initiative (OSI) was born, advocating for 10 criteria that a license must meet to be considered open source. Copyleft Software The numerous advances observed in the last centuries in various fields of science and arts led society to create tools to protect creators and their works. Thus, the concept of copyright ¬© emerged in the Anglo-Scottish Union in the 18th century, a term that today indicates who holds the rights to exploit a work, who has property rights over it, and therefore can benefit from its reproduction. Copyright (represented by the ¬© symbol) is not always held by the author, as they may transfer exploitation rights to others. In the 1980s, within the free software movement and associated with a General Public License created by Richard Stallman (the GNU GPL v1 of 1989), a term emerged: copyleft, a play on words around copyright (*) intended to defend the following principle: \"anyone who redistributes the software, with or without changes, must pass on the freedom to make further copies and changes\" [17]. From a legal standpoint, copyleft prevents individuals from taking advantage of open code usage and modification to create proprietary final software [18]. The opposite of \"right\" is \"left.\" In contrast to advocates of proprietary software who want to use copyright to restrict users' freedom, free software advocates use copyleft to ensure it. To add copyleft to a license, copyright must first be included. (*) Copyleft is the opposite of copyright, which in English means 'author's right'. In this case, it uses the terms 'left' and 'right,' but also the participle of \"leave\" (left), translated as 'left.'"
  },
  "api/Alis.Builder.Core.Ecs.Component.Audio.AudioClipBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Audio.AudioClipBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioClipBuilder Namespace Alis.Builder.Core.Ecs.Component.Audio Assembly Alis.dll The audio clip builder class public class AudioClipBuilder : IBuild<AudioClip>, IFilePath<AudioClipBuilder, string>, IVolume<AudioClipBuilder, float>, IMute<AudioClipBuilder, bool> Inheritance object AudioClipBuilder Implements IBuild<AudioClip> IFilePath<AudioClipBuilder, string> IVolume<AudioClipBuilder, float> IMute<AudioClipBuilder, bool> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields audioClip The audio clip private readonly AudioClip audioClip Field Value AudioClip Methods Build() Builds this instance public AudioClip Build() Returns AudioClip The audio clip FilePath(string) Files the path using the specified value public AudioClipBuilder FilePath(string value) Parameters value string The value Returns AudioClipBuilder The audio clip builder Mute(bool) Mutes the value public AudioClipBuilder Mute(bool value) Parameters value bool The value Returns AudioClipBuilder The audio clip builder Volume(float) Volumes the value public AudioClipBuilder Volume(float value) Parameters value float The value Returns AudioClipBuilder The audio clip builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Audio.AudioRecorderBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Audio.AudioRecorderBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioRecorderBuilder Namespace Alis.Builder.Core.Ecs.Component.Audio Assembly Alis.dll The audio recorder builder class public class AudioRecorderBuilder : IBuild<AudioRecorder> Inheritance object AudioRecorderBuilder Implements IBuild<AudioRecorder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields audioRecorder The audio recorder private readonly AudioRecorder audioRecorder Field Value AudioRecorder Methods Build() Builds this instance public AudioRecorder Build() Returns AudioRecorder The audio recorder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Audio.AudioSourceBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Audio.AudioSourceBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioSourceBuilder Namespace Alis.Builder.Core.Ecs.Component.Audio Assembly Alis.dll The audio source builder class public class AudioSourceBuilder : IBuild<AudioSource>, IIsActive<AudioSourceBuilder, bool>, ISetAudioClip<AudioSourceBuilder, Func<AudioClipBuilder, AudioClip>>, IPlayOnAwake<AudioSourceBuilder, bool> Inheritance object AudioSourceBuilder Implements IBuild<AudioSource> IIsActive<AudioSourceBuilder, bool> ISetAudioClip<AudioSourceBuilder, Func<AudioClipBuilder, AudioClip>> IPlayOnAwake<AudioSourceBuilder, bool> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields audioSource Gets or sets the value of the audio source private readonly AudioSource audioSource Field Value AudioSource Methods Build() Builds this instance public AudioSource Build() Returns AudioSource The audio source IsActive(bool) Ises the active using the specified value public AudioSourceBuilder IsActive(bool value) Parameters value bool The value Returns AudioSourceBuilder The audio source builder PlayOnAwake(bool) Plays the on awake using the specified value public AudioSourceBuilder PlayOnAwake(bool value) Parameters value bool The value Returns AudioSourceBuilder The audio source builder SetAudioClip(Func<AudioClipBuilder, AudioClip>) Sets the audio clip using the specified value public AudioSourceBuilder SetAudioClip(Func<AudioClipBuilder, AudioClip> value) Parameters value Func<AudioClipBuilder, AudioClip> The value Returns AudioSourceBuilder The audio source builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Audio.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Audio Classes AudioClipBuilder The audio clip builder class AudioRecorderBuilder The audio recorder builder class AudioSourceBuilder The audio source builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.Body.RigidBodyBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Body.RigidBodyBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RigidBodyBuilder Namespace Alis.Builder.Core.Ecs.Component.Body Assembly Alis.dll The rigid body builder class public class RigidBodyBuilder : IBuild<RigidBody> Inheritance object RigidBodyBuilder Implements IBuild<RigidBody> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public RigidBody Build() Returns RigidBody The rigid body"
  },
  "api/Alis.Builder.Core.Ecs.Component.Body.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Body.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Body Classes RigidBodyBuilder The rigid body builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.Collider.BoxColliderBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Collider.BoxColliderBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BoxColliderBuilder Namespace Alis.Builder.Core.Ecs.Component.Collider Assembly Alis.dll The box collider builder class public class BoxColliderBuilder : IBuild<BoxCollider>, IIsActive<BoxColliderBuilder, bool>, IBodyType<BoxColliderBuilder, BodyType>, ISize<BoxColliderBuilder, float>, IMass<BoxColliderBuilder, float>, IAutoTilling<BoxColliderBuilder, bool>, IFixedRotation<BoxColliderBuilder, bool>, IFriction<BoxColliderBuilder, float>, IRotation<BoxColliderBuilder, float>, IRelativePosition<BoxColliderBuilder, float>, IRestitution<BoxColliderBuilder, float>, IIsTrigger<BoxColliderBuilder, bool>, ILinearVelocity<BoxColliderBuilder, float>, IAngularVelocity<BoxColliderBuilder, float> Inheritance object BoxColliderBuilder Implements IBuild<BoxCollider> IIsActive<BoxColliderBuilder, bool> IBodyType<BoxColliderBuilder, BodyType> ISize<BoxColliderBuilder, float> IMass<BoxColliderBuilder, float> IAutoTilling<BoxColliderBuilder, bool> IFixedRotation<BoxColliderBuilder, bool> IFriction<BoxColliderBuilder, float> IRotation<BoxColliderBuilder, float> IRelativePosition<BoxColliderBuilder, float> IRestitution<BoxColliderBuilder, float> IIsTrigger<BoxColliderBuilder, bool> ILinearVelocity<BoxColliderBuilder, float> IAngularVelocity<BoxColliderBuilder, float> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields boxCollider The box collider private readonly BoxCollider boxCollider Field Value BoxCollider Methods AngularVelocity(float) Angular the velocity using the specified value public BoxColliderBuilder AngularVelocity(float value) Parameters value float The value Returns BoxColliderBuilder The box collider builder AutoTilling(bool) Auto the tilling using the specified value public BoxColliderBuilder AutoTilling(bool value) Parameters value bool The value Returns BoxColliderBuilder The box collider builder BodyType(BodyType) Bodies the type using the specified value public BoxColliderBuilder BodyType(BodyType value) Parameters value BodyType The value Returns BoxColliderBuilder The box collider builder Build() Builds this instance public BoxCollider Build() Returns BoxCollider The box collider FixedRotation(bool) Fixed the rotation using the specified value public BoxColliderBuilder FixedRotation(bool value) Parameters value bool The value Returns BoxColliderBuilder The box collider builder Friction(float) Frictions the value public BoxColliderBuilder Friction(float value) Parameters value float The value Returns BoxColliderBuilder The box collider builder IgnoreGravity(bool) Ignores the gravity using the specified value public BoxColliderBuilder IgnoreGravity(bool value) Parameters value bool The value Returns BoxColliderBuilder The box collider builder IsActive(bool) Is the active using the specified value public BoxColliderBuilder IsActive(bool value) Parameters value bool The value Returns BoxColliderBuilder The box collider builder IsTrigger() Is the trigger public BoxColliderBuilder IsTrigger() Returns BoxColliderBuilder The box collider builder IsTrigger(bool) Is the trigger using the specified value public BoxColliderBuilder IsTrigger(bool value) Parameters value bool The value Returns BoxColliderBuilder The box collider builder LinearVelocity(float, float) Linear the velocity using the specified x public BoxColliderBuilder LinearVelocity(float x, float y) Parameters x float The y float The Returns BoxColliderBuilder The box collider builder Mass(float) Masses the value public BoxColliderBuilder Mass(float value) Parameters value float The value Returns BoxColliderBuilder The box collider builder RelativePosition(float, float) Relatives the position using the specified x public BoxColliderBuilder RelativePosition(float x, float y) Parameters x float The y float The Returns BoxColliderBuilder The box collider builder Restitution(float) Restitutions the value public BoxColliderBuilder Restitution(float value) Parameters value float The value Returns BoxColliderBuilder The box collider builder Rotation(float) Rotations the angle public BoxColliderBuilder Rotation(float angle) Parameters angle float The angle Returns BoxColliderBuilder The box collider builder Size(float, float) Sizes the x public BoxColliderBuilder Size(float x, float y) Parameters x float The y float The Returns BoxColliderBuilder The box collider builder"
  },
  "api/Alis.Builder.Core.Ecs.Component.Collider.CircleColliderBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Collider.CircleColliderBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CircleColliderBuilder Namespace Alis.Builder.Core.Ecs.Component.Collider Assembly Alis.dll The circle collider builder class public class CircleColliderBuilder : IBuild<CircleCollider> Inheritance object CircleColliderBuilder Implements IBuild<CircleCollider> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public CircleCollider Build() Returns CircleCollider The circle collider"
  },
  "api/Alis.Builder.Core.Ecs.Component.Collider.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Collider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Collider Classes BoxColliderBuilder The box collider builder class CircleColliderBuilder The circle collider builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.Light.AreaLightBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Light.AreaLightBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AreaLightBuilder Namespace Alis.Builder.Core.Ecs.Component.Light Assembly Alis.dll The area light builder class public class AreaLightBuilder : IBuild<AreaLight> Inheritance object AreaLightBuilder Implements IBuild<AreaLight> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public AreaLight Build() Returns AreaLight The area light"
  },
  "api/Alis.Builder.Core.Ecs.Component.Light.DirectionalLightBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Light.DirectionalLightBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DirectionalLightBuilder Namespace Alis.Builder.Core.Ecs.Component.Light Assembly Alis.dll The directional light builder class public class DirectionalLightBuilder : IBuild<DirectionalLightBuilder> Inheritance object DirectionalLightBuilder Implements IBuild<DirectionalLightBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public DirectionalLightBuilder Build() Returns DirectionalLightBuilder The directional light builder"
  },
  "api/Alis.Builder.Core.Ecs.Component.Light.PointLightBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Light.PointLightBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PointLightBuilder Namespace Alis.Builder.Core.Ecs.Component.Light Assembly Alis.dll The point light builder class public class PointLightBuilder : IBuild<PointLight> Inheritance object PointLightBuilder Implements IBuild<PointLight> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public PointLight Build() Returns PointLight The point light"
  },
  "api/Alis.Builder.Core.Ecs.Component.Light.SpotLightBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Light.SpotLightBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SpotLightBuilder Namespace Alis.Builder.Core.Ecs.Component.Light Assembly Alis.dll The spot light builder class public class SpotLightBuilder : IBuild<SpotLight> Inheritance object SpotLightBuilder Implements IBuild<SpotLight> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public SpotLight Build() Returns SpotLight The spot light"
  },
  "api/Alis.Builder.Core.Ecs.Component.Light.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Light.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Light Classes AreaLightBuilder The area light builder class DirectionalLightBuilder The directional light builder class PointLightBuilder The point light builder class SpotLightBuilder The spot light builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.AnimationBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.AnimationBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AnimationBuilder Namespace Alis.Builder.Core.Ecs.Component.Render Assembly Alis.dll The animation builder class public class AnimationBuilder : IBuild<Animation>, IName<AnimationBuilder, string>, ISpeed<AnimationBuilder, float>, IOrder<AnimationBuilder, int>, IAddFrame<AnimationBuilder, Func<FrameBuilder, Frame>> Inheritance object AnimationBuilder Implements IBuild<Animation> IName<AnimationBuilder, string> ISpeed<AnimationBuilder, float> IOrder<AnimationBuilder, int> IAddFrame<AnimationBuilder, Func<FrameBuilder, Frame>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields animation The animation private readonly Animation animation Field Value Animation Methods AddFrame(Func<FrameBuilder, Frame>) Adds the frame using the specified value public AnimationBuilder AddFrame(Func<FrameBuilder, Frame> value) Parameters value Func<FrameBuilder, Frame> The value Returns AnimationBuilder The animation builder Build() Builds this instance public Animation Build() Returns Animation The animation Name(string) Names the value public AnimationBuilder Name(string value) Parameters value string The value Returns AnimationBuilder The animation builder Order(int) Orders the value public AnimationBuilder Order(int value) Parameters value int The value Returns AnimationBuilder The animation builder Speed(float) Speeds the value public AnimationBuilder Speed(float value) Parameters value float The value Returns AnimationBuilder The animation builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.AnimatorBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.AnimatorBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AnimatorBuilder Namespace Alis.Builder.Core.Ecs.Component.Render Assembly Alis.dll The animator builder class public class AnimatorBuilder : IBuild<Animator>, IAddAnimation<AnimatorBuilder, Func<AnimationBuilder, Animation>> Inheritance object AnimatorBuilder Implements IBuild<Animator> IAddAnimation<AnimatorBuilder, Func<AnimationBuilder, Animation>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields animator The animator private readonly Animator animator Field Value Animator Methods AddAnimation(Func<AnimationBuilder, Animation>) Adds the animation using the specified value public AnimatorBuilder AddAnimation(Func<AnimationBuilder, Animation> value) Parameters value Func<AnimationBuilder, Animation> The value Returns AnimatorBuilder The animator builder Build() Builds this instance public Animator Build() Returns Animator The animator"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.CameraBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.CameraBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CameraBuilder Namespace Alis.Builder.Core.Ecs.Component.Render Assembly Alis.dll The camera builder class public class CameraBuilder : IBuild<Camera>, IResolution<CameraBuilder, int, int>, IBackgroundColor<CameraBuilder, Color> Inheritance object CameraBuilder Implements IBuild<Camera> IResolution<CameraBuilder, int, int> IBackgroundColor<CameraBuilder, Color> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields camera The camera private readonly Camera camera Field Value Camera Methods BackgroundColor(Color) Backgrounds the color using the specified value public CameraBuilder BackgroundColor(Color value) Parameters value Color The value Returns CameraBuilder The camera builder Build() Builds this instance public Camera Build() Returns Camera The camera Resolution(int, int) Resolutions the x public CameraBuilder Resolution(int x, int y) Parameters x int The y int The Returns CameraBuilder The camera builder"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.FrameBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.FrameBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FrameBuilder Namespace Alis.Builder.Core.Ecs.Component.Render Assembly Alis.dll The frame builder class public class FrameBuilder : IBuild<Frame>, IFilePath<FrameBuilder, string> Inheritance object FrameBuilder Implements IBuild<Frame> IFilePath<FrameBuilder, string> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields frame The frame private readonly Frame frame Field Value Frame Methods Build() Builds this instance public Frame Build() Returns Frame The frame FilePath(string) Files the path using the specified value public FrameBuilder FilePath(string value) Parameters value string The value Returns FrameBuilder The frame builder"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.SpriteBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.SpriteBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SpriteBuilder Namespace Alis.Builder.Core.Ecs.Component.Render Assembly Alis.dll The sprite builder class public class SpriteBuilder : IBuild<Sprite>, IDepth<SpriteBuilder, int>, ISetTexture<SpriteBuilder, string> Inheritance object SpriteBuilder Implements IBuild<Sprite> IDepth<SpriteBuilder, int> ISetTexture<SpriteBuilder, string> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields sprite The sprite private readonly Sprite sprite Field Value Sprite Methods Build() Builds this instance public Sprite Build() Returns Sprite The sprite Depth(int) Depths the value public SpriteBuilder Depth(int value) Parameters value int The value Returns SpriteBuilder The sprite builder SetTexture(string) Textures the value public SpriteBuilder SetTexture(string value) Parameters value string The value Returns SpriteBuilder The sprite builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Render.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Render.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Render Classes AnimationBuilder The animation builder class AnimatorBuilder The animator builder class CameraBuilder The camera builder class FrameBuilder The frame builder class SpriteBuilder The sprite builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.Ui.CanvasBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Ui.CanvasBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CanvasBuilder Namespace Alis.Builder.Core.Ecs.Component.Ui Assembly Alis.dll The canvas builder class public class CanvasBuilder : IBuild<Canvas> Inheritance object CanvasBuilder Implements IBuild<Canvas> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields canvas The canvas private readonly Canvas canvas Field Value Canvas Methods Build() Builds this instance public Canvas Build() Returns Canvas The canvas See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Component.Ui.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.Ui.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component.Ui Classes CanvasBuilder The canvas builder class"
  },
  "api/Alis.Builder.Core.Ecs.Component.html": {
    "href": "api/Alis.Builder.Core.Ecs.Component.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Component Namespaces Alis.Builder.Core.Ecs.Component.Audio Alis.Builder.Core.Ecs.Component.Body Alis.Builder.Core.Ecs.Component.Collider Alis.Builder.Core.Ecs.Component.Light Alis.Builder.Core.Ecs.Component.Render Alis.Builder.Core.Ecs.Component.Ui"
  },
  "api/Alis.Builder.Core.Ecs.Entity.GameObject.GameObjectBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.GameObject.GameObjectBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GameObjectBuilder Namespace Alis.Builder.Core.Ecs.Entity.GameObject Assembly Alis.dll The game object builder class public class GameObjectBuilder : IBuild<GameObject>, IName<GameObjectBuilder, string>, IIsStatic<GameObjectBuilder, bool>, IAddComponent<GameObjectBuilder, AComponent>, ITransform<GameObjectBuilder, Func<TransformBuilder, Transform>>, IWithTag<GameObjectBuilder, string> Inheritance object GameObjectBuilder Implements IBuild<GameObject> IName<GameObjectBuilder, string> IIsStatic<GameObjectBuilder, bool> IAddComponent<GameObjectBuilder, AComponent> ITransform<GameObjectBuilder, Func<TransformBuilder, Transform>> IWithTag<GameObjectBuilder, string> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields gameObject Gets or sets the value of the game object private readonly GameObject gameObject Field Value GameObject Methods AddComponent<T>(Func<T, AComponent>) Adds the component using the specified value public GameObjectBuilder AddComponent<T>(Func<T, AComponent> value) where T : AComponent Parameters value Func<T, AComponent> The value Returns GameObjectBuilder The game object builder Type Parameters T The AddComponent<T>(T) Adds the component using the specified value public GameObjectBuilder AddComponent<T>(T value) where T : AComponent Parameters value T The value Returns GameObjectBuilder The game object builder Type Parameters T The Build() Builds this instance public GameObject Build() Returns GameObject The game object IsStatic() Ises the static public GameObjectBuilder IsStatic() Returns GameObjectBuilder The game object builder IsStatic(bool) Ises the static using the specified value public GameObjectBuilder IsStatic(bool value) Parameters value bool The value Returns GameObjectBuilder The game object builder Name(string) Names the value public GameObjectBuilder Name(string value) Parameters value string The value Returns GameObjectBuilder The game object builder Transform(Func<TransformBuilder, Transform>) Transforms the value public GameObjectBuilder Transform(Func<TransformBuilder, Transform> value) Parameters value Func<TransformBuilder, Transform> The value Returns GameObjectBuilder The game object builder WithTag(string) Adds the tag using the specified value public GameObjectBuilder WithTag(string value) Parameters value string The value Returns GameObjectBuilder The game object builder"
  },
  "api/Alis.Builder.Core.Ecs.Entity.GameObject.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.GameObject.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Entity.GameObject Classes GameObjectBuilder The game object builder class"
  },
  "api/Alis.Builder.Core.Ecs.Entity.Scene.SceneBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.Scene.SceneBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SceneBuilder Namespace Alis.Builder.Core.Ecs.Entity.Scene Assembly Alis.dll The scene builder class public class SceneBuilder : IBuild<Scene>, IName<SceneBuilder, string>, IAdd<SceneBuilder, Func<GameObjectBuilder, GameObject>> Inheritance object SceneBuilder Implements IBuild<Scene> IName<SceneBuilder, string> IAdd<SceneBuilder, Func<GameObjectBuilder, GameObject>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Scene Gets the value of the scene private Scene Scene { get; } Property Value Scene Methods Add<T>(Func<GameObjectBuilder, GameObject>) Adds the value public SceneBuilder Add<T>(Func<GameObjectBuilder, GameObject> value) Parameters value Func<GameObjectBuilder, GameObject> The value Returns SceneBuilder The scene builder Type Parameters T The Build() Builds this instance public Scene Build() Returns Scene The scene Name(string) Names the value public SceneBuilder Name(string value) Parameters value string The value Returns SceneBuilder The scene builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Entity.Scene.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Entity.Scene Classes SceneBuilder The scene builder class"
  },
  "api/Alis.Builder.Core.Ecs.Entity.Transform.TransformBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.Transform.TransformBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TransformBuilder Namespace Alis.Builder.Core.Ecs.Entity.Transform Assembly Alis.dll The transform builder class public class TransformBuilder : IBuild<Transform>, IPosition2D<TransformBuilder, float>, IRotation<TransformBuilder, float>, IScale2D<TransformBuilder, float> Inheritance object TransformBuilder Implements IBuild<Transform> IPosition2D<TransformBuilder, float> IRotation<TransformBuilder, float> IScale2D<TransformBuilder, float> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields transform The transform private Transform transform Field Value Transform Methods Build() Builds this instance public Transform Build() Returns Transform The transform Position(float, float) Positions the x public TransformBuilder Position(float x, float y) Parameters x float The y float The Returns TransformBuilder The transform builder Position(Vector2) Positions the vector public TransformBuilder Position(Vector2 vector) Parameters vector Vector2 The vector Returns TransformBuilder The transform builder Rotation(float) Rotations the angle public TransformBuilder Rotation(float angle) Parameters angle float The angle Returns TransformBuilder The transform builder Scale(float, float) Scales the x public TransformBuilder Scale(float x, float y) Parameters x float The y float The Returns TransformBuilder The transform builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.Entity.Transform.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.Transform.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Entity.Transform Classes TransformBuilder The transform builder class"
  },
  "api/Alis.Builder.Core.Ecs.Entity.html": {
    "href": "api/Alis.Builder.Core.Ecs.Entity.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.Entity Namespaces Alis.Builder.Core.Ecs.Entity.GameObject Alis.Builder.Core.Ecs.Entity.Scene Alis.Builder.Core.Ecs.Entity.Transform"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Audio.AudioManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Audio.AudioManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Audio Assembly Alis.dll The scene manager builder class public class AudioManagerBuilder : IBuild<AudioManager> Inheritance object AudioManagerBuilder Implements IBuild<AudioManager> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public AudioManager Build() Returns AudioManager The audio manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Audio.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Audio Classes AudioManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Graphic.GraphicManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Graphic.GraphicManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GraphicManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Graphic Assembly Alis.dll The scene manager builder class public class GraphicManagerBuilder : IBuild<GraphicManager> Inheritance object GraphicManagerBuilder Implements IBuild<GraphicManager> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public GraphicManager Build() Returns GraphicManager The graphic manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Graphic.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Graphic Classes GraphicManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Input.InputManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Input.InputManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class InputManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Input Assembly Alis.dll The scene manager builder class public class InputManagerBuilder : IBuild<InputManager> Inheritance object InputManagerBuilder Implements IBuild<InputManager> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public InputManager Build() Returns InputManager The input manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Input.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Input.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Input Classes InputManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Network.NetworkManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Network.NetworkManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NetworkManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Network Assembly Alis.dll The scene manager builder class public class NetworkManagerBuilder : IBuild<NetworkManager> Inheritance object NetworkManagerBuilder Implements IBuild<NetworkManager> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public NetworkManager Build() Returns NetworkManager The network manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Network.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Network.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Network Classes NetworkManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Physic.PhysicManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Physic.PhysicManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PhysicManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Physic Assembly Alis.dll The scene manager builder class public class PhysicManagerBuilder : IBuild<PhysicManager> Inheritance object PhysicManagerBuilder Implements IBuild<PhysicManager> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Build() Builds this instance public PhysicManager Build() Returns PhysicManager The physic manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Physic.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Physic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Physic Classes PhysicManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Scene.SceneManagerBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Scene.SceneManagerBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SceneManagerBuilder Namespace Alis.Builder.Core.Ecs.System.Manager.Scene Assembly Alis.dll The scene manager builder class public class SceneManagerBuilder : IBuild<SceneManager>, IAdd<SceneManagerBuilder, Func<SceneBuilder, Scene>> Inheritance object SceneManagerBuilder Implements IBuild<SceneManager> IAdd<SceneManagerBuilder, Func<SceneBuilder, Scene>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields sceneManager Gets the value of the scene manager private readonly SceneManager sceneManager Field Value SceneManager Methods Add<T>(Func<SceneBuilder, Scene>) Adds the value public SceneManagerBuilder Add<T>(Func<SceneBuilder, Scene> value) Parameters value Func<SceneBuilder, Scene> The value Returns SceneManagerBuilder The scene builder Type Parameters T The Build() Builds this instance public SceneManager Build() Returns SceneManager The scene manager"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.Scene.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager.Scene Classes SceneManagerBuilder The scene manager builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Manager.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Manager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Manager Namespaces Alis.Builder.Core.Ecs.System.Manager.Audio Alis.Builder.Core.Ecs.System.Manager.Graphic Alis.Builder.Core.Ecs.System.Manager.Input Alis.Builder.Core.Ecs.System.Manager.Network Alis.Builder.Core.Ecs.System.Manager.Physic Alis.Builder.Core.Ecs.System.Manager.Scene"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Audio.AudioSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Audio.AudioSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Audio Assembly Alis.dll The audio setting builder class public class AudioSettingBuilder : IBuild<AudioSetting> Inheritance object AudioSettingBuilder Implements IBuild<AudioSetting> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields audioSetting The audio setting private readonly AudioSetting audioSetting Field Value AudioSetting Methods Build() Builds this instance public AudioSetting Build() Returns AudioSetting The audio setting"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Audio.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Audio Classes AudioSettingBuilder The audio setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.General.GeneralSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.General.GeneralSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GeneralSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.General Assembly Alis.dll The general setting builder class public class GeneralSettingBuilder : IBuild<GeneralSetting>, IName<GeneralSettingBuilder, string>, IVersion<GeneralSettingBuilder, string>, IDebug<GeneralSettingBuilder, bool>, ILicense<GeneralSettingBuilder, string>, IAuthor<GeneralSettingBuilder, string>, IDescription<GeneralSettingBuilder, string>, IIcon<GeneralSettingBuilder, string> Inheritance object GeneralSettingBuilder Implements IBuild<GeneralSetting> IName<GeneralSettingBuilder, string> IVersion<GeneralSettingBuilder, string> IDebug<GeneralSettingBuilder, bool> ILicense<GeneralSettingBuilder, string> IAuthor<GeneralSettingBuilder, string> IDescription<GeneralSettingBuilder, string> IIcon<GeneralSettingBuilder, string> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields generalSetting The general setting private readonly GeneralSetting generalSetting Field Value GeneralSetting Methods Author(string) Authors the value public GeneralSettingBuilder Author(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder Build() Builds this instance public GeneralSetting Build() Returns GeneralSetting The general setting Debug(bool) Debugs the value public GeneralSettingBuilder Debug(bool value) Parameters value bool The value Returns GeneralSettingBuilder The general setting builder Description(string) Descriptions the value public GeneralSettingBuilder Description(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder Icon(string) Icons the value public GeneralSettingBuilder Icon(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder License(string) Licences the value public GeneralSettingBuilder License(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder Name(string) Names the value public GeneralSettingBuilder Name(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder Version(string) Versions the value public GeneralSettingBuilder Version(string value) Parameters value string The value Returns GeneralSettingBuilder The general setting builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.General.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.General.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.General Classes GeneralSettingBuilder The general setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Graphic.GraphicSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Graphic.GraphicSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GraphicSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Graphic Assembly Alis.dll The graphic setting builder class public class GraphicSettingBuilder : IBuild<GraphicSetting>, IWindow<GraphicSettingBuilder, Func<WindowBuilder, Window>> Inheritance object GraphicSettingBuilder Implements IBuild<GraphicSetting> IWindow<GraphicSettingBuilder, Func<WindowBuilder, Window>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields graphicSetting The graphic setting private readonly GraphicSetting graphicSetting Field Value GraphicSetting Methods Build() Builds this instance public GraphicSetting Build() Returns GraphicSetting The graphic setting FrameRate(double) Frames the rate using the specified value public GraphicSettingBuilder FrameRate(double value) Parameters value double The value Returns GraphicSettingBuilder The graphic setting builder Target(string) Targets the value public GraphicSettingBuilder Target(string value) Parameters value string The value Returns GraphicSettingBuilder The graphic setting builder Window(Func<WindowBuilder, Window>) Windows the value public GraphicSettingBuilder Window(Func<WindowBuilder, Window> value) Parameters value Func<WindowBuilder, Window> The value Returns GraphicSettingBuilder The graphic setting builder"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Graphic.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Graphic Classes GraphicSettingBuilder The graphic setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Input.InputSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Input.InputSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class InputSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Input Assembly Alis.dll The audio setting builder class public class InputSettingBuilder : IBuild<InputSetting> Inheritance object InputSettingBuilder Implements IBuild<InputSetting> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields inputSetting The audio setting private readonly InputSetting inputSetting Field Value InputSetting Methods Build() Builds this instance public InputSetting Build() Returns InputSetting The audio setting"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Input.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Input.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Input Classes InputSettingBuilder The audio setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Network.NetworkSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Network.NetworkSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NetworkSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Network Assembly Alis.dll The audio setting builder class public class NetworkSettingBuilder : IBuild<NetworkSetting> Inheritance object NetworkSettingBuilder Implements IBuild<NetworkSetting> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields networkSetting The audio setting private readonly NetworkSetting networkSetting Field Value NetworkSetting Methods Build() Builds this instance public NetworkSetting Build() Returns NetworkSetting The audio setting"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Network.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Network.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Network Classes NetworkSettingBuilder The audio setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Physic.PhysicSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Physic.PhysicSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PhysicSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Physic Assembly Alis.dll The physic setting builder class public class PhysicSettingBuilder : IBuild<PhysicSetting>, IGravity<PhysicSettingBuilder, float>, IDebug<PhysicSettingBuilder, bool>, IDebugColor<PhysicSettingBuilder, Color> Inheritance object PhysicSettingBuilder Implements IBuild<PhysicSetting> IGravity<PhysicSettingBuilder, float> IDebug<PhysicSettingBuilder, bool> IDebugColor<PhysicSettingBuilder, Color> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields physicSetting The physic setting private readonly PhysicSetting physicSetting Field Value PhysicSetting Methods Build() Builds this instance public PhysicSetting Build() Returns PhysicSetting The physic setting Debug(bool) Debugs the value public PhysicSettingBuilder Debug(bool value) Parameters value bool The value Returns PhysicSettingBuilder The physic setting builder DebugColor(Color) Debugs the color using the specified value public PhysicSettingBuilder DebugColor(Color value) Parameters value Color The value Returns PhysicSettingBuilder The physic setting builder Gravity(float, float) Gravities the x public PhysicSettingBuilder Gravity(float x, float y) Parameters x float The y float The Returns PhysicSettingBuilder The physic setting builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Physic.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Physic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Physic Classes PhysicSettingBuilder The physic setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Scene.SceneSettingBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Scene.SceneSettingBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SceneSettingBuilder Namespace Alis.Builder.Core.Ecs.System.Setting.Scene Assembly Alis.dll The audio setting builder class public class SceneSettingBuilder : IBuild<SceneSetting> Inheritance object SceneSettingBuilder Implements IBuild<SceneSetting> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields sceneSetting The audio setting private readonly SceneSetting sceneSetting Field Value SceneSetting Methods Build() Builds this instance public SceneSetting Build() Returns SceneSetting The audio setting"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.Scene.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting.Scene Classes SceneSettingBuilder The audio setting builder class"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.SettingsBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.SettingsBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SettingsBuilder Namespace Alis.Builder.Core.Ecs.System.Setting Assembly Alis.dll Setting builder public class SettingsBuilder : IBuild<Settings>, IAudio<SettingsBuilder, Func<AudioSettingBuilder, AudioSetting>>, IGeneral<SettingsBuilder, Func<GeneralSettingBuilder, GeneralSetting>>, IGraphic<SettingsBuilder, Func<GraphicSettingBuilder, GraphicSetting>>, IInput<SettingsBuilder, Func<InputSettingBuilder, InputSetting>>, INetwork<SettingsBuilder, Func<NetworkSettingBuilder, NetworkSetting>>, IPhysic<SettingsBuilder, Func<PhysicSettingBuilder, PhysicSetting>>, IScene<SettingsBuilder, Func<SceneSettingBuilder, SceneSetting>> Inheritance object SettingsBuilder Implements IBuild<Settings> IAudio<SettingsBuilder, Func<AudioSettingBuilder, AudioSetting>> IGeneral<SettingsBuilder, Func<GeneralSettingBuilder, GeneralSetting>> IGraphic<SettingsBuilder, Func<GraphicSettingBuilder, GraphicSetting>> IInput<SettingsBuilder, Func<InputSettingBuilder, InputSetting>> INetwork<SettingsBuilder, Func<NetworkSettingBuilder, NetworkSetting>> IPhysic<SettingsBuilder, Func<PhysicSettingBuilder, PhysicSetting>> IScene<SettingsBuilder, Func<SceneSettingBuilder, SceneSetting>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields settingBase The setting base private readonly Settings settingBase Field Value Settings Methods Audio(Func<AudioSettingBuilder, AudioSetting>) Audio the value public SettingsBuilder Audio(Func<AudioSettingBuilder, AudioSetting> value) Parameters value Func<AudioSettingBuilder, AudioSetting> The value Returns SettingsBuilder The settings builder Build() Build setting public Settings Build() Returns Settings General(Func<GeneralSettingBuilder, GeneralSetting>) Generals the value public SettingsBuilder General(Func<GeneralSettingBuilder, GeneralSetting> value) Parameters value Func<GeneralSettingBuilder, GeneralSetting> The value Returns SettingsBuilder The settings builder Graphic(Func<GraphicSettingBuilder, GraphicSetting>) Graphics the value public SettingsBuilder Graphic(Func<GraphicSettingBuilder, GraphicSetting> value) Parameters value Func<GraphicSettingBuilder, GraphicSetting> The value Returns SettingsBuilder The settings builder Input(Func<InputSettingBuilder, InputSetting>) Inputs the value public SettingsBuilder Input(Func<InputSettingBuilder, InputSetting> value) Parameters value Func<InputSettingBuilder, InputSetting> The value Returns SettingsBuilder The settings builder Network(Func<NetworkSettingBuilder, NetworkSetting>) Networks the value public SettingsBuilder Network(Func<NetworkSettingBuilder, NetworkSetting> value) Parameters value Func<NetworkSettingBuilder, NetworkSetting> The value Returns SettingsBuilder The settings builder Physic(Func<PhysicSettingBuilder, PhysicSetting>) Physics the value public SettingsBuilder Physic(Func<PhysicSettingBuilder, PhysicSetting> value) Parameters value Func<PhysicSettingBuilder, PhysicSetting> The value Returns SettingsBuilder The settings builder Scene(Func<SceneSettingBuilder, SceneSetting>) Scenes the value public SettingsBuilder Scene(Func<SceneSettingBuilder, SceneSetting> value) Parameters value Func<SceneSettingBuilder, SceneSetting> The value Returns SettingsBuilder The settings builder"
  },
  "api/Alis.Builder.Core.Ecs.System.Setting.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.Setting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System.Setting Namespaces Alis.Builder.Core.Ecs.System.Setting.Audio Alis.Builder.Core.Ecs.System.Setting.General Alis.Builder.Core.Ecs.System.Setting.Graphic Alis.Builder.Core.Ecs.System.Setting.Input Alis.Builder.Core.Ecs.System.Setting.Network Alis.Builder.Core.Ecs.System.Setting.Physic Alis.Builder.Core.Ecs.System.Setting.Scene Classes SettingsBuilder Setting builder"
  },
  "api/Alis.Builder.Core.Ecs.System.VideoGameBuilder.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.VideoGameBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class VideoGameBuilder Namespace Alis.Builder.Core.Ecs.System Assembly Alis.dll The video game builder class public class VideoGameBuilder : IBuild<VideoGame>, IWorld<VideoGameBuilder, Func<SceneManagerBuilder, SceneManager>>, ISettings<VideoGameBuilder, Func<SettingsBuilder, Settings>> Inheritance object VideoGameBuilder Implements IBuild<VideoGame> IWorld<VideoGameBuilder, Func<SceneManagerBuilder, SceneManager>> ISettings<VideoGameBuilder, Func<SettingsBuilder, Settings>> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields videoGame Gets or sets the video game. private readonly VideoGame videoGame Field Value VideoGame Methods Build() Builds this instance. public VideoGame Build() Returns VideoGame BuildPreview() Builds the preview public VideoGame BuildPreview() Returns VideoGame The video game Settings(Func<SettingsBuilder, Settings>) Setting the value public VideoGameBuilder Settings(Func<SettingsBuilder, Settings> value) Parameters value Func<SettingsBuilder, Settings> The value Returns VideoGameBuilder The video game builder World(Func<SceneManagerBuilder, SceneManager>) Worlds the value public VideoGameBuilder World(Func<SceneManagerBuilder, SceneManager> value) Parameters value Func<SceneManagerBuilder, SceneManager> The value Returns VideoGameBuilder The video game builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Ecs.System.html": {
    "href": "api/Alis.Builder.Core.Ecs.System.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs.System Namespaces Alis.Builder.Core.Ecs.System.Manager Alis.Builder.Core.Ecs.System.Setting Classes VideoGameBuilder The video game builder class"
  },
  "api/Alis.Builder.Core.Ecs.html": {
    "href": "api/Alis.Builder.Core.Ecs.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Ecs Namespaces Alis.Builder.Core.Ecs.Component Alis.Builder.Core.Ecs.Entity Alis.Builder.Core.Ecs.System"
  },
  "api/Alis.Builder.Core.Graphic.WindowBuilder.html": {
    "href": "api/Alis.Builder.Core.Graphic.WindowBuilder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WindowBuilder Namespace Alis.Builder.Core.Graphic Assembly Alis.dll The window builder class public class WindowBuilder : IBuild<Window>, IBackground<WindowBuilder, Color>, IResolution<WindowBuilder, float, float>, IIsResizable<WindowBuilder, bool> Inheritance object WindowBuilder Implements IBuild<Window> IBackground<WindowBuilder, Color> IResolution<WindowBuilder, float, float> IIsResizable<WindowBuilder, bool> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields window The window private readonly Window window Field Value Window Methods Background(Color) Backgrounds the value public WindowBuilder Background(Color value) Parameters value Color The value Returns WindowBuilder The window builder Build() Builds this instance public Window Build() Returns Window The window IsResizable() Ises the resizable public WindowBuilder IsResizable() Returns WindowBuilder The window builder IsResizable(bool) Ises the resizable using the specified value public WindowBuilder IsResizable(bool value) Parameters value bool The value Returns WindowBuilder The window builder Resolution(float, float) Resolutions the x public WindowBuilder Resolution(float x, float y) Parameters x float The y float The Returns WindowBuilder The window builder See Also IBuild<TOrigin>"
  },
  "api/Alis.Builder.Core.Graphic.html": {
    "href": "api/Alis.Builder.Core.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core.Graphic Classes WindowBuilder The window builder class"
  },
  "api/Alis.Builder.Core.html": {
    "href": "api/Alis.Builder.Core.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder.Core Namespaces Alis.Builder.Core.Ecs Alis.Builder.Core.Graphic"
  },
  "api/Alis.Builder.html": {
    "href": "api/Alis.Builder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Builder Namespaces Alis.Builder.Core"
  },
  "api/Alis.Core.Aspect.Data.Dll.DllType.html": {
    "href": "api/Alis.Core.Aspect.Data.Dll.DllType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum DllType Namespace Alis.Core.Aspect.Data.Dll Assembly Alis.dll The dll type enum public enum DllType Fields Exe = 0 The exe dll type Lib = 1 The lib dll type File = 2 The file dll type"
  },
  "api/Alis.Core.Aspect.Data.Dll.EmbeddedDllClass.html": {
    "href": "api/Alis.Core.Aspect.Data.Dll.EmbeddedDllClass.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class EmbeddedDllClass Namespace Alis.Core.Aspect.Data.Dll Assembly Alis.dll The embedded dll class public static class EmbeddedDllClass Inheritance object EmbeddedDllClass Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ExtractEmbeddedDlls(string, DllType, Dictionary<PlatformInfo, string>, Assembly) Extracts the embedded dlls using the specified dll name public static void ExtractEmbeddedDlls(string dllName, DllType dllType, Dictionary<PlatformInfo, string> dllBytes, Assembly assembly) Parameters dllName string The dll name dllType DllType dllBytes Dictionary<PlatformInfo, string> The dll bytes assembly Assembly The assembly ExtractEntry(string, ZipArchiveEntry) Extracts the entry using the specified file dir internal static void ExtractEntry(string fileDir, ZipArchiveEntry entry) Parameters fileDir string The file dir entry ZipArchiveEntry The entry ExtractFileFromEntry(string, ZipArchiveEntry) Extracts the file from entry using the specified canonical destination path internal static void ExtractFileFromEntry(string canonicalDestinationPath, ZipArchiveEntry entry) Parameters canonicalDestinationPath string The canonical destination path entry ZipArchiveEntry The entry ExtractZipFile(string, MemoryStream) Extracts the zip file using the specified file dir internal static void ExtractZipFile(string fileDir, MemoryStream zipData) Parameters fileDir string The file dir zipData MemoryStream The zip data GetCurrentPlatform() Gets the platform public static OSPlatform GetCurrentPlatform() Returns OSPlatform The os platform Exceptions PlatformNotSupportedException Unsupported platform. GetDllExtension(DllType) Gets the dll extension internal static string GetDllExtension(DllType dllType) Parameters dllType DllType Returns string The string Exceptions PlatformNotSupportedException Unsupported platform. GetExeExtension(OSPlatform) Gets the exe extension using the specified current platform internal static string GetExeExtension(OSPlatform currentPlatform) Parameters currentPlatform OSPlatform The current platform Returns string The string Exceptions PlatformNotSupportedException Unsupported platform. GetLibExtension(OSPlatform) Gets the lib extension using the specified current platform internal static string GetLibExtension(OSPlatform currentPlatform) Parameters currentPlatform OSPlatform The current platform Returns string The string Exceptions PlatformNotSupportedException Unsupported platform. IsAndroidSpecificConditionMet() Describes whether is android specific condition met internal static bool IsAndroidSpecificConditionMet() Returns bool The bool IsRunningOnAndroid() Describes whether is running on android internal static bool IsRunningOnAndroid() Returns bool The bool IsRunningOniOS() Describes whether is running oni os internal static bool IsRunningOniOS() Returns bool The bool IsValidEntry(ZipArchiveEntry) Describes whether is valid entry internal static bool IsValidEntry(ZipArchiveEntry entry) Parameters entry ZipArchiveEntry The entry Returns bool The bool IsiOsSpecificConditionMet() Describes whether isi os specific condition met internal static bool IsiOsSpecificConditionMet() Returns bool The bool LoadResource(string, Assembly) Loads the resource using the specified resource name internal static MemoryStream LoadResource(string resourceName, Assembly assembly) Parameters resourceName string The resource name assembly Assembly The assembly Returns MemoryStream The memory stream SetFileReadPermission(string) Sets the file read permission using the specified file path internal static void SetFileReadPermission(string filePath) Parameters filePath string The file path"
  },
  "api/Alis.Core.Aspect.Data.Dll.PlatformInfo.html": {
    "href": "api/Alis.Core.Aspect.Data.Dll.PlatformInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PlatformInfo Namespace Alis.Core.Aspect.Data.Dll Assembly Alis.dll The platform info class public class PlatformInfo Inheritance object PlatformInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PlatformInfo(OSPlatform, Architecture) Initializes a new instance of the Alis.Core.Aspect.Data.Dll.PlatformInfo class public PlatformInfo(OSPlatform platform, Architecture arch) Parameters platform OSPlatform The platform arch Architecture The arch Properties Arch Gets the value of the arch public Architecture Arch { get; } Property Value Architecture Platform Gets the value of the platform public OSPlatform Platform { get; } Property Value OSPlatform Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int"
  },
  "api/Alis.Core.Aspect.Data.Dll.html": {
    "href": "api/Alis.Core.Aspect.Data.Dll.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Data.Dll Classes EmbeddedDllClass The embedded dll class PlatformInfo The platform info class Enums DllType The dll type enum"
  },
  "api/Alis.Core.Aspect.Data.Json.CollectionTObject-1.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.CollectionTObject-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CollectionTObject<T> Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The collection object class internal sealed class CollectionTObject<T> : ListObject Type Parameters T Inheritance object ListObject CollectionTObject<T> Inherited Members ListObject.List ListObject.Context ListObject.Clear() ListObject.Add(object, JsonOptions) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Coll The coll internal ICollection<T> Coll Field Value ICollection<T> Properties List Gets or sets the value of the list public override object List { get; set; } Property Value object Methods Add(object, JsonOptions) Adds the value public override void Add(object value, JsonOptions options = null) Parameters value object The value options JsonOptions The options Clear() Clears this instance public override void Clear()"
  },
  "api/Alis.Core.Aspect.Data.Json.Conversions.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.Conversions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Conversions Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The conversions class internal static class Conversions Inheritance object Conversions Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields EnumSeparators The enum separators internal static readonly char[] EnumSeparators Field Value char[] Methods CanGetEnumNamesAndValues(Type, out string[], out Array) Describes whether can get enum names and values internal static bool CanGetEnumNamesAndValues(Type type, out string[] names, out Array values) Parameters type Type The type names string[] The names values Array The values Returns bool The bool CanParseTokens(string, Type, string[], Array, out object) Describes whether can parse tokens internal static bool CanParseTokens(string input, Type type, string[] names, Array values, out object value) Parameters input string The input type Type The type names string[] The names values Array The values value object The value Returns bool The bool ChangeType<T>(object, T, IFormatProvider) Changes the type using the specified input public static T ChangeType<T>(object input, T defaultValue = default, IFormatProvider provider = null) Parameters input object The input defaultValue T The default value provider IFormatProvider The provider Returns T The value Type Parameters T The ChangeType(object, Type, object, IFormatProvider) Changes the type using the specified input public static object ChangeType(object input, Type conversionType, object defaultValue = null, IFormatProvider provider = null) Parameters input object The input conversionType Type The conversion type defaultValue object The default value provider IFormatProvider The provider Returns object The value ConvertToEnum(Type, string) Converts the to enum using the specified type internal static object ConvertToEnum(Type type, string input) Parameters type Type The type input string The input Returns object The object ConvertToEnum(Type, object) Converts the to enum using the specified enum type internal static object ConvertToEnum(Type enumType, object value) Parameters enumType Type The enum type value object The value Returns object The object ConvertTokenValueToUlong(object) Converts the token value to ulong using the specified token value internal static ulong ConvertTokenValueToUlong(object tokenValue) Parameters tokenValue object The token value Returns ulong The ulong CreateInstance(Type) Creates the instance using the specified type internal static object CreateInstance(Type type) Parameters type Type The type Returns object The object EnumToObject(Type, object) Enums the to object using the specified enum type internal static object EnumToObject(Type enumType, object value) Parameters enumType Type The enum type value object The value Returns object The object EnumToUInt64(object) Enums the to u int 64 using the specified value internal static ulong EnumToUInt64(object value) Parameters value object The value Returns ulong The ulong Exceptions ArgumentNullException EnumTryParse(Type, object, out object) Describes whether enum try parse internal static bool EnumTryParse(Type type, object input, out object value) Parameters type Type The type input object The input value object The value Returns bool The bool FormatInput(object) Formats the input using the specified input internal static string FormatInput(object input) Parameters input object The input Returns string The string GetConverter(Type) Gets the type converter for the specified type. internal static TypeConverter GetConverter(Type type) Parameters type Type The type to get the converter for. Returns TypeConverter The type converter for the specified type. IsArrayOrGenericList(Type, out Type) Describes whether is array or generic list internal static bool IsArrayOrGenericList(Type conversionType, out Type elementType) Parameters conversionType Type The conversion type elementType Type The element type Returns bool The bool IsBool(Type) Describes whether is bool internal static bool IsBool(Type conversionType) Parameters conversionType Type The conversion type Returns bool The bool IsConvertible(object, out IConvertible) Describes whether is convertible internal static bool IsConvertible(object input, out IConvertible convertible) Parameters input object The input convertible IConvertible The convertible Returns bool The bool IsCultureInfoOrFormatProvider(Type) Describes whether is culture info or format provider internal static bool IsCultureInfoOrFormatProvider(Type conversionType) Parameters conversionType Type The conversion type Returns bool The bool IsDateTimeType(Type) Describes whether is date time type internal static bool IsDateTimeType(Type conversionType) Parameters conversionType Type The conversion type Returns bool The bool IsGenericList(Type, out Type) Describes whether is generic list internal static bool IsGenericList(Type type, out Type elementType) Parameters type Type The type elementType Type The element type Returns bool The bool Exceptions ArgumentNullException IsHexadecimalAndCanBeParsed(string, Type, out object) Describes whether is hexadecimal and can be parsed internal static bool IsHexadecimalAndCanBeParsed(string input, Type type, out object value) Parameters input string The input type Type The type value object The value Returns bool The bool IsInputNegative(string) Describes whether is input negative internal static bool IsInputNegative(string input) Parameters input string The input Returns bool The bool IsInvalid(Type, object) Describes whether is invalid internal static bool IsInvalid(Type enumType, object value) Parameters enumType Type The enum type value object The value Returns bool The bool IsNullable(Type) Describes whether is nullable internal static bool IsNullable(Type type) Parameters type Type The type Returns bool The bool Exceptions ArgumentNullException IsNumericType(Type) Describes whether is numeric type internal static bool IsNumericType(Type conversionType) Parameters conversionType Type The conversion type Returns bool The bool IsReallyValueType(Type) Describes whether is really value type internal static bool IsReallyValueType(Type type) Parameters type Type The type Returns bool The bool Exceptions ArgumentNullException IsTokenNull(string) Describes whether is token null internal static bool IsTokenNull(string sanitizedToken) Parameters sanitizedToken string The sanitized token Returns bool The bool IsValid(DateTime) Describes whether is valid internal static bool IsValid(DateTime dt) Parameters dt DateTime The dt Returns bool The bool IsValidInput(Type, object) Describes whether is valid input internal static bool IsValidInput(Type type, object input) Parameters type Type The type input object The input Returns bool The bool MatchNegativeInput(string, object) Describes whether match negative input internal static bool MatchNegativeInput(string input, object valueI) Parameters input string The input valueI object The value Returns bool The bool MatchPositiveInput(string, object) Describes whether match positive input internal static bool MatchPositiveInput(string input, object valueI) Parameters input string The input valueI object The value Returns bool The bool ParseEnum(Type, string) Parses the enum using the specified enum type internal static object ParseEnum(Type enumType, string stringValue) Parameters enumType Type The enum type stringValue string The string value Returns object The object SanitizeToken(string) Sanitizes the token using the specified token internal static string SanitizeToken(string token) Parameters token string The token Returns string The string StartsWithDigitOrSign(string) Describes whether starts with digit or sign internal static bool StartsWithDigitOrSign(string input) Parameters input string The input Returns bool The bool ToEnum(string, Type) Returns the enum using the specified text internal static object ToEnum(string text, Type enumType) Parameters text string The text enumType Type The enum type Returns object The value Exceptions ArgumentNullException TryChangeBasedOnConversionType(object, Type, IFormatProvider, Type, out object) Describes whether try change based on conversion type internal static bool TryChangeBasedOnConversionType(object input, Type conversionType, IFormatProvider provider, Type inputType, out object value) Parameters input object The input conversionType Type The conversion type provider IFormatProvider The provider inputType Type The input type value object The value Returns bool The bool TryChangeBasedOnOtherTypes(object, Type, IFormatProvider, Type, out object) Describes whether try change based on other types internal static bool TryChangeBasedOnOtherTypes(object input, Type conversionType, IFormatProvider provider, Type inputType, out object value) Parameters input object The input conversionType Type The conversion type provider IFormatProvider The provider inputType Type The input type value object The value Returns bool The bool TryChangeFromEnum(Type, object, out object) Describes whether try change from enum internal static bool TryChangeFromEnum(Type conversionType, object input, out object value) Parameters conversionType Type The conversion type input object The input value object The value Returns bool The bool TryChangeToBool(object, IFormatProvider, out object) Describes whether try change to bool internal static bool TryChangeToBool(object input, IFormatProvider provider, out object value) Parameters input object The input provider IFormatProvider The provider value object The value Returns bool The bool TryChangeToCollection(object, Type, Type, out object) Describes whether try change to collection internal static bool TryChangeToCollection(object input, Type conversionType, Type elementType, out object value) Parameters input object The input conversionType Type The conversion type elementType Type The element type value object The value Returns bool The bool TryChangeToCultureInfo(object, out object) Describes whether try change to culture info internal static bool TryChangeToCultureInfo(object input, out object value) Parameters input object The input value object The value Returns bool The bool TryChangeToDateTime(object, Type, Type, out object) Describes whether try change to date time internal static bool TryChangeToDateTime(object input, Type conversionType, Type inputType, out object value) Parameters input object The input conversionType Type The conversion type inputType Type The input type value object The value Returns bool The bool TryChangeToEnum(Type, object, out object) Describes whether try change to enum internal static bool TryChangeToEnum(Type conversionType, object input, out object value) Parameters conversionType Type The conversion type input object The input value object The value Returns bool The bool TryChangeToGuid(object, IFormatProvider, out object) Describes whether try change to guid internal static bool TryChangeToGuid(object input, IFormatProvider provider, out object value) Parameters input object The input provider IFormatProvider The provider value object The value Returns bool The bool TryChangeToIntPtr(object, out object) Describes whether try change to int ptr internal static bool TryChangeToIntPtr(object input, out object value) Parameters input object The input value object The value Returns bool The bool TryChangeToNullable(object, Type, IFormatProvider, out object) Attempts to convert the input to a nullable type. internal static bool TryChangeToNullable(object input, Type conversionType, IFormatProvider provider, out object value) Parameters input object The input to convert. conversionType Type The type to convert to. provider IFormatProvider The format provider to use for conversion. value object The converted value. Returns bool True if the conversion was successful, otherwise false. TryChangeToNumeric(object, Type, out object) Describes whether try change to numeric internal static bool TryChangeToNumeric(object input, Type conversionType, out object value) Parameters input object The input conversionType Type The conversion type value object The value Returns bool The bool TryChangeToTimeSpan(object, IFormatProvider, out object) Describes whether try change to time span internal static bool TryChangeToTimeSpan(object input, IFormatProvider provider, out object value) Parameters input object The input provider IFormatProvider The provider value object The value Returns bool The bool TryChangeType<T>(object, out T) Describes whether try change type public static bool TryChangeType<T>(object input, out T value) Parameters input object The input value T The value Returns bool The bool Type Parameters T The TryChangeType<T>(object, IFormatProvider, out T) Describes whether try change type internal static bool TryChangeType<T>(object input, IFormatProvider provider, out T value) Parameters input object The input provider IFormatProvider The provider value T The value Returns bool The bool Type Parameters T The TryChangeType(object, Type, out object) Describes whether try change type public static bool TryChangeType(object input, Type conversionType, out object value) Parameters input object The input conversionType Type The conversion type value object The value Returns bool The bool TryChangeType(object, Type, IFormatProvider, out object) Describes whether try change type internal static bool TryChangeType(object input, Type conversionType, IFormatProvider provider, out object value) Parameters input object The input conversionType Type The conversion type provider IFormatProvider The provider value object The value Returns bool The bool Exceptions ArgumentNullException TryChangeTypeBasedOnInputType(object, Type, IFormatProvider, Type, out object) Describes whether try change type based on input type internal static bool TryChangeTypeBasedOnInputType(object input, Type conversionType, IFormatProvider provider, Type inputType, out object value) Parameters input object The input conversionType Type The conversion type provider IFormatProvider The provider inputType Type The input type value object The value Returns bool The bool TryChangeWithIConvertible(IConvertible, Type, IFormatProvider, out object) Describes whether try change with i convertible internal static bool TryChangeWithIConvertible(IConvertible input, Type conversionType, IFormatProvider provider, out object value) Parameters input IConvertible The input conversionType Type The conversion type provider IFormatProvider The provider value object The value Returns bool The bool TryConvert(object, Type, Type, out object) Tries to convert the input value to the target type. internal static bool TryConvert(object value, Type target, Type source, out object result) Parameters value object The value to convert. target Type The target type to convert to. source Type The source type of the value. result object The result of the conversion. Returns bool True if the conversion was successful, false otherwise. TryConvertToEnumAndAssignValue(Type, string, out object) Tries to convert the input to an enum and assign it to the value. internal static bool TryConvertToEnumAndAssignValue(Type type, string input, out object value) Parameters type Type The type to convert to. input string The input to convert. value object The output value. Returns bool True if the conversion was successful, false otherwise. TryConvertToUri(string, out object) Describes whether try convert to uri internal static bool TryConvertToUri(string inputString, out object result) Parameters inputString string The input string result object The result Returns bool The is uri created TryConvertTokenToEnumValue(Type, string[], Array, string, out object) Describes whether try convert token to enum value internal static bool TryConvertTokenToEnumValue(Type type, string[] names, Array values, string token, out object tokenValue) Parameters type Type The type names string[] The names values Array The values token string The token tokenValue object The token value Returns bool The bool TryGetEnumNamesAndValues(Type, out string[], out Array) Describes whether try get enum names and values internal static bool TryGetEnumNamesAndValues(Type type, out string[] names, out Array values) Parameters type Type The type names string[] The names values Array The values Returns bool The bool TryHandleDigitOrSignStart(Type, string, out object) Describes whether try handle digit or sign start internal static bool TryHandleDigitOrSignStart(Type type, string input, out object value) Parameters type Type The type input string The input value object The value Returns bool The bool TryMatchNames(string[], Array, string, out object) Describes whether try match names internal static bool TryMatchNames(string[] names, Array values, string input, out object value) Parameters names string[] The names values Array The values input string The input value object The value Returns bool The bool TryMatchValues(Array, string, out object) Describes whether try match values internal static bool TryMatchValues(Array values, string input, out object value) Parameters values Array The values input string The input value object The value Returns bool The bool TryParseHexadecimal(string, Type, out object) Describes whether try parse hexadecimal internal static bool TryParseHexadecimal(string input, Type type, out object value) Parameters input string The input type Type The type value object The value Returns bool The bool TryParseToken(string, Type, string[], Array, out object) Describes whether try parse token internal static bool TryParseToken(string token, Type type, string[] names, Array values, out object tokenValue) Parameters token string The token type Type The type names string[] The names values Array The values tokenValue object The token value Returns bool The bool TryParseTokenValues(string[], Type, string[], Array, out object) Describes whether try parse token values internal static bool TryParseTokenValues(string[] tokens, Type type, string[] names, Array values, out object value) Parameters tokens string[] The tokens type Type The type names string[] The names values Array The values value object The value Returns bool The bool TryParseTokens(string, Type, string[], Array, out object) Describes whether try parse tokens internal static bool TryParseTokens(string input, Type type, string[] names, Array values, out object value) Parameters input string The input type Type The type names string[] The names values Array The values value object The value Returns bool The bool TryStringToEnum(Type, string[], Array, string, out object) Tries to convert a string to an enum value. internal static bool TryStringToEnum(Type type, string[] names, Array values, string input, out object value) Parameters type Type The type of the enum. names string[] The names of the enum values. values Array The values of the enum. input string The input string to convert. value object The converted enum value if the conversion is successful, otherwise the default value of the enum type. Returns bool True if the conversion is successful, otherwise false."
  },
  "api/Alis.Core.Aspect.Data.Json.CustomListObject.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.CustomListObject.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CustomListObject Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The list object class internal sealed class CustomListObject : ListObject Inheritance object ListObject CustomListObject Inherited Members ListObject.List ListObject.Context ListObject.Clear() ListObject.Add(object, JsonOptions) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _list The list private IList _list Field Value IList Properties List Gets or sets the value of the list public override object List { get; set; } Property Value object Methods Add(object, JsonOptions) Adds the value public override void Add(object value, JsonOptions options = null) Parameters value object The value options JsonOptions The options Clear() Clears this instance public override void Clear() See Also ListObject"
  },
  "api/Alis.Core.Aspect.Data.Json.FieldInfoAccessor.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.FieldInfoAccessor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FieldInfoAccessor Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The field info accessor class internal sealed class FieldInfoAccessor : IMemberAccessor Inheritance object FieldInfoAccessor Implements IMemberAccessor Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors FieldInfoAccessor(FieldInfo) Initializes a new instance of the Alis.Core.Aspect.Data.Json.FieldInfoAccessor class public FieldInfoAccessor(FieldInfo fi) Parameters fi FieldInfo The fi Fields _fi The fi private readonly FieldInfo _fi Field Value FieldInfo Methods Get(object) Gets the component public object Get(object component) Parameters component object The component Returns object The object Set(object, object) Sets the component public void Set(object component, object value) Parameters component object The component value object The value See Also IMemberAccessor"
  },
  "api/Alis.Core.Aspect.Data.Json.IMemberAccessor.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.IMemberAccessor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IMemberAccessor Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines an interface for quick access to a type member. public interface IMemberAccessor Methods Get(object) Gets a component value. object Get(object component) Parameters component object The component. Returns object The value. Set(object, object) Sets a component's value. void Set(object component, object value) Parameters component object The component. value object The value to set."
  },
  "api/Alis.Core.Aspect.Data.Json.IOptionsHolder.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.IOptionsHolder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IOptionsHolder Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines an interface for setting or getting options. public interface IOptionsHolder Properties Options Gets or sets the options. JsonOptions Options { get; set; } Property Value JsonOptions"
  },
  "api/Alis.Core.Aspect.Data.Json.JAction-2.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JAction-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate JAction<T1, T2> Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The action internal delegate void JAction<in T1, in T2>(T1 arg1, T2 arg2) Parameters arg1 T1 arg2 T2 Type Parameters T1 T2"
  },
  "api/Alis.Core.Aspect.Data.Json.JFunc-2.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JFunc-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate JFunc<T, TResult> Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The func internal delegate TResult JFunc<in T, out TResult>(T arg) Parameters arg T Returns TResult Type Parameters T TResult"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonCallback.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate JsonCallback Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines a callback delegate to customize JSON serialization and deserialization. public delegate void JsonCallback(JsonEventArgs e) Parameters e JsonEventArgs"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonConstructorAttribute.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonConstructorAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonConstructorAttribute Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The json constructor attribute class [AttributeUsage(AttributeTargets.Constructor)] public class JsonConstructorAttribute : Attribute Inheritance object Attribute JsonConstructorAttribute Inherited Members Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() See Also Attribute"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonEventArgs.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonEventArgs.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonEventArgs Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Provides data for a JSON event. public sealed class JsonEventArgs : EventArgs Inheritance object EventArgs JsonEventArgs Inherited Members EventArgs.Empty object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors JsonEventArgs(TextWriter, object, IDictionary<object, object>, JsonOptions) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonEventArgs class. public JsonEventArgs(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer currently in use. value object The value on the stack. objectGraph IDictionary<object, object> The current serialization object graph. options JsonOptions The options currently in use. JsonEventArgs(TextWriter, object, IDictionary<object, object>, JsonOptions, string, object) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonEventArgs class. public JsonEventArgs(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options, string name, object component) Parameters writer TextWriter The writer currently in use. value object The value on the stack. objectGraph IDictionary<object, object> The current serialization object graph. options JsonOptions The options currently in use. name string The field or property name. component object The component holding the value. Properties Component Gets the component holding the value. May be null. public object Component { get; } Property Value object EventType Gets or sets the type of the event. public JsonEventType EventType { get; set; } Property Value JsonEventType First Gets or sets a value indicating whether the object being handled is first in the list. If the object is handled and written to the stream, this must be set to false after the stream is written. If the object is skipped, it must not be changed. public bool First { get; set; } Property Value bool Handled Gets or sets a value indicating whether this Alis.Core.Aspect.Data.Json.JsonEventArgs is handled. An handled object can be skipped, not written to the stream. If the object is written, First must be set to false, otherwise it must not be changed. public bool Handled { get; set; } Property Value bool Name Gets or sets the name on the stack. The Name can be a property or field name when serializing objects. May be null. public string Name { get; set; } Property Value string ObjectGraph Gets the current serialization object graph. public IDictionary<object, object> ObjectGraph { get; } Property Value IDictionary<object, object> Options Gets the options currently in use. public JsonOptions Options { get; } Property Value JsonOptions Value Gets or sets the value on the stack. public object Value { get; set; } Property Value object Writer Gets the writer currently in use. public TextWriter Writer { get; } Property Value TextWriter"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonEventType.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonEventType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum JsonEventType Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines a type of JSON event. public enum JsonEventType Fields Unspecified = 0 An unspecified type of event. WriteValue = 1 The write value event type. BeforeWriteObject = 2 The before write object event type. AfterWriteObject = 3 The after write object event type. WriteNamedValueObject = 4 The write named value object event type. CreateInstance = 5 The create instance event type. MapEntry = 6 The map entry event type. ApplyEntry = 7 The apply entry event type. GetListObject = 8 The get list object event type."
  },
  "api/Alis.Core.Aspect.Data.Json.JsonException.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonException Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The exception that is thrown when a JSON error occurs. [Serializable] public class JsonException : Exception, ISerializable Inheritance object Exception JsonException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors JsonException() Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonException class. public JsonException() JsonException(string) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonException class. public JsonException(string message) Parameters message string The message that describes the error. JsonException(string, Exception) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonException class. public JsonException(string message, Exception innerException) Parameters message string The error message that explains the reason for the exception. innerException Exception The exception that is the cause of the current exception, or a null reference ( Nothing in Visual Basic) if no inner exception is specified. JsonException(Exception) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonException class. public JsonException(Exception innerException) Parameters innerException Exception The inner exception. Fields Prefix The error prefix. public const string Prefix = \"JSO\" Field Value string Properties Code Gets the error code. public int Code { get; } Property Value int Methods GetCode(string) Gets the error code. public static int GetCode(string message) Parameters message string The message. Returns int The error code."
  },
  "api/Alis.Core.Aspect.Data.Json.JsonIgnoreAttribute.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonIgnoreAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonIgnoreAttribute Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The json ignore attribute class [AttributeUsage(AttributeTargets.Class|AttributeTargets.Struct|AttributeTargets.Property|AttributeTargets.Field)] public class JsonIgnoreAttribute : Attribute Inheritance object Attribute JsonIgnoreAttribute Inherited Members Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties IgnoreWhenDeserializing Gets or sets a value indicating whether to ignore this instance's owner when deserializing. public bool IgnoreWhenDeserializing { get; } Property Value bool IgnoreWhenSerializing Gets or sets a value indicating whether to ignore this instance's owner when serializing. public bool IgnoreWhenSerializing { get; } Property Value bool See Also Attribute"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonOptions.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonOptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonOptions Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Define options for JSON. public class JsonOptions Inheritance object JsonOptions Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors JsonOptions() Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonOptions class. public JsonOptions() Fields DefaultDateTimeStyles The allow white spaces internal const DateTimeStyles DefaultDateTimeStyles = AllowWhiteSpaces | AssumeUniversal Field Value DateTimeStyles _exceptions The exception private readonly List<Exception> _exceptions Field Value List<Exception> Properties AfterWriteObjectCallback Gets or sets a callback that is called before an object (not a value) is serialized. public JsonCallback AfterWriteObjectCallback { get; internal set; } Property Value JsonCallback ApplyEntryCallback Gets or sets a callback that is called during deserialization, before a dictionary entry is applied to a target object. public JsonCallback ApplyEntryCallback { get; private set; } Property Value JsonCallback BeforeWriteObjectCallback Gets or sets a callback that is called before an object (not a value) is serialized. public JsonCallback BeforeWriteObjectCallback { get; internal set; } Property Value JsonCallback CreateInstanceCallback Gets or sets a callback that is called before an instance of an object is created. public JsonCallback CreateInstanceCallback { get; internal set; } Property Value JsonCallback DateTimeFormat Gets or sets the date time format. public string DateTimeFormat { get; set; } Property Value string DateTimeOffsetFormat Gets or sets the date time offset format. public string DateTimeOffsetFormat { get; set; } Property Value string DateTimeStyles Gets or sets the date time styles. public DateTimeStyles DateTimeStyles { get; set; } Property Value DateTimeStyles Exceptions Gets the des-relation exceptions. Will be empty if ThrowExceptions is set to false. public Exception[] Exceptions { get; } Property Value Exception[] FinalObjectGraph Gets the value of the final object graph internal IDictionary<object, object> FinalObjectGraph { get; } Property Value IDictionary<object, object> FinalStreamingBufferChunkSize Gets the value of the final streaming buffer chunk size internal int FinalStreamingBufferChunkSize { get; } Property Value int FormattingTab Gets or sets the formatting tab string. public string FormattingTab { get; set; } Property Value string GetListObjectCallback Gets or sets a callback that is called during deserialization, to deserialize a list object. public JsonCallback GetListObjectCallback { get; internal set; } Property Value JsonCallback GuidFormat Gets or sets the guid format. public string GuidFormat { get; set; } Property Value string JsonPCallback Gets or sets the JSONP callback. It will be added as wrapper around the result. Check this article for more: http://en.wikipedia.org/wiki/JSONP public string JsonPCallback { get; set; } Property Value string MapEntryCallback Gets or sets a callback that is called during deserialization, before a dictionary entry is mapped to a target object. public JsonCallback MapEntryCallback { get; internal set; } Property Value JsonCallback MaximumExceptionsCount Gets or sets the maximum exceptions count. public int MaximumExceptionsCount { get; set; } Property Value int ObjectGraph Gets or sets a utility class that will store an object graph to avoid serialization cycles. If null, a Dictionary<object, object> using an object reference comparer will be used. internal IDictionary<object, object> ObjectGraph { get; set; } Property Value IDictionary<object, object> SerializationLevel Gets a value indicating the current serialization level. public int SerializationLevel { get; internal set; } Property Value int SerializationOptions Gets or sets the serialization options. public JsonSerializationOptions SerializationOptions { get; set; } Property Value JsonSerializationOptions StreamingBufferChunkSize Gets or sets the size of the streaming buffer chunk. Minimum value is 512. public int StreamingBufferChunkSize { get; set; } Property Value int ThrowExceptions Gets or sets a value indicating whether exceptions can be thrown during serialization or deserialization. If this is set to false, exceptions will be stored in the Exceptions collection. However, if the number of exceptions is equal to or higher than MaximumExceptionsCount, an exception will be thrown. public bool ThrowExceptions { get; set; } Property Value bool WriteNamedValueObjectCallback Gets or sets a callback that is called before an object field or property is serialized. public JsonCallback WriteNamedValueObjectCallback { get; internal set; } Property Value JsonCallback WriteValueCallback Gets or sets a write value callback. public JsonCallback WriteValueCallback { get; internal set; } Property Value JsonCallback Methods AddException(Exception) Adds an exception to the list of exceptions. public void AddException(Exception error) Parameters error Exception The exception to add. Clone() Clones this instance. public JsonOptions Clone() Returns JsonOptions A newly created of this class with all values copied. FinalizeDeserializationMembers(Type, IEnumerable<MemberDefinition>) Finalizes the deserialization members from an initial setup of members. public IEnumerable<MemberDefinition> FinalizeDeserializationMembers(Type type, IEnumerable<MemberDefinition> members) Parameters type Type The input type. May not be null. members IEnumerable<MemberDefinition> The members. May not be null. Returns IEnumerable<MemberDefinition> A non-null list of members. FinalizeSerializationMembers(Type, IEnumerable<MemberDefinition>) Finalizes the serialization members from an initial setup of members. public IEnumerable<MemberDefinition> FinalizeSerializationMembers(Type type, IEnumerable<MemberDefinition> members) Parameters type Type The input type. May not be null. members IEnumerable<MemberDefinition> The members. May not be null. Returns IEnumerable<MemberDefinition> A non-null list of members. GetCacheKey() Gets a key that can be used for type cache. public string GetCacheKey() Returns string A cache key. Max(int, int) Maxes the val 1 public static int Max(int val1, int val2) Parameters val1 int The val val2 int The val Returns int The int"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonPropertyNameAttribute.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonPropertyNameAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonPropertyNameAttribute Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Provides options for JSON. [AttributeUsage(AttributeTargets.All)] public sealed class JsonPropertyNameAttribute : Attribute Inheritance object Attribute JsonPropertyNameAttribute Inherited Members Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors JsonPropertyNameAttribute() Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonPropertyNameAttribute class. public JsonPropertyNameAttribute() JsonPropertyNameAttribute(string) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonPropertyNameAttribute class. public JsonPropertyNameAttribute(string name) Parameters name string The name to use for JSON serialization and deserialization. JsonPropertyNameAttribute(string, bool, bool) Initializes a new instance of the Alis.Core.Aspect.Data.Json.JsonPropertyNameAttribute class public JsonPropertyNameAttribute(string name, bool ignoreWhenSerializing, bool ignoreWhenDeserializing) Parameters name string The name ignoreWhenSerializing bool The ignore when serializing ignoreWhenDeserializing bool The ignore when deserializing Properties DefaultValue Gets or sets the default value. public object DefaultValue { get; set; } Property Value object HasDefaultValue Gets or sets a value indicating whether this instance has a default value. In this case, it's defined by the DefaultValue property. public bool HasDefaultValue { get; set; } Property Value bool IgnoreWhenDeserializing Gets or sets a value indicating whether to ignore this instance's owner when deserializing. public bool IgnoreWhenDeserializing { get; set; } Property Value bool IgnoreWhenSerializing Gets or sets a value indicating whether to ignore this instance's owner when serializing. public bool IgnoreWhenSerializing { get; set; } Property Value bool Name Gets or sets the name to use for JSON serialization and deserialization. public string Name { get; set; } Property Value string"
  },
  "api/Alis.Core.Aspect.Data.Json.JsonSerializationOptions.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonSerializationOptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum JsonSerializationOptions Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Define options for JSON serialization. [Flags] public enum JsonSerializationOptions Fields None = 0 No option. Use Type Descriptor (including custom ones) when serializing custom objects. UseReflection = 1 Use pure reflection when serializing custom objects. UseXmlIgnore = 2 Avoid fields and properties marked with the XmlIgnore attribute. DateFormatCustom = 4 Use the format defined in the DateTimeFormat property of the JsonOptions class. SerializeFields = 8 Serializes fields. UseISerializable = 16 Use the ISerializable interface. DateFormatJs = 32 Use the [new Date(utc milliseconds)] format. Note this format is not generally supported by browsers native JSON parsers. DateFormatIso8601 = 64 Use the ISO 8601 string format ('s' DateTime format). UseScriptIgnore = 128 Avoid fields and properties marked with the ScriptIgnore attribute. DateFormatRoundtripUtc = 256 Use the ISO 8601 roundtrip string format ('o' DateTime format). EnumAsText = 512 Serialize enum values as text. ContinueOnCycle = 1024 Continue serialization if a cycle was detected. ContinueOnValueError = 2048 Continue serialization if getting a value throws error. SkipNullPropertyValues = 4096 Don't serialize properties with a null value. DateTimeOffsetFormatCustom = 8192 Use the format defined in the DateTimeOffsetFormat property of the JsonOptions class. SkipNullDateTimeValues = 16384 Don't serialize null date time values. AutoParseDateTime = 32768 Automatically parse date time. WriteKeysWithoutQuotes = 65536 Write dictionary keys without quotes. ByteArrayAsBase64 = 131072 Serializes byte arrays as base 64 strings. StreamsAsBase64 = 262144 Serializes streams as base 64 strings. SkipZeroValueTypes = 524288 Don't serialize value type with a zero value. UseJsonAttribute = 1048576 Use the JSON attribute. SkipDefaultValues = 2097152 Don't serialize values equal to the default member (property, field) value, if defined. TimeSpanAsText = 4194304 Serialize TimeSpan values as text. SkipGetOnly = 8388608 Skip members with get only method. Default = 1082392 The default value."
  },
  "api/Alis.Core.Aspect.Data.Json.JsonSerializer.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.JsonSerializer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JsonSerializer Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll A utility class to serialize and deserialize JSON. public static class JsonSerializer Inheritance object JsonSerializer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields D2Format The format internal const string D2Format = \"D2\" Field Value string DateEnd The date end internal const string DateEnd = \")\\\\/\\\"\" Field Value string DateEnd2 The date end internal const string DateEnd2 = \")/\" Field Value string DateEndJs The date end js internal const string DateEndJs = \")\" Field Value string DateFormatsUtc The date formats utc internal static readonly string[] DateFormatsUtc Field Value string[] DateStart The date start internal const string DateStart = \"\\\"\\\\/Date(\" Field Value string DateStart2 The date start internal const string DateStart2 = \"/Date(\" Field Value string DateStartJs The date start js internal const string DateStartJs = \"new Date(\" Field Value string DefaultFormatterConverter The formatter converter internal static readonly FormatterConverter DefaultFormatterConverter Field Value FormatterConverter EnumFormat The enum format internal const string EnumFormat = \"D\" Field Value string False The false internal const string False = \"false\" Field Value string MinDateTime The utc internal static readonly DateTime MinDateTime Field Value DateTime MinDateTimeTicks The ticks internal static readonly long MinDateTimeTicks Field Value long Null The null internal const string Null = \"null\" Field Value string RoundTripFormat The round trip format internal const string RoundTripFormat = \"R\" Field Value string ScriptIgnore The script ignore internal const string ScriptIgnore = \"ScriptIgnore\" Field Value string SerializationTypeToken The serialization type token internal const string SerializationTypeToken = \"__type\" Field Value string True The true internal const string True = \"true\" Field Value string X4Format The format internal const string X4Format = \"{0:X4}\" Field Value string ZeroArg The zero arg internal const string ZeroArg = \"{0}\" Field Value string Methods Abs(float) Abs the value internal static float Abs(float value) Parameters value float The value Returns float The float AddOffsetHours(DateTime, int) Adds the offset hours using the specified dt internal static DateTime AddOffsetHours(DateTime dt, int offsetHours) Parameters dt DateTime The dt offsetHours int The offset hours Returns DateTime The dt AddOffsetMinutes(DateTime, int) Adds the offset minutes using the specified dt internal static DateTime AddOffsetMinutes(DateTime dt, int offsetMinutes) Parameters dt DateTime The dt offsetMinutes int The offset minutes Returns DateTime The dt AppendCharAsUnicode(StringBuilder, char) Appends the char as unicode using the specified sb internal static void AppendCharAsUnicode(StringBuilder sb, char c) Parameters sb StringBuilder The sb c char The AppendDefaultCharacter(StringBuilder, char) Appends the default character using the specified result internal static void AppendDefaultCharacter(StringBuilder result, char c) Parameters result StringBuilder The result c char The AppendEscapedCharacter(StringBuilder, char, TextReader, JsonOptions) Appends the escaped character using the specified result internal static void AppendEscapedCharacter(StringBuilder result, char nextChar, TextReader reader, JsonOptions options) Parameters result StringBuilder The result nextChar char The next char reader TextReader The reader options JsonOptions The options AppendSpecialCharacter(StringBuilder, char) Appends the special character using the specified result internal static void AppendSpecialCharacter(StringBuilder result, char c) Parameters result StringBuilder The result c char The AppendTimeZoneUtcOffset(TextWriter, DateTime) Appends the time zone utc offset using the specified writer internal static void AppendTimeZoneUtcOffset(TextWriter writer, DateTime dt) Parameters writer TextWriter The writer dt DateTime The dt AppendUnicodeCharacter(StringBuilder, TextReader, JsonOptions) Appends the unicode character using the specified result internal static void AppendUnicodeCharacter(StringBuilder result, TextReader reader, JsonOptions options) Parameters result StringBuilder The result reader TextReader The reader options JsonOptions The options Apply(object, object, JsonOptions) Applies the input internal static void Apply(object input, object target, JsonOptions options = null) Parameters input object The input target object The target options JsonOptions The options Apply(IEnumerable, Array, JsonOptions) Applies the input internal static void Apply(IEnumerable input, Array target, JsonOptions options) Parameters input IEnumerable The input target Array The target options JsonOptions The options Apply(IDictionary, object, JsonOptions) Applies the dictionary internal static void Apply(IDictionary dictionary, object target, JsonOptions options) Parameters dictionary IDictionary The dictionary target object The target options JsonOptions The options ApplyToArray(object, Array, JsonOptions) Applies the to array using the specified input internal static void ApplyToArray(object input, Array array, JsonOptions options) Parameters input object The input array Array The array options JsonOptions The options ApplyToDictionary(IDictionary, object, JsonOptions) Applies the to dictionary using the specified dic internal static void ApplyToDictionary(IDictionary dic, object target, JsonOptions options) Parameters dic IDictionary The dic target object The target options JsonOptions The options ApplyToDictionaryTarget(IDictionary, IDictionary, JsonOptions) Applies the values from the source dictionary to the target dictionary. internal static void ApplyToDictionaryTarget(IDictionary targetDictionary, IDictionary sourceDictionary, JsonOptions options) Parameters targetDictionary IDictionary The target dictionary to which values are applied sourceDictionary IDictionary The source dictionary from which values are taken options JsonOptions The JsonOptions used for type conversion ApplyToList(object, object, JsonOptions) Applies the to list using the specified input internal static void ApplyToList(object input, object target, JsonOptions options) Parameters input object The input target object The target options JsonOptions The options ApplyToListTarget(IEnumerable, object, JsonOptions) Applies the to list target using the specified input internal static void ApplyToListTarget(IEnumerable input, object target, JsonOptions options) Parameters input IEnumerable The input target object The target options JsonOptions The options ApplyToListTarget(object, IEnumerable, ListObject, JsonOptions) Applies the input to the list target using the specified target. internal static void ApplyToListTarget(object target, IEnumerable input, ListObject list, JsonOptions options) Parameters target object The target input IEnumerable The input list ListObject The list options JsonOptions The options ApplyToNonDictionaryTarget(object, IDictionary, JsonOptions) Applies the to non dictionary target using the specified target internal static void ApplyToNonDictionaryTarget(object target, IDictionary dictionary, JsonOptions options) Parameters target object The target dictionary IDictionary The dictionary options JsonOptions The options ApplyToTargetArray(IEnumerable, Array, JsonOptions) Applies the to target array using the specified input internal static void ApplyToTargetArray(IEnumerable input, Array target, JsonOptions options) Parameters input IEnumerable The input target Array The target options JsonOptions The options ApplyToTargetDictionary(IDictionary, object, JsonOptions) Applies the to target dictionary using the specified input internal static void ApplyToTargetDictionary(IDictionary input, object target, JsonOptions options) Parameters input IDictionary The input target object The target options JsonOptions The options AreValuesEqual(object, object) Describes whether are values equal internal static bool AreValuesEqual(object o1, object o2) Parameters o1 object The o2 object The Returns bool The bool CalculateDateTime(long, int, int) Calculates the date time using the specified l internal static DateTime CalculateDateTime(long l, int offsetHours, int offsetMinutes) Parameters l long The offsetHours int The offset hours offsetMinutes int The offset minutes Returns DateTime The dt CalculateHoursAndMinutes(int) Calculates the hours and minutes using the specified offset value internal static (int, int) CalculateHoursAndMinutes(int offsetValue) Parameters offsetValue int The offset value Returns (int, int) The int int CalculateOffset(string, int, out int, out int) Calculates the offset using the specified text internal static void CalculateOffset(string text, int tz, out int offsetHours, out int offsetMinutes) Parameters text string The text tz int The tz offsetHours int The offset hours offsetMinutes int The offset minutes CalculateOffset(string, int, out string, out int, out int) Calculates the offset using the specified ticks internal static void CalculateOffset(string ticks, int pos, out string updatedTicks, out int offsetHours, out int offsetMinutes) Parameters ticks string The ticks pos int The pos updatedTicks string The updated ticks offsetHours int The offset hours offsetMinutes int The offset minutes CanReadCharacter(TextReader) Describes whether can read character internal static bool CanReadCharacter(TextReader reader) Parameters reader TextReader The reader Returns bool The bool CanUseSpecialConstructor(Type) Describes whether can use special constructor private static bool CanUseSpecialConstructor(Type type) Parameters type Type The type Returns bool The bool ChangeType(object, Type, JsonOptions) Returns a System.Object with a specified type and whose value is equivalent to a specified input object. If an error occurs, a computed default value of the target type will be returned. public static object ChangeType(object value, Type conversionType, JsonOptions options) Parameters value object The input object. May be null. conversionType Type The target type. May not be null. options JsonOptions The options to use. Returns object An object of the target type whose value is equivalent to input value. ChangeType(object, object, Type, JsonOptions) Changes the type using the specified target public static object ChangeType(object target, object value, Type conversionType, JsonOptions options = null) Parameters target object The target value object The value conversionType Type The conversion type options JsonOptions The options Returns object The object Exceptions ArgumentNullException CheckAndSetOptions(TextWriter, object, ref IDictionary<object, object>, ref JsonOptions) Checks the and set options using the specified writer internal static void CheckAndSetOptions(TextWriter writer, object value, ref IDictionary<object, object> objectGraph, ref JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Exceptions ArgumentNullException ArgumentNullException ClearContextIfNotNull(ListObject) Clears the context if not null using the specified list internal static void ClearContextIfNotNull(ListObject list) Parameters list ListObject The list ClearList(ListObject) Clears the list using the specified list internal static void ClearList(ListObject list) Parameters list ListObject The list ConvertHexCharacterToByte(char) Converts the hex character to byte using the specified c internal static byte ConvertHexCharacterToByte(char c) Parameters c char The Returns byte The byte ConvertTicksToDateTime(long) Converts the ticks to date time using the specified ticks internal static DateTime ConvertTicksToDateTime(long ticks) Parameters ticks long The ticks Returns DateTime The date time ConvertToTargetType(object, Type, JsonOptions) Converts the to target type using the specified value internal static object ConvertToTargetType(object value, Type targetType, JsonOptions options) Parameters value object The value targetType Type The target type options JsonOptions The options Returns object The object CreateArrayInstance(Type, int) Creates the array instance using the specified type internal static Array CreateArrayInstance(Type type, int elementsCount) Parameters type Type The type elementsCount int The elements count Returns Array The array CreateGenericListObject(Type) Creates the generic list object using the specified type internal static ListObject CreateGenericListObject(Type type) Parameters type Type The type Returns ListObject The list object CreateInstance(object, Type, int, JsonOptions, object) Creates the instance using the specified target internal static object CreateInstance(object target, Type type, int elementsCount, JsonOptions options, object value) Parameters target object The target type Type The type elementsCount int The elements count options JsonOptions The options value object The value Returns object The object CreateInstanceForInterfaceOrAbstract(Type, object, int, JsonOptions, object) Creates the instance for interface or abstract using the specified type internal static object CreateInstanceForInterfaceOrAbstract(Type type, object target, int elementsCount, JsonOptions options, object value) Parameters type Type The type target object The target elementsCount int The elements count options JsonOptions The options value object The value Returns object The object CreateInstanceFromDictionary(Type, object, int, JsonOptions, object) Creates the instance from dictionary using the specified type internal static object CreateInstanceFromDictionary(Type type, object target, int elementsCount, JsonOptions options, object value) Parameters type Type The type target object The target elementsCount int The elements count options JsonOptions The options value object The value Returns object The object CreateInstanceWithSpecialConstructor(Type, object, int, JsonOptions, string) Creates the instance with special constructor using the specified type private static object CreateInstanceWithSpecialConstructor(Type type, object value, int elementsCount, JsonOptions options, string serializationTypeToken) Parameters type Type The type value object The value elementsCount int The elements count options JsonOptions The options serializationTypeToken string The serialization type token Returns object The object CreateJsonEventArgs(Type, IDictionary, object, JsonOptions, string, object) Creates the json event args using the specified type internal static JsonEventArgs CreateJsonEventArgs(Type type, IDictionary dictionary, object value, JsonOptions options, string key, object target) Parameters type Type The type dictionary IDictionary The dictionary value object The value options JsonOptions The options key string The key target object The target Returns JsonEventArgs The event args CreateJsonEventArgs(TextWriter, object, IDictionary<object, object>, JsonOptions) Creates the json event args using the specified writer internal static JsonEventArgs CreateJsonEventArgs(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns JsonEventArgs The json event args CreateJsonEventArgsAfterWriteObject(TextWriter, object, IDictionary<object, object>, JsonOptions) Creates the json event args after write object using the specified writer internal static JsonEventArgs CreateJsonEventArgsAfterWriteObject(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns JsonEventArgs The json event args CreateListObjectFromInterfaces(Type) Creates the list object from interfaces using the specified type internal static ListObject CreateListObjectFromInterfaces(Type type) Parameters type Type The type Returns ListObject The list object CreateNewIndices(int[]) Creates the new indices using the specified indices internal static int[] CreateNewIndices(int[] indices) Parameters indices int[] The indices Returns int[] The new indices CreateSerializableObject(Type, Dictionary<string, object>, JsonOptions) Creates the serializable object using the specified type internal static ISerializable CreateSerializableObject(Type type, Dictionary<string, object> values, JsonOptions options) Parameters type Type The type values Dictionary<string, object> The values options JsonOptions The options Returns ISerializable The serializable CreateSerializationInfo(Type, Dictionary<string, object>) Creates the serialization info using the specified type internal static SerializationInfo CreateSerializationInfo(Type type, Dictionary<string, object> values) Parameters type Type The type values Dictionary<string, object> The values Returns SerializationInfo The info Deserialize(string, Type, JsonOptions) Deserializes an object from the specified text. public static object Deserialize(string text, Type targetType = null, JsonOptions options = null) Parameters text string The text text. targetType Type The required target type. options JsonOptions Options to use for deserialization. Returns object An instance of an object representing the input data. Deserialize<T>(TextReader, JsonOptions) Deserializes an object from the specified TextReader. public static T Deserialize<T>(TextReader reader, JsonOptions options = null) Parameters reader TextReader The input reader. May not be null. options JsonOptions Options to use for deserialization. Returns T An instance of an object representing the input data. Type Parameters T The target type. Deserialize<T>(string, JsonOptions) Deserializes an object from the specified TextReader. public static T Deserialize<T>(string text, JsonOptions options = null) Parameters text string The text to deserialize. options JsonOptions Options to use for deserialization. Returns T An instance of an object representing the input data. Type Parameters T The target type. Deserialize(TextReader, Type, JsonOptions) Deserializes the reader internal static object Deserialize(TextReader reader, Type targetType = null, JsonOptions options = null) Parameters reader TextReader The reader targetType Type The target type options JsonOptions The options Returns object The object DeserializeToTarget(string, object, JsonOptions) Deserializes data from the specified text and populates a specified object instance. public static void DeserializeToTarget(string text, object target, JsonOptions options = null) Parameters text string The text to deserialize. target object The object instance to populate. options JsonOptions Options to use for deserialization. DeserializeToTarget(TextReader, object, JsonOptions) Deserializes data from the specified TextReader and populates a specified object instance. internal static void DeserializeToTarget(TextReader reader, object target, JsonOptions options = null) Parameters reader TextReader The input reader. May not be null. target object The object instance to populate. options JsonOptions Options to use for deserialization. EqualsIgnoreCase(string, string, bool) Determines if two strings are equal, ignoring case. internal static bool EqualsIgnoreCase(this string source, string target, bool trim = false) Parameters source string The source string. target string The target string to compare with the source string. trim bool Indicates whether to trim the strings before comparison. Returns bool True if the strings are equal (ignoring case), false otherwise. EscapeString(string) Escapes the string using the specified value public static string EscapeString(string value) Parameters value string The value Returns string The string ExtractOffset(string, out string, out int, out int) Extracts the offset using the specified ticks internal static void ExtractOffset(string ticks, out string updatedTicks, out int offsetHours, out int offsetMinutes) Parameters ticks string The ticks updatedTicks string The updated ticks offsetHours int The offset hours offsetMinutes int The offset minutes ExtractTicks(string) Extracts the ticks using the specified text internal static string ExtractTicks(string text) Parameters text string The text Returns string The string FindParameterValueForConstructor(ParameterInfo, IDictionary, int, JsonOptions, string) Finds the parameter value for constructor using the specified parameter private static object FindParameterValueForConstructor(ParameterInfo parameter, IDictionary dictionary, int elementsCount, JsonOptions options, string serializationTypeToken) Parameters parameter ParameterInfo The parameter dictionary IDictionary The dictionary elementsCount int The elements count options JsonOptions The options serializationTypeToken string The serialization type token Returns object The object FindSpecialConstructor(Type) Finds the special constructor using the specified type private static ConstructorInfo FindSpecialConstructor(Type type) Parameters type Type The type Returns ConstructorInfo The constructor info FindTimeZoneIndex(string) Finds the time zone index using the specified text internal static int FindTimeZoneIndex(string text) Parameters text string The text Returns int The int ForceSerializable(object) Describes whether force serializable internal static bool ForceSerializable(object obj) Parameters obj object The obj Returns bool The bool FormatAndSetTypeName(Dictionary<string, object>, object) Formats the type name and sets it in the dictionary. internal static void FormatAndSetTypeName(Dictionary<string, object> dic, object o) Parameters dic Dictionary<string, object> The dictionary. o object The object containing the type name. FormatTypeName(object) Formats the type name using the specified o internal static string FormatTypeName(object o) Parameters o object The Returns string The string GetAttribute<T>(PropertyDescriptor) Gets the attribute using the specified descriptor internal static T GetAttribute<T>(this PropertyDescriptor descriptor) where T : Attribute Parameters descriptor PropertyDescriptor The descriptor Returns T The Type Parameters T The GetAttribute<T>(AttributeCollection) Gets the attribute using the specified attributes internal static T GetAttribute<T>(this AttributeCollection attributes) where T : Attribute Parameters attributes AttributeCollection The attributes Returns T The Type Parameters T The GetDesiredConstructor(Type) Gets the desired constructor using the specified type internal static ConstructorInfo GetDesiredConstructor(Type type) Parameters type Type The type Returns ConstructorInfo The constructor info GetEofException(char) Gets the eof exception using the specified c internal static JsonException GetEofException(char c) Parameters c char The Returns JsonException The json exception GetEscapedString(char) Gets the escaped string using the specified c internal static string GetEscapedString(char c) Parameters c char The Returns string The string GetExpectedCharacterException(long, char) Gets the expected character exception using the specified pos internal static JsonException GetExpectedCharacterException(long pos, char c) Parameters pos long The pos c char The Returns JsonException The json exception GetExpectedHexCharacterException(long) Gets the expected hex character exception using the specified pos internal static JsonException GetExpectedHexCharacterException(long pos) Parameters pos long The pos Returns JsonException The json exception GetGenericArgument(Type, Type) Gets the generic argument using the specified found interface internal static Type GetGenericArgument(Type foundInterface, Type definition) Parameters foundInterface Type The found interface definition Type The definition Returns Type The type GetHexValue(TextReader, char, JsonOptions) Gets the hex value using the specified reader internal static byte GetHexValue(TextReader reader, char c, JsonOptions options) Parameters reader TextReader The reader c char The character to convert options JsonOptions The options Returns byte The byte GetItemType(Type) Gets the type of elements in a collection type. internal static Type GetItemType(Type collectionType) Parameters collectionType Type The collection type. Returns Type The element type or typeof(object) if it was not determined. GetJsonAttribute(MemberInfo) Gets the json attribute using the specified pi internal static JsonPropertyNameAttribute GetJsonAttribute(MemberInfo pi) Parameters pi MemberInfo The pi Returns JsonPropertyNameAttribute The json attribute GetJsonAttributeIgnore(MemberInfo) Gets the json attribute ignore using the specified pi internal static JsonIgnoreAttribute GetJsonAttributeIgnore(MemberInfo pi) Parameters pi MemberInfo The pi Returns JsonIgnoreAttribute The json ignore attribute GetListObject(Type, JsonOptions, object, object, IDictionary, string) Gets the list object using the specified type internal static ListObject GetListObject(Type type, JsonOptions options, object target, object value, IDictionary dictionary, string key) Parameters type Type The type options JsonOptions The options target object The target value object The value dictionary IDictionary The dictionary key string The key Returns ListObject The list object GetNullifiedStringValueByPath(IDictionary<string, object>, string) Gets a nullified string value from a dictionary by its path. This is useful to get a string value from the object that the untyped Deserialize method returns which is often of IDictionary<string, object> type. public static string GetNullifiedStringValueByPath(this IDictionary<string, object> dictionary, string path) Parameters dictionary IDictionary<string, object> The input dictionary. path string The path, composed of dictionary keys separated by a . character. May not be null. Returns string The nullified string value or null if not found. GetObjectName(Attribute) Gets the object name using the specified att internal static string GetObjectName(Attribute att) Parameters att Attribute The att Returns string The string GetObjectName(MemberInfo, string) Gets the object name using the specified member info internal static string GetObjectName(MemberInfo memberInfo, string defaultName) Parameters memberInfo MemberInfo The member info defaultName string The default name Returns string The object name if found, otherwise the default name GetObjectName(PropertyDescriptor, string) Gets the object name using the specified pd internal static string GetObjectName(PropertyDescriptor pd, string defaultName) Parameters pd PropertyDescriptor The pd defaultName string The default name Returns string The default name GetOffsetSignPosition(string, int) Gets the offset sign position using the specified ticks internal static int GetOffsetSignPosition(string ticks, int startIndex) Parameters ticks string The ticks startIndex int The start index Returns int The int GetOffsetString(string, int) Gets the offset string using the specified ticks internal static string GetOffsetString(string ticks, int pos) Parameters ticks string The ticks pos int The pos Returns string The string GetPosition(TextReader) Gets the position using the specified reader internal static long GetPosition(TextReader reader) Parameters reader TextReader The reader Returns long The long GetPositionBasedOnReaderType(TextReader) Gets the position based on reader type using the specified reader private static long GetPositionBasedOnReaderType(TextReader reader) Parameters reader TextReader The reader Returns long The long GetSerializationInfo(ISerializable) Gets the serialization info using the specified serializable internal static SerializationInfo GetSerializationInfo(ISerializable serializable) Parameters serializable ISerializable The serializable Returns SerializationInfo The info GetStartIndex(string) Gets the start index using the specified ticks internal static int GetStartIndex(string ticks) Parameters ticks string The ticks Returns int The int GetStreamReaderPosition(StreamReader) Gets the stream reader position using the specified sr internal static long GetStreamReaderPosition(StreamReader sr) Parameters sr StreamReader The sr Returns long The long GetStringReaderPosition(StringReader) Gets the string reader position using the specified str internal static long GetStringReaderPosition(StringReader str) Parameters str StringReader The str Returns long The long GetTypeException(long, string, Exception) Gets the type exception using the specified pos internal static JsonException GetTypeException(long pos, string typeName, Exception inner) Parameters pos long The pos typeName string The type name inner Exception The inner Returns JsonException The json exception GetTypeFromName(TextReader, string, JsonOptions) Gets the type from name using the specified reader internal static Type GetTypeFromName(TextReader reader, string typeName, JsonOptions options) Parameters reader TextReader The reader typeName string The type name options JsonOptions The options Returns Type The type GetTypeFromText(string) Gets the type from text using the specified type name private static Type GetTypeFromText(string typeName) Parameters typeName string The type name Returns Type The type GetUnexpectedCharacterException(long, char) Gets the unexpected character exception using the specified pos internal static JsonException GetUnexpectedCharacterException(long pos, char c) Parameters pos long The pos c char The Returns JsonException The json exception GetUpdatedTicks(string, int) Gets the updated ticks using the specified ticks internal static string GetUpdatedTicks(string ticks, int pos) Parameters ticks string The ticks pos int The pos Returns string The string GetUpdatedValue(ListObject, object) Gets the updated value using the specified list internal static object GetUpdatedValue(ListObject list, object defaultValue) Parameters list ListObject The list defaultValue object The default value Returns object The object HandleAfterWriteObjectCallback(TextWriter, object, IDictionary<object, object>, JsonOptions) Handles the after write object callback using the specified writer internal static void HandleAfterWriteObjectCallback(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options HandleArray(object, IEnumerable, Type, JsonOptions) Handles the array using the specified target internal static object HandleArray(object target, IEnumerable en, Type conversionType, JsonOptions options) Parameters target object The target en IEnumerable The en conversionType Type The conversion type options JsonOptions The options Returns object The object HandleArrayValue(TextWriter, object, IDictionary<object, object>, JsonOptions) Describes whether handle array value internal static bool HandleArrayValue(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns bool The bool HandleBeforeWriteObjectCallback(TextWriter, object, IDictionary<object, object>, JsonOptions) Handles the before write object callback using the specified writer internal static void HandleBeforeWriteObjectCallback(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options HandleBoolValue(TextWriter, object) Describes whether handle bool value internal static bool HandleBoolValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleByteArray(string, JsonOptions) Handles the byte array using the specified string. internal static object HandleByteArray(string base64String, JsonOptions options) Parameters base64String string The base64 string. options JsonOptions The JSON options. Returns object The byte array if the string can be converted, otherwise the original string. HandleCharValue(TextWriter, object) Describes whether handle char value internal static bool HandleCharValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleCreationException(Type, Exception, JsonOptions) Handles the creation exception using the specified type internal static object HandleCreationException(Type type, Exception e, JsonOptions options) Parameters type Type The type e Exception The options JsonOptions The options Returns object The object HandleDateTime(object, JsonOptions) Handles the date time using the specified value internal static object HandleDateTime(object value, JsonOptions options) Parameters value object The value options JsonOptions The options Returns object The value HandleDateTimeOffsetValue(TextWriter, object, JsonOptions) Describes whether handle date time offset value internal static bool HandleDateTimeOffsetValue(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options Returns bool The bool HandleDateTimeValue(TextWriter, object, JsonOptions) Describes whether handle date time value internal static bool HandleDateTimeValue(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options Returns bool The bool HandleDefaultCase(string, TextReader, JsonOptions) Handles the default case using the specified text internal static object HandleDefaultCase(string text, TextReader reader, JsonOptions options) Parameters text string The text reader TextReader The reader options JsonOptions The options Returns object The object HandleDictionary(object, Type, IDictionary, JsonOptions) Handles the dictionary using the specified target internal static object HandleDictionary(object target, Type conversionType, IDictionary dic, JsonOptions options) Parameters target object The target conversionType Type The conversion type dic IDictionary The dic options JsonOptions The options Returns object The instance HandleDotCase(string) Handles the dot case using the specified text internal static object HandleDotCase(string text) Parameters text string The text Returns object The object HandleECase(string) Handles the e case using the specified text internal static object HandleECase(string text) Parameters text string The text Returns object The object HandleEnumValue(TextWriter, object, JsonOptions) Describes whether handle enum value internal static bool HandleEnumValue(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options Returns bool The bool HandleEscapeCharacter(TextReader, StringBuilder, JsonOptions) Handles the escape character using the specified reader internal static void HandleEscapeCharacter(TextReader reader, StringBuilder result, JsonOptions options) Parameters reader TextReader The reader result StringBuilder The result options JsonOptions The options HandleException(Exception, JsonOptions) Handles the exception using the specified ex internal static void HandleException(Exception ex, JsonOptions options) Parameters ex Exception The ex options JsonOptions The options HandleFloatDoubleValue(TextWriter, object) Describes whether handle float double value internal static bool HandleFloatDoubleValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleGuidValue(TextWriter, object, JsonOptions) Describes whether handle guid value internal static bool HandleGuidValue(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options Returns bool The bool HandleIDictionaryValue(TextWriter, object, IDictionary<object, object>, JsonOptions) Describes whether handle i dictionary value internal static bool HandleIDictionaryValue(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns bool The bool HandleIEnumerableValue(TextWriter, object, IDictionary<object, object>, JsonOptions) Describes whether handle i enumerable value internal static bool HandleIEnumerableValue(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns bool The bool HandleInput(IEnumerable, Array, Type, JsonOptions) Handles the input using the specified input private static void HandleInput(IEnumerable input, Array target, Type elementType, JsonOptions options) Parameters input IEnumerable The input target Array The target elementType Type The element type options JsonOptions The options HandleListObject(object, IEnumerable, ListObject, Type, object, JsonOptions) Handles the list object using the specified target internal static object HandleListObject(object target, IEnumerable en, ListObject lo, Type conversionType, object value, JsonOptions options) Parameters target object The target en IEnumerable The en lo ListObject The lo conversionType Type The conversion type value object The value options JsonOptions The options Returns object The object HandleLiteral(string) Handles the literal using the specified text internal static object HandleLiteral(string text) Parameters text string The text Returns object The object HandleNonString(object, object, Type, JsonOptions) Handles the non string using the specified target internal static object HandleNonString(object target, object value, Type conversionType, JsonOptions options) Parameters target object The target value object The value conversionType Type The conversion type options JsonOptions The options Returns object The value HandleNullValue(Type, object) Handles the null value using the specified conversion type internal static object HandleNullValue(Type conversionType, object value) Parameters conversionType Type The conversion type value object The value Returns object The object HandleNullValue(TextWriter, object) Describes whether handle null value internal static bool HandleNullValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleNumericValue(TextWriter, object) Describes whether handle numeric value internal static bool HandleNumericValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleObjectGraph(TextWriter, object, IDictionary<object, object>, JsonOptions) Handles the object graph using the specified writer internal static void HandleObjectGraph(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options HandleObjectGraphCycle(TextWriter, object, JsonOptions) Handles the object graph cycle using the specified writer internal static void HandleObjectGraphCycle(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options HandleSpecialCases(TextWriter, object, IDictionary<object, object>, JsonOptions) Describes whether handle special cases internal static bool HandleSpecialCases(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns bool The bool HandleStreamValue(TextWriter, object, IDictionary<object, object>, JsonOptions) Describes whether handle stream value internal static bool HandleStreamValue(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns bool The bool HandleStringValue(Type, string, JsonOptions) Handles the string value using the specified conversion type internal static object HandleStringValue(Type conversionType, string value, JsonOptions options) Parameters conversionType Type The conversion type value string The value options JsonOptions The options Returns object The object HandleStringValue(TextWriter, object) Describes whether handle string value internal static bool HandleStringValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleTextProcessing(string, TextReader, JsonOptions) Handles the text processing using the specified text internal static object HandleTextProcessing(string text, TextReader reader, JsonOptions options) Parameters text string The text reader TextReader The reader options JsonOptions The options Returns object The object HandleTimeSpan(object) Handles the time span using the specified value internal static object HandleTimeSpan(object value) Parameters value object The value Returns object The value HandleTimeSpanValue(TextWriter, object, JsonOptions) Describes whether handle time span value internal static bool HandleTimeSpanValue(TextWriter writer, object value, JsonOptions options) Parameters writer TextWriter The writer value object The value options JsonOptions The options Returns bool The bool HandleUriValue(TextWriter, object) Describes whether handle uri value internal static bool HandleUriValue(TextWriter writer, object value) Parameters writer TextWriter The writer value object The value Returns bool The bool HandleWriteValueCallback(JsonOptions, TextWriter, object, IDictionary<object, object>) Handles the write value callback using the specified options internal static void HandleWriteValueCallback(JsonOptions options, TextWriter writer, object value, IDictionary<object, object> objectGraph) Parameters options JsonOptions The options writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph HandleWriterCases(TextWriter, Stream, IDictionary<object, object>, JsonOptions) Handles the writer cases using the specified writer internal static long HandleWriterCases(TextWriter writer, Stream stream, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer stream Stream The stream objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns long The total HasScriptIgnore(PropertyDescriptor) Describes whether has script ignore internal static bool HasScriptIgnore(PropertyDescriptor pd) Parameters pd PropertyDescriptor The pd Returns bool The bool HasScriptIgnore(MemberInfo) Checks if the member has a ScriptIgnore attribute internal static bool HasScriptIgnore(MemberInfo member) Parameters member MemberInfo The member to check Returns bool True if the member has a ScriptIgnore attribute, false otherwise InitOptions(JsonOptions) Inits the options using the specified options internal static JsonOptions InitOptions(JsonOptions options) Parameters options JsonOptions The options Returns JsonOptions The json options InitializeListContext(ListObject, object, IEnumerable, JsonOptions) Initializes the list context using the specified list internal static void InitializeListContext(ListObject list, object target, IEnumerable input, JsonOptions options) Parameters list ListObject The list target object The target input IEnumerable The input options JsonOptions The options InitializeObjectGraph(IDictionary<object, object>, JsonOptions) Initializes the object graph using the specified object graph internal static IDictionary<object, object> InitializeObjectGraph(IDictionary<object, object> objectGraph, JsonOptions options) Parameters objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns IDictionary<object, object> A dictionary of object and object InitializeOptions(JsonOptions) Initializes the options using the specified options internal static JsonOptions InitializeOptions(JsonOptions options) Parameters options JsonOptions The options Returns JsonOptions The json options InitializeOptionsAndObjectGraph(JsonOptions, IDictionary<object, object>) Initializes the options and object graph using the specified options internal static void InitializeOptionsAndObjectGraph(JsonOptions options, IDictionary<object, object> objectGraph) Parameters options JsonOptions The options objectGraph IDictionary<object, object> The object graph InternalIsKeyValuePairEnumerable(Type, out Type, out Type) Describes whether internal is key value pair enumerable internal static bool InternalIsKeyValuePairEnumerable(Type type, out Type keyType, out Type valueType) Parameters type Type The type keyType Type The key type valueType Type The value type Returns bool The bool InvertOffset(ref int, ref int) Inverts the offset using the specified offset hours internal static void InvertOffset(ref int offsetHours, ref int offsetMinutes) Parameters offsetHours int The offset hours offsetMinutes int The offset minutes InvokeCallback(JsonOptions, JsonEventArgs) Invokes the callback using the specified options internal static void InvokeCallback(JsonOptions options, JsonEventArgs eventArgs) Parameters options JsonOptions The options eventArgs JsonEventArgs The event args InvokeConstructor(Type, SerializationInfo, JsonOptions) Invokes the constructor using the specified type internal static ISerializable InvokeConstructor(Type type, SerializationInfo info, JsonOptions options) Parameters type Type The type info SerializationInfo The info options JsonOptions The options Returns ISerializable The serializable Exceptions InvalidOperationException No suitable constructor found for type {type.FullName} InvokeConstructor(ConstructorInfo, SerializationInfo, StreamingContext) Invokes the constructor using the specified constructor internal static ISerializable InvokeConstructor(ConstructorInfo constructor, SerializationInfo info, StreamingContext context) Parameters constructor ConstructorInfo The constructor info SerializationInfo The info context StreamingContext The context Returns ISerializable The serializable InvokeCreateInstanceCallback(object, Type, int, JsonOptions, object) Invokes the create instance callback using the specified target internal static object InvokeCreateInstanceCallback(object target, Type type, int elementsCount, JsonOptions options, object value) Parameters target object The target type Type The type elementsCount int The elements count options JsonOptions The options value object The value Returns object The object IsByteArrayAsBase64(JsonOptions, Array) Describes whether is byte array as base 64 internal static bool IsByteArrayAsBase64(JsonOptions options, Array array) Parameters options JsonOptions The options array Array The array Returns bool The bool IsCallbackAvailable(JsonOptions) Describes whether is callback available internal static bool IsCallbackAvailable(JsonOptions options) Parameters options JsonOptions The options Returns bool The bool IsDateTimeFormatValid(string) Describes whether is date time format valid internal static bool IsDateTimeFormatValid(string text) Parameters text string The text Returns bool The bool IsDictionaryNull(IDictionary<string, object>) Describes whether is dictionary null internal static bool IsDictionaryNull(IDictionary<string, object> dictionary) Parameters dictionary IDictionary<string, object> The dictionary Returns bool The bool IsElementDictionary(object) Describes whether is element dictionary internal static bool IsElementDictionary(object element) Parameters element object The element Returns bool The bool IsEscapeCharacter(char) Describes whether is escape character internal static bool IsEscapeCharacter(char c) Parameters c char The Returns bool The bool IsGenericEnumerable(Type, out Type, out Type) Describes whether is generic enumerable internal static bool IsGenericEnumerable(Type type, out Type keyType, out Type valueType) Parameters type Type The type keyType Type The key type valueType Type The value type Returns bool The bool IsHexCharacter(char) Describes whether is hex character internal static bool IsHexCharacter(char c) Parameters c char The Returns bool The bool IsInvalidPathOrDictionary(string, IDictionary<string, object>) Describes whether is invalid path or dictionary internal static bool IsInvalidPathOrDictionary(string path, IDictionary<string, object> dictionary) Parameters path string The path dictionary IDictionary<string, object> The dictionary Returns bool The bool IsKeyValuePair(Type, out Type, out Type) Describes whether is key value pair internal static bool IsKeyValuePair(Type type, out Type keyType, out Type valueType) Parameters type Type The type keyType Type The key type valueType Type The value type Returns bool The bool IsLiteral(string) Describes whether is literal internal static bool IsLiteral(string text) Parameters text string The text Returns bool The bool IsNegative(string, int) Describes whether is negative internal static bool IsNegative(string ticks, int pos) Parameters ticks string The ticks pos int The pos Returns bool The bool IsSpecialCharacter(char) Describes whether is special character internal static bool IsSpecialCharacter(char c) Parameters c char The Returns bool The bool IsTargetTypeNullOrObject(Type) Describes whether is target type null or object internal static bool IsTargetTypeNullOrObject(Type targetType) Parameters targetType Type The target type Returns bool The bool IsTextDateTime(string, out long) Describes whether is text date time internal static bool IsTextDateTime(string text, out long ticks) Parameters text string The text ticks long Returns bool The bool IsTextNull(string) Describes whether is text null internal static bool IsTextNull(string text) Parameters text string The text Returns bool The bool IsTimeSpanStyle(string) Describes whether is time span style internal static bool IsTimeSpanStyle(string text) Parameters text string The text Returns bool The bool IsUnicodeCharacter(char) Describes whether is unicode character internal static bool IsUnicodeCharacter(char c) Parameters c char The Returns bool The bool IsValidTarget(Array) Describes whether is valid target private static bool IsValidTarget(Array target) Parameters target Array The target Returns bool The bool IsValidTicks(string, out long) Describes whether is valid ticks internal static bool IsValidTicks(string ticks, out long l) Parameters ticks string The ticks l long The Returns bool The bool IsZeroValueType(object) Determines whether the specified value is a value type and is equal to zero. public static bool IsZeroValueType(object value) Parameters value object The value. Returns bool true if the specified value is a value type and is equal to zero; false otherwise. NeedsEscaping(char) Describes whether needs escaping internal static bool NeedsEscaping(char c) Parameters c char The Returns bool The bool Nullify(string) Nullifies the str internal static string Nullify(this string str) Parameters str string The str Returns string The string ParseNumber(string, JsonOptions, TextReader) Parses the number using the specified text internal static object ParseNumber(string text, JsonOptions options, TextReader reader) Parameters text string The text options JsonOptions The options reader TextReader The reader Returns object The object PeekCharacter(TextReader, JsonOptions) Peeks the character using the specified reader internal static int PeekCharacter(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns int The peeked char PeekCharacter(TextReader) Peeks the character using the specified reader internal static char PeekCharacter(TextReader reader) Parameters reader TextReader The reader Returns char The char PrepareConstructorParameters(ConstructorInfo, object, int, JsonOptions, string) Prepares the constructor parameters using the specified constructor private static object[] PrepareConstructorParameters(ConstructorInfo constructor, object value, int elementsCount, JsonOptions options, string serializationTypeToken) Parameters constructor ConstructorInfo The constructor value object The value elementsCount int The elements count options JsonOptions The options serializationTypeToken string The serialization type token Returns object[] The object array PrepareOptions(JsonOptions) Prepares the options using the specified options internal static void PrepareOptions(JsonOptions options) Parameters options JsonOptions The options ProcessArrayInput(object, IEnumerable, Array, Type, JsonOptions) Processes the array input using the specified target internal static void ProcessArrayInput(object target, IEnumerable input, Array array, Type itemType, JsonOptions options) Parameters target object The target input IEnumerable The input array Array The array itemType Type The item type options JsonOptions The options ProcessCharacter(char, TextReader, JsonOptions, Dictionary<string, object>) Processes the character using the specified c internal static void ProcessCharacter(char c, TextReader reader, JsonOptions options, Dictionary<string, object> dictionary) Parameters c char The reader TextReader The reader options JsonOptions The options dictionary Dictionary<string, object> The dictionary ProcessCharacter(TextReader, StringBuilder, JsonOptions, char) Processes the character using the specified reader internal static void ProcessCharacter(TextReader reader, StringBuilder result, JsonOptions options, char currentChar) Parameters reader TextReader The reader result StringBuilder The result options JsonOptions The options currentChar char The current char ProcessDictionaryEntry(object, IDictionary, JsonOptions, TypeDef, DictionaryEntry) Processes the dictionary entry using the specified target internal static void ProcessDictionaryEntry(object target, IDictionary dictionary, JsonOptions options, TypeDef typeDefinition, DictionaryEntry entry) Parameters target object The target dictionary IDictionary The dictionary options JsonOptions The options typeDefinition TypeDef The type definition entry DictionaryEntry The entry ProcessInput(object, IEnumerable, ListObject, JsonOptions) Processes the input using the specified target internal static void ProcessInput(object target, IEnumerable input, ListObject list, JsonOptions options) Parameters target object The target input IEnumerable The input list ListObject The list options JsonOptions The options ProcessInputBasedOnCondition(object, IEnumerable, ListObject, JsonOptions) Processes the input based on condition using the specified target internal static void ProcessInputBasedOnCondition(object target, IEnumerable input, ListObject list, JsonOptions options) Parameters target object The target input IEnumerable The input list ListObject The list options JsonOptions The options ProcessListInput(object, IEnumerable, ListObject, Type, JsonOptions) Processes the list input using the specified target internal static void ProcessListInput(object target, IEnumerable input, ListObject list, Type itemType, JsonOptions options) Parameters target object The target input IEnumerable The input list ListObject The list itemType Type The item type options JsonOptions The options ProcessMapEntryCallback(JsonOptions, IDictionary, ref string, ref object, object) Processes the map entry callback using the specified options internal static void ProcessMapEntryCallback(JsonOptions options, IDictionary dictionary, ref string entryKey, ref object entryValue, object target) Parameters options JsonOptions The options dictionary IDictionary The dictionary entryKey string The entry key entryValue object The entry value target object The target ProcessSerializationOptions(Dictionary<string, object>, JsonOptions) Processes the serialization options using the specified dic internal static void ProcessSerializationOptions(Dictionary<string, object> dic, JsonOptions options) Parameters dic Dictionary<string, object> The dic options JsonOptions The options ProcessString(TextReader, JsonOptions, Dictionary<string, object>) Processes the string using the specified reader internal static void ProcessString(TextReader reader, JsonOptions options, Dictionary<string, object> dictionary) Parameters reader TextReader The reader options JsonOptions The options dictionary Dictionary<string, object> The dictionary ProcessTypeName(Dictionary<string, object>) Processes the type name using the specified dictionary. internal static void ProcessTypeName(Dictionary<string, object> dic) Parameters dic Dictionary<string, object> The dictionary. ReadArray(TextReader, JsonOptions) Reads the array using the specified reader internal static object[] ReadArray(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns object[] The object array ReadArrayValue(TextReader, JsonOptions) Reads the array value using the specified reader internal static object[] ReadArrayValue(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns object[] The object array ReadCharacters(TextReader, out bool) Reads the characters using the specified reader internal static string ReadCharacters(TextReader reader, out bool arrayEnd) Parameters reader TextReader The reader arrayEnd bool The array end Returns string The string ReadDictionary(TextReader, JsonOptions) Reads the dictionary using the specified reader internal static Dictionary<string, object> ReadDictionary(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns Dictionary<string, object> The dictionary ReadDictionaryValue(TextReader, JsonOptions) Reads the dictionary value using the specified reader internal static Dictionary<string, object> ReadDictionaryValue(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns Dictionary<string, object> The dic ReadNew(TextReader, JsonOptions, out bool) Reads the new using the specified reader internal static object ReadNew(TextReader reader, JsonOptions options, out bool arrayEnd) Parameters reader TextReader The reader options JsonOptions The options arrayEnd bool The array end Returns object The object ReadNewValue(TextReader, JsonOptions, out bool) Reads the new value using the specified reader internal static object ReadNewValue(TextReader reader, JsonOptions options, out bool arrayEnd) Parameters reader TextReader The reader options JsonOptions The options arrayEnd bool The array end Returns object The object ReadNumberOrLiteral(TextReader, JsonOptions, out bool) Reads the number or literal using the specified reader internal static object ReadNumberOrLiteral(TextReader reader, JsonOptions options, out bool arrayEnd) Parameters reader TextReader The reader options JsonOptions The options arrayEnd bool The array end Returns object The object ReadNumberOrLiteralValue(TextReader, JsonOptions, out bool) Reads the number or literal value using the specified reader internal static object ReadNumberOrLiteralValue(TextReader reader, JsonOptions options, out bool arrayEnd) Parameters reader TextReader The reader options JsonOptions The options arrayEnd bool The array end Returns object The object ReadSerializable(TextReader, JsonOptions, string, Dictionary<string, object>) Reads the serializable using the specified reader internal static ISerializable ReadSerializable(TextReader reader, JsonOptions options, string typeName, Dictionary<string, object> values) Parameters reader TextReader The reader options JsonOptions The options typeName string The type name values Dictionary<string, object> The values Returns ISerializable The serializable ReadString(TextReader, JsonOptions) Reads the string using the specified reader internal static string ReadString(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns string The string ReadStringValue(TextReader, JsonOptions) Reads the string value using the specified reader internal static string ReadStringValue(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns string The ReadUntilEndCondition(TextReader, out bool) Reads the until end condition using the specified reader internal static string ReadUntilEndCondition(TextReader reader, out bool arrayEnd) Parameters reader TextReader The reader arrayEnd bool The array end Returns string The string ReadValue(TextReader, JsonOptions) Reads the value using the specified reader internal static object ReadValue(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns object The object ReadValue(TextReader, JsonOptions, bool, out bool) Reads the value using the specified reader internal static object ReadValue(TextReader reader, JsonOptions options, bool arrayMode, out bool arrayEnd) Parameters reader TextReader The reader options JsonOptions The options arrayMode bool The array mode arrayEnd bool The array end Returns object The object ReadWhile(TextReader, Predicate<char>) Describes whether read while internal static bool ReadWhile(TextReader reader, Predicate<char> cont) Parameters reader TextReader The reader cont Predicate<char> The cont Returns bool The bool ReadWhitespaces(TextReader) Describes whether read whitespaces internal static bool ReadWhitespaces(TextReader reader) Parameters reader TextReader The reader Returns bool The bool ReadX4(TextReader, JsonOptions) Reads the x 4 using the specified reader internal static ushort ReadX4(TextReader reader, JsonOptions options) Parameters reader TextReader The reader options JsonOptions The options Returns ushort The ushort RemoveQuotesFromText(string) Removes the quotes from text using the specified text internal static string RemoveQuotesFromText(string text) Parameters text string The text Returns string The text Serialize(object, JsonOptions) Serializes the specified object. Supports anonymous and dynamic types. public static string Serialize(object value, JsonOptions options = null) Parameters value object The object to serialize. options JsonOptions Options to use for serialization. Returns string A JSON representation of the serialized object. Serialize(TextWriter, object, JsonOptions) Serializes the specified object to the specified TextWriter. Supports anonymous and dynamic types. internal static void Serialize(TextWriter writer, object value, JsonOptions options = null) Parameters writer TextWriter The output writer. May not be null. value object The object to serialize. options JsonOptions Options to use for serialization. SerializeFormatted(object, JsonOptions) Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast. public static string SerializeFormatted(object value, JsonOptions options = null) Parameters value object The JSON object. May be null. options JsonOptions The options to use. May be null. Returns string A string containing the formatted object. SerializeFormatted(TextWriter, object, JsonOptions) Serializes an object with format. Note this is more for debugging purposes as it's not designed to be fast. internal static void SerializeFormatted(TextWriter writer, object value, JsonOptions options = null) Parameters writer TextWriter The output writer. May not be null. value object The JSON object. May be null. options JsonOptions The options to use. May be null. SetOption(IDictionary<object, object>, JsonOptions) Sets the option using the specified object graph internal static JsonOptions SetOption(IDictionary<object, object> objectGraph, JsonOptions options) Parameters objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns JsonOptions The options SetOptions(object, JsonOptions) Sets the options using the specified obj internal static void SetOptions(object obj, JsonOptions options) Parameters obj object The obj options JsonOptions The options SetValuesInTarget(IEnumerable, Array, Type, JsonOptions) Sets the values in target using the specified input private static void SetValuesInTarget(IEnumerable input, Array target, Type elementType, JsonOptions options) Parameters input IEnumerable The input target Array The target elementType Type The element type options JsonOptions The options SkipWhitespace(TextReader) Skips the whitespace using the specified reader internal static void SkipWhitespace(TextReader reader) Parameters reader TextReader The reader TryCreateInstanceUsingSpecialConstructor(Type, object, int, JsonOptions, string) Tries the create instance using special constructor using the specified type private static object TryCreateInstanceUsingSpecialConstructor(Type type, object value, int elementsCount, JsonOptions options, string serializationTypeToken) Parameters type Type The type value object The value elementsCount int The elements count options JsonOptions The options serializationTypeToken string The serialization type token Returns object The object TryGetElement(IDictionary<string, object>, string, out object) Describes whether try get element internal static bool TryGetElement(IDictionary<string, object> dictionary, string key, out object element) Parameters dictionary IDictionary<string, object> The dictionary key string The key element object The element Returns bool The bool TryGetNestedValue(IDictionary<string, object>, string[], out object) Describes whether try get nested value internal static bool TryGetNestedValue(IDictionary<string, object> dictionary, string[] pathSegments, out object value) Parameters dictionary IDictionary<string, object> The dictionary pathSegments string[] The path segments value object The value Returns bool The bool TryGetObjectDefaultValue(Attribute, out object) Describes whether try get object default value internal static bool TryGetObjectDefaultValue(Attribute att, out object value) Parameters att Attribute The att value object The value Returns bool The bool TryGetObjectDefaultValue(MemberInfo, out object) Describes whether try get object default value internal static bool TryGetObjectDefaultValue(MemberInfo mi, out object value) Parameters mi MemberInfo The mi value object The value Returns bool The bool TryGetObjectDefaultValue(PropertyDescriptor, out object) Describes whether try get object default value internal static bool TryGetObjectDefaultValue(PropertyDescriptor pd, out object value) Parameters pd PropertyDescriptor The pd value object The value Returns bool The bool TryGetValue(IDictionary<string, object>, string, out object) Describes whether try get value internal static bool TryGetValue(IDictionary<string, object> dictionary, string path, out object value) Parameters dictionary IDictionary<string, object> The dictionary path string The path value object The value Returns bool The bool TryGetValueByPath<T>(IDictionary<string, object>, string, out T) Gets a value from a dictionary by its path. This is useful to get a value from the object that the untyped Deserialize method returns which is often of IDictionary<string, object> type. public static bool TryGetValueByPath<T>(this IDictionary<string, object> dictionary, string path, out T value) Parameters dictionary IDictionary<string, object> The input dictionary. path string The path, composed of dictionary keys separated by a . character. May not be null. value T The value to retrieve. Returns bool true if the value parameter was retrieved successfully; otherwise, false. Type Parameters T The final type to which to convert the retrieved value. TryGetValueByPath(IDictionary<string, object>, string, out object) Describes whether try get value by path internal static bool TryGetValueByPath(this IDictionary<string, object> dictionary, string path, out object value) Parameters dictionary IDictionary<string, object> The dictionary path string The path value object The value Returns bool The bool TryParseDateTime(string) Converts the JSON string representation of a date time to its DateTime equivalent. public static DateTime? TryParseDateTime(string text) Parameters text string The input text. Returns DateTime? A DateTime value if the text was converted successfully; otherwise, null. TryParseDateTime(string, DateTimeStyles) Converts the JSON string representation of a date time to its DateTime equivalent. public static DateTime? TryParseDateTime(string text, DateTimeStyles styles) Parameters text string The input text. styles DateTimeStyles The styles to use. Returns DateTime? A DateTime value if the text was converted successfully; otherwise, null. TryParseDateTime(string, out DateTime) Converts the JSON string representation of a date time to its DateTime equivalent. internal static bool TryParseDateTime(string text, out DateTime dt) Parameters text string The input text. dt DateTime When this method returns, contains the DateTime equivalent. Returns bool true if the text was converted successfully; otherwise, false. TryParseDateTime(string, DateTimeStyles, out DateTime) Describes whether try parse date time internal static bool TryParseDateTime(string text, DateTimeStyles styles, out DateTime dt) Parameters text string The text styles DateTimeStyles The styles dt DateTime The dt Returns bool The bool TryParseDateTimeWithEndZ(string, out DateTime) Describes whether try parse date time with end z internal static bool TryParseDateTimeWithEndZ(string text, out DateTime dt) Parameters text string The text dt DateTime The dt Returns bool The bool TryParseDateTimeWithOffset(string, int, int, int, out DateTime) Describes whether try parse date time with offset internal static bool TryParseDateTimeWithOffset(string text, int tz, int offsetHours, int offsetMinutes, out DateTime dt) Parameters text string The text tz int The tz offsetHours int The offset hours offsetMinutes int The offset minutes dt DateTime The dt Returns bool The bool TryParseDateTimeWithSpecificFormat(string, out DateTime) Tries to parse a date time with a specific format. internal static bool TryParseDateTimeWithSpecificFormat(string text, out DateTime dt) Parameters text string The text to parse. dt DateTime The parsed DateTime if successful. Returns bool True if parsing was successful, false otherwise. TryParseDateTimeWithStandardFormat(string, DateTimeStyles, out DateTime) Describes whether try parse date time with standard format internal static bool TryParseDateTimeWithStandardFormat(string text, DateTimeStyles styles, out DateTime dt) Parameters text string The text styles DateTimeStyles The styles dt DateTime The dt Returns bool The bool TryParseDateTimeWithTicks(string, out DateTime) Describes whether try parse date time with ticks internal static bool TryParseDateTimeWithTicks(string text, out DateTime dt) Parameters text string The text dt DateTime The dt Returns bool The bool TryParseExactDateTime(string, out DateTime) Describes whether try parse exact date time internal static bool TryParseExactDateTime(string text, out DateTime dt) Parameters text string The text dt DateTime The dt Returns bool The bool TryParseOffset(string, out int) Describes whether try parse offset internal static bool TryParseOffset(string offsetString, out int offsetValue) Parameters offsetString string The offset string offsetValue int The offset value Returns bool The bool TryParseTicks(string, int, int, out DateTime) Describes whether try parse ticks internal static bool TryParseTicks(string ticks, int offsetHours, int offsetMinutes, out DateTime dt) Parameters ticks string The ticks offsetHours int The offset hours offsetMinutes int The offset minutes dt DateTime The dt Returns bool The bool UpdateContext(ListObject, Type, object, object) Updates the context using the specified list internal static void UpdateContext(ListObject list, Type itemType, object value, object convertedValue) Parameters list ListObject The list itemType Type The item type value object The value convertedValue object The converted value UpdateContextIfNeeded(ListObject, Type, object, object) Updates the context if needed using the specified list internal static void UpdateContextIfNeeded(ListObject list, Type itemType, object value, object convertedValue) Parameters list ListObject The list itemType Type The item type value object The value convertedValue object The converted value UpdateValueBasedOnContext(ListObject, Type, object, object) Updates the value based on context using the specified list. internal static object UpdateValueBasedOnContext(ListObject list, Type itemType, object value, object convertedValue) Parameters list ListObject The list. itemType Type The item type. value object The value. convertedValue object The converted value. Returns object The updated value. ValidateReader(TextReader) Validates the reader using the specified reader internal static void ValidateReader(TextReader reader) Parameters reader TextReader The reader Exceptions ArgumentNullException ValidateWriter(TextWriter) Validates the writer using the specified writer internal static void ValidateWriter(TextWriter writer) Parameters writer TextWriter The writer Exceptions ArgumentNullException ValidateWriterAndArray(TextWriter, Array) Validates the writer and array using the specified writer internal static void ValidateWriterAndArray(TextWriter writer, Array array) Parameters writer TextWriter The writer array Array The array Exceptions ArgumentNullException ArgumentNullException ValidateWriterAndDictionary(TextWriter, IDictionary) Validates the writer and dictionary using the specified writer internal static void ValidateWriterAndDictionary(TextWriter writer, IDictionary dictionary) Parameters writer TextWriter The writer dictionary IDictionary The dictionary Exceptions ArgumentNullException ArgumentNullException ValidateWriterAndEnumerable(TextWriter, IEnumerable) Validates the writer and enumerable using the specified writer internal static void ValidateWriterAndEnumerable(TextWriter writer, IEnumerable enumerable) Parameters writer TextWriter The writer enumerable IEnumerable The enumerable Exceptions ArgumentNullException ArgumentNullException ValidateWriterAndStream(TextWriter, Stream) Validates the writer and stream using the specified writer internal static void ValidateWriterAndStream(TextWriter writer, Stream stream) Parameters writer TextWriter The writer stream Stream The stream Exceptions ArgumentNullException ArgumentNullException WriteArray(TextWriter, Array, IDictionary<object, object>, JsonOptions) Writes the array using the specified writer internal static void WriteArray(TextWriter writer, Array array, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer array Array The array objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteArray(TextWriter, Array, IDictionary<object, object>, JsonOptions, int[]) Writes the array using the specified writer internal static void WriteArray(TextWriter writer, Array array, IDictionary<object, object> objectGraph, JsonOptions options, int[] indices) Parameters writer TextWriter The writer array Array The array objectGraph IDictionary<object, object> The object graph options JsonOptions The options indices int[] The indices WriteArrayElement(TextWriter, Array, IDictionary<object, object>, JsonOptions, int[]) Writes the array element using the specified writer internal static void WriteArrayElement(TextWriter writer, Array array, IDictionary<object, object> objectGraph, JsonOptions options, int[] newIndices) Parameters writer TextWriter The writer array Array The array objectGraph IDictionary<object, object> The object graph options JsonOptions The options newIndices int[] The new indices WriteArrayElementSeparator(TextWriter, int) Writes the array element separator using the specified writer internal static void WriteArrayElementSeparator(TextWriter writer, int i) Parameters writer TextWriter The writer i int The WriteArrayElements(TextWriter, Array, IDictionary<object, object>, JsonOptions, int[], int[]) Writes the array elements using the specified writer internal static void WriteArrayElements(TextWriter writer, Array array, IDictionary<object, object> objectGraph, JsonOptions options, int[] indices, int[] newIndices) Parameters writer TextWriter The writer array Array The array objectGraph IDictionary<object, object> The object graph options JsonOptions The options indices int[] The indices newIndices int[] The new indices WriteBase64Stream(TextWriter, Stream, IDictionary<object, object>, JsonOptions) Writes the base 64 stream using the specified writer internal static long WriteBase64Stream(TextWriter writer, Stream stream, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer stream Stream The stream objectGraph IDictionary<object, object> The object graph options JsonOptions The options Returns long The total WriteBase64Stream(Stream, Stream, JsonOptions) Writes the base 64 stream using the specified input stream internal static long WriteBase64Stream(Stream inputStream, Stream outputStream, JsonOptions options) Parameters inputStream Stream The input stream outputStream Stream The output stream options JsonOptions The options Returns long The total WriteBase64Stream(TextWriter, byte[], IDictionary<object, object>, JsonOptions) Writes the base 64 stream using the specified writer internal static void WriteBase64Stream(TextWriter writer, byte[] bytes, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer bytes byte[] The bytes objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteCommaIfNeeded(TextWriter, ref bool) Writes the comma if needed using the specified writer internal static void WriteCommaIfNeeded(TextWriter writer, ref bool first) Parameters writer TextWriter The writer first bool The first WriteDictionary(TextWriter, IDictionary, IDictionary<object, object>, JsonOptions) Writes the dictionary using the specified writer internal static void WriteDictionary(TextWriter writer, IDictionary dictionary, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer dictionary IDictionary The dictionary objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteDictionary(IndentedTextWriter, IDictionary, JsonOptions) Writes the dictionary using the specified writer internal static void WriteDictionary(IndentedTextWriter writer, IDictionary dictionary, JsonOptions options) Parameters writer IndentedTextWriter The writer dictionary IDictionary The dictionary options JsonOptions The options WriteDictionaryEntries(TextWriter, IDictionary, IDictionary<object, object>, JsonOptions) Writes the dictionary entries using the specified writer internal static void WriteDictionaryEntries(TextWriter writer, IDictionary dictionary, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer dictionary IDictionary The dictionary objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteDictionaryEntry(TextWriter, DictionaryEntry, ref bool, IDictionary<object, object>, JsonOptions) Writes the dictionary entry using the specified writer internal static void WriteDictionaryEntry(TextWriter writer, DictionaryEntry entry, ref bool first, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer entry DictionaryEntry The entry first bool The first objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteDictionaryEntry(IndentedTextWriter, DictionaryEntry, JsonOptions) Writes the dictionary entry using the specified writer internal static void WriteDictionaryEntry(IndentedTextWriter writer, DictionaryEntry entry, JsonOptions options) Parameters writer IndentedTextWriter The writer entry DictionaryEntry The entry options JsonOptions The options WriteDictionaryKey(TextWriter, string, JsonOptions) Writes the dictionary key using the specified writer internal static void WriteDictionaryKey(TextWriter writer, string key, JsonOptions options) Parameters writer TextWriter The writer key string The key options JsonOptions The options WriteEntries(TextWriter, SerializationInfo, IDictionary<object, object>, JsonOptions) Writes the entries using the specified writer internal static void WriteEntries(TextWriter writer, SerializationInfo info, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer info SerializationInfo The info objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteEntry(TextWriter, SerializationEntry, ref bool, IDictionary<object, object>, JsonOptions) Writes the entry using the specified writer internal static void WriteEntry(TextWriter writer, SerializationEntry entry, ref bool first, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer entry SerializationEntry The entry first bool The first objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteEntryName(TextWriter, SerializationEntry, JsonOptions) Writes the entry name using the specified writer internal static void WriteEntryName(TextWriter writer, SerializationEntry entry, JsonOptions options) Parameters writer TextWriter The writer entry SerializationEntry The entry options JsonOptions The options WriteEnumerable(TextWriter, IEnumerable, IDictionary<object, object>, JsonOptions) Writes the enumerable using the specified writer internal static void WriteEnumerable(TextWriter writer, IEnumerable enumerable, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer enumerable IEnumerable The enumerable objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteEnumerable(IndentedTextWriter, IEnumerable, JsonOptions) Writes the enumerable using the specified writer internal static void WriteEnumerable(IndentedTextWriter writer, IEnumerable enumerable, JsonOptions options) Parameters writer IndentedTextWriter The writer enumerable IEnumerable The enumerable options JsonOptions The options WriteEnumerableValues(TextWriter, IEnumerable, IDictionary<object, object>, JsonOptions) Writes the enumerable values using the specified writer internal static void WriteEnumerableValues(TextWriter writer, IEnumerable enumerable, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer enumerable IEnumerable The enumerable objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteEscapedString(TextWriter, string) Writes the escaped string using the specified writer internal static void WriteEscapedString(TextWriter writer, string text) Parameters writer TextWriter The writer text string The text WriteFormatted(object, JsonOptions) Writes a JSON deserialized object formatted. public static string WriteFormatted(object jsonObject, JsonOptions options = null) Parameters jsonObject object The JSON object. May be null. options JsonOptions The options to use. May be null. Returns string A string containing the formatted object. WriteFormatted(TextWriter, object, JsonOptions) Writes a JSON deserialized object formatted. internal static void WriteFormatted(TextWriter writer, object jsonObject, JsonOptions options = null) Parameters writer TextWriter The output writer. May not be null. jsonObject object The JSON object. May be null. options JsonOptions The options to use. May be null. WriteFormatted(IndentedTextWriter, object, JsonOptions) Writes the formatted using the specified writer internal static void WriteFormatted(IndentedTextWriter writer, object jsonObject, JsonOptions options) Parameters writer IndentedTextWriter The writer jsonObject object The json object options JsonOptions The options WriteJsonPEnd(TextWriter, JsonOptions) Writes the json p end using the specified writer internal static void WriteJsonPEnd(TextWriter writer, JsonOptions options) Parameters writer TextWriter The writer options JsonOptions The options WriteJsonPStart(TextWriter, JsonOptions) Writes the json p start using the specified writer internal static void WriteJsonPStart(TextWriter writer, JsonOptions options) Parameters writer TextWriter The writer options JsonOptions The options WriteNameValue(TextWriter, string, object, IDictionary<object, object>, JsonOptions) Writes a name/value pair to a JSON writer. public static void WriteNameValue(TextWriter writer, string name, object value, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The input writer. May not be null. name string The name. null values will be converted to empty values. value object The value. objectGraph IDictionary<object, object> The object graph. options JsonOptions The options to use. WriteObject(TextWriter, object, IDictionary<object, object>, JsonOptions) Writes the object using the specified writer internal static void WriteObject(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteSerializable(TextWriter, ISerializable, IDictionary<object, object>, JsonOptions) Writes the serializable using the specified writer internal static void WriteSerializable(TextWriter writer, ISerializable serializable, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer serializable ISerializable The serializable objectGraph IDictionary<object, object> The object graph options JsonOptions The options WriteSerializableOrValues(TextWriter, object, IDictionary<object, object>, JsonOptions) Writes the serializable or values using the specified writer. internal static void WriteSerializableOrValues(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer. value object The value. objectGraph IDictionary<object, object> The object graph. options JsonOptions The options. WriteStreamToWriter(TextWriter, Stream, JsonOptions, ref long) Writes the stream to writer using the specified writer internal static void WriteStreamToWriter(TextWriter writer, Stream stream, JsonOptions options, ref long total) Parameters writer TextWriter The writer stream Stream The stream options JsonOptions The options total long The total WriteString(TextWriter, string) Writes a string to a JSON writer. internal static void WriteString(TextWriter writer, string text) Parameters writer TextWriter The input writer. May not be null. text string The text. WriteText(TextWriter, string) Writes the text using the specified writer internal static void WriteText(TextWriter writer, string text) Parameters writer TextWriter The writer text string The text WriteUnescapedString(TextWriter, string) Writes a string to a JSON writer. internal static void WriteUnescapedString(TextWriter writer, string text) Parameters writer TextWriter The input writer. May not be null. text string The text. WriteValue(TextWriter, object, IDictionary<object, object>, JsonOptions) Writes the value using the specified writer public static void WriteValue(TextWriter writer, object value, IDictionary<object, object> objectGraph, JsonOptions options = null) Parameters writer TextWriter The writer value object The value objectGraph IDictionary<object, object> The object graph options JsonOptions The options Exceptions ArgumentNullException WriteValueWithSeparator(TextWriter, object, ref bool, IDictionary<object, object>, JsonOptions) Writes the value with separator using the specified writer internal static void WriteValueWithSeparator(TextWriter writer, object value, ref bool first, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer value object The value first bool The first objectGraph IDictionary<object, object> The object graph options JsonOptions The options"
  },
  "api/Alis.Core.Aspect.Data.Json.KeyValueType.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.KeyValueType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class KeyValueType Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The key value type class internal sealed class KeyValueType Inheritance object KeyValueType Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields KeyType The key type public Type KeyType Field Value Type ValueType The value type public Type ValueType Field Value Type"
  },
  "api/Alis.Core.Aspect.Data.Json.KeyValueTypeDictionary.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.KeyValueTypeDictionary.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class KeyValueTypeDictionary Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The key value type dictionary class internal sealed class KeyValueTypeDictionary : IDictionary, ICollection, IEnumerable Inheritance object KeyValueTypeDictionary Implements IDictionary ICollection IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors KeyValueTypeDictionary(object) Initializes a new instance of the Alis.Core.Aspect.Data.Json.KeyValueTypeDictionary class public KeyValueTypeDictionary(object value) Parameters value object The value Fields _enumerator The enumerator private readonly KeyValueTypeEnumerator _enumerator Field Value KeyValueTypeEnumerator Properties Count Gets the value of the count public int Count { get; } Property Value int IsFixedSize Gets the value of the is fixed size public bool IsFixedSize { get; } Property Value bool IsReadOnly Gets the value of the is read only public bool IsReadOnly { get; } Property Value bool IsSynchronized Gets the value of the is synchronized public bool IsSynchronized { get; } Property Value bool Keys Gets the value of the keys public ICollection Keys { get; } Property Value ICollection SyncRoot Gets the value of the sync root public object SyncRoot { get; } Property Value object Values Gets the value of the values public ICollection Values { get; } Property Value ICollection this[object] The not supported exception public object this[object key] { get; set; } Property Value object Methods Add(object, object) Adds the key public void Add(object key, object value) Parameters key object The key value object The value Clear() Clears this instance public void Clear() Contains(object) Describes whether this instance contains public bool Contains(object key) Parameters key object The key Returns bool The bool CopyTo(Array, int) Copies the to using the specified array public void CopyTo(Array array, int index) Parameters array Array The array index int The index GetEnumerator() Gets the enumerator public IDictionaryEnumerator GetEnumerator() Returns IDictionaryEnumerator The dictionary enumerator Remove(object) Removes the key public void Remove(object key) Parameters key object The key IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator See Also IDictionary"
  },
  "api/Alis.Core.Aspect.Data.Json.KeyValueTypeEnumerator.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.KeyValueTypeEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class KeyValueTypeEnumerator Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The key value type enumerator class internal sealed class KeyValueTypeEnumerator : IDictionaryEnumerator, IEnumerator, IDisposable Inheritance object KeyValueTypeEnumerator Implements IDictionaryEnumerator IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors KeyValueTypeEnumerator(object) Initializes a new instance of the Alis.Core.Aspect.Data.Json.KeyValueTypeEnumerator class public KeyValueTypeEnumerator(object value) Parameters value object The value Fields enumerator The enumerator private readonly IEnumerator enumerator Field Value IEnumerator keyProp The key prop private PropertyInfo keyProp Field Value PropertyInfo value The value private readonly IEnumerable value Field Value IEnumerable valueProp The value prop private PropertyInfo valueProp Field Value PropertyInfo Properties Current Gets the value of the current public object Current { get; } Property Value object Entry Gets the value of the entry public DictionaryEntry Entry { get; } Property Value DictionaryEntry Key Gets the value of the key public object Key { get; } Property Value object Value Gets the value of the value public object Value { get; } Property Value object Methods Dispose() Disposes this instance public void Dispose() MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Reset() Resets this instance public void Reset() See Also IDictionaryEnumerator"
  },
  "api/Alis.Core.Aspect.Data.Json.ListObject.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.ListObject.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ListObject Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines an object that handles list deserialization. public abstract class ListObject Inheritance object ListObject Derived CollectionTObject<T> CustomListObject Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Context Gets the current context. public IDictionary<string, object> Context { get; set; } Property Value IDictionary<string, object> List Gets or sets the list object. public virtual object List { get; set; } Property Value object Methods Add(object, JsonOptions) Adds a value to the list object. public abstract void Add(object value, JsonOptions options = null) Parameters value object The value. options JsonOptions The options. Clear() Clears the list object. public abstract void Clear()"
  },
  "api/Alis.Core.Aspect.Data.Json.MemberDefinition.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.MemberDefinition.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MemberDefinition Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll Defines a type's member. public sealed class MemberDefinition Inheritance object MemberDefinition Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _accessor The accessor private IMemberAccessor _accessor Field Value IMemberAccessor _escapedWireName The escaped wire name private string _escapedWireName Field Value string _name The name private string _name Field Value string _type The type private Type _type Field Value Type _wireName The wire name private string _wireName Field Value string Properties Accessor Gets or sets the accessor. public IMemberAccessor Accessor { get; set; } Property Value IMemberAccessor DefaultValue Gets or sets the default value. public object DefaultValue { get; set; } Property Value object EscapedWireName Gets or sets the escaped name used during serialization and des-serialization. public string EscapedWireName { get; set; } Property Value string HasDefaultValue Gets or sets a value indicating whether this instance has default value. public bool HasDefaultValue { get; set; } Property Value bool Name Gets or sets the member name. public string Name { get; set; } Property Value string Type Gets or sets the member type. public Type Type { get; set; } Property Value Type WireName Gets or sets the name used for serialization and des-serialization. public string WireName { get; set; } Property Value string Methods AddDeserializationMember(Type, JsonOptions, MemberDefinition) Adds a deserialization member. public static void AddDeserializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. member MemberDefinition The member. May not be null. AddSerializationMember(Type, JsonOptions, MemberDefinition) Adds a serialization member. public static void AddSerializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. member MemberDefinition The member. May not be null. ApplyEntry(IDictionary, object, string, object, JsonOptions) Applies the dictionary entry to this member. public void ApplyEntry(IDictionary dictionary, object target, string key, object value, JsonOptions options = null) Parameters dictionary IDictionary The input dictionary. target object The target object. key string The entry key. value object The entry value. options JsonOptions The options. EqualsDefaultValue(object) Determines if a value equals the default value. public bool EqualsDefaultValue(object value) Parameters value object The value to compare. Returns bool true if both values are equal; false otherwise. GetDeserializationMembers(Type, JsonOptions) Gets the deserialization members for a given type. public static MemberDefinition[] GetDeserializationMembers(Type type, JsonOptions options = null) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. Returns MemberDefinition[] A list of deserialization members. GetOrCreateInstance(object, int, JsonOptions) Gets or creates a member instance. private object GetOrCreateInstance(object target, int elementsCount, JsonOptions options = null) Parameters target object The target. elementsCount int The elements count. options JsonOptions The options. Returns object A new or existing instance. GetSerializationMembers(Type, JsonOptions) Gets the serialization members for a given type. public static MemberDefinition[] GetSerializationMembers(Type type, JsonOptions options = null) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. Returns MemberDefinition[] A list of serialization members. IsNullDateTimeValue(object) Determines whether the specified value is equal to the zero value for its type. public bool IsNullDateTimeValue(object value) Parameters value object The value. Returns bool true if the specified value is equal to the zero value. IsZeroValue(object) Determines whether the specified value is equal to the zero value for its type. public bool IsZeroValue(object value) Parameters value object The value. Returns bool true if the specified value is equal to the zero value. RemoveDeserializationMember(Type, JsonOptions, MemberDefinition) Removes a deserialization member. public static bool RemoveDeserializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. member MemberDefinition The member. May not be null. Returns bool true if item is successfully removed; otherwise, false. RemoveSerializationMember(Type, JsonOptions, MemberDefinition) Removes a serialization member. public static bool RemoveSerializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type. May not be null. options JsonOptions The options. May be null. member MemberDefinition The member. May not be null. Returns bool true if item is successfully removed; otherwise, false. ToString() Returns a System.String that represents this instance. public override string ToString() Returns string A System.String that represents this instance. UsingLock<T>(Action<T>, T) Run a specified action, using the member definition lock. public static void UsingLock<T>(Action<T> action, T state) Parameters action Action<T> The action. May not be null. state T The state. May be null. Type Parameters T The action input type."
  },
  "api/Alis.Core.Aspect.Data.Json.PropertyDescriptorAccessor.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.PropertyDescriptorAccessor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PropertyDescriptorAccessor Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The property descriptor accessor class internal sealed class PropertyDescriptorAccessor : IMemberAccessor Inheritance object PropertyDescriptorAccessor Implements IMemberAccessor Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors PropertyDescriptorAccessor(PropertyDescriptor) Initializes a new instance of the Alis.Core.Aspect.Data.Json.PropertyDescriptorAccessor class public PropertyDescriptorAccessor(PropertyDescriptor pd) Parameters pd PropertyDescriptor The pd Fields _pd The pd private readonly PropertyDescriptor _pd Field Value PropertyDescriptor Methods Get(object) Gets the component public object Get(object component) Parameters component object The component Returns object The object Set(object, object) Sets the component public void Set(object component, object value) Parameters component object The component value object The value See Also IMemberAccessor"
  },
  "api/Alis.Core.Aspect.Data.Json.PropertyInfoAccessor-2.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.PropertyInfoAccessor-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PropertyInfoAccessor<TComponent, TMember> Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The property info accessor class internal sealed class PropertyInfoAccessor<TComponent, TMember> : IMemberAccessor Type Parameters TComponent TMember Inheritance object PropertyInfoAccessor<TComponent, TMember> Implements IMemberAccessor Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors PropertyInfoAccessor(PropertyInfo) Initializes a new instance public PropertyInfoAccessor(PropertyInfo pi) Parameters pi PropertyInfo The pi Fields _get The get private readonly JFunc<TComponent, TMember> _get Field Value JFunc<TComponent, TMember> _set The set private readonly JAction<TComponent, TMember> _set Field Value JAction<TComponent, TMember> Methods Get(object) Gets the component public object Get(object component) Parameters component object The component Returns object The object Set(object, object) Sets the component public void Set(object component, object value) Parameters component object The component value object The value See Also IMemberAccessor"
  },
  "api/Alis.Core.Aspect.Data.Json.ReferenceComparer.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.ReferenceComparer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ReferenceComparer Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll A utility class to compare object by their reference. public sealed class ReferenceComparer : IEqualityComparer<object> Inheritance object ReferenceComparer Implements IEqualityComparer<object> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors ReferenceComparer() Initializes a new instance of the Alis.Core.Aspect.Data.Json.ReferenceComparer class private ReferenceComparer() Fields Instance Gets the instance of the ReferenceComparer class. public static readonly ReferenceComparer Instance Field Value ReferenceComparer Methods IEqualityComparer<object>.Equals(object, object) Describes whether this instance equals bool IEqualityComparer<object>.Equals(object x, object y) Parameters x object The y object The Returns bool The bool IEqualityComparer<object>.GetHashCode(object) Gets the hash code using the specified obj int IEqualityComparer<object>.GetHashCode(object obj) Parameters obj object The obj Returns int The int"
  },
  "api/Alis.Core.Aspect.Data.Json.TypeDef.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.TypeDef.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TypeDef Namespace Alis.Core.Aspect.Data.Json Assembly Alis.dll The type def class internal sealed class TypeDef Inheritance object TypeDef Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors TypeDef(Type, JsonOptions) Initializes a new instance of the Alis.Core.Aspect.Data.Json.TypeDef class internal TypeDef(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Fields Defs The type def internal static readonly Dictionary<string, TypeDef> Defs Field Value Dictionary<string, TypeDef> KeyType The key value type internal static readonly Dictionary<Type, KeyValueType> KeyType Field Value Dictionary<Type, KeyValueType> LockField The lock internal static readonly object LockField Field Value object _deserializationMembers The member definition internal readonly List<MemberDefinition> _deserializationMembers Field Value List<MemberDefinition> _serializationMembers The member definition internal readonly List<MemberDefinition> _serializationMembers Field Value List<MemberDefinition> _type The type internal readonly Type _type Field Value Type Methods AddDeserializationMember(Type, JsonOptions, MemberDefinition) Adds the deserialization member using the specified type public static void AddDeserializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type options JsonOptions The options member MemberDefinition The member AddSerializationMember(Type, JsonOptions, MemberDefinition) Adds the serialization member using the specified type public static void AddSerializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type options JsonOptions The options member MemberDefinition The member ApplyEntry(IDictionary, object, string, object, JsonOptions) Applies the entry using the specified dictionary public void ApplyEntry(IDictionary dictionary, object target, string key, object value, JsonOptions options) Parameters dictionary IDictionary The dictionary target object The target key string The key value object The value options JsonOptions The options CheckJsonAttribute(bool, PropertyInfo, JsonOptions) Describes whether check json attribute internal static bool CheckJsonAttribute(bool serialization, PropertyInfo info, JsonOptions options) Parameters serialization bool The serialization info PropertyInfo The info options JsonOptions The options Returns bool The bool CheckJsonAttribute(bool, PropertyDescriptor, JsonOptions) Describes whether check json attribute internal static bool CheckJsonAttribute(bool serialization, PropertyDescriptor descriptor, JsonOptions options) Parameters serialization bool The serialization descriptor PropertyDescriptor The descriptor options JsonOptions The options Returns bool The bool CheckScriptIgnore(PropertyInfo, JsonOptions) Describes whether check script ignore internal static bool CheckScriptIgnore(PropertyInfo info, JsonOptions options) Parameters info PropertyInfo The info options JsonOptions The options Returns bool The bool CheckScriptIgnore(PropertyDescriptor, JsonOptions) Describes whether check script ignore internal static bool CheckScriptIgnore(PropertyDescriptor descriptor, JsonOptions options) Parameters descriptor PropertyDescriptor The descriptor options JsonOptions The options Returns bool The bool CheckSerialization(bool, PropertyInfo) Describes whether check serialization internal static bool CheckSerialization(bool serialization, PropertyInfo info) Parameters serialization bool The serialization info PropertyInfo The info Returns bool The bool CheckSkipGetOnly(PropertyDescriptor, JsonOptions) Describes whether check skip get only internal static bool CheckSkipGetOnly(PropertyDescriptor descriptor, JsonOptions options) Parameters descriptor PropertyDescriptor The descriptor options JsonOptions The options Returns bool The bool CheckXmlIgnoreAttribute(PropertyInfo, JsonOptions) Describes whether check xml ignore attribute internal static bool CheckXmlIgnoreAttribute(PropertyInfo info, JsonOptions options) Parameters info PropertyInfo The info options JsonOptions The options Returns bool The bool CheckXmlIgnoreAttribute(PropertyDescriptor, JsonOptions) Describes whether check xml ignore attribute internal static bool CheckXmlIgnoreAttribute(PropertyDescriptor descriptor, JsonOptions options) Parameters descriptor PropertyDescriptor The descriptor options JsonOptions The options Returns bool The bool CompareWireName(MemberDefinition, string) Compares the wire name with the specified key. internal static bool CompareWireName(MemberDefinition def, string key) Parameters def MemberDefinition The member definition key string The key Returns bool True if the wire name matches the key, false otherwise CreateJsonEventArgs(TextWriter, object, IDictionary<object, object>, JsonOptions, bool, string, object) Creates the json event args using the specified writer internal static JsonEventArgs CreateJsonEventArgs(TextWriter writer, object component, IDictionary<object, object> objectGraph, JsonOptions options, bool first, string name, object value) Parameters writer TextWriter The writer component object The component objectGraph IDictionary<object, object> The object graph options JsonOptions The options first bool The first name string The name value object The value Returns JsonEventArgs The CreateMemberDefinition(bool, PropertyInfo) Creates the member definition using the specified serialization internal static MemberDefinition CreateMemberDefinition(bool serialization, PropertyInfo info) Parameters serialization bool The serialization info PropertyInfo The info Returns MemberDefinition The ma CreateMemberDefinition(bool, FieldInfo, JsonOptions) Creates the member definition using the specified serialization internal static MemberDefinition CreateMemberDefinition(bool serialization, FieldInfo field, JsonOptions options) Parameters serialization bool The serialization field FieldInfo The field options JsonOptions The options Returns MemberDefinition The member definition CreateMemberDefinition(bool, FieldInfo) Creates the member definition using the specified serialization internal static MemberDefinition CreateMemberDefinition(bool serialization, FieldInfo info) Parameters serialization bool The serialization info FieldInfo The info Returns MemberDefinition The member definition CreateMemberDefinition(bool, PropertyDescriptor) Creates the member definition using the specified serialization internal static MemberDefinition CreateMemberDefinition(bool serialization, PropertyDescriptor descriptor) Parameters serialization bool The serialization descriptor PropertyDescriptor The descriptor Returns MemberDefinition The ma CreateMemberDefinitionForField(bool, FieldInfo, JsonOptions) Creates a member definition for the specified field. internal static MemberDefinition CreateMemberDefinitionForField(bool serialization, FieldInfo field, JsonOptions options) Parameters serialization bool The serialization field FieldInfo The field options JsonOptions The options Returns MemberDefinition A member definition CreateMemberDefinitionIfApplicable(bool, FieldInfo, JsonOptions) Creates the member definition if applicable using the specified serialization internal static MemberDefinition CreateMemberDefinitionIfApplicable(bool serialization, FieldInfo field, JsonOptions options) Parameters serialization bool The serialization field FieldInfo The field options JsonOptions The options Returns MemberDefinition The member definition CreateMemberDefinitionInstance(FieldInfo, string) Creates the member definition instance using the specified info internal static MemberDefinition CreateMemberDefinitionInstance(FieldInfo info, string name) Parameters info FieldInfo The info name string The name Returns MemberDefinition The member definition CreateMemberDefinitions(bool, IEnumerable<FieldInfo>, JsonOptions) Creates the member definitions using the specified serialization internal static IEnumerable<MemberDefinition> CreateMemberDefinitions(bool serialization, IEnumerable<FieldInfo> fields, JsonOptions options) Parameters serialization bool The serialization fields IEnumerable<FieldInfo> The fields options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition CreateMemberDefinitionsFromDescriptors(bool, IEnumerable<PropertyDescriptor>, JsonOptions) Creates member definitions from the specified property descriptors. internal static IEnumerable<MemberDefinition> CreateMemberDefinitionsFromDescriptors(bool serialization, IEnumerable<PropertyDescriptor> descriptors, JsonOptions options) Parameters serialization bool The serialization descriptors IEnumerable<PropertyDescriptor> The property descriptors options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition CreateMemberDefinitionsFromProperties(bool, IEnumerable<PropertyInfo>, JsonOptions) Creates the member definitions from properties using the specified serialization internal static IEnumerable<MemberDefinition> CreateMemberDefinitionsFromProperties(bool serialization, IEnumerable<PropertyInfo> properties, JsonOptions options) Parameters serialization bool The serialization properties IEnumerable<PropertyInfo> The properties options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition EnumerateDefinitionsUsingReflection(bool, Type, JsonOptions) Enumerates the definitions using reflection. internal static IEnumerable<MemberDefinition> EnumerateDefinitionsUsingReflection(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition EnumerateDefinitionsUsingTypeDescriptors(bool, Type, JsonOptions) Enumerates the definitions using type descriptors using the specified serialization internal static IEnumerable<MemberDefinition> EnumerateDefinitionsUsingTypeDescriptors(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition EnumerateFieldDefinitions(bool, Type, JsonOptions) Enumerates the field definitions using reflection if SerializeFields option is enabled. internal static IEnumerable<MemberDefinition> EnumerateFieldDefinitions(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition EnumeratePropertyDefinitions(bool, Type, JsonOptions) Enumerates the property definitions using reflection. internal static IEnumerable<MemberDefinition> EnumeratePropertyDefinitions(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition FindDeserializationMember(string) Finds the deserialization member using the specified key. internal MemberDefinition FindDeserializationMember(string key) Parameters key string The key Returns MemberDefinition The member definition Get(Type, JsonOptions) Gets the type public static TypeDef Get(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Returns TypeDef The type def GetDeserializationMember(string) Gets the deserialization member using the specified key internal MemberDefinition GetDeserializationMember(string key) Parameters key string The key Returns MemberDefinition The member definition GetDeserializationMembers(Type, JsonOptions) Gets the deserialization members using the specified type public static MemberDefinition[] GetDeserializationMembers(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Returns MemberDefinition[] The member definition array GetFieldsFromType(Type) Gets the fields from the specified type. internal static IEnumerable<FieldInfo> GetFieldsFromType(Type type) Parameters type Type The type Returns IEnumerable<FieldInfo> An enumerable of FieldInfo GetKey(Type, JsonOptions) Gets the key using the specified type internal static string GetKey(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Returns string The string GetMemberValueAndName(MemberDefinition, object) Gets the member value and name. internal static (bool, string, object) GetMemberValueAndName(MemberDefinition member, object component) Parameters member MemberDefinition The member component object The component Returns (bool, string, object) The bool, string and object GetPropertiesFromType(Type) Gets the properties from the specified type. internal static IEnumerable<PropertyInfo> GetPropertiesFromType(Type type) Parameters type Type The type Returns IEnumerable<PropertyInfo> An enumerable of PropertyInfo GetPropertiesFromTypeDescriptor(Type) Gets the properties from the specified type using TypeDescriptor. internal static IEnumerable<PropertyDescriptor> GetPropertiesFromTypeDescriptor(Type type) Parameters type Type The type Returns IEnumerable<PropertyDescriptor> An enumerable of PropertyDescriptor GetSerializationMembers(Type, JsonOptions) Gets the serialization members using the specified type public static MemberDefinition[] GetSerializationMembers(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Returns MemberDefinition[] The member definition array HandleCallback(TextWriter, object, IDictionary<object, object>, JsonOptions, bool, bool, string, object) Handles the callback if present. internal static (bool, bool, string, object) HandleCallback(TextWriter writer, object component, IDictionary<object, object> objectGraph, JsonOptions options, bool first, bool nameChanged, string name, object value) Parameters writer TextWriter The writer component object The component objectGraph IDictionary<object, object> The object graph options JsonOptions The options first bool The first nameChanged bool The name changed name string The name value object The value Returns (bool, bool, string, object) The bool, bool, string and object HandleEvent(JsonEventArgs, bool, string, object) Handles the event and returns updated values. internal static (bool, bool, string, object) HandleEvent(JsonEventArgs e, bool first, string name, object value) Parameters e JsonEventArgs The JsonEventArgs first bool The first name string The name value object The value Returns (bool, bool, string, object) The bool, bool, string and object HandleFieldSerialization(bool, Type, JsonOptions) Handles the field serialization using the specified serialization internal static IEnumerable<MemberDefinition> HandleFieldSerialization(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition HandlePropertySerialization(bool, Type, JsonOptions) Handles the property serialization using the specified serialization internal static IEnumerable<MemberDefinition> HandlePropertySerialization(bool serialization, Type type, JsonOptions options) Parameters serialization bool The serialization type Type The type options JsonOptions The options Returns IEnumerable<MemberDefinition> An enumerable of member definition HandleWriteNamedValueObjectCallback(TextWriter, object, IDictionary<object, object>, JsonOptions, MemberDefinition, bool) Handles the write named value object callback using the specified writer internal static (bool, bool, string, object) HandleWriteNamedValueObjectCallback(TextWriter writer, object component, IDictionary<object, object> objectGraph, JsonOptions options, MemberDefinition member, bool first) Parameters writer TextWriter The writer component object The component objectGraph IDictionary<object, object> The object graph options JsonOptions The options member MemberDefinition The member first bool The first Returns (bool, bool, string, object) The bool, bool, string and object InvokeCallback(JsonOptions, JsonEventArgs) Invokes the callback using the specified options internal static void InvokeCallback(JsonOptions options, JsonEventArgs e) Parameters options JsonOptions The options e JsonEventArgs The InvokeCallback(TextWriter, object, IDictionary<object, object>, JsonOptions, bool, string, object) Invokes the callback using the specified writer internal static JsonEventArgs InvokeCallback(TextWriter writer, object component, IDictionary<object, object> objectGraph, JsonOptions options, bool first, string name, object value) Parameters writer TextWriter The writer component object The component objectGraph IDictionary<object, object> The object graph options JsonOptions The options first bool The first name string The name value object The value Returns JsonEventArgs The IsKeyValuePairEnumerable(Type, out Type, out Type) Describes whether is key value pair enumerable public static bool IsKeyValuePairEnumerable(Type type, out Type keyType, out Type valueType) Parameters type Type The type keyType Type The key type valueType Type The value type Returns bool The bool IsUsingJsonAttribute(JsonOptions) Describes whether is using json attribute internal static bool IsUsingJsonAttribute(JsonOptions options) Parameters options JsonOptions The options Returns bool The bool IsXmlIgnoreAttributePresent(PropertyDescriptor) Describes whether is xml ignore attribute present internal static bool IsXmlIgnoreAttributePresent(PropertyDescriptor descriptor) Parameters descriptor PropertyDescriptor The descriptor Returns bool The bool IsXmlIgnoreOptionSet(JsonOptions) Describes whether is xml ignore option set internal static bool IsXmlIgnoreOptionSet(JsonOptions options) Parameters options JsonOptions The options Returns bool The bool LockMethod<T>(Action<T>, T) Locks the action public static void LockMethod<T>(Action<T> action, T state) Parameters action Action<T> The action state T The state Type Parameters T The RemoveDeserializationMember(Type, JsonOptions, MemberDefinition) Describes whether remove deserialization member public static bool RemoveDeserializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type options JsonOptions The options member MemberDefinition The member Returns bool The bool RemoveSerializationMember(Type, JsonOptions, MemberDefinition) Describes whether remove serialization member public static bool RemoveSerializationMember(Type type, JsonOptions options, MemberDefinition member) Parameters type Type The type options JsonOptions The options member MemberDefinition The member Returns bool The bool SetDefaultValue(MemberDefinition, FieldInfo) Sets the default value using the specified member definition internal static void SetDefaultValue(MemberDefinition memberDefinition, FieldInfo info) Parameters memberDefinition MemberDefinition The member definition info FieldInfo The info SetWireNames(bool, MemberDefinition, string) Sets the wire names using the specified serialization internal static void SetWireNames(bool serialization, MemberDefinition memberDefinition, string name) Parameters serialization bool The serialization memberDefinition MemberDefinition The member definition name string The name ShouldCreateMemberDefinition(bool, FieldInfo, JsonOptions) Describes whether should create member definition internal static bool ShouldCreateMemberDefinition(bool serialization, FieldInfo field, JsonOptions options) Parameters serialization bool The serialization field FieldInfo The field options JsonOptions The options Returns bool The bool ShouldCreateMemberDefinitionForField(bool, FieldInfo, JsonOptions) Checks if a member definition should be created for the specified field. internal static bool ShouldCreateMemberDefinitionForField(bool serialization, FieldInfo field, JsonOptions options) Parameters serialization bool The serialization field FieldInfo The field options JsonOptions The options Returns bool True if a member definition should be created, false otherwise ShouldIgnoreAttribute(bool, JsonPropertyNameAttribute) Describes whether should ignore attribute internal static bool ShouldIgnoreAttribute(bool serialization, JsonPropertyNameAttribute attribute) Parameters serialization bool The serialization attribute JsonPropertyNameAttribute The attribute Returns bool The bool ShouldIgnoreCustomAttribute(bool, JsonIgnoreAttribute) Describes whether should ignore custom attribute internal static bool ShouldIgnoreCustomAttribute(bool serialization, JsonIgnoreAttribute attribute) Parameters serialization bool The serialization attribute JsonIgnoreAttribute The attribute Returns bool The bool ShouldSkipDefaultValues(JsonOptions, MemberDefinition, object) Describes whether this instance should skip default values internal bool ShouldSkipDefaultValues(JsonOptions options, MemberDefinition member, object value) Parameters options JsonOptions The options member MemberDefinition The member value object The value Returns bool The bool ShouldSkipDescriptor(bool, PropertyDescriptor, JsonOptions) Describes whether should skip descriptor internal static bool ShouldSkipDescriptor(bool serialization, PropertyDescriptor descriptor, JsonOptions options) Parameters serialization bool The serialization descriptor PropertyDescriptor The descriptor options JsonOptions The options Returns bool The bool ShouldSkipDueToJsonAttribute(bool, FieldInfo, JsonOptions) Describes whether should skip due to json attribute internal static bool ShouldSkipDueToJsonAttribute(bool serialization, FieldInfo info, JsonOptions options) Parameters serialization bool The serialization info FieldInfo The info options JsonOptions The options Returns bool The bool ShouldSkipDueToScriptIgnoreAttribute(FieldInfo, JsonOptions) Describes whether should skip due to script ignore attribute internal static bool ShouldSkipDueToScriptIgnoreAttribute(FieldInfo info, JsonOptions options) Parameters info FieldInfo The info options JsonOptions The options Returns bool The bool ShouldSkipDueToXmlIgnoreAttribute(FieldInfo, JsonOptions) Describes whether should skip due to xml ignore attribute internal static bool ShouldSkipDueToXmlIgnoreAttribute(FieldInfo info, JsonOptions options) Parameters info FieldInfo The info options JsonOptions The options Returns bool The bool ShouldSkipField(bool, FieldInfo, JsonOptions) Determines whether to skip the field during serialization/deserialization. internal static bool ShouldSkipField(bool serialization, FieldInfo info, JsonOptions options) Parameters serialization bool Indicates whether serialization is being performed. info FieldInfo The field information. options JsonOptions The JSON options. Returns bool True if the field should be skipped, false otherwise. ShouldSkipNullDateTimeValues(JsonOptions, MemberDefinition, object) Describes whether this instance should skip null date time values internal bool ShouldSkipNullDateTimeValues(JsonOptions options, MemberDefinition member, object value) Parameters options JsonOptions The options member MemberDefinition The member value object The value Returns bool The bool ShouldSkipNullPropertyValues(JsonOptions, object) Describes whether this instance should skip null property values internal bool ShouldSkipNullPropertyValues(JsonOptions options, object value) Parameters options JsonOptions The options value object The value Returns bool The bool ShouldSkipProperty(bool, PropertyInfo, JsonOptions) Describes whether should skip property internal static bool ShouldSkipProperty(bool serialization, PropertyInfo info, JsonOptions options) Parameters serialization bool The serialization info PropertyInfo The info options JsonOptions The options Returns bool The bool ShouldSkipValue(JsonOptions, MemberDefinition, object) Describes whether this instance should skip value internal bool ShouldSkipValue(JsonOptions options, MemberDefinition member, object value) Parameters options JsonOptions The options member MemberDefinition The member value object The value Returns bool The bool ShouldSkipZeroValueTypes(JsonOptions, MemberDefinition, object) Describes whether this instance should skip zero value types internal bool ShouldSkipZeroValueTypes(JsonOptions options, MemberDefinition member, object value) Parameters options JsonOptions The options member MemberDefinition The member value object The value Returns bool The bool ToString() Returns the string public override string ToString() Returns string The string UnlockedGet(Type, JsonOptions) Unlock the get using the specified type internal static TypeDef UnlockedGet(Type type, JsonOptions options) Parameters type Type The type options JsonOptions The options Returns TypeDef The ta WriteMemberValue(TextWriter, JsonOptions, MemberDefinition, bool, string, object, IDictionary<object, object>) Writes the member value using the specified writer internal void WriteMemberValue(TextWriter writer, JsonOptions options, MemberDefinition member, bool nameChanged, string name, object value, IDictionary<object, object> objectGraph) Parameters writer TextWriter The writer options JsonOptions The options member MemberDefinition The member nameChanged bool The name changed name string The name value object The value objectGraph IDictionary<object, object> The object graph WriteValues(TextWriter, object, IDictionary<object, object>, JsonOptions) Writes the values using the specified writer public void WriteValues(TextWriter writer, object component, IDictionary<object, object> objectGraph, JsonOptions options) Parameters writer TextWriter The writer component object The component objectGraph IDictionary<object, object> The object graph options JsonOptions The options"
  },
  "api/Alis.Core.Aspect.Data.Json.html": {
    "href": "api/Alis.Core.Aspect.Data.Json.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Data.Json Classes CollectionTObject<T> The collection object class Conversions The conversions class CustomListObject The list object class FieldInfoAccessor The field info accessor class JsonConstructorAttribute The json constructor attribute class JsonEventArgs Provides data for a JSON event. JsonException The exception that is thrown when a JSON error occurs. JsonIgnoreAttribute The json ignore attribute class JsonOptions Define options for JSON. JsonPropertyNameAttribute Provides options for JSON. JsonSerializer A utility class to serialize and deserialize JSON. KeyValueType The key value type class KeyValueTypeDictionary The key value type dictionary class KeyValueTypeEnumerator The key value type enumerator class ListObject Defines an object that handles list deserialization. MemberDefinition Defines a type's member. PropertyDescriptorAccessor The property descriptor accessor class PropertyInfoAccessor<TComponent, TMember> The property info accessor class ReferenceComparer A utility class to compare object by their reference. TypeDef The type def class Interfaces IMemberAccessor Defines an interface for quick access to a type member. IOptionsHolder Defines an interface for setting or getting options. Enums JsonEventType Defines a type of JSON event. JsonSerializationOptions Define options for JSON serialization. Delegates JAction<T1, T2> The action JFunc<T, TResult> The func JsonCallback Defines a callback delegate to customize JSON serialization and deserialization."
  },
  "api/Alis.Core.Aspect.Data.Mapping.KeyCodes.html": {
    "href": "api/Alis.Core.Aspect.Data.Mapping.KeyCodes.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum KeyCodes Namespace Alis.Core.Aspect.Data.Mapping Assembly Alis.dll The sdl keycode enum public enum KeyCodes Fields Unknown = 0 The unknown sdl keycode Return = 13 The return sdl keycode Escape = 27 The escape sdl keycode Backspace = 8 The backspace sdl keycode Tab = 9 The tab sdl keycode Space = 32 The space sdl keycode Exclaim = 33 The exclaim sdl keycode Quotedbl = 34 The quotedbl sdl keycode Hash = 35 The hash sdl keycode Percent = 37 The percent sdl keycode Dollar = 36 The dollar sdl keycode Ampersand = 38 The ampersand sdl keycode Quote = 39 The quote sdl keycode Leftparen = 40 The left paren sdl keycode RightParen = 41 The right paren sdl keycode Asterisk = 42 The asterisk sdl keycode Plus = 43 The plus sdl keycode Comma = 44 The comma sdl keycode Minus = 45 The minus sdl keycode Period = 46 The period sdl keycode Slash = 47 The slash sdl keycode Num0 = 48 The sdl keycode Num1 = 49 The sdl keycode Num2 = 50 The sdl keycode Num3 = 51 The sdl keycode Num4 = 52 The sdl keycode Num5 = 53 The sdl keycode Num6 = 54 The sdl keycode Num7 = 55 The sdl keycode Num8 = 56 The sdl keycode Num9 = 57 The sdl keycode Colon = 58 The colon sdl keycode Semicolon = 59 The semicolon sdl keycode Less = 60 The less sdl keycode Equals = 61 The equals sdl keycode Greater = 62 The greater sdl keycode Question = 63 The question sdl keycode At = 64 The at sdl keycode Leftbracket = 91 The leftbracket sdl keycode Backslash = 92 The backslash sdl keycode Rightbracket = 93 The rightbracket sdl keycode Caret = 94 The caret sdl keycode Underscore = 95 The underscore sdl keycode Backquote = 96 The backquote sdl keycode A = 97 The sdl keycode B = 98 The sdl keycode C = 99 The sdl keycode D = 100 The sdl keycode E = 101 The sdl keycode F = 102 The sdl keycode G = 103 The sdl keycode H = 104 The sdl keycode I = 105 The sdl keycode J = 106 The sdl keycode K = 107 The sdl keycode L = 108 The sdl keycode M = 109 The sdl keycode N = 110 The sdl keycode O = 111 The sdl keycode P = 112 The sdl keycode Q = 113 The sdl keycode R = 114 The sdl keycode S = 115 The sdl keycode T = 116 The sdl keycode U = 117 The sdl keycode V = 118 The sdl keycode W = 119 The sdl keycode X = 120 The sdl keycode Y = 121 The sdl keycode Z = 122 The sdl keycode Capslock = 1073741881 The capslock sdl keycode F1 = 1073741882 The f1 sdl keycode F2 = 1073741883 The f2 sdl keycode F3 = 1073741884 The f3 sdl keycode F4 = 1073741885 The f4 sdl keycode F5 = 1073741886 The f5 sdl keycode F6 = 1073741887 The f6 sdl keycode F7 = 1073741888 The f7 sdl keycode F8 = 1073741889 The f8 sdl keycode F9 = 1073741890 The f9 sdl keycode F10 = 1073741891 The f10 sdl keycode F11 = 1073741892 The f11 sdl keycode F12 = 1073741893 The f12 sdl keycode Printscreen = 1073741894 The printscreen sdl keycode Scrolllock = 1073741895 The scrolllock sdl keycode Pause = 1073741896 The pause sdl keycode Insert = 1073741897 The insert sdl keycode Home = 1073741898 The home sdl keycode Pageup = 1073741899 The pageup sdl keycode Delete = 127 The delete sdl keycode End = 1073741901 The end sdl keycode Pagedown = 1073741902 The pagedown sdl keycode Right = 1073741903 The right sdl keycode Left = 1073741904 The left sdl keycode Down = 1073741905 The down sdl keycode Up = 1073741906 The up sdl keycode Numlockclear = 1073741907 The numlockclear sdl keycode KpDivide = 1073741908 The kp divide sdl keycode KpMultiply = 1073741909 The kp multiply sdl keycode KpMinus = 1073741910 The kp minus sdl keycode KpPlus = 1073741911 The kp plus sdl keycode KpEnter = 1073741912 The kp enter sdl keycode Kp1 = 1073741913 The kp sdl keycode Kp2 = 1073741914 The kp sdl keycode Kp3 = 1073741915 The kp sdl keycode Kp4 = 1073741916 The kp sdl keycode Kp5 = 1073741917 The kp sdl keycode Kp6 = 1073741918 The kp sdl keycode Kp7 = 1073741919 The kp sdl keycode Kp8 = 1073741920 The kp sdl keycode Kp9 = 1073741921 The kp sdl keycode Kp0 = 1073741922 The kp sdl keycode KpPeriod = 1073741923 The kp period sdl keycode Application = 1073741925 The application sdl keycode Power = 1073741926 The power sdl keycode KpEquals = 1073741927 The kp equals sdl keycode F13 = 1073741928 The f13 sdl keycode F14 = 1073741929 The f14 sdl keycode F15 = 1073741930 The f15 sdl keycode F16 = 1073741931 The f16 sdl keycode F17 = 1073741932 The f17 sdl keycode F18 = 1073741933 The f18 sdl keycode F19 = 1073741934 The f19 sdl keycode F20 = 1073741935 The f20 sdl keycode F21 = 1073741936 The f21 sdl keycode F22 = 1073741937 The f22 sdl keycode F23 = 1073741938 The f23 sdl keycode F24 = 1073741939 The f24 sdl keycode Execute = 1073741940 The execute sdl keycode Help = 1073741941 The help sdl keycode Menu = 1073741942 The menu sdl keycode Select = 1073741943 The select sdl keycode Stop = 1073741944 The stop sdl keycode Again = 1073741945 The again sdl keycode Undo = 1073741946 The undo sdl keycode Cut = 1073741947 The cut sdl keycode Copy = 1073741948 The copy sdl keycode Paste = 1073741949 The paste sdl keycode Find = 1073741950 The find sdl keycode Mute = 1073741951 The mute sdl keycode Volumeup = 1073741952 The volumeup sdl keycode Volumedown = 1073741953 The volumedown sdl keycode KpComma = 1073741957 The kp comma sdl keycode KpEqualsas400 = 1073741958 The kp equalsas400 sdl keycode Alterase = 1073741977 The alterase sdl keycode Syzsreq = 1073741978 The sysreq sdl keycode Cancel = 1073741979 The cancel sdl keycode Clear = 1073741980 The clear sdl keycode Prior = 1073741981 The prior sdl keycode Return2 = 1073741982 The return2 sdl keycode Separator = 1073741983 The separator sdl keycode Out = 1073741984 The out sdl keycode Oper = 1073741985 The oper sdl keycode Clearagain = 1073741986 The clearagain sdl keycode Crsel = 1073741987 The crsel sdl keycode Exsel = 1073741988 The exsel sdl keycode Kp00 = 1073742000 The kp 00 sdl keycode Kp000 = 1073742001 The kp 000 sdl keycode Thousandsseparator = 1073742002 The thousandsseparator sdl keycode Decimalseparator = 1073742003 The decimalseparator sdl keycode Currencyunit = 1073742004 The currencyunit sdl keycode Currencysubunit = 1073742005 The currencysubunit sdl keycode KpLeftparen = 1073742006 The kp leftparen sdl keycode KpRightparen = 1073742007 The kp rightparen sdl keycode KpLeftbrace = 1073742008 The kp leftbrace sdl keycode KpRightbrace = 1073742009 The kp rightbrace sdl keycode KpTab = 1073742010 The kp tab sdl keycode KpBackspace = 1073742011 The kp backspace sdl keycode KpA = 1073742012 The kp sdl keycode KpB = 1073742013 The kp sdl keycode KpC = 1073742014 The kp sdl keycode KpD = 1073742015 The kp sdl keycode KpE = 1073742016 The kp sdl keycode KpF = 1073742017 The kp sdl keycode KpXor = 1073742018 The kp xor sdl keycode KpPower = 1073742019 The kp power sdl keycode KpPercent = 1073742020 The kp percent sdl keycode KpLess = 1073742021 The kp less sdl keycode KpGreater = 1073742022 The kp greater sdl keycode KpAmpersand = 1073742023 The kp ampersand sdl keycode KpDblampersand = 1073742024 The kp dblampersand sdl keycode KpVerticalbar = 1073742025 The kp verticalbar sdl keycode KpDblverticalbar = 1073742026 The kp dblverticalbar sdl keycode KpColon = 1073742027 The kp colon sdl keycode KpHash = 1073742028 The kp hash sdl keycode KpSpace = 1073742029 The kp space sdl keycode KpAt = 1073742030 The kp at sdl keycode KpExclam = 1073742031 The kp exclam sdl keycode KpMemstore = 1073742032 The kp memstore sdl keycode KpMemrecall = 1073742033 The kp memrecall sdl keycode KpMemclear = 1073742034 The kp memclear sdl keycode KpMemadd = 1073742035 The kp memadd sdl keycode KpMemsubtract = 1073742036 The kp memsubtract sdl keycode KpMemmultiply = 1073742037 The kp memmultiply sdl keycode KpMemdivide = 1073742038 The kp memdivide sdl keycode KpPlusminus = 1073742039 The kp plusminus sdl keycode KpClear = 1073742040 The kp clear sdl keycode KpClearentry = 1073742041 The kp clearentry sdl keycode KpBinary = 1073742042 The kp binary sdl keycode KpOctal = 1073742043 The kp octal sdl keycode KpDecimal = 1073742044 The kp decimal sdl keycode KpHexadecimal = 1073742045 The kp hexadecimal sdl keycode Lctrl = 1073742048 The lctrl sdl keycode Lshift = 1073742049 The lshift sdl keycode Lalt = 1073742050 The lalt sdl keycode Lgui = 1073742051 The lgui sdl keycode Rctrl = 1073742052 The rctrl sdl keycode Rshift = 1073742053 The rshift sdl keycode Ralt = 1073742054 The ralt sdl keycode Rgui = 1073742055 The rgui sdl keycode Mode = 1073742081 The mode sdl keycode Audionext = 1073742082 The audionext sdl keycode Audioprev = 1073742083 The audioprev sdl keycode Audiostop = 1073742084 The audiostop sdl keycode Audioplay = 1073742085 The audioplay sdl keycode Audiomute = 1073742086 The audiomute sdl keycode Mediaselect = 1073742087 The mediaselect sdl keycode Www = 1073742088 The www sdl keycode Mail = 1073742089 The mail sdl keycode Calculator = 1073742090 The calculator sdl keycode Computer = 1073742091 The computer sdl keycode AcSearch = 1073742092 The ac search sdl keycode AcHome = 1073742093 The ac home sdl keycode AcBack = 1073742094 The ac back sdl keycode AcForward = 1073742095 The ac forward sdl keycode AcStop = 1073742096 The ac stop sdl keycode AcRefresh = 1073742097 The ac refresh sdl keycode AcBookmarks = 1073742098 The ac bookmarks sdl keycode Brightnessdown = 1073742099 The brightnessdown sdl keycode Brightnessup = 1073742100 The brightnessup sdl keycode Displayswitch = 1073742101 The displayswitch sdl keycode Kbdillumtoggle = 1073742102 The kbdillumtoggle sdl keycode Kbdillumdown = 1073742103 The kbdillumdown sdl keycode Kbdillumup = 1073742104 The kbdillumup sdl keycode Eject = 1073742105 The eject sdl keycode Sleep = 1073742106 The sleep sdl keycode App1 = 1073742107 The app1 sdl keycode App2 = 1073742108 The app2 sdl keycode Audiorewind = 1073742109 The audiorewind sdl keycode Audiofastforward = 1073742110 The audiofastforward sdl keycode"
  },
  "api/Alis.Core.Aspect.Data.Mapping.SdlInputConst.html": {
    "href": "api/Alis.Core.Aspect.Data.Mapping.SdlInputConst.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SdlInputConst Namespace Alis.Core.Aspect.Data.Mapping Assembly Alis.dll The sdl input const class public class SdlInputConst Inheritance object SdlInputConst Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ButtonLeft The sdl button left public const uint ButtonLeft = 1 Field Value uint ButtonMiddle The sdl button middle public const uint ButtonMiddle = 2 Field Value uint ButtonRight The sdl button right public const uint ButtonRight = 3 Field Value uint ButtonX1 The sdl button x1 private const uint ButtonX1 = 4 Field Value uint ButtonX2 The sdl button x2 private const uint ButtonX2 = 5 Field Value uint HapticAutoCenter The sdl haptic auto center public const ushort HapticAutoCenter = 8192 Field Value ushort HapticCartesian The sdl haptic cartesian public const byte HapticCartesian = 1 Field Value byte HapticConstant The sdl haptic constant public const ushort HapticConstant = 1 Field Value ushort HapticCustom The sdl haptic custom public const ushort HapticCustom = 2048 Field Value ushort HapticDamper The sdl haptic damper public const ushort HapticDamper = 256 Field Value ushort HapticFriction The sdl haptic friction public const ushort HapticFriction = 1024 Field Value ushort HapticGain The sdl haptic gain public const ushort HapticGain = 4096 Field Value ushort HapticInertia The sdl haptic inertia public const ushort HapticInertia = 512 Field Value ushort HapticLeftRight The sdl haptic left right public const ushort HapticLeftRight = 4 Field Value ushort HapticPauseVar The sdl haptic pause public const ushort HapticPauseVar = 32768 Field Value ushort HapticPolar The sdl haptic polar public const byte HapticPolar = 0 Field Value byte HapticSawToothDown The sdl haptic saw tooth down public const ushort HapticSawToothDown = 32 Field Value ushort HapticSawToothUp The sdl haptic saw tooth up public const ushort HapticSawToothUp = 16 Field Value ushort HapticSine The sdl haptic sine public const ushort HapticSine = 2 Field Value ushort HapticSpherical The sdl haptic spherical public const byte HapticSpherical = 2 Field Value byte HapticSpring The sdl haptic spring public const ushort HapticSpring = 128 Field Value ushort HapticStatus The sdl haptic status public const ushort HapticStatus = 16384 Field Value ushort HapticSteeringAxis The sdl haptic steering axis public const byte HapticSteeringAxis = 3 Field Value byte HapticTriangle The sdl haptic triangle public const ushort HapticTriangle = 8 Field Value ushort HatCentered The sdl hat centered public const byte HatCentered = 0 Field Value byte HatDown The sdl hat down private const byte HatDown = 4 Field Value byte HatLeft The sdl hat left private const byte HatLeft = 8 Field Value byte HatLeftDown The sdl hat down public const byte HatLeftDown = 12 Field Value byte HatLeftUp The sdl hat up public const byte HatLeftUp = 9 Field Value byte HatRight The sdl hat right private const byte HatRight = 2 Field Value byte HatRightDown The sdl hat down public const byte HatRightDown = 6 Field Value byte HatRightUp The sdl hat up public const byte HatRightUp = 3 Field Value byte HatUp The sdl hat up private const byte HatUp = 1 Field Value byte IphoneMaxGForce The sdl iphone max g force public const float IphoneMaxGForce = 5 Field Value float KScancodeMask The sdl scancode mask public const int KScancodeMask = 1073741824 Field Value int TouchMouseId The max value public const uint TouchMouseId = 4294967295 Field Value uint"
  },
  "api/Alis.Core.Aspect.Data.Mapping.SdlScancode.html": {
    "href": "api/Alis.Core.Aspect.Data.Mapping.SdlScancode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum SdlScancode Namespace Alis.Core.Aspect.Data.Mapping Assembly Alis.dll The sdl scancode enum public enum SdlScancode Fields SdlScancodeUnknown = 0 The sdl scancode unknown sdl scancode SdlScancodeA = 4 The sdl scancode sdl scancode SdlScancodeB = 5 The sdl scancode sdl scancode SdlScancodeC = 6 The sdl scancode sdl scancode SdlScancodeD = 7 The sdl scancode sdl scancode SdlScancodeE = 8 The sdl scancode sdl scancode SdlScancodeF = 9 The sdl scancode sdl scancode SdlScancodeG = 10 The sdl scancode sdl scancode SdlScancodeH = 11 The sdl scancode sdl scancode SdlScancodeI = 12 The sdl scancode sdl scancode SdlScancodeJ = 13 The sdl scancode sdl scancode SdlScancodeK = 14 The sdl scancode sdl scancode SdlScancodeL = 15 The sdl scancode sdl scancode SdlScancodeM = 16 The sdl scancode sdl scancode SdlScancodeN = 17 The sdl scancode sdl scancode SdlScancodeO = 18 The sdl scancode sdl scancode SdlScancodeP = 19 The sdl scancode sdl scancode SdlScancodeQ = 20 The sdl scancode sdl scancode SdlScancodeR = 21 The sdl scancode sdl scancode SdlScancodeS = 22 The sdl scancode sdl scancode SdlScancodeT = 23 The sdl scancode sdl scancode SdlScancodeU = 24 The sdl scancode sdl scancode SdlScancodeV = 25 The sdl scancode sdl scancode SdlScancodeW = 26 The sdl scancode sdl scancode SdlScancodeX = 27 The sdl scancode sdl scancode SdlScancodeY = 28 The sdl scancode sdl scancode SdlScancodeZ = 29 The sdl scancode sdl scancode SdlScancode1 = 30 The sdl scancode sdl scancode SdlScancode2 = 31 The sdl scancode sdl scancode SdlScancode3 = 32 The sdl scancode sdl scancode SdlScancode4 = 33 The sdl scancode sdl scancode SdlScancode5 = 34 The sdl scancode sdl scancode SdlScancode6 = 35 The sdl scancode sdl scancode SdlScancode7 = 36 The sdl scancode sdl scancode SdlScancode8 = 37 The sdl scancode sdl scancode SdlScancode9 = 38 The sdl scancode sdl scancode SdlScancode0 = 39 The sdl scancode sdl scancode SdlScancodeReturn = 40 The sdl scancode return sdl scancode SdlScancodeEscape = 41 The sdl scancode escape sdl scancode SdlScancodeBackspace = 42 The sdl scancode backspace sdl scancode SdlScancodeTab = 43 The sdl scancode tab sdl scancode SdlScancodeSpace = 44 The sdl scancode space sdl scancode SdlScancodeMinus = 45 The sdl scancode minus sdl scancode SdlScancodeEquals = 46 The sdl scancode equals sdl scancode SdlScancodeLeftbracket = 47 The sdl scancode leftbracket sdl scancode SdlScancodeRightbracket = 48 The sdl scancode rightbracket sdl scancode SdlScancodeBackslash = 49 The sdl scancode backslash sdl scancode SdlScancodeNonushash = 50 The sdl scancode nonushash sdl scancode SdlScancodeSemicolon = 51 The sdl scancode semicolon sdl scancode SdlScancodeApostrophe = 52 The sdl scancode apostrophe sdl scancode SdlScancodeGrave = 53 The sdl scancode grave sdl scancode SdlScancodeComma = 54 The sdl scancode comma sdl scancode SdlScancodePeriod = 55 The sdl scancode period sdl scancode SdlScancodeSlash = 56 The sdl scancode slash sdl scancode SdlScancodeCapslock = 57 The sdl scancode capslock sdl scancode SdlScancodeF1 = 58 The sdl scancode f1 sdl scancode SdlScancodeF2 = 59 The sdl scancode f2 sdl scancode SdlScancodeF3 = 60 The sdl scancode f3 sdl scancode SdlScancodeF4 = 61 The sdl scancode f4 sdl scancode SdlScancodeF5 = 62 The sdl scancode f5 sdl scancode SdlScancodeF6 = 63 The sdl scancode f6 sdl scancode SdlScancodeF7 = 64 The sdl scancode f7 sdl scancode SdlScancodeF8 = 65 The sdl scancode f8 sdl scancode SdlScancodeF9 = 66 The sdl scancode f9 sdl scancode SdlScancodeF10 = 67 The sdl scancode f10 sdl scancode SdlScancodeF11 = 68 The sdl scancode f11 sdl scancode SdlScancodeF12 = 69 The sdl scancode f12 sdl scancode SdlScancodePrintscreen = 70 The sdl scancode printscreen sdl scancode SdlScancodeScrolllock = 71 The sdl scancode scrolllock sdl scancode SdlScancodePause = 72 The sdl scancode pause sdl scancode SdlScancodeInsert = 73 The sdl scancode insert sdl scancode SdlScancodeHome = 74 The sdl scancode home sdl scancode SdlScancodePageup = 75 The sdl scancode pageup sdl scancode SdlScancodeDelete = 76 The sdl scancode delete sdl scancode SdlScancodeEnd = 77 The sdl scancode end sdl scancode SdlScancodePagedown = 78 The sdl scancode pagedown sdl scancode SdlScancodeRight = 79 The sdl scancode right sdl scancode SdlScancodeLeft = 80 The sdl scancode left sdl scancode SdlScancodeDown = 81 The sdl scancode down sdl scancode SdlScancodeUp = 82 The sdl scancode up sdl scancode SdlScancodeNumlockclear = 83 The sdl scancode numlockclear sdl scancode SdlScancodeKpDivide = 84 The sdl scancode kp divide sdl scancode SdlScancodeKpMultiply = 85 The sdl scancode kp multiply sdl scancode SdlScancodeKpMinus = 86 The sdl scancode kp minus sdl scancode SdlScancodeKpPlus = 87 The sdl scancode kp plus sdl scancode SdlScancodeKpEnter = 88 The sdl scancode kp enter sdl scancode SdlScancodeKp1 = 89 The sdl scancode kp sdl scancode SdlScancodeKp2 = 90 The sdl scancode kp sdl scancode SdlScancodeKp3 = 91 The sdl scancode kp sdl scancode SdlScancodeKp4 = 92 The sdl scancode kp sdl scancode SdlScancodeKp5 = 93 The sdl scancode kp sdl scancode SdlScancodeKp6 = 94 The sdl scancode kp sdl scancode SdlScancodeKp7 = 95 The sdl scancode kp sdl scancode SdlScancodeKp8 = 96 The sdl scancode kp sdl scancode SdlScancodeKp9 = 97 The sdl scancode kp sdl scancode SdlScancodeKp0 = 98 The sdl scancode kp sdl scancode SdlScancodeKpPeriod = 99 The sdl scancode kp period sdl scancode SdlScancodeNonusbackslash = 100 The sdl scancode nonusbackslash sdl scancode SdlScancodeApplication = 101 The sdl scancode application sdl scancode SdlScancodePower = 102 The sdl scancode power sdl scancode SdlScancodeKpEquals = 103 The sdl scancode kp equals sdl scancode SdlScancodeF13 = 104 The sdl scancode f13 sdl scancode SdlScancodeF14 = 105 The sdl scancode f14 sdl scancode SdlScancodeF15 = 106 The sdl scancode f15 sdl scancode SdlScancodeF16 = 107 The sdl scancode f16 sdl scancode SdlScancodeF17 = 108 The sdl scancode f17 sdl scancode SdlScancodeF18 = 109 The sdl scancode f18 sdl scancode SdlScancodeF19 = 110 The sdl scancode f19 sdl scancode SdlScancodeF20 = 111 The sdl scancode f20 sdl scancode SdlScancodeF21 = 112 The sdl scancode f21 sdl scancode SdlScancodeF22 = 113 The sdl scancode f22 sdl scancode SdlScancodeF23 = 114 The sdl scancode f23 sdl scancode SdlScancodeF24 = 115 The sdl scancode f24 sdl scancode SdlScancodeExecute = 116 The sdl scancode execute sdl scancode SdlScancodeHelp = 117 The sdl scancode help sdl scancode SdlScancodeMenu = 118 The sdl scancode menu sdl scancode SdlScancodeSelect = 119 The sdl scancode select sdl scancode SdlScancodeStop = 120 The sdl scancode stop sdl scancode SdlScancodeAgain = 121 The sdl scancode again sdl scancode SdlScancodeUndo = 122 The sdl scancode undo sdl scancode SdlScancodeCut = 123 The sdl scancode cut sdl scancode SdlScancodeCopy = 124 The sdl scancode copy sdl scancode SdlScancodePaste = 125 The sdl scancode paste sdl scancode SdlScancodeFind = 126 The sdl scancode find sdl scancode SdlScancodeMute = 127 The sdl scancode mute sdl scancode SdlScancodeVolumeup = 128 The sdl scancode volumeup sdl scancode SdlScancodeVolumedown = 129 The sdl scancode volumedown sdl scancode SdlScancodeKpComma = 133 The sdl scancode kp comma sdl scancode SdlScancodeKpEqualsas400 = 134 The sdl scancode kp equalsas400 sdl scancode SdlScancodeInternational1 = 135 The sdl scancode international1 sdl scancode SdlScancodeInternational2 = 136 The sdl scancode international2 sdl scancode SdlScancodeInternational3 = 137 The sdl scancode international3 sdl scancode SdlScancodeInternational4 = 138 The sdl scancode international4 sdl scancode SdlScancodeInternational5 = 139 The sdl scancode international5 sdl scancode SdlScancodeInternational6 = 140 The sdl scancode international6 sdl scancode SdlScancodeInternational7 = 141 The sdl scancode international7 sdl scancode SdlScancodeInternational8 = 142 The sdl scancode international8 sdl scancode SdlScancodeInternational9 = 143 The sdl scancode international9 sdl scancode SdlScancodeLang1 = 144 The sdl scancode lang1 sdl scancode SdlScancodeLang2 = 145 The sdl scancode lang2 sdl scancode SdlScancodeLang3 = 146 The sdl scancode lang3 sdl scancode SdlScancodeLang4 = 147 The sdl scancode lang4 sdl scancode SdlScancodeLang5 = 148 The sdl scancode lang5 sdl scancode SdlScancodeLang6 = 149 The sdl scancode lang6 sdl scancode SdlScancodeLang7 = 150 The sdl scancode lang7 sdl scancode SdlScancodeLang8 = 151 The sdl scancode lang8 sdl scancode SdlScancodeLang9 = 152 The sdl scancode lang9 sdl scancode SdlScancodeAlterase = 153 The sdl scancode alterase sdl scancode SdlScancodeSysreq = 154 The sdl scancode sysreq sdl scancode SdlScancodeCancel = 155 The sdl scancode cancel sdl scancode SdlScancodeClear = 156 The sdl scancode clear sdl scancode SdlScancodePrior = 157 The sdl scancode prior sdl scancode SdlScancodeReturn2 = 158 The sdl scancode return2 sdl scancode SdlScancodeSeparator = 159 The sdl scancode separator sdl scancode SdlScancodeOut = 160 The sdl scancode out sdl scancode SdlScancodeOper = 161 The sdl scancode oper sdl scancode SdlScancodeClearagain = 162 The sdl scancode clearagain sdl scancode SdlScancodeCrsel = 163 The sdl scancode crsel sdl scancode SdlScancodeExsel = 164 The sdl scancode exsel sdl scancode SdlScancodeKp00 = 176 The sdl scancode kp 00 sdl scancode SdlScancodeKp000 = 177 The sdl scancode kp 000 sdl scancode SdlScancodeThousandsseparator = 178 The sdl scancode thousandsseparator sdl scancode SdlScancodeDecimalseparator = 179 The sdl scancode decimalseparator sdl scancode SdlScancodeCurrencyunit = 180 The sdl scancode currencyunit sdl scancode SdlScancodeCurrencysubunit = 181 The sdl scancode currencysubunit sdl scancode SdlScancodeKpLeftparen = 182 The sdl scancode kp leftparen sdl scancode SdlScancodeKpRightparen = 183 The sdl scancode kp rightparen sdl scancode SdlScancodeKpLeftbrace = 184 The sdl scancode kp leftbrace sdl scancode SdlScancodeKpRightbrace = 185 The sdl scancode kp rightbrace sdl scancode SdlScancodeKpTab = 186 The sdl scancode kp tab sdl scancode SdlScancodeKpBackspace = 187 The sdl scancode kp backspace sdl scancode SdlScancodeKpA = 188 The sdl scancode kp sdl scancode SdlScancodeKpB = 189 The sdl scancode kp sdl scancode SdlScancodeKpC = 190 The sdl scancode kp sdl scancode SdlScancodeKpD = 191 The sdl scancode kp sdl scancode SdlScancodeKpE = 192 The sdl scancode kp sdl scancode SdlScancodeKpF = 193 The sdl scancode kp sdl scancode SdlScancodeKpXor = 194 The sdl scancode kp xor sdl scancode SdlScancodeKpPower = 195 The sdl scancode kp power sdl scancode SdlScancodeKpPercent = 196 The sdl scancode kp percent sdl scancode SdlScancodeKpLess = 197 The sdl scancode kp less sdl scancode SdlScancodeKpGreater = 198 The sdl scancode kp greater sdl scancode SdlScancodeKpAmpersand = 199 The sdl scancode kp ampersand sdl scancode SdlScancodeKpDblampersand = 200 The sdl scancode kp dblampersand sdl scancode SdlScancodeKpVerticalbar = 201 The sdl scancode kp verticalbar sdl scancode SdlScancodeKpDblverticalbar = 202 The sdl scancode kp dblverticalbar sdl scancode SdlScancodeKpColon = 203 The sdl scancode kp colon sdl scancode SdlScancodeKpHash = 204 The sdl scancode kp hash sdl scancode SdlScancodeKpSpace = 205 The sdl scancode kp space sdl scancode SdlScancodeKpAt = 206 The sdl scancode kp at sdl scancode SdlScancodeKpExclam = 207 The sdl scancode kp exclam sdl scancode SdlScancodeKpMemstore = 208 The sdl scancode kp memstore sdl scancode SdlScancodeKpMemrecall = 209 The sdl scancode kp memrecall sdl scancode SdlScancodeKpMemclear = 210 The sdl scancode kp memclear sdl scancode SdlScancodeKpMemadd = 211 The sdl scancode kp memadd sdl scancode SdlScancodeKpMemsubtract = 212 The sdl scancode kp memsubtract sdl scancode SdlScancodeKpMemmultiply = 213 The sdl scancode kp memmultiply sdl scancode SdlScancodeKpMemdivide = 214 The sdl scancode kp memdivide sdl scancode SdlScancodeKpPlusminus = 215 The sdl scancode kp plusminus sdl scancode SdlScancodeKpClear = 216 The sdl scancode kp clear sdl scancode SdlScancodeKpClearentry = 217 The sdl scancode kp clearentry sdl scancode SdlScancodeKpBinary = 218 The sdl scancode kp binary sdl scancode SdlScancodeKpOctal = 219 The sdl scancode kp octal sdl scancode SdlScancodeKpDecimal = 220 The sdl scancode kp decimal sdl scancode SdlScancodeKpHexadecimal = 221 The sdl scancode kp hexadecimal sdl scancode SdlScancodeLctrl = 224 The sdl scancode lctrl sdl scancode SdlScancodeLshift = 225 The sdl scancode lshift sdl scancode SdlScancodeLalt = 226 The sdl scancode lalt sdl scancode SdlScancodeLgui = 227 The sdl scancode lgui sdl scancode SdlScancodeRctrl = 228 The sdl scancode rctrl sdl scancode SdlScancodeRshift = 229 The sdl scancode rshift sdl scancode SdlScancodeRalt = 230 The sdl scancode ralt sdl scancode SdlScancodeRgui = 231 The sdl scancode rgui sdl scancode SdlScancodeMode = 257 The sdl scancode mode sdl scancode SdlScancodeAudionext = 258 The sdl scancode audionext sdl scancode SdlScancodeAudioprev = 259 The sdl scancode audioprev sdl scancode SdlScancodeAudiostop = 260 The sdl scancode audiostop sdl scancode SdlScancodeAudioplay = 261 The sdl scancode audioplay sdl scancode SdlScancodeAudiomute = 262 The sdl scancode audiomute sdl scancode SdlScancodeMediaselect = 263 The sdl scancode mediaselect sdl scancode SdlScancodeWww = 264 The sdl scancode www sdl scancode SdlScancodeMail = 265 The sdl scancode mail sdl scancode SdlScancodeCalculator = 266 The sdl scancode calculator sdl scancode SdlScancodeComputer = 267 The sdl scancode computer sdl scancode SdlScancodeAcSearch = 268 The sdl scancode ac search sdl scancode SdlScancodeAcHome = 269 The sdl scancode ac home sdl scancode SdlScancodeAcBack = 270 The sdl scancode ac back sdl scancode SdlScancodeAcForward = 271 The sdl scancode ac forward sdl scancode SdlScancodeAcStop = 272 The sdl scancode ac stop sdl scancode SdlScancodeAcRefresh = 273 The sdl scancode ac refresh sdl scancode SdlScancodeAcBookmarks = 274 The sdl scancode ac bookmarks sdl scancode SdlScancodeBrightnessdown = 275 The sdl scancode brightnessdown sdl scancode SdlScancodeBrightnessup = 276 The sdl scancode brightnessup sdl scancode SdlScancodeDisplayswitch = 277 The sdl scancode displayswitch sdl scancode SdlScancodeKbdillumtoggle = 278 The sdl scancode kbdillumtoggle sdl scancode SdlScancodeKbdillumdown = 279 The sdl scancode kbdillumdown sdl scancode SdlScancodeKbdillumup = 280 The sdl scancode kbdillumup sdl scancode SdlScancodeEject = 281 The sdl scancode eject sdl scancode SdlScancodeSleep = 282 The sdl scancode sleep sdl scancode SdlScancodeApp1 = 283 The sdl scancode app1 sdl scancode SdlScancodeApp2 = 284 The sdl scancode app2 sdl scancode SdlScancodeAudiorewind = 285 The sdl scancode audiorewind sdl scancode SdlScancodeAudiofastforward = 286 The sdl scancode audiofastforward sdl scancode SdlNumScancodes = 512 The sdl num scancodes sdl scancode"
  },
  "api/Alis.Core.Aspect.Data.Mapping.html": {
    "href": "api/Alis.Core.Aspect.Data.Mapping.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Data.Mapping Classes SdlInputConst The sdl input const class Enums KeyCodes The sdl keycode enum SdlScancode The sdl scancode enum"
  },
  "api/Alis.Core.Aspect.Data.Resource.AssetManager.html": {
    "href": "api/Alis.Core.Aspect.Data.Resource.AssetManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AssetManager Namespace Alis.Core.Aspect.Data.Resource Assembly Alis.dll The example class public static class AssetManager Inheritance object AssetManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Find(string) Finds the asset name in the \"assets\" folder and its subdirectories. public static string Find(string assetName) Parameters assetName string The asset name. Returns string The full path of the asset if found; otherwise, an empty string. GetAssetsDirectory() Gets the assets directory internal static string GetAssetsDirectory() Returns string The string GetFilePath(string[]) Gets the file path using the specified files internal static string GetFilePath(string[] files) Parameters files string[] The files Returns string The string GetFilesInAssetsDirectory(string, string) Gets the files in assets directory using the specified assets directory internal static string[] GetFilesInAssetsDirectory(string assetsDirectory, string assetName) Parameters assetsDirectory string The assets directory assetName string The asset name Returns string[] The string array IsInvalidAssetName(string) Checks if the asset name has any invalid characters internal static bool IsInvalidAssetName(string assetName) Parameters assetName string The asset name Returns bool True if the asset name is invalid, false otherwise ValidateAssetName(string) Validates the asset name using the specified asset name internal static void ValidateAssetName(string assetName) Parameters assetName string The asset name ValidateAssetNameHasExtension(string) Validates the asset name has extension using the specified asset name internal static void ValidateAssetNameHasExtension(string assetName) Parameters assetName string The asset name Exceptions ArgumentException The asset name must have extension. ValidateAssetNameHasNoInvalidChars(string) Validates the asset name has no invalid chars using the specified asset name internal static void ValidateAssetNameHasNoInvalidChars(string assetName) Parameters assetName string The asset name Exceptions ArgumentException The asset name contains invalid characters. ValidateAssetNameIsNotEmpty(string) Validates the asset name is not empty using the specified asset name internal static void ValidateAssetNameIsNotEmpty(string assetName) Parameters assetName string The asset name Exceptions ArgumentException The asset name cannot be empty. ValidateAssetNameIsNotNull(string) Validates the asset name is not null using the specified asset name internal static void ValidateAssetNameIsNotNull(string assetName) Parameters assetName string The asset name Exceptions ArgumentNullException ValidateFileCount(string[], string) Validates the file count using the specified files internal static void ValidateFileCount(string[] files, string assetName) Parameters files string[] The files assetName string The asset name Exceptions InvalidOperationException Multiple files with the name '{assetName}' were found. Unable to determine the correct file."
  },
  "api/Alis.Core.Aspect.Data.Resource.html": {
    "href": "api/Alis.Core.Aspect.Data.Resource.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Data.Resource Classes AssetManager The example class"
  },
  "api/Alis.Core.Aspect.Data.html": {
    "href": "api/Alis.Core.Aspect.Data.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Data Namespaces Alis.Core.Aspect.Data.Dll Alis.Core.Aspect.Data.Json Alis.Core.Aspect.Data.Mapping Alis.Core.Aspect.Data.Resource"
  },
  "api/Alis.Core.Aspect.Fluent.IBuild-1.html": {
    "href": "api/Alis.Core.Aspect.Fluent.IBuild-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBuild<TOrigin> Namespace Alis.Core.Aspect.Fluent Assembly Alis.dll The build interface public interface IBuild<out TOrigin> Type Parameters TOrigin Methods Build() Builds this instance TOrigin Build() Returns TOrigin The origin"
  },
  "api/Alis.Core.Aspect.Fluent.IBuilder-1.html": {
    "href": "api/Alis.Core.Aspect.Fluent.IBuilder-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBuilder<TOut> Namespace Alis.Core.Aspect.Fluent Assembly Alis.dll The builder interface public interface IBuilder<out TOut> Type Parameters TOut Methods Builder() Builders TOut Builder() Returns TOut The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAdd-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAdd-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAdd<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The add interface public interface IAdd<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Add<T>(TArgument) Adds the value TBuilder Add<T>(TArgument value) Parameters value TArgument The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAddAnimation-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAddAnimation-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAddAnimation<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The add animation interface public interface IAddAnimation<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods AddAnimation(TArgument) Adds the animation using the specified value TBuilder AddAnimation(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAddComponent-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAddComponent-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAddComponent<TBuilder, TType> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The add component class public interface IAddComponent<out TBuilder, in TType> Type Parameters TBuilder TType Methods AddComponent<T>(Func<T, TType>) Adds the component using the specified value TBuilder AddComponent<T>(Func<T, in TType> value) where T : TType Parameters value Func<T, TType> The value Returns TBuilder The builder Type Parameters T The AddComponent<T>(T) Adds the component using the specified value TBuilder AddComponent<T>(T value) where T : TType Parameters value T The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAddFrame-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAddFrame-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAddFrame<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The add frame interface public interface IAddFrame<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods AddFrame(TArgument) Adds the frame using the specified value TBuilder AddFrame(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAds-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAds-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAds<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The ads interface public interface IAds<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Ads(TArgument) Adses the value TBuilder Ads(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAi-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAi-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAi<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The ai interface public interface IAi<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Ai(TArgument) Ais the value TBuilder Ai(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAngularVelocity-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAngularVelocity-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAngularVelocity<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The angular velocity interface public interface IAngularVelocity<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods AngularVelocity(TArgument) Angular the velocity using the specified value TBuilder AngularVelocity(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAudio-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAudio-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAudio<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The audio interface public interface IAudio<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Audio(TArgument) Audioes the value TBuilder Audio(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAuthor-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAuthor-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAuthor<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The author interface public interface IAuthor<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Author(TArgument) Authors the value TBuilder Author(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IAutoTilling-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IAutoTilling-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAutoTilling<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The auto tilling interface public interface IAutoTilling<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods AutoTilling(TArgument) Autoes the tilling using the specified value TBuilder AutoTilling(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IBackground-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IBackground-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBackground<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The background interface public interface IBackground<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Background(TArgument) Backgrounds the value TBuilder Background(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IBackgroundColor-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IBackgroundColor-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBackgroundColor<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The background color interface public interface IBackgroundColor<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods BackgroundColor(TArgument) Backgrounds the color using the specified value TBuilder BackgroundColor(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IBodyType-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IBodyType-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBodyType<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The body type interface public interface IBodyType<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods BodyType(TArgument) Bodies the type using the specified value TBuilder BodyType(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ICloud-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ICloud-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ICloud<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The cloud interface public interface ICloud<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Cloud(TArgument) Clouds the value TBuilder Cloud(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IConfiguration-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IConfiguration-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IConfiguration<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The configuration interface public interface IConfiguration<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Configuration(TArgument) Configurations the value TBuilder Configuration(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ICreate-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ICreate-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ICreate<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The create interface public interface ICreate<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Create(TArgument) Creates the obj TBuilder Create(TArgument obj) Parameters obj TArgument The obj Returns TBuilder The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDebug-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDebug-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDebug<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The debug interface public interface IDebug<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Debug(TArgument) Debugs the value TBuilder Debug(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDebugColor-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDebugColor-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDebugColor<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The debug color interface public interface IDebugColor<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods DebugColor(TArgument) Debugs the color using the specified value TBuilder DebugColor(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDelete-1.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDelete-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDelete<TBuilder> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The delete interface public interface IDelete<out TBuilder> Type Parameters TBuilder Methods Delete() Deletes this instance TBuilder Delete() Returns TBuilder The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDensity-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDensity-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDensity<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The density interface public interface IDensity<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Density(TArgument) Densities the value TBuilder Density(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDepth-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDepth-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDepth<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The depth interface public interface IDepth<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Depth(TArgument) Depths the value TBuilder Depth(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IDescription-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IDescription-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IDescription<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The description interface public interface IDescription<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Description(TArgument) Descriptions the value TBuilder Description(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IFile-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IFile-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IFile<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The file interface public interface IFile<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods File(TArgument) Files the value TBuilder File(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IFilePath-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IFilePath-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IFilePath<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The file path interface public interface IFilePath<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods FilePath(TArgument) Files the path using the specified value TBuilder FilePath(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IFixedRotation-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IFixedRotation-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IFixedRotation<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The fixed rotation interface public interface IFixedRotation<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods FixedRotation(TArgument) Fixeds the rotation using the specified value TBuilder FixedRotation(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IFriction-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IFriction-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IFriction<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The friction interface public interface IFriction<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Friction(TArgument) Frictions the value TBuilder Friction(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IGeneral-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IGeneral-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGeneral<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The general interface public interface IGeneral<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods General(TArgument) Generals the value TBuilder General(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IGraphic-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IGraphic-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGraphic<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The graphic interface public interface IGraphic<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Graphic(TArgument) Graphics the value TBuilder Graphic(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IGravity-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IGravity-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGravity<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The gravity interface public interface IGravity<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Gravity(TArgument, TArgument) Gravities the x TBuilder Gravity(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IGravityScale-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IGravityScale-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGravityScale<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The gravity scale interface public interface IGravityScale<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods GravityScale(TArgument) Gravities the scale using the specified value TBuilder GravityScale(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IHas-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IHas-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IHas<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The has interface public interface IHas<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Has(TArgument) Hases the obj TBuilder Has(TArgument obj) Parameters obj TArgument The obj Returns TBuilder The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIcon-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIcon-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIcon<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The icon interface public interface IIcon<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Icon(TArgument) Icons the value TBuilder Icon(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IInput-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IInput-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IInput<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The input interface public interface IInput<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Input(TArgument) Inputs the value TBuilder Input(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIs-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIs-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIs<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is interface public interface IIs<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Is<T>(TArgument) Ises the value TBuilder Is<T>(TArgument value) Parameters value TArgument The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIsActive-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIsActive-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIsActive<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is active interface public interface IIsActive<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods IsActive(TArgument) Ises the active using the specified value TBuilder IsActive(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIsDynamic-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIsDynamic-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIsDynamic<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is dynamic interface public interface IIsDynamic<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods IsDynamic() Ises the dynamic TBuilder IsDynamic() Returns TBuilder The builder IsDynamic(TArgument) Ises the dynamic using the specified value TBuilder IsDynamic(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIsResizable-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIsResizable-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIsResizable<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is resizable interface public interface IIsResizable<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods IsResizable() Ises the resizable TBuilder IsResizable() Returns TBuilder The builder IsResizable(TArgument) Ises the resizable using the specified value TBuilder IsResizable(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIsStatic-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIsStatic-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIsStatic<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is static interface public interface IIsStatic<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods IsStatic() Ises the static TBuilder IsStatic() Returns TBuilder The builder IsStatic(TArgument) Ises the static using the specified value TBuilder IsStatic(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IIsTrigger-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IIsTrigger-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIsTrigger<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The is trigger interface public interface IIsTrigger<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods IsTrigger() Ises the trigger TBuilder IsTrigger() Returns TBuilder The builder IsTrigger(TArgument) Ises the trigger using the specified value TBuilder IsTrigger(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ILicense-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ILicense-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ILicense<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The license interface public interface ILicense<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods License(TArgument) Licenses the value TBuilder License(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ILinearVelocity-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ILinearVelocity-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ILinearVelocity<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The linear velocity interface public interface ILinearVelocity<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods LinearVelocity(TArgument, TArgument) Linears the velocity using the specified x TBuilder LinearVelocity(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ILogLevel-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ILogLevel-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ILogLevel<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The log level interface public interface ILogLevel<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods LogLevel(TArgument) Logs the level using the specified value TBuilder LogLevel(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IManager-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IManager-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IManager<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The manager interface public interface IManager<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Manager<T>(TArgument) Withes the specified value. TBuilder Manager<T>(TArgument value) Parameters value TArgument The value. Returns TBuilder Return that you want. Type Parameters T"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IManagerOf-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IManagerOf-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IManagerOf<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The manager of interface public interface IManagerOf<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods ManagerOf<T>(TArgument) Managers the of using the specified value TBuilder ManagerOf<T>(TArgument value) Parameters value TArgument The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IMass-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IMass-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IMass<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The mass interface public interface IMass<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Mass(TArgument) Masses the value TBuilder Mass(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IMute-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IMute-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IMute<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The mute interface public interface IMute<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Mute(TArgument) Mutes the value TBuilder Mute(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IName-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IName-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IName<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The name interface public interface IName<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Name(TArgument) Names the value TBuilder Name(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.INetwork-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.INetwork-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface INetwork<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The network interface public interface INetwork<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Network(TArgument) Networks the value TBuilder Network(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IOrder-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IOrder-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IOrder<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The order interface public interface IOrder<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Order(TArgument) Orders the value TBuilder Order(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IPhysic-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IPhysic-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPhysic<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The physic interface public interface IPhysic<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Physic(TArgument) Physics the value TBuilder Physic(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IPlayOnAwake-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IPlayOnAwake-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPlayOnAwake<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The play on awake interface public interface IPlayOnAwake<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods PlayOnAwake(TArgument) Plays the on awake using the specified value TBuilder PlayOnAwake(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IPlugin-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IPlugin-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPlugin<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The plugin interface public interface IPlugin<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Plugin(TArgument) Plugins the value TBuilder Plugin(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IPosition2D-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IPosition2D-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPosition2D<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The position interface public interface IPosition2D<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Position(TArgument, TArgument) Positions the x TBuilder Position(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IProfile-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IProfile-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IProfile<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The profile interface public interface IProfile<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Profile(TArgument) Profiles the value TBuilder Profile(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IRelativePosition-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IRelativePosition-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IRelativePosition<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The relative position interface public interface IRelativePosition<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods RelativePosition(TArgument, TArgument) Relatives the position using the specified x TBuilder RelativePosition(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IResolution-3.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IResolution-3.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IResolution<TBuilder, TArgument1, TArgument2> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The resolution interface public interface IResolution<out TBuilder, in TArgument1, in TArgument2> Type Parameters TBuilder TArgument1 TArgument2 Methods Resolution(TArgument1, TArgument2) Resolutions the x TBuilder Resolution(TArgument1 x, TArgument2 y) Parameters x TArgument1 The y TArgument2 The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IRestitution-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IRestitution-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IRestitution<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The restitution interface public interface IRestitution<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Restitution(TArgument) Restitutions the value TBuilder Restitution(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IRotation-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IRotation-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IRotation<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The rotation interface public interface IRotation<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Rotation(TArgument) Rotations the angle TBuilder Rotation(TArgument angle) Parameters angle TArgument The angle Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IRun.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IRun.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IRun Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The run interface public interface IRun Methods Run() Runs this instance void Run()"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IScale2D-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IScale2D-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IScale2D<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The scale interface public interface IScale2D<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Scale(TArgument, TArgument) Scales the x TBuilder Scale(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IScene-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IScene-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IScene<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The scene interface public interface IScene<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Scene(TArgument) Scenes the value TBuilder Scene(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IScreenMode-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IScreenMode-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IScreenMode<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The screen mode interface public interface IScreenMode<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods ScreenMode(TArgument) Screens the mode using the specified value TBuilder ScreenMode(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IScript-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IScript-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IScript<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The script interface public interface IScript<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Script(TArgument) Scripts the value TBuilder Script(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISet-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISet-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISet<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The set interface public interface ISet<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Set<T>(TArgument) Sets the value TBuilder Set<T>(TArgument value) Parameters value TArgument The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISetAudioClip-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISetAudioClip-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISetAudioClip<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The set audio clip interface public interface ISetAudioClip<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods SetAudioClip(TArgument) Sets the audio clip using the specified value TBuilder SetAudioClip(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISetMax-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISetMax-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISetMax<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The set max interface public interface ISetMax<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods SetMax<T>(TArgument) Sets the max using the specified value TBuilder SetMax<T>(TArgument value) Parameters value TArgument The value Returns TBuilder The builder Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISetTexture-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISetTexture-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISetTexture<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The texture interface public interface ISetTexture<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods SetTexture(TArgument) Textures the value TBuilder SetTexture(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISettings-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISettings-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISettings<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The settings interface public interface ISettings<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Settings(TArgument) Settingses the value TBuilder Settings(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISize-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISize-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISize<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The size interface public interface ISize<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Size(TArgument, TArgument) Sizes the x TBuilder Size(TArgument x, TArgument y) Parameters x TArgument The y TArgument The Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISpeed-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISpeed-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISpeed<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The speed interface public interface ISpeed<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Speed(TArgument) Speeds the value TBuilder Speed(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ISplashScreen-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ISplashScreen-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISplashScreen<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The splash screen interface public interface ISplashScreen<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods SplashScreen(TArgument) Splashes the screen using the specified value TBuilder SplashScreen(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IStore-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IStore-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IStore<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The store interface public interface IStore<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Store(TArgument) Stores the value TBuilder Store(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IStyle-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IStyle-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IStyle<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The style interface public interface IStyle<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Style(TArgument) Styles the value TBuilder Style(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ITime-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ITime-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ITime<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The time interface public interface ITime<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Time(TArgument) Times the value TBuilder Time(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.ITransform-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.ITransform-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ITransform<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The transform interface public interface ITransform<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Transform(TArgument) Transforms the value TBuilder Transform(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IUpdate-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IUpdate-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IUpdate<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The update interface public interface IUpdate<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Update(TArgument) Updates the obj TBuilder Update(TArgument obj) Parameters obj TArgument The obj Returns TBuilder The"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IVersion-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IVersion-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IVersion<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The version interface public interface IVersion<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Version(TArgument) Versions the value TBuilder Version(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IVolume-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IVolume-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IVolume<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The volume interface public interface IVolume<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Volume(TArgument) Volumes the value TBuilder Volume(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWhere-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWhere-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWhere<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The where interface public interface IWhere<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Where(TArgument) Wheres the specified value. TBuilder Where(TArgument value) Parameters value TArgument The value. Returns TBuilder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWindow-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWindow-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWindow<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The window interface public interface IWindow<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods Window(TArgument) Windows the value TBuilder Window(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWith-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWith-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWith<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll Simple comment public interface IWith<out TBuilder, in TArgument> Type Parameters TBuilder the builder TArgument the argument Methods With(TArgument) Withes the specified value. TBuilder With(TArgument value) Parameters value TArgument The value. Returns TBuilder Return that you want."
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWithColor-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWithColor-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWithColor<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The with color interface public interface IWithColor<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods WithColor(TArgument) Adds the color using the specified value TBuilder WithColor(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWithModel-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWithModel-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWithModel<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The with model interface public interface IWithModel<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods WithModel(TArgument) Adds the model using the specified value TBuilder WithModel(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWithName-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWithName-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWithName<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll Define the word \"Name\" public interface IWithName<out TBuilder, in TArgument> Type Parameters TBuilder The type of the builder. TArgument The type of the argument. Methods WithName(TArgument) Withes the name. TBuilder WithName(TArgument value) Parameters value TArgument The value. Returns TBuilder Return the value that you want."
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWithTag-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWithTag-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWithTag<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll Define the word \"Tag\" public interface IWithTag<out TBuilder, in TArgument> Type Parameters TBuilder The type of the builder. TArgument The type of the argument. Methods WithTag(TArgument) Withes the tag. TBuilder WithTag(TArgument value) Parameters value TArgument The value. Returns TBuilder return the object that you want."
  },
  "api/Alis.Core.Aspect.Fluent.Words.IWorld-2.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.IWorld-2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWorld<TBuilder, TArgument> Namespace Alis.Core.Aspect.Fluent.Words Assembly Alis.dll The world interface public interface IWorld<out TBuilder, in TArgument> Type Parameters TBuilder TArgument Methods World(TArgument) Worlds the value TBuilder World(TArgument value) Parameters value TArgument The value Returns TBuilder The builder"
  },
  "api/Alis.Core.Aspect.Fluent.Words.html": {
    "href": "api/Alis.Core.Aspect.Fluent.Words.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Fluent.Words Interfaces IAdd<TBuilder, TArgument> The add interface IAddAnimation<TBuilder, TArgument> The add animation interface IAddComponent<TBuilder, TType> The add component class IAddFrame<TBuilder, TArgument> The add frame interface IAds<TBuilder, TArgument> The ads interface IAi<TBuilder, TArgument> The ai interface IAngularVelocity<TBuilder, TArgument> The angular velocity interface IAudio<TBuilder, TArgument> The audio interface IAuthor<TBuilder, TArgument> The author interface IAutoTilling<TBuilder, TArgument> The auto tilling interface IBackground<TBuilder, TArgument> The background interface IBackgroundColor<TBuilder, TArgument> The background color interface IBodyType<TBuilder, TArgument> The body type interface ICloud<TBuilder, TArgument> The cloud interface IConfiguration<TBuilder, TArgument> The configuration interface ICreate<TBuilder, TArgument> The create interface IDebug<TBuilder, TArgument> The debug interface IDebugColor<TBuilder, TArgument> The debug color interface IDelete<TBuilder> The delete interface IDensity<TBuilder, TArgument> The density interface IDepth<TBuilder, TArgument> The depth interface IDescription<TBuilder, TArgument> The description interface IFile<TBuilder, TArgument> The file interface IFilePath<TBuilder, TArgument> The file path interface IFixedRotation<TBuilder, TArgument> The fixed rotation interface IFriction<TBuilder, TArgument> The friction interface IGeneral<TBuilder, TArgument> The general interface IGraphic<TBuilder, TArgument> The graphic interface IGravity<TBuilder, TArgument> The gravity interface IGravityScale<TBuilder, TArgument> The gravity scale interface IHas<TBuilder, TArgument> The has interface IIcon<TBuilder, TArgument> The icon interface IInput<TBuilder, TArgument> The input interface IIs<TBuilder, TArgument> The is interface IIsActive<TBuilder, TArgument> The is active interface IIsDynamic<TBuilder, TArgument> The is dynamic interface IIsResizable<TBuilder, TArgument> The is resizable interface IIsStatic<TBuilder, TArgument> The is static interface IIsTrigger<TBuilder, TArgument> The is trigger interface ILicense<TBuilder, TArgument> The license interface ILinearVelocity<TBuilder, TArgument> The linear velocity interface ILogLevel<TBuilder, TArgument> The log level interface IManager<TBuilder, TArgument> The manager interface IManagerOf<TBuilder, TArgument> The manager of interface IMass<TBuilder, TArgument> The mass interface IMute<TBuilder, TArgument> The mute interface IName<TBuilder, TArgument> The name interface INetwork<TBuilder, TArgument> The network interface IOrder<TBuilder, TArgument> The order interface IPhysic<TBuilder, TArgument> The physic interface IPlayOnAwake<TBuilder, TArgument> The play on awake interface IPlugin<TBuilder, TArgument> The plugin interface IPosition2D<TBuilder, TArgument> The position interface IProfile<TBuilder, TArgument> The profile interface IRelativePosition<TBuilder, TArgument> The relative position interface IResolution<TBuilder, TArgument1, TArgument2> The resolution interface IRestitution<TBuilder, TArgument> The restitution interface IRotation<TBuilder, TArgument> The rotation interface IRun The run interface IScale2D<TBuilder, TArgument> The scale interface IScene<TBuilder, TArgument> The scene interface IScreenMode<TBuilder, TArgument> The screen mode interface IScript<TBuilder, TArgument> The script interface ISet<TBuilder, TArgument> The set interface ISetAudioClip<TBuilder, TArgument> The set audio clip interface ISetMax<TBuilder, TArgument> The set max interface ISetTexture<TBuilder, TArgument> The texture interface ISettings<TBuilder, TArgument> The settings interface ISize<TBuilder, TArgument> The size interface ISpeed<TBuilder, TArgument> The speed interface ISplashScreen<TBuilder, TArgument> The splash screen interface IStore<TBuilder, TArgument> The store interface IStyle<TBuilder, TArgument> The style interface ITime<TBuilder, TArgument> The time interface ITransform<TBuilder, TArgument> The transform interface IUpdate<TBuilder, TArgument> The update interface IVersion<TBuilder, TArgument> The version interface IVolume<TBuilder, TArgument> The volume interface IWhere<TBuilder, TArgument> The where interface IWindow<TBuilder, TArgument> The window interface IWith<TBuilder, TArgument> Simple comment IWithColor<TBuilder, TArgument> The with color interface IWithModel<TBuilder, TArgument> The with model interface IWithName<TBuilder, TArgument> Define the word \"Name\" IWithTag<TBuilder, TArgument> Define the word \"Tag\" IWorld<TBuilder, TArgument> The world interface"
  },
  "api/Alis.Core.Aspect.Fluent.html": {
    "href": "api/Alis.Core.Aspect.Fluent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Fluent Namespaces Alis.Core.Aspect.Fluent.Words Interfaces IBuild<TOrigin> The build interface IBuilder<TOut> The builder interface"
  },
  "api/Alis.Core.Aspect.Logging.ConsoleController.html": {
    "href": "api/Alis.Core.Aspect.Logging.ConsoleController.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ConsoleController Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The console controller class public static class ConsoleController Inheritance object ConsoleController Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Print(Message, DetailLevel) Prints the message public static void Print(Message message, DetailLevel detailLevel) Parameters message Message The message detailLevel DetailLevel The detail level"
  },
  "api/Alis.Core.Aspect.Logging.ConsoleLogConfig.html": {
    "href": "api/Alis.Core.Aspect.Logging.ConsoleLogConfig.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ConsoleLogConfig Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The console log config class public static class ConsoleLogConfig Inheritance object ConsoleLogConfig Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ErrorMessageColor Error text color private const ConsoleColor ErrorMessageColor = Red Field Value ConsoleColor EventMessageColor Event text color private const ConsoleColor EventMessageColor = DarkMagenta Field Value ConsoleColor ExceptionMessageColor Exception text color private const ConsoleColor ExceptionMessageColor = DarkRed Field Value ConsoleColor InfoMessageColor Info text color private const ConsoleColor InfoMessageColor = DarkGreen Field Value ConsoleColor LogMessageColor Log text color private const ConsoleColor LogMessageColor = White Field Value ConsoleColor TraceMessageColor Trace text color private const ConsoleColor TraceMessageColor = White Field Value ConsoleColor WarningMessageColor Warning text color private const ConsoleColor WarningMessageColor = DarkYellow Field Value ConsoleColor Methods GetColorMessageByType(MessageType) Gets the color message by type using the specified message type public static ConsoleColor GetColorMessageByType(MessageType messageType) Parameters messageType MessageType The message type Returns ConsoleColor The console color Exceptions ArgumentOutOfRangeException null"
  },
  "api/Alis.Core.Aspect.Logging.DetailLevel.html": {
    "href": "api/Alis.Core.Aspect.Logging.DetailLevel.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum DetailLevel Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The detail level enum public enum DetailLevel Fields Minimal = 0 The minimal detail level Full = 1 The full detail level"
  },
  "api/Alis.Core.Aspect.Logging.LogLevel.html": {
    "href": "api/Alis.Core.Aspect.Logging.LogLevel.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum LogLevel Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The log level enum public enum LogLevel Fields Trace = 0 The trace log level Info = 1 The info log level Event = 2 The event log level Log = 3 The log log level Normal = 4 The normal log level Warning = 5 The warning log level Critical = 6 The critical log level"
  },
  "api/Alis.Core.Aspect.Logging.Logger.html": {
    "href": "api/Alis.Core.Aspect.Logging.Logger.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Logger Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The logger class public static class Logger Inheritance object Logger Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties DetailLevel Gets or sets the value of the detail level public static DetailLevel DetailLevel { get; set; } Property Value DetailLevel LogLevel The normal public static LogLevel LogLevel { get; set; } Property Value LogLevel Methods Error(string) Errors the message [Conditional(\"DEBUG\")] public static void Error(string message) Parameters message string The message Event(string) Events the message [Conditional(\"DEBUG\")] public static void Event(string message) Parameters message string The message Event() Events [Conditional(\"DEBUG\")] public static void Event() Exception(string) Exceptions the message [Conditional(\"DEBUG\")] public static void Exception(string message) Parameters message string The message Exception(Exception) Exceptions the exception [Conditional(\"DEBUG\")] public static void Exception(Exception exception) Parameters exception Exception The exception Info() Info [Conditional(\"DEBUG\")] public static void Info() Info(string) Info the message [Conditional(\"DEBUG\")] public static void Info(string message) Parameters message string The message Log(string) Logs the message [Conditional(\"DEBUG\")] public static void Log(string message) Parameters message string The message SetDetailLevel(DetailLevel) Sets the detail level using the specified detail level [Conditional(\"DEBUG\")] public static void SetDetailLevel(DetailLevel detailLevel) Parameters detailLevel DetailLevel The detail level SetLogLevel(LogLevel) Sets the log level using the specified trace [Conditional(\"DEBUG\")] public static void SetLogLevel(LogLevel trace) Parameters trace LogLevel The trace Trace() Traces the message [Conditional(\"DEBUG\")] public static void Trace() Trace(string) Traces the message [Conditional(\"DEBUG\")] public static void Trace(string message) Parameters message string The message Warning(string) Warnings the message [Conditional(\"DEBUG\")] public static void Warning(string message) Parameters message string The message"
  },
  "api/Alis.Core.Aspect.Logging.Message.html": {
    "href": "api/Alis.Core.Aspect.Logging.Message.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Message Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The message class public class Message Inheritance object Message Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Message(MessageType, string) Initializes a new instance of the Alis.Core.Aspect.Logging.Message class public Message(MessageType messageType, string content = \"\") Parameters messageType MessageType The message type content string The content Properties Content Gets or sets the value of the content public string Content { get; } Property Value string DateTime Gets or sets the value of the date time public DateTime DateTime { get; } Property Value DateTime File Gets or sets the value of the file public string File { get; } Property Value string Level Gets or sets the value of the level public string Level { get; } Property Value string Line Gets or sets the value of the line public string Line { get; } Property Value string MessageType Gets or sets the value of the message type public MessageType MessageType { get; } Property Value MessageType Method Gets or sets the value of the method public string Method { get; } Property Value string StackTrace Gets or sets the value of the stack trace public string StackTrace { get; } Property Value string"
  },
  "api/Alis.Core.Aspect.Logging.MessageType.html": {
    "href": "api/Alis.Core.Aspect.Logging.MessageType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum MessageType Namespace Alis.Core.Aspect.Logging Assembly Alis.dll The message type enum public enum MessageType Fields Trace = 0 The trace message type Info = 1 The info message type Log = 2 The log message type Event = 3 The event message type Warning = 4 The warning message type Error = 5 The error message type Exception = 6 The exception message type"
  },
  "api/Alis.Core.Aspect.Logging.html": {
    "href": "api/Alis.Core.Aspect.Logging.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Logging Classes ConsoleController The console controller class ConsoleLogConfig The console log config class Logger The logger class Message The message class Enums DetailLevel The detail level enum LogLevel The log level enum MessageType The message type enum"
  },
  "api/Alis.Core.Aspect.Math.CustomMathF.html": {
    "href": "api/Alis.Core.Aspect.Math.CustomMathF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CustomMathF Namespace Alis.Core.Aspect.Math Assembly Alis.dll The math class public static class CustomMathF Inheritance object CustomMathF Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields E Represents the natural logarithmic base, specified by the constant, e. public const float E = 2.7182817 Field Value float MaxIterations The max iterations private const int MaxIterations = 10 Field Value int Pi Represents the ratio of the circumference of a circle to its diameter, specified by the constant, p. public const float Pi = 3.1415927 Field Value float Tau Represents the number of radians in one turn, specified by the constant, œÑ. public const float Tau = 6.2831855 Field Value float Methods Abs(float) Abs the value public static float Abs(float value) Parameters value float The value Returns float The float Acos(float) Acos the x public static float Acos(float x) Parameters x float The Returns float The angle Cos(float) Coses the x public static float Cos(float x) Parameters x float The Returns float The result Max(int, int) Maxes the val 1 public static int Max(int val1, int val2) Parameters val1 int The val val2 int The val Returns int The int Max(float, float) Maxes the val 1 public static float Max(float val1, float val2) Parameters val1 float The val val2 float The val Returns float The float Min(int, int) Mins the y 3 public static int Min(int y3, int y4) Parameters y3 int The y4 int The Returns int The int Min(float, float) Mins the y 3 public static float Min(float y3, float y4) Parameters y3 float The y4 float The Returns float The float Sin(float) Sins the x public static float Sin(float x) Parameters x float The Returns float The result Sqrt(float) Sqrt the x public static float Sqrt(float x) Parameters x float The Returns float The float"
  },
  "api/Alis.Core.Aspect.Math.Definition.Color.html": {
    "href": "api/Alis.Core.Aspect.Math.Definition.Color.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Color Namespace Alis.Core.Aspect.Math.Definition Assembly Alis.dll The color [Serializable] public struct Color : ISerializable Implements ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Color(byte, byte, byte, byte) Initializes a new instance of the Alis.Core.Aspect.Math.Definition.Color class public Color(byte r, byte g, byte b, byte a) Parameters r byte The g byte The b byte The a byte The Color(int, int, int, int) Initializes a new instance of the Alis.Core.Aspect.Math.Definition.Color class public Color(int r, int g, int b, int a) Parameters r int The g int The b int The a int The Properties A The public byte A { readonly get; set; } Property Value byte B The public byte B { readonly get; set; } Property Value byte Black Gets the value of the black public static Color Black { get; } Property Value Color Brown Gets or sets the value of the brown public static Color Brown { get; } Property Value Color DarkGreen Gets or sets the value of the dark green public static Color DarkGreen { get; } Property Value Color G The public byte G { readonly get; set; } Property Value byte Green Gets the value of the green public static Color Green { get; } Property Value Color R The public byte R { readonly get; set; } Property Value byte Red Gets the value of the red public static Color Red { get; } Property Value Color Methods GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context"
  },
  "api/Alis.Core.Aspect.Math.Definition.Depth.html": {
    "href": "api/Alis.Core.Aspect.Math.Definition.Depth.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Depth Namespace Alis.Core.Aspect.Math.Definition Assembly Alis.dll The depth [Serializable] public struct Depth : ISerializable Implements ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Depth(int) Initializes a new instance of the Alis.Core.Aspect.Math.Definition.Depth class public Depth(int value) Parameters value int The value Properties Value The value public int Value { readonly get; set; } Property Value int Methods GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context"
  },
  "api/Alis.Core.Aspect.Math.Definition.html": {
    "href": "api/Alis.Core.Aspect.Math.Definition.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Definition Structs Color The color Depth The depth"
  },
  "api/Alis.Core.Aspect.Math.Direction.html": {
    "href": "api/Alis.Core.Aspect.Math.Direction.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Direction Namespace Alis.Core.Aspect.Math Assembly Alis.dll Indicate the direction. public enum Direction Fields None = 0 The none direction North = 1 The north East = 2 The east South = 3 The south West = 4 The west"
  },
  "api/Alis.Core.Aspect.Math.Matrix.Matrix2X2.html": {
    "href": "api/Alis.Core.Aspect.Math.Matrix.Matrix2X2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Matrix2X2 Namespace Alis.Core.Aspect.Math.Matrix Assembly Alis.dll A 2-by-2 matrix. Stored in column-major order. public struct Matrix2X2 Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Matrix2X2(float, float, float, float) Construct this matrix using scalars. public Matrix2X2(float a11, float a12, float a21, float a22) Parameters a11 float a12 float a21 float a22 float Matrix2X2(float) Construct this matrix using an angle. This matrix becomes an orthonormal rotation matrix. public Matrix2X2(float angle) Parameters angle float Properties Ex The col public Vector2 Ex { readonly get; set; } Property Value Vector2 Ey The col public Vector2 Ey { readonly get; set; } Property Value Vector2 Inverse Gets the value of the inverse public Matrix2X2 Inverse { get; } Property Value Matrix2X2 Methods GetAngle() Extract the angle from this matrix (assumed to be a rotation matrix). public float GetAngle() Returns float GetInverse() Compute the inverse of this matrix, such that inv(A) * A = identity. public Matrix2X2 GetInverse() Returns Matrix2X2 Set(Vector2, Vector2) Initialize this matrix using columns. public void Set(Vector2 c1, Vector2 c2) Parameters c1 Vector2 c2 Vector2 SetIdentity() Set this to the identity matrix. public void SetIdentity() SetZero() Set this matrix to all zeros. public void SetZero() Solve(Vector2) Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases. public Vector2 Solve(Vector2 b) Parameters b Vector2 Returns Vector2 Operators operator +(Matrix2X2, Matrix2X2) public static Matrix2X2 operator +(Matrix2X2 a, Matrix2X2 b) Parameters a Matrix2X2 b Matrix2X2 Returns Matrix2X2"
  },
  "api/Alis.Core.Aspect.Math.Matrix.Matrix3X2.html": {
    "href": "api/Alis.Core.Aspect.Math.Matrix.Matrix3X2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Matrix3X2 Namespace Alis.Core.Aspect.Math.Matrix Assembly Alis.dll The matrix 3x class public class Matrix3X2 Inheritance object Matrix3X2 Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Matrix3X2(float, float, float, float, float, float) Creates a 3x2 matrix from the specified components. public Matrix3X2(float m11, float m12, float m21, float m22, float m31, float m32) Parameters m11 float The value to assign to the first element in the first row. m12 float The value to assign to the second element in the first row. m21 float The value to assign to the first element in the second row. m22 float The value to assign to the second element in the second row. m31 float The value to assign to the first element in the third row. m32 float The value to assign to the second element in the third row. Fields hashCode The hash code private readonly int hashCode Field Value int Properties Identity Gets the multiplicative identity matrix. private static Matrix3X2 Identity { get; } Property Value Matrix3X2 M11 The first element of the first row. public float M11 { get; set; } Property Value float M12 The second element of the first row. public float M12 { get; set; } Property Value float M21 The first element of the second row. public float M21 { get; set; } Property Value float M22 The second element of the second row. public float M22 { get; set; } Property Value float M31 The first element of the third row. public float M31 { get; set; } Property Value float M32 The second element of the third row. public float M32 { get; set; } Property Value float Translation Gets or sets the translation component of this matrix. public Vector2 Translation { set; } Property Value Vector2 Methods Add(Matrix3X2, Matrix3X2) Adds each element in one matrix with its corresponding element in a second matrix. public static Matrix3X2 Add(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix. value2 Matrix3X2 The second matrix. Returns Matrix3X2 The matrix that contains the summed values of value1 and value2. CreateScale(Vector2) Creates a scaling matrix from the specified vector scale. public static Matrix3X2 CreateScale(Vector2 scales) Parameters scales Vector2 The scale to use. Returns Matrix3X2 The scaling matrix. CreateScale(float, float) Creates a scaling matrix from the specified X and Y components. public static Matrix3X2 CreateScale(float xScale, float yScale) Parameters xScale float The value to scale by on the X axis. yScale float The value to scale by on the Y axis. Returns Matrix3X2 The scaling matrix. Equals(Matrix3X2) Describes whether this instance equals private bool Equals(Matrix3X2 other) Parameters other Matrix3X2 The other Returns bool The bool Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetDeterminant() Gets the determinant public float GetDeterminant() Returns float The float GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(Matrix3X2, Matrix3X2) Adds each element in one matrix with its corresponding element in a second matrix. public static Matrix3X2 operator +(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix. value2 Matrix3X2 The second matrix. Returns Matrix3X2 The matrix that contains the summed values. Remarks The Alis.Core.Aspect.Math.Matrix.Matrix3X2.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix3X2,Alis.Core.Aspect.Math.Matrix.Matrix3X2) method defines the operation of the addition operator for Alis.Core.Aspect.Math.Matrix.Matrix3X2 objects. operator ==(Matrix3X2, Matrix3X2) Returns a value that indicates whether the specified matrices are equal. public static bool operator ==(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix to compare. value2 Matrix3X2 The second matrix to compare. Returns bool true if value1 and value2 are equal; otherwise, false. Remarks Two matrices are equal if all their corresponding elements are equal. operator !=(Matrix3X2, Matrix3X2) Returns a value that indicates whether the specified matrices are not equal. public static bool operator !=(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix to compare. value2 Matrix3X2 The second matrix to compare. Returns bool true if value1 and value2 are not equal; otherwise, false. operator *(Matrix3X2, Matrix3X2) Multiplies two matrices together to compute the product. public static Matrix3X2 operator *(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix. value2 Matrix3X2 The second matrix. Returns Matrix3X2 The product matrix. operator *(Matrix3X2, float) Multiplies a matrix by a float to compute the product. public static Matrix3X2 operator *(Matrix3X2 value1, float value2) Parameters value1 Matrix3X2 The matrix to scale. value2 float The scaling value to use. Returns Matrix3X2 The scaled matrix. operator -(Matrix3X2, Matrix3X2) Subtracts each element in a second matrix from its corresponding element in a first matrix. public static Matrix3X2 operator -(Matrix3X2 value1, Matrix3X2 value2) Parameters value1 Matrix3X2 The first matrix. value2 Matrix3X2 The second matrix. Returns Matrix3X2 The matrix containing the values that result from subtracting each element in value2 from its corresponding element in value1. Remarks The Alis.Core.Aspect.Math.Matrix.Matrix3X2 method defines the operation of the subtraction operator for Alis.Core.Aspect.Math.Matrix.Matrix3X2 objects. operator -(Matrix3X2) Negates the specified matrix by multiplying all its values by -1. public static Matrix3X2 operator -(Matrix3X2 value) Parameters value Matrix3X2 The matrix to negate. Returns Matrix3X2 The negated matrix."
  },
  "api/Alis.Core.Aspect.Math.Matrix.Matrix3X3.html": {
    "href": "api/Alis.Core.Aspect.Math.Matrix.Matrix3X3.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Matrix3X3 Namespace Alis.Core.Aspect.Math.Matrix Assembly Alis.dll The matrix public struct Matrix3X3 Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Matrix3X3(Vector3, Vector3, Vector3) Initializes a new instance of the Alis.Core.Aspect.Math.Matrix.Matrix3X3 class public Matrix3X3(Vector3 c1, Vector3 c2, Vector3 c3) Parameters c1 Vector3 The c2 Vector3 The c3 Vector3 The Matrix3X3(float, float, float, float, float, float, float, float, float) Initializes a new instance of the Alis.Core.Aspect.Math.Matrix.Matrix3X3 class public Matrix3X3(float a00, float a01, float a02, float a10, float a11, float a12, float a20, float a21, float a22) Parameters a00 float The 00 a01 float The 01 a02 float The 02 a10 float The 10 a11 float The 11 a12 float The 12 a20 float The 20 a21 float The 21 a22 float The 22 Fields Epsilon The epsilon private const float Epsilon = 1E-05 Field Value float Ex The ez public Vector3 Ex Field Value Vector3 Ey The ez public Vector3 Ey Field Value Vector3 Ez The ez public Vector3 Ez Field Value Vector3 Methods Cross(Vector3, Vector3) Crosses the a private static Vector3 Cross(Vector3 a, Vector3 b) Parameters a Vector3 The b Vector3 The Returns Vector3 The vector Dot(Vector3, Vector3) Dots the a private static float Dot(Vector3 a, Vector3 b) Parameters a Vector3 The b Vector3 The Returns float The float GetInverse22(ref Matrix3X3) Gets the inverse 22 using the specified m public void GetInverse22(ref Matrix3X3 m) Parameters m Matrix3X3 The GetSymInverse33(ref Matrix3X3) Gets the sym inverse 33 using the specified m public void GetSymInverse33(ref Matrix3X3 m) Parameters m Matrix3X3 The Solve22(Vector2) Solves the 22 using the specified b public Vector2 Solve22(Vector2 b) Parameters b Vector2 The Returns Vector2 The vector Solve33(Vector3) Solves the 33 using the specified b public Vector3 Solve33(Vector3 b) Parameters b Vector3 The Returns Vector3 The vector"
  },
  "api/Alis.Core.Aspect.Math.Matrix.Matrix4X4.html": {
    "href": "api/Alis.Core.Aspect.Math.Matrix.Matrix4X4.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Matrix4X4 Namespace Alis.Core.Aspect.Math.Matrix Assembly Alis.dll The matrix public struct Matrix4X4 : IEquatable<Matrix4X4> Implements IEquatable<Matrix4X4> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Matrix4X4(float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float) Creates a 4x4 matrix from the specified components. public Matrix4X4(float m11, float m12, float m13, float m14, float m21, float m22, float m23, float m24, float m31, float m32, float m33, float m34, float m41, float m42, float m43, float m44) Parameters m11 float The value to assign to the first element in the first row. m12 float The value to assign to the second element in the first row. m13 float The value to assign to the third element in the first row. m14 float The value to assign to the fourth element in the first row. m21 float The value to assign to the first element in the second row. m22 float The value to assign to the second element in the second row. m23 float The value to assign to the third element in the second row. m24 float The value to assign to the third element in the second row. m31 float The value to assign to the first element in the third row. m32 float The value to assign to the second element in the third row. m33 float The value to assign to the third element in the third row. m34 float The value to assign to the fourth element in the third row. m41 float The value to assign to the first element in the fourth row. m42 float The value to assign to the second element in the fourth row. m43 float The value to assign to the third element in the fourth row. m44 float The value to assign to the fourth element in the fourth row. Fields hashCode The hash code private readonly int hashCode Field Value int Properties Identity Gets the multiplicative identity matrix. public static Matrix4X4 Identity { get; } Property Value Matrix4X4 M11 The first element of the first row. public float M11 { readonly get; set; } Property Value float M12 The second element of the first row. public float M12 { readonly get; set; } Property Value float M13 The third element of the first row. public float M13 { readonly get; set; } Property Value float M14 The fourth element of the first row. public float M14 { readonly get; set; } Property Value float M21 The first element of the second row. public float M21 { readonly get; set; } Property Value float M22 The second element of the second row. public float M22 { readonly get; set; } Property Value float M23 The third element of the second row. public float M23 { readonly get; set; } Property Value float M24 The fourth element of the second row. public float M24 { readonly get; set; } Property Value float M31 The first element of the third row. public float M31 { readonly get; set; } Property Value float M32 The second element of the third row. public float M32 { readonly get; set; } Property Value float M33 The third element of the third row. public float M33 { readonly get; set; } Property Value float M34 The fourth element of the third row. public float M34 { readonly get; set; } Property Value float M41 The first element of the fourth row. public float M41 { readonly get; set; } Property Value float M42 The second element of the fourth row. public float M42 { readonly get; set; } Property Value float M43 The third element of the fourth row. public float M43 { readonly get; set; } Property Value float M44 The fourth element of the fourth row. public float M44 { readonly get; set; } Property Value float Methods CreateOrthographicOffCenter(float, float, float, float, float, float) Creates a customized orthographic projection matrix. public static Matrix4X4 CreateOrthographicOffCenter(float left, float right, float bottom, float top, float zNearPlane, float zFarPlane) Parameters left float The minimum X-value of the view volume. right float The maximum X-value of the view volume. bottom float The minimum Y-value of the view volume. top float The maximum Y-value of the view volume. zNearPlane float The minimum Z-value of the view volume. zFarPlane float The maximum Z-value of the view volume. Returns Matrix4X4 The orthographic projection matrix. CreateRotationX(float) Creates the rotation x using the specified radians public static Matrix4X4 CreateRotationX(float radians) Parameters radians float The radians Returns Matrix4X4 The result CreateRotationZ(float) Creates a matrix for rotating points around the Z axis. public static Matrix4X4 CreateRotationZ(float radians) Parameters radians float The amount, in radians, by which to rotate around the Z-axis. Returns Matrix4X4 The rotation matrix. Equals(object) Returns a value that indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false. Remarks The current instance and obj are equal if obj is a Alis.Core.Aspect.Math.Matrix.Matrix4X4 object and the corresponding elements of each matrix are equal. Equals(Matrix4X4) Returns a value that indicates whether this instance and another 4x4 matrix are equal. public bool Equals(Matrix4X4 other) Parameters other Matrix4X4 The other matrix. Returns bool true if the two matrices are equal; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int The hash code. Multiply(Matrix4X4, Matrix4X4) Multiplies the matrix 1 public static Matrix4X4 Multiply(Matrix4X4 matrix1, Matrix4X4 matrix2) Parameters matrix1 Matrix4X4 The matrix matrix2 Matrix4X4 The matrix Returns Matrix4X4 The result ToString() Returns a string that represents this matrix. public override string ToString() Returns string The string representation of this matrix. Remarks The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as { {M11:1.1 M12:1.2 M13:1.3 M14:1.4} {M21:2.1 M22:2.2 M23:2.3 M24:2.4} {M31:3.1 M32:3.2 M33:3.3 M34:3.4} {M41:4.1 M42:4.2 M43:4.3 M44:4.4} } . Operators operator +(Matrix4X4, Matrix4X4) Adds each element in one matrix with its corresponding element in a second matrix. public static Matrix4X4 operator +(Matrix4X4 value1, Matrix4X4 value2) Parameters value1 Matrix4X4 The first matrix. value2 Matrix4X4 The second matrix. Returns Matrix4X4 The matrix that contains the summed values. Remarks The Alis.Core.Aspect.Math.Matrix.Matrix4X4.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4,Alis.Core.Aspect.Math.Matrix.Matrix4X4) method defines the operation of the addition operator for Alis.Core.Aspect.Math.Matrix.Matrix4X4 objects. operator ==(Matrix4X4, Matrix4X4) Returns a value that indicates whether the specified matrices are equal. public static bool operator ==(Matrix4X4 value1, Matrix4X4 value2) Parameters value1 Matrix4X4 The first matrix to compare. value2 Matrix4X4 The second matrix to care Returns bool true if value1 and value2 are equal; otherwise, false. Remarks Two matrices are equal if all their corresponding elements are equal. operator !=(Matrix4X4, Matrix4X4) Returns a value that indicates whether the specified matrices are not equal. public static bool operator !=(Matrix4X4 value1, Matrix4X4 value2) Parameters value1 Matrix4X4 The first matrix to compare. value2 Matrix4X4 The second matrix to compare. Returns bool true if value1 and value2 are not equal; otherwise, false."
  },
  "api/Alis.Core.Aspect.Math.Matrix.html": {
    "href": "api/Alis.Core.Aspect.Math.Matrix.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Matrix Classes Matrix3X2 The matrix 3x class Structs Matrix2X2 A 2-by-2 matrix. Stored in column-major order. Matrix3X3 The matrix Matrix4X4 The matrix"
  },
  "api/Alis.Core.Aspect.Math.Rotation.html": {
    "href": "api/Alis.Core.Aspect.Math.Rotation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Rotation Namespace Alis.Core.Aspect.Math Assembly Alis.dll The rotation [Serializable] public struct Rotation : ISerializable Implements ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Rotation(float) Initialize from an angle in radians public Rotation(float angle) Parameters angle float Angle in radians Rotation(float, float, float) Initializes a new instance of the Alis.Core.Aspect.Math.Rotation class public Rotation(float sine, float cosine, float angle) Parameters sine float The sine cosine float The cosine angle float The angle Properties Angle The angle public float Angle { readonly get; set; } Property Value float Cosine public float Cosine { readonly get; set; } Property Value float Sine public float Sine { readonly get; set; } Property Value float Methods GetAngle() Get the angle in radians public float GetAngle() Returns float GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context GetXAxis() Get the x-axis public Vector2 GetXAxis() Returns Vector2 GetYAxis() Get the y-axis public Vector2 GetYAxis() Returns Vector2 Set(float) Set using an angle in radians. public void Set(float angle) Parameters angle float SetIdentity() Set to the identity rotation public void SetIdentity()"
  },
  "api/Alis.Core.Aspect.Math.Shape.Circle.CircleF.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Circle.CircleF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct CircleF Namespace Alis.Core.Aspect.Math.Shape.Circle Assembly Alis.dll The circle public struct CircleF : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties R The r public float R { readonly get; set; } Property Value float X The x public float X { readonly get; set; } Property Value float Y The y public float Y { readonly get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Math.Shape.Circle.CircleI.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Circle.CircleI.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct CircleI Namespace Alis.Core.Aspect.Math.Shape.Circle Assembly Alis.dll The circle public struct CircleI : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties R The public int R { readonly get; set; } Property Value int X The public int X { readonly get; set; } Property Value int Y The public int Y { readonly get; set; } Property Value int"
  },
  "api/Alis.Core.Aspect.Math.Shape.Circle.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Circle.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape.Circle Structs CircleF The circle CircleI The circle"
  },
  "api/Alis.Core.Aspect.Math.Shape.IShape.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.IShape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IShape Namespace Alis.Core.Aspect.Math.Shape Assembly Alis.dll The figure interface public interface IShape"
  },
  "api/Alis.Core.Aspect.Math.Shape.Line.LineF.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Line.LineF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct LineF Namespace Alis.Core.Aspect.Math.Shape.Line Assembly Alis.dll The line public struct LineF : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties X1 The x1 public float X1 { readonly get; set; } Property Value float X2 The x2 public float X2 { readonly get; set; } Property Value float Y1 The y1 public float Y1 { readonly get; set; } Property Value float Y2 The y2 public float Y2 { readonly get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Math.Shape.Line.LineI.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Line.LineI.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct LineI Namespace Alis.Core.Aspect.Math.Shape.Line Assembly Alis.dll The line public struct LineI : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties X1 The x1 public int X1 { readonly get; set; } Property Value int X2 The x2 public int X2 { readonly get; set; } Property Value int Y1 The y1 public int Y1 { readonly get; set; } Property Value int Y2 The y2 public int Y2 { readonly get; set; } Property Value int"
  },
  "api/Alis.Core.Aspect.Math.Shape.Line.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Line.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape.Line Structs LineF The line LineI The line"
  },
  "api/Alis.Core.Aspect.Math.Shape.Point.PointF.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Point.PointF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct PointF Namespace Alis.Core.Aspect.Math.Shape.Point Assembly Alis.dll The f point public struct PointF : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors PointF(float) Initializes a new instance of the Alis.Core.Aspect.Math.Shape.Point.PointF class public PointF(float value) Parameters value float The value PointF(PointF) Initializes a new instance of the Alis.Core.Aspect.Math.Shape.Point.PointF class public PointF(PointF point) Parameters point PointF The point PointF(float, float) Initializes a new instance of the Alis.Core.Aspect.Math.Shape.Point.PointF class public PointF(float x, float y) Parameters x float The y float The Properties X The X public float X { readonly get; set; } Property Value float Y The Y public float Y { readonly get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Math.Shape.Point.PointI.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Point.PointI.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct PointI Namespace Alis.Core.Aspect.Math.Shape.Point Assembly Alis.dll The sdl point public struct PointI : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties X The public int X { readonly get; set; } Property Value int Y The public int Y { readonly get; set; } Property Value int"
  },
  "api/Alis.Core.Aspect.Math.Shape.Point.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Point.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape.Point Structs PointF The f point PointI The sdl point"
  },
  "api/Alis.Core.Aspect.Math.Shape.Rectangle.RectangleF.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Rectangle.RectangleF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct RectangleF Namespace Alis.Core.Aspect.Math.Shape.Rectangle Assembly Alis.dll The sdl f rect public struct RectangleF : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors RectangleF(float, float, float, float) Initializes a new instance of the Alis.Core.Aspect.Math.Shape.Rectangle.RectangleF class public RectangleF(float x, float y, float w, float h) Parameters x float The y float The w float The h float The Properties H The public float H { readonly get; set; } Property Value float W The public float W { readonly get; set; } Property Value float X The public float X { readonly get; set; } Property Value float Y The public float Y { readonly get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Math.Shape.Rectangle.RectangleI.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Rectangle.RectangleI.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct RectangleI Namespace Alis.Core.Aspect.Math.Shape.Rectangle Assembly Alis.dll The sdl rect [Serializable] public struct RectangleI : IShape, ISerializable Implements IShape ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors RectangleI(int, int, int, int) Initializes a new instance of the Alis.Core.Aspect.Math.Shape.Rectangle.RectangleI class public RectangleI(int x, int y, int w, int h) Parameters x int The y int The w int The h int The Properties H The public int H { readonly get; set; } Property Value int W The public int W { readonly get; set; } Property Value int X The public int X { readonly get; set; } Property Value int Y The public int Y { readonly get; set; } Property Value int Methods GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context"
  },
  "api/Alis.Core.Aspect.Math.Shape.Rectangle.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Rectangle.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape.Rectangle Structs RectangleF The sdl f rect RectangleI The sdl rect"
  },
  "api/Alis.Core.Aspect.Math.Shape.Square.SquareF.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Square.SquareF.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SquareF Namespace Alis.Core.Aspect.Math.Shape.Square Assembly Alis.dll The sdl f rect public struct SquareF : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties W The public float W { readonly get; set; } Property Value float X The public float X { readonly get; set; } Property Value float Y The public float Y { readonly get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Math.Shape.Square.SquareI.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Square.SquareI.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SquareI Namespace Alis.Core.Aspect.Math.Shape.Square Assembly Alis.dll The sdl rect public struct SquareI : IShape Implements IShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties W The public int W { readonly get; set; } Property Value int X The public int X { readonly get; set; } Property Value int Y The public int Y { readonly get; set; } Property Value int"
  },
  "api/Alis.Core.Aspect.Math.Shape.Square.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.Square.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape.Square Structs SquareF The sdl f rect SquareI The sdl rect"
  },
  "api/Alis.Core.Aspect.Math.Shape.html": {
    "href": "api/Alis.Core.Aspect.Math.Shape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Shape Namespaces Alis.Core.Aspect.Math.Shape.Circle Alis.Core.Aspect.Math.Shape.Line Alis.Core.Aspect.Math.Shape.Point Alis.Core.Aspect.Math.Shape.Rectangle Alis.Core.Aspect.Math.Shape.Square Interfaces IShape The figure interface"
  },
  "api/Alis.Core.Aspect.Math.Transform.html": {
    "href": "api/Alis.Core.Aspect.Math.Transform.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Transform Namespace Alis.Core.Aspect.Math Assembly Alis.dll A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames. [Serializable] public struct Transform : ISerializable Implements ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Transform(Vector2, float, Vector2) Initializes a new instance of the Alis.Core.Aspect.Math.Transform class public Transform(Vector2 position, float rotation, Vector2 scale) Parameters position Vector2 The position rotation float The rotation scale Vector2 The scale Fields Position The public Vector2 Position Field Value Vector2 Rotation The public float Rotation Field Value float Scale The scale public Vector2 Scale Field Value Vector2 Methods GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context Set(Vector2, float) Set this based on the position and angle. public void Set(Vector2 position, float angle) Parameters position Vector2 The position. angle float The angle. SetIdentity() Set this to the identity transform. public void SetIdentity()"
  },
  "api/Alis.Core.Aspect.Math.Util.Constant.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.Constant.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Constant Namespace Alis.Core.Aspect.Math.Util Assembly Alis.dll The math constants class public static class Constant Inheritance object Constant Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields E Represents the mathematical constant e(2.71828175). public const float E = 2.7182817 Field Value float Epsilon The epsilon public const float Epsilon = 1.1920929E-07 Field Value float Euler The euler public const float Euler = 2.7182817 Field Value float Log10E Represents the log base ten of e(0.4342945). public const float Log10E = 0.4342945 Field Value float Log2E Represents the log base two of e(1.442695). public const float Log2E = 1.442695 Field Value float Pi Represents the value of pi(3.14159274). public const float Pi = 3.1415927 Field Value float PiOver2 Represents the value of pi divided by two(1.57079637). public const float PiOver2 = 1.5707964 Field Value float PiOver4 Represents the value of pi divided by four(0.7853982). public const float PiOver4 = 0.7853982 Field Value float Tau Represents the value of pi times two(6.28318548). This is an alias of TwoPi. public const float Tau = 6.2831855 Field Value float TwoPi Represents the value of pi times two(6.28318548). public const float TwoPi = 6.2831855 Field Value float"
  },
  "api/Alis.Core.Aspect.Math.Util.HashCode.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.HashCode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct HashCode Namespace Alis.Core.Aspect.Math.Util Assembly Alis.dll The hash code public struct HashCode Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Prime1 The prime private const uint Prime1 = 2654435761 Field Value uint Prime2 The prime private const uint Prime2 = 2246822519 Field Value uint Prime3 The prime private const uint Prime3 = 3266489917 Field Value uint Prime4 The prime private const uint Prime4 = 668265263 Field Value uint Prime5 The prime private const uint Prime5 = 374761393 Field Value uint SSeed The generate global seed private static readonly uint SSeed Field Value uint _length The length private uint _length Field Value uint _queue1 The queue private uint _queue1 Field Value uint _queue2 The queue private uint _queue2 Field Value uint _queue3 The queue private uint _queue3 Field Value uint _v1 The private uint _v1 Field Value uint _v2 The private uint _v2 Field Value uint _v3 The private uint _v3 Field Value uint _v4 The private uint _v4 Field Value uint Methods Add<T>(T) Adds the value public void Add<T>(T value) Parameters value T The value Type Parameters T The Add(int) Adds the value private void Add(int value) Parameters value int The value Combine<T1>(T1) Combines the value 1 public static int Combine<T1>(T1 value1) Parameters value1 T1 The value Returns int The int Type Parameters T1 The Combine<T1, T2>(T1, T2) Combines the value 1 public static int Combine<T1, T2>(T1 value1, T2 value2) Parameters value1 T1 The value value2 T2 The value Returns int The int Type Parameters T1 The T2 The Combine<T1, T2, T3>(T1, T2, T3) Combines the value 1 public static int Combine<T1, T2, T3>(T1 value1, T2 value2, T3 value3) Parameters value1 T1 The value value2 T2 The value value3 T3 The value Returns int The int Type Parameters T1 The T2 The T3 The Combine<T1, T2, T3, T4>(T1, T2, T3, T4) Combines the value 1 public static int Combine<T1, T2, T3, T4>(T1 value1, T2 value2, T3 value3, T4 value4) Parameters value1 T1 The value value2 T2 The value value3 T3 The value value4 T4 The value Returns int The int Type Parameters T1 The T2 The T3 The T4 The Combine<T1, T2, T3, T4, T5>(T1, T2, T3, T4, T5) Combines the value 1 public static int Combine<T1, T2, T3, T4, T5>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5) Parameters value1 T1 The value value2 T2 The value value3 T3 The value value4 T4 The value value5 T5 The value Returns int The int Type Parameters T1 The T2 The T3 The T4 The T5 The Combine<T1, T2, T3, T4, T5, T6>(T1, T2, T3, T4, T5, T6) Combines the value 1 public static int Combine<T1, T2, T3, T4, T5, T6>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6) Parameters value1 T1 The value value2 T2 The value value3 T3 The value value4 T4 The value value5 T5 The value value6 T6 The value Returns int The int Type Parameters T1 The T2 The T3 The T4 The T5 The T6 The Combine<T1, T2, T3, T4, T5, T6, T7>(T1, T2, T3, T4, T5, T6, T7) Combines the value 1 public static int Combine<T1, T2, T3, T4, T5, T6, T7>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7) Parameters value1 T1 The value value2 T2 The value value3 T3 The value value4 T4 The value value5 T5 The value value6 T6 The value value7 T7 The value Returns int The int Type Parameters T1 The T2 The T3 The T4 The T5 The T6 The T7 The Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1, T2, T3, T4, T5, T6, T7, T8) Combines the value 1 public static int Combine<T1, T2, T3, T4, T5, T6, T7, T8>(T1 value1, T2 value2, T3 value3, T4 value4, T5 value5, T6 value6, T7 value7, T8 value8) Parameters value1 T1 The value value2 T2 The value value3 T3 The value value4 T4 The value value5 T5 The value value6 T6 The value value7 T7 The value value8 T8 The value Returns int The int Type Parameters T1 The T2 The T3 The T4 The T5 The T6 The T7 The T8 The GenerateGlobalSeed() Generates the global seed private static uint GenerateGlobalSeed() Returns uint The uint Initialize(out uint, out uint, out uint, out uint) Initializes the v 1 private static void Initialize(out uint v1, out uint v2, out uint v3, out uint v4) Parameters v1 uint The v2 uint The v3 uint The v4 uint The MixEmptyState() Mixes the empty state private static uint MixEmptyState() Returns uint The uint MixFinal(uint) Mixes the final using the specified hash private static uint MixFinal(uint hash) Parameters hash uint The hash Returns uint The hash MixState(uint, uint, uint, uint) Mixes the state using the specified v 1 private static uint MixState(uint v1, uint v2, uint v3, uint v4) Parameters v1 uint The v2 uint The v3 uint The v4 uint The Returns uint The uint QueueRound(uint, uint) Queues the round using the specified hash private static uint QueueRound(uint hash, uint queuedValue) Parameters hash uint The hash queuedValue uint The queued value Returns uint The uint RotateLeft(uint, int) Rotates the left using the specified value public static uint RotateLeft(uint value, int offset) Parameters value uint The value offset int The offset Returns uint The uint Round(uint, uint) Rounds the hash private static uint Round(uint hash, uint input) Parameters hash uint The hash input uint The input Returns uint The uint ToHashCode() Returns the hash code public int ToHashCode() Returns int The int"
  },
  "api/Alis.Core.Aspect.Math.Util.Helper.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.Helper.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Helper Namespace Alis.Core.Aspect.Math.Util Assembly Alis.dll Contains commonly used precalculated values and mathematical operations. public static class Helper Inheritance object Helper Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Barycentric(float, float, float, float, float) Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two normalized barycentric (areal) coordinates. public static float Barycentric(float value1, float value2, float value3, float amount1, float amount2) Parameters value1 float The coordinate on one axis of vertex 1 of the defining triangle. value2 float The coordinate on the same axis of vertex 2 of the defining triangle. value3 float The coordinate on the same axis of vertex 3 of the defining triangle. amount1 float The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the coordinate of which is specified in value2. amount2 float The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the coordinate of which is specified in value3. Returns float Cartesian coordinate of the specified point with respect to the axis being used. CatmullRom(float, float, float, float, float) Performs a Catmull-Rom interpolation using the specified positions. public static float CatmullRom(float value1, float value2, float value3, float value4, float amount) Parameters value1 float The first position in the interpolation. value2 float The second position in the interpolation. value3 float The third position in the interpolation. value4 float The fourth position in the interpolation. amount float Weighting factor. Returns float A position that is the result of the Catmull-Rom interpolation. Clamp(float, float, float) Restricts a value to be within a specified range. public static float Clamp(float value, float min, float max) Parameters value float The value to clamp. min float The minimum value. If value is less than min, min will be returned. max float The maximum value. If value is greater than max, max will be returned. Returns float The clamped value. Distance(float, float) Calculates the absolute value of the difference of two values. public static float Distance(float value1, float value2) Parameters value1 float Source value. value2 float Source value. Returns float Distance between the two values. Hermite(float, float, float, float, float) Performs a Hermite spline interpolation. public static float Hermite(float value1, float tangent1, float value2, float tangent2, float amount) Parameters value1 float Source position. tangent1 float Source tangent. value2 float Source position. tangent2 float Source tangent. amount float Weighting factor. Returns float The result of the Hermite spline interpolation. IsPowerOfTwo(int) Determines if value is powered by two. public static bool IsPowerOfTwo(int value) Parameters value int A value. Returns bool true if value is powered by two; otherwise false. Lerp(float, float, float) Lerp the value 1 public static float Lerp(float value1, float value2, float amount) Parameters value1 float The value value2 float The value amount float The amount Returns float The float Max(float, float) Returns the greater of two values. public static float Max(float value1, float value2) Parameters value1 float Source value. value2 float Source value. Returns float The greater value. Min(float, float) Returns the lesser of two values. public static float Min(float value1, float value2) Parameters value1 float Source value. value2 float Source value. Returns float The lesser value. SmoothStep(float, float, float) Interpolates between two values using a cubic equation. public static float SmoothStep(float value1, float value2, float amount) Parameters value1 float Source value. value2 float Source value. amount float Weighting value. Returns float Interpolated value. ToDegrees(float) Converts radians to degrees. public static float ToDegrees(float radians) Parameters radians float The angle in radians. Returns float The angle in degrees. Remarks This method uses double precission internally, though it returns single float Factor = 180 / pi ToRadians(float) Converts degrees to radians. public static float ToRadians(float degrees) Parameters degrees float The angle in degrees. Returns float The angle in radians. Remarks This method uses double precission internally, though it returns single float Factor = pi / 180 WrapAngle(float) Reduces a given angle to a value between œÄ and -œÄ. public static float WrapAngle(float angle) Parameters angle float The angle to reduce, in radians. Returns float The new angle, in radians."
  },
  "api/Alis.Core.Aspect.Math.Util.Quaternion.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.Quaternion.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Quaternion Namespace Alis.Core.Aspect.Math.Util Assembly Alis.dll The quaternion public struct Quaternion Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Quaternion(float, float, float, float) Constructs a quaternion from the specified components. public Quaternion(float x, float y, float z, float w) Parameters x float The value to assign to the X component of the quaternion. y float The value to assign to the Y component of the quaternion. z float The value to assign to the Z component of the quaternion. w float The value to assign to the W component of the quaternion. Fields Count The count internal const int Count = 4 Field Value int hashCode The hash code private readonly int hashCode Field Value int Properties W The rotation component of the quaternion. public float W { readonly get; private set; } Property Value float X The X value of the vector component of the quaternion. public float X { readonly get; private set; } Property Value float Y The Y value of the vector component of the quaternion. public float Y { readonly get; private set; } Property Value float Z The Z value of the vector component of the quaternion. public float Z { readonly get; private set; } Property Value float Zero Gets a quaternion that represents a zero. private static Quaternion Zero { get; } Property Value Quaternion Methods Equals(object) Returns a value that indicates whether this instance and a specified object are equal. public override readonly bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false. Remarks The current instance and obj are equal if obj is a Alis.Core.Aspect.Math.Util.Quaternion object and the corresponding components of each matrix are equal. Equals(Quaternion) Returns a value that indicates whether this instance and another quaternion are equal. private readonly bool Equals(Quaternion other) Parameters other Quaternion The other quaternion. Returns bool true if the two quaternions are equal; otherwise, false. Remarks Two quaternions are equal if each of their corresponding components is equal. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int The hash code. ToString() Returns a string that represents this quaternion. public override readonly string ToString() Returns string The string representation of this quaternion. Remarks The numeric values in the returned string are formatted by using the conventions of the current culture. For example, for the en-US culture, the returned string might appear as {X:1.1 Y:2.2 Z:3.3 W:4.4}. Operators operator +(Quaternion, Quaternion) Adds each element in one quaternion with its corresponding element in a second quaternion. public static Quaternion operator +(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first quaternion. value2 Quaternion The second quaternion. Returns Quaternion The quaternion that contains the summed values of value1 and value2. Remarks The Alis.Core.Aspect.Math.Util.Quaternion.op_Addition(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion) method defines the operation of the addition operator for Alis.Core.Aspect.Math.Util.Quaternion objects. operator /(Quaternion, Quaternion) Divides one quaternion by a second quaternion. public static Quaternion operator /(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The dividend. value2 Quaternion The divisor. Returns Quaternion The quaternion that results from dividing value1 by value2. Remarks The Alis.Core.Aspect.Math.Util.Quaternion.op_Division(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion) method defines the division operation for Alis.Core.Aspect.Math.Util.Quaternion objects. operator ==(Quaternion, Quaternion) Returns a value that indicates whether two quaternions are equal. public static bool operator ==(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first quaternion to compare. value2 Quaternion The second quaternion to compare. Returns bool true if the two quaternions are equal; otherwise, false. Remarks Two quaternions are equal if each of their corresponding components is equal. The Alis.Core.Aspect.Math.Util.Quaternion.op_Equality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion) method defines the operation of the equality operator for Alis.Core.Aspect.Math.Util.Quaternion objects. operator !=(Quaternion, Quaternion) Returns a value that indicates whether two quaternions are not equal. public static bool operator !=(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first quaternion to compare. value2 Quaternion The second quaternion to compare. Returns bool true if value1 and value2 are not equal; otherwise, false. operator *(Quaternion, Quaternion) Returns the quaternion that results from multiplying two quaternions together. public static Quaternion operator *(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first quaternion. value2 Quaternion The second quaternion. Returns Quaternion The product quaternion. operator *(Quaternion, float) Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar factor. public static Quaternion operator *(Quaternion value1, float value2) Parameters value1 Quaternion The source quaternion. value2 float The scalar value. Returns Quaternion The scaled quaternion. operator -(Quaternion, Quaternion) Subtracts each element in a second quaternion from its corresponding element in a first quaternion. public static Quaternion operator -(Quaternion value1, Quaternion value2) Parameters value1 Quaternion The first quaternion. value2 Quaternion The second quaternion. Returns Quaternion The quaternion containing the values that result from subtracting each element in value2 from its corresponding element in value1. Remarks The Alis.Core.Aspect.Math.Util.Quaternion.op_Subtraction(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion) method defines the operation of the subtraction operator for Alis.Core.Aspect.Math.Util.Quaternion objects. operator -(Quaternion) Reverses the sign of each component of the quaternion. public static Quaternion operator -(Quaternion value) Parameters value Quaternion The quaternion to negate. Returns Quaternion The negated quaternion. Remarks The Alis.Core.Aspect.Math.Util.Quaternion.op_UnaryNegation(Alis.Core.Aspect.Math.Util.Quaternion) method defines the operation of the unary negation operator for Alis.Core.Aspect.Math.Util.Quaternion objects."
  },
  "api/Alis.Core.Aspect.Math.Util.RandomUtils.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.RandomUtils.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RandomUtils Namespace Alis.Core.Aspect.Math.Util Assembly Alis.dll The random utils class public static class RandomUtils Inheritance object RandomUtils Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields Rng The create private static readonly RandomNumberGenerator Rng Field Value RandomNumberGenerator Methods GetInt32(int, int) Gets the int 32 using the specified min value public static int GetInt32(int minValue, int maxValue) Parameters minValue int The min value maxValue int The max value Returns int The int Exceptions ArgumentException minValue must be less than or equal to maxValue. GetInt32(int) Gets the int 32 using the specified value public static int GetInt32(int value) Parameters value int The value Returns int The int Exceptions ArgumentException value must be greater than or equal to 0."
  },
  "api/Alis.Core.Aspect.Math.Util.html": {
    "href": "api/Alis.Core.Aspect.Math.Util.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Util Classes Constant The math constants class Helper Contains commonly used precalculated values and mathematical operations. RandomUtils The random utils class Structs HashCode The hash code Quaternion The quaternion"
  },
  "api/Alis.Core.Aspect.Math.Vector.Vector2.html": {
    "href": "api/Alis.Core.Aspect.Math.Vector.Vector2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Vector2 Namespace Alis.Core.Aspect.Math.Vector Assembly Alis.dll The vector [Serializable] public struct Vector2 : IEquatable<Vector2>, IFormattable, ISerializable Implements IEquatable<Vector2> IFormattable ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Extension Methods MathUtils.IsValid(Vector2) Constructors Vector2(float) Creates a new Alis.Core.Aspect.Math.Vector.Vector2 object whose two elements have the same value. public Vector2(float value) Parameters value float The value to assign to both elements. Vector2(float, float) Creates a vector whose elements have the specified values. public Vector2(float x, float y) Parameters x float The value to assign to the Alis.Core.Aspect.Math.Vector.Vector2.X field. y float The value to assign to the Alis.Core.Aspect.Math.Vector.Vector2.Y field. Properties One Gets a vector whose 2 elements are equal to one. public static Vector2 One { get; } Property Value Vector2 UnitX Gets the vector (1,0). public static Vector2 UnitX { get; } Property Value Vector2 UnitY Gets the vector (0,1). public static Vector2 UnitY { get; } Property Value Vector2 X The X component of the vector. public float X { readonly get; set; } Property Value float Y The Y component of the vector. public float Y { readonly get; set; } Property Value float Zero Returns a vector whose 2 elements are equal to zero. public static Vector2 Zero { get; } Property Value Vector2 Methods Abs(Vector2) Returns a vector whose elements are the absolute values of each of the specified vector's elements. public static Vector2 Abs(Vector2 value) Parameters value Vector2 A vector. Returns Vector2 The absolute value vector. Add(Vector2, Vector2) Adds two vectors together. public static Vector2 Add(Vector2 left, Vector2 right) Parameters left Vector2 The first vector to add. right Vector2 The second vector to add. Returns Vector2 The summed vector. Add(ref Vector2, ref Vector2, out Vector2) Adds the left public static void Add(ref Vector2 left, ref Vector2 right, out Vector2 result) Parameters left Vector2 The left right Vector2 The right result Vector2 The result Clamp(Vector2, Vector2, Vector2) Restricts a vector between a minimum and a maximum value. public static Vector2 Clamp(Vector2 value1, Vector2 min, Vector2 max) Parameters value1 Vector2 The vector to restrict. min Vector2 The minimum value. max Vector2 The maximum value. Returns Vector2 The restricted vector. CopyTo(float[], int) Copies the elements of the vector to a specified array starting at a specified index position. public void CopyTo(float[] array, int index = 0) Parameters array float[] The destination array. index int The index at which to copy the first element of the vector. Remarks array must have a sufficient number of elements to accommodate the two vector elements. In other words, elements index and index + 1 must already exist in array. Exceptions ArgumentNullException array is null. ArgumentException The number of elements in the current instance is greater than in the array. ArgumentOutOfRangeException index is less than zero. -or- index is greater than or equal to the array length. RankException array is multidimensional. Distance(Vector2, Vector2) Computes the Euclidean distance between the two given points. public static float Distance(Vector2 value1, Vector2 value2) Parameters value1 Vector2 The first point. value2 Vector2 The second point. Returns float The distance. Distance(ref Vector2, ref Vector2, out float) Distances the v 1 public static void Distance(ref Vector2 v1, ref Vector2 v2, out float result) Parameters v1 Vector2 The v2 Vector2 The result float The result DistanceSquared(Vector2, Vector2) Returns the Euclidean distance squared between two specified points. public static float DistanceSquared(Vector2 value1, Vector2 value2) Parameters value1 Vector2 The first point. value2 Vector2 The second point. Returns float The distance squared. DistanceSquared(ref Vector2, ref Vector2, out float) Distances the squared using the specified v 1 public static void DistanceSquared(ref Vector2 v1, ref Vector2 v2, out float result) Parameters v1 Vector2 The v2 Vector2 The result float The result Divide(Vector2, Vector2) Divides the first vector by the second. public static Vector2 Divide(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The vector resulting from the division. Divide(Vector2, float) Divides the specified vector by a specified scalar value. public static Vector2 Divide(Vector2 left, float divisor) Parameters left Vector2 The vector. divisor float The scalar value. Returns Vector2 The vector that results from the division. Divide(ref Vector2, float, out Vector2) Divides the left public static void Divide(ref Vector2 left, float right, out Vector2 result) Parameters left Vector2 The left right float The right result Vector2 The result Dot(Vector2, Vector2) Returns the dot product of two vectors. public static float Dot(Vector2 value1, Vector2 value2) Parameters value1 Vector2 The first vector. value2 Vector2 The second vector. Returns float The dot product. Dot(ref Vector2, ref Vector2, out float) Dots the left public static void Dot(ref Vector2 left, ref Vector2 right, out float result) Parameters left Vector2 The left right Vector2 The right result float The result Equals(object) Returns a value that indicates whether this instance and a specified object are equal. public override bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false. Remarks The current instance and obj are equal if obj is a Alis.Core.Aspect.Math.Vector.Vector2 object and their Alis.Core.Aspect.Math.Vector.Vector2.X and Alis.Core.Aspect.Math.Vector.Vector2.Y elements are equal. Equals(Vector2) Returns a value that indicates whether this instance and another vector are equal. public bool Equals(Vector2 other) Parameters other Vector2 The other vector. Returns bool true if the two vectors are equal; otherwise, false. Remarks Two vectors are equal if their Alis.Core.Aspect.Math.Vector.Vector2.X and Alis.Core.Aspect.Math.Vector.Vector2.Y elements are equal. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int The hash code. GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context Length() Returns the length of the vector. public float Length() Returns float The vector's length. LengthSquared() Returns the length of the vector squared. public float LengthSquared() Returns float The vector's length squared. Remarks This operation offers better performance than a call to the Alis.Core.Aspect.Math.Vector.Vector2.Length method. LerP(Vector2, Vector2, float) Performs a linear interpolation between two vectors based on the given weighting. public static Vector2 LerP(Vector2 value1, Vector2 value2, float amount) Parameters value1 Vector2 The first vector. value2 Vector2 The second vector. amount float A value between 0 and 1 that indicates the weight of value2. Returns Vector2 The interpolated vector. Remarks The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp). Max(Vector2, Vector2) Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors. public static Vector2 Max(Vector2 value1, Vector2 value2) Parameters value1 Vector2 The first vector. value2 Vector2 The second vector. Returns Vector2 The maximized vector. Max(ref Vector2, ref Vector2, out Vector2) Maxes the v 1 public static void Max(ref Vector2 v1, ref Vector2 v2, out Vector2 result) Parameters v1 Vector2 The v2 Vector2 The result Vector2 The result Min(Vector2, Vector2) Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors. public static Vector2 Min(Vector2 value1, Vector2 value2) Parameters value1 Vector2 The first vector. value2 Vector2 The second vector. Returns Vector2 The minimized vector. Min(ref Vector2, ref Vector2, out Vector2) Mins the v 1 public static void Min(ref Vector2 v1, ref Vector2 v2, out Vector2 result) Parameters v1 Vector2 The v2 Vector2 The result Vector2 The result Multiply(Vector2, Vector2) Returns a new vector whose values are the product of each pair of elements in two specified vectors. public static Vector2 Multiply(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The element-wise product vector. Multiply(Vector2, float) Multiplies a vector by a specified scalar. public static Vector2 Multiply(Vector2 left, float right) Parameters left Vector2 The vector to multiply. right float The scalar value. Returns Vector2 The scaled vector. Multiply(float, Vector2) Multiplies a scalar value by a specified vector. public static Vector2 Multiply(float left, Vector2 right) Parameters left float The scaled value. right Vector2 The vector. Returns Vector2 The scaled vector. Multiply(ref Vector2, ref Vector2, out Vector2) Multiplies the left public static void Multiply(ref Vector2 left, ref Vector2 right, out Vector2 result) Parameters left Vector2 The left right Vector2 The right result Vector2 The result Multiply(ref Vector2, float, out Vector2) Multiplies the left public static void Multiply(ref Vector2 left, float right, out Vector2 result) Parameters left Vector2 The left right float The right result Vector2 The result Negate(Vector2) Negates a specified vector. public static Vector2 Negate(Vector2 value) Parameters value Vector2 The vector to negate. Returns Vector2 The negated vector. Normalize(Vector2) Returns a vector with the same direction as the specified vector, but with a length of one. public static Vector2 Normalize(Vector2 value) Parameters value Vector2 The vector to normalize. Returns Vector2 The normalized vector. Normalize() Normalizes this instance public void Normalize() Reflect(Vector2, Vector2) Returns the reflection of a vector off a surface that has the specified normal. public static Vector2 Reflect(Vector2 vector, Vector2 normal) Parameters vector Vector2 The source vector. normal Vector2 The normal of the surface being reflected off. Returns Vector2 The reflected vector. SquareRoot(Vector2) Returns a vector whose elements are the square root of each of a specified vector's elements. public static Vector2 SquareRoot(Vector2 value) Parameters value Vector2 A vector. Returns Vector2 The square root vector. Subtract(Vector2, Vector2) Subtracts the second vector from the first. public static Vector2 Subtract(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The difference vector. Subtract(ref Vector2, ref Vector2, out Vector2) Subtracts the left public static void Subtract(ref Vector2 left, ref Vector2 right, out Vector2 result) Parameters left Vector2 The left right Vector2 The right result Vector2 The result ToString(string, IFormatProvider) Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting. public string ToString(string format, IFormatProvider formatProvider) Parameters format string A standard or custom numeric format string that defines the format of individual elements. formatProvider IFormatProvider A format provider that supplies culture-specific formatting information. Returns string The string representation of the current instance. Remarks This method returns a string in which each element of the vector is formatted using format and formatProvider. The \"<\" and \">\" characters are used to begin and end the string, and the format provider's System.Globalization.NumberFormatInfo.NumberGroupSeparator property followed by a space is used to separate each element. ToString(string, CultureInfo) Returns the string using the specified f 2 public string ToString(string f2, CultureInfo cultureInfo) Parameters f2 string The cultureInfo CultureInfo The culture info Returns string The string Transform(Vector2, Matrix3X2) Transforms a vector by a specified 3x2 matrix. public static Vector2 Transform(Vector2 position, Matrix3X2 matrix) Parameters position Vector2 The vector to transform. matrix Matrix3X2 The transformation matrix. Returns Vector2 The transformed vector. Transform(Vector2, Matrix4X4) Transforms a vector by a specified 4x4 matrix. public static Vector2 Transform(Vector2 position, Matrix4X4 matrix) Parameters position Vector2 The vector to transform. matrix Matrix4X4 The transformation matrix. Returns Vector2 The transformed vector. Transform(Vector2, Quaternion) Transforms a vector by the specified Quaternion rotation value. public static Vector2 Transform(Vector2 value, Quaternion rotation) Parameters value Vector2 The vector to rotate. rotation Quaternion The rotation to apply. Returns Vector2 The transformed vector. TransformNormal(Vector2, Matrix3X2) Transforms a vector normal by the given 3x2 matrix. public static Vector2 TransformNormal(Vector2 normal, Matrix3X2 matrix) Parameters normal Vector2 The source vector. matrix Matrix3X2 The matrix. Returns Vector2 The transformed vector. TransformNormal(Vector2, Matrix4X4) Transforms a vector normal by the given 4x4 matrix. public static Vector2 TransformNormal(Vector2 normal, Matrix4X4 matrix) Parameters normal Vector2 The source vector. matrix Matrix4X4 The matrix. Returns Vector2 The transformed vector. Operators operator +(Vector2, Vector2) Adds two vectors together. public static Vector2 operator +(Vector2 left, Vector2 right) Parameters left Vector2 The first vector to add. right Vector2 The second vector to add. Returns Vector2 The summed vector. Remarks The Alis.Core.Aspect.Math.Vector.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2) method defines the addition operation for Alis.Core.Aspect.Math.Vector.Vector2 objects. operator /(Vector2, Vector2) Divides the first vector by the second. public static Vector2 operator /(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The vector that results from dividing left by right. operator /(Vector2, float) Divides the specified vector by a specified scalar value. public static Vector2 operator /(Vector2 value1, float value2) Parameters value1 Vector2 The vector. value2 float The scalar value. Returns Vector2 The result of the division. operator ==(Vector2, Vector2) Returns a value that indicates whether each pair of elements in two specified vectors is equal. public static bool operator ==(Vector2 left, Vector2 right) Parameters left Vector2 The first vector to compare. right Vector2 The second vector to compare. Returns bool true if left and right are equal; otherwise, false. Remarks Two Alis.Core.Aspect.Math.Vector.Vector2 objects are equal if each value in left is equal to the corresponding value in right. operator !=(Vector2, Vector2) Returns a value that indicates whether two specified vectors are not equal. public static bool operator !=(Vector2 left, Vector2 right) Parameters left Vector2 The first vector to compare. right Vector2 The second vector to compare. Returns bool true if left and right are not equal; otherwise, false. operator *(Vector2, Vector2) Returns a new vector whose values are the product of each pair of elements in two specified vectors. public static Vector2 operator *(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The element-wise product vector. operator *(Vector2, float) Multiplies the specified vector by the specified scalar value. public static Vector2 operator *(Vector2 left, float right) Parameters left Vector2 The vector. right float The scalar value. Returns Vector2 The scaled vector. operator *(float, Vector2) Multiplies the scalar value by the specified vector. public static Vector2 operator *(float left, Vector2 right) Parameters left float The vector. right Vector2 The scalar value. Returns Vector2 The scaled vector. operator -(Vector2, Vector2) Subtracts the second vector from the first. public static Vector2 operator -(Vector2 left, Vector2 right) Parameters left Vector2 The first vector. right Vector2 The second vector. Returns Vector2 The vector that results from subtracting right from left. Remarks The Alis.Core.Aspect.Math.Vector.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2) method defines the subtraction operation for Alis.Core.Aspect.Math.Vector.Vector2 objects. operator -(Vector2) Negates the specified vector. public static Vector2 operator -(Vector2 value) Parameters value Vector2 The vector to negate. Returns Vector2 The negated vector. Remarks The Alis.Core.Aspect.Math.Vector.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2) method defines the unary negation operation for Alis.Core.Aspect.Math.Vector.Vector2 objects."
  },
  "api/Alis.Core.Aspect.Math.Vector.Vector3.html": {
    "href": "api/Alis.Core.Aspect.Math.Vector.Vector3.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Vector3 Namespace Alis.Core.Aspect.Math.Vector Assembly Alis.dll The vector [Serializable] public struct Vector3 : IEquatable<Vector3>, IFormattable, ISerializable Implements IEquatable<Vector3> IFormattable ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Vector3(float) Creates a new Alis.Core.Aspect.Math.Vector.Vector3 object whose three elements have the same value. private Vector3(float value) Parameters value float The value to assign to all three elements. Vector3(Vector2, float) Initializes a new instance of the Alis.Core.Aspect.Math.Vector.Vector3 class public Vector3(Vector2 value, float z) Parameters value Vector2 The value z float The Vector3(float, float, float) Creates a vector whose elements have the specified values. public Vector3(float x, float y, float z) Parameters x float The value to assign to the Alis.Core.Aspect.Math.Vector.Vector3.X field. y float The value to assign to the Alis.Core.Aspect.Math.Vector.Vector3.Y field. z float The value to assign to the Alis.Core.Aspect.Math.Vector.Vector3.Z field. Fields hashCode The hash code private readonly int hashCode Field Value int Properties One Gets a vector whose 3 elements are equal to one. public static Vector3 One { get; } Property Value Vector3 UnitX Gets the vector (1,0,0). public static Vector3 UnitX { get; } Property Value Vector3 UnitY Gets the vector (0,1,0). public static Vector3 UnitY { get; } Property Value Vector3 UnitZ Gets the vector (0,0,1). public static Vector3 UnitZ { get; } Property Value Vector3 X The X component of the vector. public float X { readonly get; set; } Property Value float Y The Y component of the vector. public float Y { readonly get; set; } Property Value float Z The Z component of the vector. public float Z { readonly get; set; } Property Value float Zero Gets a vector whose 3 elements are equal to zero. public static Vector3 Zero { get; } Property Value Vector3 Methods Cross(Vector3, Vector3) Computes the cross product of two vectors. public static Vector3 Cross(Vector3 vector1, Vector3 vector2) Parameters vector1 Vector3 The first vector. vector2 Vector3 The second vector. Returns Vector3 The cross product. Dot(Vector3, Vector3) Returns the dot product of two vectors. public static float Dot(Vector3 vector1, Vector3 vector2) Parameters vector1 Vector3 The first vector. vector2 Vector3 The second vector. Returns float The dot product. Equals(object) Returns a value that indicates whether this instance and a specified object are equal. public override readonly bool Equals(object obj) Parameters obj object The object to compare with the current instance. Returns bool true if the current instance and obj are equal; otherwise, false. If obj is null, the method returns false. Remarks The current instance and obj are equal if obj is a Alis.Core.Aspect.Math.Vector.Vector3 object and their corresponding elements are equal. Equals(Vector3) Returns a value that indicates whether this instance and another vector are equal. public readonly bool Equals(Vector3 other) Parameters other Vector3 The other vector. Returns bool true if the two vectors are equal; otherwise, false. Remarks Two vectors are equal if their Alis.Core.Aspect.Math.Vector.Vector3.X, Alis.Core.Aspect.Math.Vector.Vector3.Y, and Alis.Core.Aspect.Math.Vector.Vector3.Z elements are equal. GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int The hash code. GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context Length() Returns the length of this vector object. public readonly float Length() Returns float The vector's length. LengthSquared() Returns the length of the vector squared. public readonly float LengthSquared() Returns float The vector's length squared. Remarks This operation offers better performance than a call to the Alis.Core.Aspect.Math.Vector.Vector3.Length method. Normalize(Vector3) Returns a vector with the same direction as the specified vector, but with a length of one. public static Vector3 Normalize(Vector3 value) Parameters value Vector3 The vector to normalize. Returns Vector3 The normalized vector. ToString() Returns the string representation of the current instance using default formatting. public override readonly string ToString() Returns string The string representation of the current instance. Remarks This method returns a string in which each element of the vector is formatted using the \"G\" (general) format string and the formatting conventions of the current thread culture. The \"<\" and \">\" characters are used to begin and end the string, and the current culture's System.Globalization.NumberFormatInfo.NumberGroupSeparator property followed by a space is used to separate each element. ToString(string, IFormatProvider) Returns the string representation of the current instance using the specified format string to format individual elements and the specified format provider to define culture-specific formatting. public readonly string ToString(string format, IFormatProvider formatProvider) Parameters format string A standard or custom numeric format string that defines the format of individual elements. formatProvider IFormatProvider A format provider that supplies culture-specific formatting information. Returns string The string representation of the current instance. Remarks This method returns a string in which each element of the vector is formatted using format and formatProvider. The \"<\" and \">\" characters are used to begin and end the string, and the format provider's System.Globalization.NumberFormatInfo.NumberGroupSeparator property followed by a space is used to separate each element. Operators operator +(Vector3, Vector3) Adds two vectors together. public static Vector3 operator +(Vector3 left, Vector3 right) Parameters left Vector3 The first vector to add. right Vector3 The second vector to add. Returns Vector3 The summed vector. Remarks The Alis.Core.Aspect.Math.Vector.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3) method defines the addition operation for Alis.Core.Aspect.Math.Vector.Vector3 objects. operator /(Vector3, Vector3) Divides the first vector by the second. public static Vector3 operator /(Vector3 left, Vector3 right) Parameters left Vector3 The first vector. right Vector3 The second vector. Returns Vector3 The vector that results from dividing left by right. operator /(Vector3, float) Divides the specified vector by a specified scalar value. public static Vector3 operator /(Vector3 value1, float value2) Parameters value1 Vector3 The vector. value2 float The scalar value. Returns Vector3 The result of the division. operator ==(Vector3, Vector3) Returns a value that indicates whether each pair of elements in two specified vectors is equal. public static bool operator ==(Vector3 left, Vector3 right) Parameters left Vector3 The first vector to compare. right Vector3 The second vector to compare. Returns bool true if left and right are equal; otherwise, false. Remarks Two Alis.Core.Aspect.Math.Vector.Vector3 objects are equal if each element in right is equal to the corresponding element in right. operator !=(Vector3, Vector3) Returns a value that indicates whether two specified vectors are not equal. public static bool operator !=(Vector3 left, Vector3 right) Parameters left Vector3 The first vector to compare. right Vector3 The second vector to compare. Returns bool true if left and right are not equal; otherwise, false. operator *(Vector3, Vector3) Returns a new vector whose values are the product of each pair of elements in two specified vectors. public static Vector3 operator *(Vector3 left, Vector3 right) Parameters left Vector3 The first vector. right Vector3 The second vector. Returns Vector3 The element-wise product vector. operator *(Vector3, float) Multiplies the specified vector by the specified scalar value. public static Vector3 operator *(Vector3 left, float right) Parameters left Vector3 The vector. right float The scalar value. Returns Vector3 The scaled vector. operator *(float, Vector3) Multiplies the scalar value by the specified vector. public static Vector3 operator *(float left, Vector3 right) Parameters left float The vector. right Vector3 The scalar value. Returns Vector3 The scaled vector. operator -(Vector3, Vector3) Subtracts the second vector from the first. public static Vector3 operator -(Vector3 left, Vector3 right) Parameters left Vector3 The first vector. right Vector3 The second vector. Returns Vector3 The vector that results from subtracting right from left. Remarks The Alis.Core.Aspect.Math.Vector.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3) method defines the subtraction operation for Alis.Core.Aspect.Math.Vector.Vector3 objects. operator -(Vector3) Negates the specified vector. public static Vector3 operator -(Vector3 value) Parameters value Vector3 The vector to negate. Returns Vector3 The negated vector. Remarks The Alis.Core.Aspect.Math.Vector.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3) method defines the unary negation operation for Alis.Core.Aspect.Math.Vector.Vector3 objects."
  },
  "api/Alis.Core.Aspect.Math.Vector.Vector4.html": {
    "href": "api/Alis.Core.Aspect.Math.Vector.Vector4.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Vector4 Namespace Alis.Core.Aspect.Math.Vector Assembly Alis.dll The vector [Serializable] public struct Vector4 : ISerializable Implements ISerializable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Vector4(float, float, float, float) Initializes a new instance of the Alis.Core.Aspect.Math.Vector.Vector4 class public Vector4(float x, float y, float z, float w) Parameters x float The y float The z float The w float The Properties W Projective/Homogenous component of the vector public float W { readonly get; set; } Property Value float X Horizontal component of the vector public float X { readonly get; set; } Property Value float Y Vertical component of the vector public float Y { readonly get; set; } Property Value float Z Depth component of the vector public float Z { readonly get; set; } Property Value float Methods Get(Vector4, int) Gets the v public static float Get(Vector4 v, int index) Parameters v Vector4 The index int The index Returns float The float GetObjectData(SerializationInfo, StreamingContext) Gets the object data using the specified info public void GetObjectData(SerializationInfo info, StreamingContext context) Parameters info SerializationInfo The info context StreamingContext The context"
  },
  "api/Alis.Core.Aspect.Math.Vector.html": {
    "href": "api/Alis.Core.Aspect.Math.Vector.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math.Vector Structs Vector2 The vector Vector3 The vector Vector4 The vector"
  },
  "api/Alis.Core.Aspect.Math.html": {
    "href": "api/Alis.Core.Aspect.Math.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Math Namespaces Alis.Core.Aspect.Math.Definition Alis.Core.Aspect.Math.Matrix Alis.Core.Aspect.Math.Shape Alis.Core.Aspect.Math.Util Alis.Core.Aspect.Math.Vector Classes CustomMathF The math class Structs Rotation The rotation Transform A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames. Enums Direction Indicate the direction."
  },
  "api/Alis.Core.Aspect.Memory.Attributes.IsNotEmptyAttribute.html": {
    "href": "api/Alis.Core.Aspect.Memory.Attributes.IsNotEmptyAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class IsNotEmptyAttribute Namespace Alis.Core.Aspect.Memory.Attributes Assembly Alis.dll The not empty attribute class public class IsNotEmptyAttribute : IsValidationAttribute Inheritance object Attribute IsValidationAttribute IsNotEmptyAttribute Inherited Members IsValidationAttribute.Validate(object, string) Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Validate(object, string) Validates the value public override void Validate(object value, string name) Parameters value object The value name string The name See Also IsValidationAttribute"
  },
  "api/Alis.Core.Aspect.Memory.Attributes.IsNotNullAttribute.html": {
    "href": "api/Alis.Core.Aspect.Memory.Attributes.IsNotNullAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class IsNotNullAttribute Namespace Alis.Core.Aspect.Memory.Attributes Assembly Alis.dll The not null attribute class public class IsNotNullAttribute : IsValidationAttribute Inheritance object Attribute IsValidationAttribute IsNotNullAttribute Inherited Members IsValidationAttribute.Validate(object, string) Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Validate(object, string) Validates the value public override void Validate(object value, string name) Parameters value object The value name string The name See Also IsValidationAttribute"
  },
  "api/Alis.Core.Aspect.Memory.Attributes.IsNotZeroAttribute.html": {
    "href": "api/Alis.Core.Aspect.Memory.Attributes.IsNotZeroAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class IsNotZeroAttribute Namespace Alis.Core.Aspect.Memory.Attributes Assembly Alis.dll The not null attribute class public class IsNotZeroAttribute : IsValidationAttribute Inheritance object Attribute IsValidationAttribute IsNotZeroAttribute Inherited Members IsValidationAttribute.Validate(object, string) Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Validate(object, string) Validates the value public override void Validate(object value, string name) Parameters value object The value name string The name See Also IsValidationAttribute"
  },
  "api/Alis.Core.Aspect.Memory.Attributes.IsValidationAttribute.html": {
    "href": "api/Alis.Core.Aspect.Memory.Attributes.IsValidationAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class IsValidationAttribute Namespace Alis.Core.Aspect.Memory.Attributes Assembly Alis.dll The validation attribute class [AttributeUsage(AttributeTargets.All, AllowMultiple = true)] public abstract class IsValidationAttribute : Attribute Inheritance object Attribute IsValidationAttribute Derived IsNotEmptyAttribute IsNotNullAttribute IsNotZeroAttribute Inherited Members Attribute.Equals(object?) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object?) Attribute.TypeId object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Validate(object, string) Validates the value public abstract void Validate(object value, string name) Parameters value object The value name string See Also Attribute"
  },
  "api/Alis.Core.Aspect.Memory.Attributes.html": {
    "href": "api/Alis.Core.Aspect.Memory.Attributes.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Memory.Attributes Classes IsNotEmptyAttribute The not empty attribute class IsNotNullAttribute The not null attribute class IsNotZeroAttribute The not null attribute class IsValidationAttribute The validation attribute class"
  },
  "api/Alis.Core.Aspect.Memory.Exceptions.NotEmptyException.html": {
    "href": "api/Alis.Core.Aspect.Memory.Exceptions.NotEmptyException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NotEmptyException Namespace Alis.Core.Aspect.Memory.Exceptions Assembly Alis.dll The not empty exception class public class NotEmptyException : Exception, ISerializable Inheritance object Exception NotEmptyException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NotEmptyException(string) The constructor public NotEmptyException(string message) Parameters message string The message See Also Exception"
  },
  "api/Alis.Core.Aspect.Memory.Exceptions.NotNullException.html": {
    "href": "api/Alis.Core.Aspect.Memory.Exceptions.NotNullException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NotNullException Namespace Alis.Core.Aspect.Memory.Exceptions Assembly Alis.dll The my exception class public class NotNullException : Exception, ISerializable Inheritance object Exception NotNullException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NotNullException(string) The constructor public NotNullException(string message) Parameters message string The message See Also Exception"
  },
  "api/Alis.Core.Aspect.Memory.Exceptions.NotZeroException.html": {
    "href": "api/Alis.Core.Aspect.Memory.Exceptions.NotZeroException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NotZeroException Namespace Alis.Core.Aspect.Memory.Exceptions Assembly Alis.dll The not zero exception class public class NotZeroException : Exception, ISerializable Inheritance object Exception NotZeroException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NotZeroException(string) The constructor public NotZeroException(string message) Parameters message string The message See Also Exception"
  },
  "api/Alis.Core.Aspect.Memory.Exceptions.html": {
    "href": "api/Alis.Core.Aspect.Memory.Exceptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Memory.Exceptions Classes NotEmptyException The not empty exception class NotNullException The my exception class NotZeroException The not zero exception class"
  },
  "api/Alis.Core.Aspect.Memory.Validator.html": {
    "href": "api/Alis.Core.Aspect.Memory.Validator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Validator Namespace Alis.Core.Aspect.Memory Assembly Alis.dll The validator class public static class Validator Inheritance object Validator Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Validate<T>(T, string) Validates the input using the specified value [Conditional(\"DEBUGGER\")] public static void Validate<T>(T value, string name) Parameters value T The value name string Type Parameters T The ValidateField<T>(T, string, Type) Validates the field using the specified value internal static void ValidateField<T>(T value, string name, Type callingType) Parameters value T The value name string The name callingType Type The calling type Type Parameters T The ValidateParameter<T>(T, string, Type, MethodBase) Validates the parameter using the specified value internal static void ValidateParameter<T>(T value, string name, Type callingType, MethodBase methodBase) Parameters value T The value name string The name callingType Type The calling type methodBase MethodBase The method base Type Parameters T The ValidateProperty<T>(T, string, Type) Validates the property using the specified value internal static void ValidateProperty<T>(T value, string name, Type callingType) Parameters value T The value name string The name callingType Type The calling type Type Parameters T The"
  },
  "api/Alis.Core.Aspect.Memory.html": {
    "href": "api/Alis.Core.Aspect.Memory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Memory Namespaces Alis.Core.Aspect.Memory.Attributes Alis.Core.Aspect.Memory.Exceptions Classes Validator The validator class"
  },
  "api/Alis.Core.Aspect.Security.SecureByte.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureByte.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureByte Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure byte class public class SecureByte Inheritance object SecureByte Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureByte(byte) Initializes a new instance of the Alis.Core.Aspect.Security.SecureByte class public SecureByte(byte value = 0) Parameters value byte The value Fields _randomValue The random value private byte _randomValue Field Value byte _value The value private byte _value Field Value byte Properties Value Gets or sets the value of the value private byte Value { get; set; } Property Value byte Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureByte, SecureByte) public static SecureByte operator +(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns SecureByte operator --(SecureByte) public static SecureByte operator --(SecureByte a) Parameters a SecureByte Returns SecureByte operator /(SecureByte, SecureByte) public static SecureByte operator /(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns SecureByte operator ==(SecureByte, SecureByte) public static bool operator ==(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns bool implicit operator SecureByte(byte) public static implicit operator SecureByte(byte value) Parameters value byte Returns SecureByte implicit operator byte(SecureByte) public static implicit operator byte(SecureByte value) Parameters value SecureByte Returns byte operator ++(SecureByte) public static SecureByte operator ++(SecureByte a) Parameters a SecureByte Returns SecureByte operator !=(SecureByte, SecureByte) public static bool operator !=(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns bool operator *(SecureByte, SecureByte) public static SecureByte operator *(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns SecureByte operator -(SecureByte, SecureByte) public static SecureByte operator -(SecureByte a, SecureByte b) Parameters a SecureByte b SecureByte Returns SecureByte"
  },
  "api/Alis.Core.Aspect.Security.SecureChar.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureChar.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureChar Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure char class public class SecureChar Inheritance object SecureChar Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureChar(char) Initializes a new instance of the Alis.Core.Aspect.Security.SecureChar class public SecureChar(char value = '\\0') Parameters value char The value Fields _randomValue The random value private char _randomValue Field Value char _value The value private char _value Field Value char Properties Value Gets or sets the value of the value private char Value { get; set; } Property Value char Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureChar, SecureChar) public static SecureChar operator +(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns SecureChar operator /(SecureChar, SecureChar) public static SecureChar operator /(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns SecureChar operator ==(SecureChar, SecureChar) public static bool operator ==(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns bool implicit operator SecureChar(char) public static implicit operator SecureChar(char value) Parameters value char Returns SecureChar implicit operator char(SecureChar) public static implicit operator char(SecureChar value) Parameters value SecureChar Returns char operator !=(SecureChar, SecureChar) public static bool operator !=(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns bool operator *(SecureChar, SecureChar) public static SecureChar operator *(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns SecureChar operator -(SecureChar, SecureChar) public static SecureChar operator -(SecureChar a, SecureChar b) Parameters a SecureChar b SecureChar Returns SecureChar"
  },
  "api/Alis.Core.Aspect.Security.SecureDecimal.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureDecimal.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureDecimal Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure decimal class public class SecureDecimal Inheritance object SecureDecimal Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureDecimal(decimal) Initializes a new instance of the Alis.Core.Aspect.Security.SecureDecimal class public SecureDecimal(decimal value = 0.0) Parameters value decimal The value Fields _randomValue The random value private decimal _randomValue Field Value decimal _value The value private decimal _value Field Value decimal Properties Value Gets or sets the value of the value private decimal Value { get; set; } Property Value decimal Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureDecimal, SecureDecimal) public static SecureDecimal operator +(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns SecureDecimal operator --(SecureDecimal) public static SecureDecimal operator --(SecureDecimal a) Parameters a SecureDecimal Returns SecureDecimal operator /(SecureDecimal, SecureDecimal) public static SecureDecimal operator /(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns SecureDecimal operator ==(SecureDecimal, SecureDecimal) public static bool operator ==(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns bool implicit operator SecureDecimal(decimal) public static implicit operator SecureDecimal(decimal value) Parameters value decimal Returns SecureDecimal implicit operator decimal(SecureDecimal) public static implicit operator decimal(SecureDecimal value) Parameters value SecureDecimal Returns decimal operator ++(SecureDecimal) public static SecureDecimal operator ++(SecureDecimal a) Parameters a SecureDecimal Returns SecureDecimal operator !=(SecureDecimal, SecureDecimal) public static bool operator !=(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns bool operator *(SecureDecimal, SecureDecimal) public static SecureDecimal operator *(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns SecureDecimal operator -(SecureDecimal, SecureDecimal) public static SecureDecimal operator -(SecureDecimal a, SecureDecimal b) Parameters a SecureDecimal b SecureDecimal Returns SecureDecimal"
  },
  "api/Alis.Core.Aspect.Security.SecureDouble.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureDouble.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureDouble Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure double class public class SecureDouble Inheritance object SecureDouble Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureDouble(double) Initializes a new instance of the Alis.Core.Aspect.Security.SecureDouble class public SecureDouble(double value = 0) Parameters value double The value Fields _randomValue The random value private double _randomValue Field Value double _value The value private double _value Field Value double Properties Value Gets or sets the value of the value private double Value { get; set; } Property Value double Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureDouble, SecureDouble) public static SecureDouble operator +(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns SecureDouble operator --(SecureDouble) public static SecureDouble operator --(SecureDouble a) Parameters a SecureDouble Returns SecureDouble operator /(SecureDouble, SecureDouble) public static SecureDouble operator /(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns SecureDouble operator ==(SecureDouble, SecureDouble) public static bool operator ==(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns bool implicit operator SecureDouble(double) public static implicit operator SecureDouble(double value) Parameters value double Returns SecureDouble implicit operator double(SecureDouble) public static implicit operator double(SecureDouble value) Parameters value SecureDouble Returns double operator ++(SecureDouble) public static SecureDouble operator ++(SecureDouble a) Parameters a SecureDouble Returns SecureDouble operator !=(SecureDouble, SecureDouble) public static bool operator !=(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns bool operator *(SecureDouble, SecureDouble) public static SecureDouble operator *(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns SecureDouble operator -(SecureDouble, SecureDouble) public static SecureDouble operator -(SecureDouble a, SecureDouble b) Parameters a SecureDouble b SecureDouble Returns SecureDouble"
  },
  "api/Alis.Core.Aspect.Security.SecureFloat.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureFloat.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureFloat Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure float class public class SecureFloat Inheritance object SecureFloat Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureFloat(float) Initializes a new instance of the Alis.Core.Aspect.Security.SecureFloat class public SecureFloat(float value = 0) Parameters value float The value Fields _randomValue The random value private float _randomValue Field Value float _value The value private float _value Field Value float Properties Value Gets or sets the value of the value private float Value { get; set; } Property Value float Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureFloat, SecureFloat) public static SecureFloat operator +(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns SecureFloat operator --(SecureFloat) public static SecureFloat operator --(SecureFloat a) Parameters a SecureFloat Returns SecureFloat operator /(SecureFloat, SecureFloat) public static SecureFloat operator /(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns SecureFloat operator ==(SecureFloat, SecureFloat) public static bool operator ==(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns bool implicit operator SecureFloat(float) public static implicit operator SecureFloat(float value) Parameters value float Returns SecureFloat implicit operator float(SecureFloat) public static implicit operator float(SecureFloat value) Parameters value SecureFloat Returns float operator ++(SecureFloat) public static SecureFloat operator ++(SecureFloat a) Parameters a SecureFloat Returns SecureFloat operator !=(SecureFloat, SecureFloat) public static bool operator !=(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns bool operator *(SecureFloat, SecureFloat) public static SecureFloat operator *(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns SecureFloat operator -(SecureFloat, SecureFloat) public static SecureFloat operator -(SecureFloat a, SecureFloat b) Parameters a SecureFloat b SecureFloat Returns SecureFloat"
  },
  "api/Alis.Core.Aspect.Security.SecureInt.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureInt.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureInt Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure int class public class SecureInt Inheritance object SecureInt Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureInt(int) Initializes a new instance of the Alis.Core.Aspect.Security.SecureInt class public SecureInt(int value = 0) Parameters value int The value Fields _randomValue The random value private int _randomValue Field Value int _value The value private int _value Field Value int Properties Value Gets or sets the value of the value private int Value { get; set; } Property Value int Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureInt, SecureInt) public static SecureInt operator +(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns SecureInt operator --(SecureInt) public static SecureInt operator --(SecureInt a) Parameters a SecureInt Returns SecureInt operator /(SecureInt, SecureInt) public static SecureInt operator /(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns SecureInt operator ==(SecureInt, SecureInt) public static bool operator ==(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns bool implicit operator SecureInt(int) public static implicit operator SecureInt(int value) Parameters value int Returns SecureInt implicit operator int(SecureInt) public static implicit operator int(SecureInt value) Parameters value SecureInt Returns int operator ++(SecureInt) public static SecureInt operator ++(SecureInt a) Parameters a SecureInt Returns SecureInt operator !=(SecureInt, SecureInt) public static bool operator !=(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns bool operator *(SecureInt, SecureInt) public static SecureInt operator *(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns SecureInt operator -(SecureInt, SecureInt) public static SecureInt operator -(SecureInt a, SecureInt b) Parameters a SecureInt b SecureInt Returns SecureInt"
  },
  "api/Alis.Core.Aspect.Security.SecureLong.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureLong.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureLong Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure long class public class SecureLong Inheritance object SecureLong Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureLong(long) Initializes a new instance of the Alis.Core.Aspect.Security.SecureLong class public SecureLong(long value = 0) Parameters value long The value Fields _randomValue The random value private long _randomValue Field Value long _value The value private long _value Field Value long Properties Value Gets or sets the value of the value private long Value { get; set; } Property Value long Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int ToString() Returns the string public override string ToString() Returns string The string Operators operator +(SecureLong, SecureLong) public static SecureLong operator +(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns SecureLong operator --(SecureLong) public static SecureLong operator --(SecureLong a) Parameters a SecureLong Returns SecureLong operator /(SecureLong, SecureLong) public static SecureLong operator /(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns SecureLong operator ==(SecureLong, SecureLong) public static bool operator ==(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns bool implicit operator SecureLong(long) public static implicit operator SecureLong(long value) Parameters value long Returns SecureLong implicit operator long(SecureLong) public static implicit operator long(SecureLong value) Parameters value SecureLong Returns long operator ++(SecureLong) public static SecureLong operator ++(SecureLong a) Parameters a SecureLong Returns SecureLong operator !=(SecureLong, SecureLong) public static bool operator !=(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns bool operator *(SecureLong, SecureLong) public static SecureLong operator *(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns SecureLong operator -(SecureLong, SecureLong) public static SecureLong operator -(SecureLong a, SecureLong b) Parameters a SecureLong b SecureLong Returns SecureLong"
  },
  "api/Alis.Core.Aspect.Security.SecureRandom.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureRandom.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureRandom Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure random class internal static class SecureRandom Inheritance object SecureRandom Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Abs(float) Abs the value public static float Abs(float value) Parameters value float The value Returns float The float NextByte() Nexts the byte public static byte NextByte() Returns byte The byte NextChar() Nexts the char public static char NextChar() Returns char The char NextDecimal(int, int) Nexts the decimal using the specified i public static decimal NextDecimal(int i, int i1) Parameters i int The i1 int The Returns decimal The random decimal NextDouble(int, int) Nexts the double using the specified i public static double NextDouble(int i, int i1) Parameters i int The i1 int The Returns double The random double NextFloat(int, int) Nexts the float using the specified i public static float NextFloat(int i, int i1) Parameters i int The i1 int The Returns float The random float NextInt() Nexts the int public static int NextInt() Returns int The int NextLong() Nexts the long public static long NextLong() Returns long The long"
  },
  "api/Alis.Core.Aspect.Security.SecureString.html": {
    "href": "api/Alis.Core.Aspect.Security.SecureString.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecureString Namespace Alis.Core.Aspect.Security Assembly Alis.dll The secure string class public class SecureString Inheritance object SecureString Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecureString(string) Initializes a new instance of the Alis.Core.Aspect.Security.SecureString class public SecureString(string value) Parameters value string The value Fields encryptedValue The encrypted value private string encryptedValue Field Value string secret The key private readonly char secret Field Value char Methods EncryptDecrypt(string, char) Encrypts the decrypt using the specified text to encrypt private static string EncryptDecrypt(string textToEncrypt, char key) Parameters textToEncrypt string The text to encrypt key char The key Returns string The string GenerateKey() Generates the key private static char GenerateKey() Returns char The char GetValue() Gets the value public string GetValue() Returns string The string SetValue(string) Sets the value using the specified value internal void SetValue(string value) Parameters value string The value"
  },
  "api/Alis.Core.Aspect.Security.html": {
    "href": "api/Alis.Core.Aspect.Security.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Security Classes SecureByte The secure byte class SecureChar The secure char class SecureDecimal The secure decimal class SecureDouble The secure double class SecureFloat The secure float class SecureInt The secure int class SecureLong The secure long class SecureRandom The secure random class SecureString The secure string class"
  },
  "api/Alis.Core.Aspect.Thread.ThreadManager.html": {
    "href": "api/Alis.Core.Aspect.Thread.ThreadManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ThreadManager Namespace Alis.Core.Aspect.Thread Assembly Alis.dll The thread manager class public class ThreadManager Inheritance object ThreadManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields threadTokens The cancellation token source private readonly Dictionary<ThreadTask, CancellationTokenSource> threadTokens Field Value Dictionary<ThreadTask, CancellationTokenSource> Methods GetThreadCount() Gets the thread count public int GetThreadCount() Returns int The int StartThread(ThreadTask) Starts the thread using the specified thread task public void StartThread(ThreadTask threadTask) Parameters threadTask ThreadTask The thread task StopAllThreads() Stops the all threads public void StopAllThreads() StopThread(ThreadTask) Stops the thread using the specified thread task public void StopThread(ThreadTask threadTask) Parameters threadTask ThreadTask The thread task"
  },
  "api/Alis.Core.Aspect.Thread.ThreadTask.html": {
    "href": "api/Alis.Core.Aspect.Thread.ThreadTask.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ThreadTask Namespace Alis.Core.Aspect.Thread Assembly Alis.dll The thread task class public class ThreadTask Inheritance object ThreadTask Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ThreadTask(Action<CancellationToken>, CancellationToken) Initializes a new instance of the Alis.Core.Aspect.Thread.ThreadTask class public ThreadTask(Action<CancellationToken> action, CancellationToken token) Parameters action Action<CancellationToken> The action token CancellationToken Properties Action Gets or sets the value of the action private Action<CancellationToken> Action { get; } Property Value Action<CancellationToken> Token Gets or sets the value of the token private CancellationToken Token { get; } Property Value CancellationToken Methods Execute(CancellationToken) Executes this instance public void Execute(CancellationToken token) Parameters token CancellationToken"
  },
  "api/Alis.Core.Aspect.Thread.html": {
    "href": "api/Alis.Core.Aspect.Thread.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Thread Classes ThreadManager The thread manager class ThreadTask The thread task class"
  },
  "api/Alis.Core.Aspect.Time.Clock.html": {
    "href": "api/Alis.Core.Aspect.Time.Clock.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Clock Namespace Alis.Core.Aspect.Time Assembly Alis.dll The clock class public class Clock Inheritance object Clock Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields stopwatch The stopwatch private readonly Stopwatch stopwatch Field Value Stopwatch Properties Elapsed Gets the value of the elapsed public TimeSpan Elapsed { get; } Property Value TimeSpan ElapsedMilliseconds Gets the value of the elapsed milliseconds public long ElapsedMilliseconds { get; } Property Value long ElapsedSeconds Gets the value of the elapsed seconds public double ElapsedSeconds { get; } Property Value double ElapsedTicks Gets the value of the elapsed ticks public long ElapsedTicks { get; } Property Value long Methods Reset() Resets this instance public void Reset() Start() Starts this instance public void Start() Stop() Stops this instance public void Stop()"
  },
  "api/Alis.Core.Aspect.Time.TimeConfiguration.html": {
    "href": "api/Alis.Core.Aspect.Time.TimeConfiguration.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TimeConfiguration Namespace Alis.Core.Aspect.Time Assembly Alis.dll The time class public class TimeConfiguration Inheritance object TimeConfiguration Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors TimeConfiguration(float, float, float) Initializes a new instance of the Alis.Core.Aspect.Time.TimeConfiguration class public TimeConfiguration(float fixedTimeStep = 0.016, float maximumAllowedTimeStep = 0.1, float timeScale = 1) Parameters fixedTimeStep float The fixed time step maximumAllowedTimeStep float The maximum allowed time step timeScale float The time scale Properties FixedTimeStep A framerate-independent interval that dictates when physics calculations and FixedUpdate() events are performed. public float FixedTimeStep { get; set; } Property Value float LogOutput Gets or sets the value of the log output public bool LogOutput { get; set; } Property Value bool MaximumAllowedTimeStep A framerate-independent interval that caps the worst case scenario when frame-rate is low. Physics calculations and FixedUpdate() events will not be performed for longer time than specified. public float MaximumAllowedTimeStep { get; set; } Property Value float TimeScale The speed at which time progresses. Change this value to simulate bullet-time effects. A value of 1 means real-time. A value of .5 means half speed; a value of 2 is double speed. public float TimeScale { get; set; } Property Value float"
  },
  "api/Alis.Core.Aspect.Time.TimeManager.html": {
    "href": "api/Alis.Core.Aspect.Time.TimeManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TimeManager Namespace Alis.Core.Aspect.Time Assembly Alis.dll Provides an interface to get time information. public class TimeManager Inheritance object TimeManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors TimeManager() Initializes a new instance of the Alis.Core.Aspect.Time.TimeManager class public TimeManager() Properties AverageFrames Gets or sets the value of the average frames public int AverageFrames { get; set; } Property Value int Clock Gets the value of the clock public Clock Clock { get; set; } Property Value Clock Configuration Gets or sets the value of the configuration public TimeConfiguration Configuration { get; } Property Value TimeConfiguration DeltaTime The interval in seconds from the last frame to the current one (Read Only). public float DeltaTime { get; set; } Property Value float FixedDeltaTime The interval in seconds at which physics and other fixed frame rate updateS. public float FixedDeltaTime { get; set; } Property Value float FixedTime The time since the last FixedUpdate started (Read Only). This is the time in seconds since the start of the game. public float FixedTime { get; set; } Property Value float FixedTimeAsDouble The double precision time since the last FixedUpdate started (Read Only). This is the time in seconds since the start of the game. public double FixedTimeAsDouble { get; set; } Property Value double FixedUnscaledDeltaTime The timeScale-independent interval in seconds from the last Runtime.FixedUpdate() phase to the current one (Read Only). public float FixedUnscaledDeltaTime { get; set; } Property Value float FixedUnscaledTime The timeScale-independent time at the beginning of the last Runtime.FixedUpdate() phase (Read Only). This is the time in seconds since the start of the game. public float FixedUnscaledTime { get; set; } Property Value float FixedUnscaledTimeAsDouble The double precision timeScale-independent time at the beginning of the last FixedUpdate (Read Only). This is the time in seconds since the start of the game. public double FixedUnscaledTimeAsDouble { get; set; } Property Value double FrameCount The total number of frames since the start of the game (Read Only). public float FrameCount { get; set; } Property Value float InFixedTimeStep Returns true if called inside a fixed time step callback (like Runtime FixedUpdate), otherwise returns false. public bool InFixedTimeStep { get; set; } Property Value bool IsRunning Gets or sets the value of the is running public bool IsRunning { get; set; } Property Value bool MaximumDeltaTime The maximum value of TimeManager.DeltaTime in any given frame. This is a time in seconds that limits the increase of TimeManager.time between two frames. public float MaximumDeltaTime { get; set; } Property Value float RealtimeSinceStartup The real time in seconds since the game started (Read Only). public float RealtimeSinceStartup { get; } Property Value float RealtimeSinceStartupAsDouble The real time in seconds since the game started (Read Only). Double precision version of realtimeSinceStartup. public double RealtimeSinceStartupAsDouble { get; } Property Value double SmoothDeltaTime A smoothed out TimeManager.DeltaTime (Read Only). public float SmoothDeltaTime { get; set; } Property Value float Time The time at the beginning of this frame (Read Only). public float Time { get; set; } Property Value float TimeAsDouble The double precision time at the beginning of this frame (Read Only). This is the time in seconds since the start of the game. public double TimeAsDouble { get; set; } Property Value double TimeScale The scale at which time passes. public float TimeScale { get; set; } Property Value float TotalFrames Gets or sets the value of the total frames public int TotalFrames { get; set; } Property Value int UnscaledDeltaTime The timeScale-independent interval in seconds from the last frame to the current one (Read Only). public float UnscaledDeltaTime { get; set; } Property Value float UnscaledTime The timeScale-independent time for this frame (Read Only). This is the time in seconds since the start of the game. public float UnscaledTime { get; set; } Property Value float UnscaledTimeAsDouble The double precision timeScale-independent time for this frame (Read Only). This is the time in seconds since the start of the game. public double UnscaledTimeAsDouble { get; set; } Property Value double"
  },
  "api/Alis.Core.Aspect.Time.TimeStep.html": {
    "href": "api/Alis.Core.Aspect.Time.TimeStep.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TimeStep Namespace Alis.Core.Aspect.Time Assembly Alis.dll This is an internal class. public class TimeStep Inheritance object TimeStep Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties DeltaTime Time step (Delta time) public float DeltaTime { get; set; } Property Value float DeltaTimeRatio dt * inv_dt0 public float DeltaTimeRatio { get; set; } Property Value float InvertedDeltaTime Inverse time step (0 if dt == 0). public float InvertedDeltaTime { get; set; } Property Value float InvertedDeltaTimeZero The inverted delta time public float InvertedDeltaTimeZero { get; set; } Property Value float PositionIterations The position iterations public int PositionIterations { get; set; } Property Value int VelocityIterations The velocity iterations public int VelocityIterations { get; set; } Property Value int WarmStarting The warm starting public bool WarmStarting { get; set; } Property Value bool Methods Reset() Resets this instance public void Reset()"
  },
  "api/Alis.Core.Aspect.Time.html": {
    "href": "api/Alis.Core.Aspect.Time.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect.Time Classes Clock The clock class TimeConfiguration The time class TimeManager Provides an interface to get time information. TimeStep This is an internal class."
  },
  "api/Alis.Core.Aspect.html": {
    "href": "api/Alis.Core.Aspect.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Aspect Namespaces Alis.Core.Aspect.Data Alis.Core.Aspect.Fluent Alis.Core.Aspect.Logging Alis.Core.Aspect.Math Alis.Core.Aspect.Memory Alis.Core.Aspect.Security Alis.Core.Aspect.Thread Alis.Core.Aspect.Time"
  },
  "api/Alis.Core.Audio.Interfaces.IPlayer.html": {
    "href": "api/Alis.Core.Audio.Interfaces.IPlayer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPlayer Namespace Alis.Core.Audio.Interfaces Assembly Alis.dll The player interface public interface IPlayer Properties Paused Gets the value of the paused bool Paused { get; } Property Value bool Playing Gets the value of the playing bool Playing { get; } Property Value bool Methods Pause() Pauses this instance Task Pause() Returns Task Play(string) Plays the file name Task Play(string fileName) Parameters fileName string The file name Returns Task Resume() Resumes this instance Task Resume() Returns Task SetVolume(byte) Sets the volume using the specified percent Task SetVolume(byte percent) Parameters percent byte The percent Returns Task Stop() Stops this instance Task Stop() Returns Task PlaybackFinished playback event EventHandler PlaybackFinished Event Type EventHandler"
  },
  "api/Alis.Core.Audio.Interfaces.html": {
    "href": "api/Alis.Core.Audio.Interfaces.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Audio.Interfaces Interfaces IPlayer The player interface"
  },
  "api/Alis.Core.Audio.Player.html": {
    "href": "api/Alis.Core.Audio.Player.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Player Namespace Alis.Core.Audio Assembly Alis.dll The player class public class Player : IPlayer Inheritance object Player Implements IPlayer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Player() Initializes a new instance of the Alis.Core.Audio.Player class public Player() Exceptions Exception No implementation exist for the current OS Fields _internalPlayer The internal player private readonly IPlayer _internalPlayer Field Value IPlayer Properties Paused Indicates that the audio playback is currently paused. public bool Paused { get; } Property Value bool Playing Indicates that the audio is currently playing. public bool Playing { get; } Property Value bool Methods CheckOs() Checks the os internal static IPlayer CheckOs() Returns IPlayer The player OnPlaybackFinished(object, EventArgs) Ons the playback finished using the specified sender internal void OnPlaybackFinished(object sender, EventArgs e) Parameters sender object The sender e EventArgs The Pause() Pauses any playback. Sets Paused flag to true. Doesn't modify Playing flag. public Task Pause() Returns Task Play(string) Will stop any current playback and will start playing the specified audio file. The fileName parameter can be an absolute path or a path relative to the directory where the library is located. Sets Playing flag to true. Sets Paused flag to false. public Task Play(string fileName) Parameters fileName string Returns Task Resume() Resumes any paused playback. Sets Paused flag to false. Doesn't modify Playing flag. public Task Resume() Returns Task SetVolume(byte) Sets the playing volume as percent public Task SetVolume(byte percent) Parameters percent byte Returns Task Stop() Stops any current playback and clears the buffer. Sets Playing and Paused flags to false. public Task Stop() Returns Task PlaybackFinished Internally, sets Playing flag to false. Additional handlers can be attached to it to handle any custom logic. public event EventHandler PlaybackFinished Event Type EventHandler See Also IPlayer"
  },
  "api/Alis.Core.Audio.Players.LinuxPlayer.html": {
    "href": "api/Alis.Core.Audio.Players.LinuxPlayer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class LinuxPlayer Namespace Alis.Core.Audio.Players Assembly Alis.dll The linux player class internal class LinuxPlayer : UnixPlayerBase, IPlayer Inheritance object UnixPlayerBase LinuxPlayer Implements IPlayer Inherited Members UnixPlayerBase.PauseProcessCommand UnixPlayerBase.ResumeProcessCommand UnixPlayerBase._process UnixPlayerBase.PlaybackFinished UnixPlayerBase.Playing UnixPlayerBase.Paused UnixPlayerBase.Play(string) UnixPlayerBase.Pause() UnixPlayerBase.Resume() UnixPlayerBase.Stop() UnixPlayerBase.SetVolume(byte) UnixPlayerBase.GetBashCommand(string) UnixPlayerBase.StartBashProcess(string) UnixPlayerBase.HandlePlaybackFinished(object, EventArgs) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods GetBashCommand(string) Gets the bash command using the specified file name internal override string GetBashCommand(string fileName) Parameters fileName string The file name Returns string The string SetVolume(byte) Sets the volume using the specified percent public override Task SetVolume(byte percent) Parameters percent byte The percent Returns Task Exceptions ArgumentOutOfRangeException Percent can't exceed 100 See Also UnixPlayerBase IPlayer"
  },
  "api/Alis.Core.Audio.Players.MacPlayer.html": {
    "href": "api/Alis.Core.Audio.Players.MacPlayer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MacPlayer Namespace Alis.Core.Audio.Players Assembly Alis.dll The mac player class internal class MacPlayer : UnixPlayerBase, IPlayer Inheritance object UnixPlayerBase MacPlayer Implements IPlayer Inherited Members UnixPlayerBase.PauseProcessCommand UnixPlayerBase.ResumeProcessCommand UnixPlayerBase._process UnixPlayerBase.PlaybackFinished UnixPlayerBase.Playing UnixPlayerBase.Paused UnixPlayerBase.Play(string) UnixPlayerBase.Pause() UnixPlayerBase.Resume() UnixPlayerBase.Stop() UnixPlayerBase.SetVolume(byte) UnixPlayerBase.GetBashCommand(string) UnixPlayerBase.StartBashProcess(string) UnixPlayerBase.HandlePlaybackFinished(object, EventArgs) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods GetBashCommand(string) Gets the bash command using the specified file name internal override string GetBashCommand(string fileName) Parameters fileName string The file name Returns string The string SetVolume(byte) Sets the volume using the specified percent public override Task SetVolume(byte percent) Parameters percent byte The percent Returns Task Exceptions ArgumentOutOfRangeException Percent can't exceed 100 See Also UnixPlayerBase IPlayer"
  },
  "api/Alis.Core.Audio.Players.UnixPlayerBase.html": {
    "href": "api/Alis.Core.Audio.Players.UnixPlayerBase.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class UnixPlayerBase Namespace Alis.Core.Audio.Players Assembly Alis.dll The unix player base class public abstract class UnixPlayerBase : IPlayer Inheritance object UnixPlayerBase Derived LinuxPlayer MacPlayer Implements IPlayer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields PauseProcessCommand The pause process command internal const string PauseProcessCommand = \"kill -STOP {0}\" Field Value string ResumeProcessCommand The resume process command internal const string ResumeProcessCommand = \"kill -CONT {0}\" Field Value string _process The process private Process _process Field Value Process Properties Paused Gets or sets the value of the paused public bool Paused { get; private set; } Property Value bool Playing Gets or sets the value of the playing public bool Playing { get; private set; } Property Value bool Methods GetBashCommand(string) Gets the bash command using the specified file name internal abstract string GetBashCommand(string fileName) Parameters fileName string The file name Returns string The string HandlePlaybackFinished(object, EventArgs) Handles the playback finished using the specified sender internal void HandlePlaybackFinished(object sender, EventArgs e) Parameters sender object The sender e EventArgs The Pause() Pauses this instance public Task Pause() Returns Task Play(string) Plays the file name public Task Play(string fileName) Parameters fileName string The file name Returns Task Resume() Resumes this instance public Task Resume() Returns Task SetVolume(byte) Sets the volume using the specified percent public abstract Task SetVolume(byte percent) Parameters percent byte The percent Returns Task StartBashProcess(string) Starts the bash process using the specified command protected Process StartBashProcess(string command) Parameters command string The command Returns Process The process Stop() Stops this instance public Task Stop() Returns Task PlaybackFinished Event public event EventHandler PlaybackFinished Event Type EventHandler See Also IPlayer"
  },
  "api/Alis.Core.Audio.Players.WindowsPlayer.html": {
    "href": "api/Alis.Core.Audio.Players.WindowsPlayer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WindowsPlayer Namespace Alis.Core.Audio.Players Assembly Alis.dll The windows player class internal class WindowsPlayer : IPlayer Inheritance object WindowsPlayer Implements IPlayer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _fileName The file name private string _fileName Field Value string _playStopwatch The play stopwatch private Stopwatch _playStopwatch Field Value Stopwatch _playbackTimer The playback timer private Timer _playbackTimer Field Value Timer Properties Paused Gets or sets the value of the paused public bool Paused { get; private set; } Property Value bool Playing Gets or sets the value of the playing public bool Playing { get; private set; } Property Value bool Methods ExecuteMsiCommand(string) Executes the msi command using the specified command string private Task ExecuteMsiCommand(string commandString) Parameters commandString string The command string Returns Task Exceptions Exception HandlePlaybackFinished(object, ElapsedEventArgs) Handles the playback finished using the specified sender private void HandlePlaybackFinished(object sender, ElapsedEventArgs e) Parameters sender object The sender e ElapsedEventArgs The Pause() Pauses this instance public Task Pause() Returns Task Play(string) Plays the file name public Task Play(string fileName) Parameters fileName string The file name Returns Task Resume() Resumes this instance public Task Resume() Returns Task SetVolume(byte) Sets the volume using the specified percent public Task SetVolume(byte percent) Parameters percent byte The percent Returns Task Stop() Stops this instance public Task Stop() Returns Task mciGetErrorString(int, StringBuilder, int) Mcis the get error string using the specified error code private static extern int mciGetErrorString(int errorCode, StringBuilder errorText, int errorTextSize) Parameters errorCode int The error code errorText StringBuilder The error text errorTextSize int The error text size Returns int The int mciSendString(string, StringBuilder, int, IntPtr) Mcis the send string using the specified command private static extern int mciSendString(string command, StringBuilder stringReturn, int returnLength, IntPtr hwndCallback) Parameters command string The command stringReturn StringBuilder The string return returnLength int The return length hwndCallback IntPtr The hwnd callback Returns int The int waveOutSetVolume(IntPtr, uint) Waves the out set volume using the specified hwo public static extern int waveOutSetVolume(IntPtr hwo, uint dwVolume) Parameters hwo IntPtr The hwo dwVolume uint The dw volume Returns int The int PlaybackFinished playback public event EventHandler PlaybackFinished Event Type EventHandler See Also IPlayer"
  },
  "api/Alis.Core.Audio.Players.html": {
    "href": "api/Alis.Core.Audio.Players.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Audio.Players Classes LinuxPlayer The linux player class MacPlayer The mac player class UnixPlayerBase The unix player base class WindowsPlayer The windows player class"
  },
  "api/Alis.Core.Audio.html": {
    "href": "api/Alis.Core.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Audio Namespaces Alis.Core.Audio.Interfaces Alis.Core.Audio.Players Classes Player The player class"
  },
  "api/Alis.Core.Ecs.Component.AComponent.html": {
    "href": "api/Alis.Core.Ecs.Component.AComponent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AComponent Namespace Alis.Core.Ecs.Component Assembly Alis.dll The component class public abstract class AComponent : IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent Derived ACollider ALight Animator AudioRecorder AudioSource Camera Canvas RigidBody Sprite Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Context Gets or sets the value of the game object [JsonPropertyName(\"_Context_\", true, true)] public Context Context { get; } Property Value Context GameObject Gets or sets the value of the game object [JsonPropertyName(\"_GameObject_\", true, true)] public GameObject GameObject { get; set; } Property Value GameObject Id Gets or sets the value of the id [JsonPropertyName(\"_Id_\")] public string Id { get; set; } Property Value string IsEnable Gets or sets the value of the is enable [JsonPropertyName(\"_IsEnable_\")] public bool IsEnable { get; set; } Property Value bool Name Gets or sets the value of the name [JsonPropertyName(\"_Name_\")] public string Name { get; set; } Property Value string Tag Gets or sets the value of the tag [JsonPropertyName(\"_Tag_\")] public string Tag { get; set; } Property Value string Methods Attach(GameObject) Attaches the game object public void Attach(GameObject gameObject) Parameters gameObject GameObject The game object OnAfterFixedUpdate() Ons the after fixed update public virtual void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public virtual void OnAfterUpdate() OnAwake() Ons the awake public virtual void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public virtual void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public virtual void OnBeforeUpdate() OnCalculate() Ons the calculate public virtual void OnCalculate() OnCollisionEnter(GameObject) Ons the collision enter using the specified game object public virtual void OnCollisionEnter(GameObject gameObject) Parameters gameObject GameObject The game object OnCollisionExit(GameObject) Ons the collision exit using the specified game object public virtual void OnCollisionExit(GameObject gameObject) Parameters gameObject GameObject The game object OnCollisionStay(GameObject) Ons the collision stay using the specified game object public virtual void OnCollisionStay(GameObject gameObject) Parameters gameObject GameObject The game object OnDestroy() Ons the destroy public virtual void OnDestroy() OnDisable() Ons the disable public virtual void OnDisable() OnDispatchEvents() Ons the dispatch events public virtual void OnDispatchEvents() OnDraw() Ons the draw public virtual void OnDraw() OnEnable() Ons the enable public virtual void OnEnable() OnExit() Ons the exit public virtual void OnExit() OnFixedUpdate() Ons the fixed update public virtual void OnFixedUpdate() OnGui() Ons the gui public virtual void OnGui() OnInit() Ons the init public virtual void OnInit() OnPressDownKey(KeyCodes) Ons the press down key using the specified key public virtual void OnPressDownKey(KeyCodes key) Parameters key KeyCodes The key OnPressKey(KeyCodes) Ons the press key using the specified key public virtual void OnPressKey(KeyCodes key) Parameters key KeyCodes The key OnReleaseKey(KeyCodes) Ons the release key using the specified key public virtual void OnReleaseKey(KeyCodes key) Parameters key KeyCodes The key OnReset() Ons the reset public virtual void OnReset() OnStart() Ons the start public virtual void OnStart() OnStop() Ons the stop public virtual void OnStop() OnTriggerEnter(GameObject) Ons the trigger enter using the specified game object public virtual void OnTriggerEnter(GameObject gameObject) Parameters gameObject GameObject The game object OnTriggerExit(GameObject) Ons the trigger exit using the specified game object public virtual void OnTriggerExit(GameObject gameObject) Parameters gameObject GameObject The game object OnTriggerStay(GameObject) Ons the trigger stay using the specified game object public virtual void OnTriggerStay(GameObject gameObject) Parameters gameObject GameObject The game object OnUpdate() Ons the update public virtual void OnUpdate() See Also IComponent<T> ISerializable"
  },
  "api/Alis.Core.Ecs.Component.Audio.AudioClip.html": {
    "href": "api/Alis.Core.Ecs.Component.Audio.AudioClip.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioClip Namespace Alis.Core.Ecs.Component.Audio Assembly Alis.dll The audio clip class public class AudioClip Inheritance object AudioClip Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AudioClip() Initializes a new instance of the Alis.Core.Ecs.Component.Audio.AudioClip class public AudioClip() AudioClip(string) Initializes a new instance of the Alis.Core.Ecs.Component.Audio.AudioClip class public AudioClip(string nameFile) Parameters nameFile string The name file AudioClip(string, bool, bool, bool, float) Initializes a new instance of the Alis.Core.Ecs.Component.Audio.AudioClip class public AudioClip(string nameFile, bool isPlaying, bool isMute, bool isLooping, float volume) Parameters nameFile string The name file isPlaying bool The is playing isMute bool The is mute isLooping bool The is looping volume float The volume Fields player The player private readonly Player player Field Value Player Properties FullPathAudioFile Gets or sets the value of the full path audio file private string FullPathAudioFile { get; set; } Property Value string IsLooping Gets or sets the value of the is looping [JsonPropertyName(\"_IsLooping_\")] public bool IsLooping { get; set; } Property Value bool IsMute Gets or sets the value of the is mute [JsonPropertyName(\"_IsMute_\")] public bool IsMute { get; set; } Property Value bool IsPlaying Gets or sets the value of the is playing [JsonPropertyName(\"_IsPlaying_\")] public bool IsPlaying { get; set; } Property Value bool NameFile Gets or sets the value of the name file [JsonPropertyName(\"_NameFile_\")] public string NameFile { get; set; } Property Value string Volume Gets or sets the value of the volume [JsonPropertyName(\"_Volume_\")] public float Volume { get; set; } Property Value float Methods Builder() Builders public static AudioClipBuilder Builder() Returns AudioClipBuilder The audio clip builder Play() Plays this instance internal void Play() Resume() Resumes this instance internal void Resume() Stop() Stops this instance internal void Stop()"
  },
  "api/Alis.Core.Ecs.Component.Audio.AudioRecorder.html": {
    "href": "api/Alis.Core.Ecs.Component.Audio.AudioRecorder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioRecorder Namespace Alis.Core.Ecs.Component.Audio Assembly Alis.dll The audio recorder class public class AudioRecorder : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<AudioRecorderBuilder> Inheritance object AComponent AudioRecorder Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<AudioRecorderBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Builder() Builders this instance public AudioRecorderBuilder Builder() Returns AudioRecorderBuilder The audio recorder builder"
  },
  "api/Alis.Core.Ecs.Component.Audio.AudioSource.html": {
    "href": "api/Alis.Core.Ecs.Component.Audio.AudioSource.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioSource Namespace Alis.Core.Ecs.Component.Audio Assembly Alis.dll The audio source class public class AudioSource : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<AudioSourceBuilder> Inheritance object AComponent AudioSource Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<AudioSourceBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AudioSource(AudioClip) Initializes a new instance of the Alis.Core.Ecs.Component.Audio.AudioSource class public AudioSource(AudioClip audioClip) Parameters audioClip AudioClip The audio clip AudioSource() Initializes a new instance of the Alis.Core.Ecs.Component.Audio.AudioSource class public AudioSource() Properties AudioClip Gets or sets the value of the audio clip public AudioClip AudioClip { get; set; } Property Value AudioClip IsPlaying Gets the value of the is playing public bool IsPlaying { get; } Property Value bool Loop Gets or sets the value of the loop public bool Loop { get; set; } Property Value bool Mute Gets or sets the value of the mute public bool Mute { get; set; } Property Value bool PlayOnAwake Gets or sets the value of the play on awake public bool PlayOnAwake { get; set; } Property Value bool Volume Gets or sets the value of the volume public float Volume { get; set; } Property Value float Methods Builder() Builders this instance public AudioSourceBuilder Builder() Returns AudioSourceBuilder The audio source builder OnExit() Ons the exit public override void OnExit() OnInit() Ons the init public override void OnInit() OnStart() Starts this instance public override void OnStart() OnStop() Ons the stop public override void OnStop() Play() Plays this instance public void Play() Resume() Resumes this instance public void Resume() Stop() Stops this instance public void Stop()"
  },
  "api/Alis.Core.Ecs.Component.Audio.html": {
    "href": "api/Alis.Core.Ecs.Component.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Audio Classes AudioClip The audio clip class AudioRecorder The audio recorder class AudioSource The audio source class"
  },
  "api/Alis.Core.Ecs.Component.Body.RigidBody.html": {
    "href": "api/Alis.Core.Ecs.Component.Body.RigidBody.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RigidBody Namespace Alis.Core.Ecs.Component.Body Assembly Alis.dll The rigid body class public class RigidBody : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<RigidBodyBuilder> Inheritance object AComponent RigidBody Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<RigidBodyBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Builder() Builders this instance public RigidBodyBuilder Builder() Returns RigidBodyBuilder The rigid body builder See Also Alis.Core.Ecs.Component.Body"
  },
  "api/Alis.Core.Ecs.Component.Body.html": {
    "href": "api/Alis.Core.Ecs.Component.Body.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Body Classes RigidBody The rigid body class"
  },
  "api/Alis.Core.Ecs.Component.Collider.ACollider.html": {
    "href": "api/Alis.Core.Ecs.Component.Collider.ACollider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ACollider Namespace Alis.Core.Ecs.Component.Collider Assembly Alis.dll The collider class public abstract class ACollider : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ACollider Derived BoxCollider CircleCollider Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnStart() Starts this instance public override void OnStart() OnUpdate() Updates this instance public override void OnUpdate() See Also AComponent"
  },
  "api/Alis.Core.Ecs.Component.Collider.BoxCollider.html": {
    "href": "api/Alis.Core.Ecs.Component.Collider.BoxCollider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BoxCollider Namespace Alis.Core.Ecs.Component.Collider Assembly Alis.dll The box collider class public class BoxCollider : ACollider, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<BoxColliderBuilder> Inheritance object AComponent ACollider BoxCollider Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<BoxColliderBuilder> Inherited Members ACollider.OnStart() ACollider.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields Rectangle The rectangle private RectangleI Rectangle Field Value RectangleI Properties AngularVelocity Gets or sets the value of the angular velocity public float AngularVelocity { get; set; } Property Value float AutoTilling Gets or sets the value of the auto tilling public bool AutoTilling { get; set; } Property Value bool Body Gets or sets the value of the body public Body Body { get; private set; } Property Value Body BodyType Gets or sets the value of the body type public BodyType BodyType { get; set; } Property Value BodyType FixedRotation Gets or sets the value of the fixed rotation public bool FixedRotation { get; set; } Property Value bool Friction Gets or sets the value of the friction public float Friction { get; set; } Property Value float Height Gets or sets the value of the height public float Height { get; set; } Property Value float IgnoreGravity Gets or sets the value of the gravity scale public bool IgnoreGravity { get; set; } Property Value bool IsTrigger Gets or sets the value of the is trigger public bool IsTrigger { get; set; } Property Value bool LinearVelocity Gets or sets the value of the linear velocity public Vector2 LinearVelocity { get; set; } Property Value Vector2 Mass Gets or sets the value of the mass public float Mass { get; set; } Property Value float RelativePosition Gets or sets the value of the relative position public Vector2 RelativePosition { get; set; } Property Value Vector2 Restitution Gets or sets the value of the restitution public float Restitution { get; set; } Property Value float Rotation Gets or sets the value of the rotation public float Rotation { get; set; } Property Value float Width Gets or sets the value of the width public float Width { get; set; } Property Value float Methods Builder() Builders this instance public BoxColliderBuilder Builder() Returns BoxColliderBuilder The box collider builder IsVisible(Vector2, Vector2, float) Describes whether this instance is visible public bool IsVisible(Vector2 cameraPosition, Vector2 cameraResolution, float pixelsPerMeter) Parameters cameraPosition Vector2 The camera position cameraResolution Vector2 The camera resolution pixelsPerMeter float The pixels per meter Returns bool The bool Max(float[]) Maxes the corners x private float Max(float[] cornersX) Parameters cornersX float[] The corners Returns float The max Min(float[]) Mins the corners x private float Min(float[] cornersX) Parameters cornersX float[] The corners Returns float The min OnAwake() Awakes this instance public override void OnAwake() OnBeforeUpdate() Before the update public override void OnBeforeUpdate() OnCollision(Fixture, Fixture, Contact) Describes whether this instance on collision private bool OnCollision(Fixture fixtureA, Fixture fixtureB, Contact contact) Parameters fixtureA Fixture The fixture fixtureB Fixture The fixture contact Contact The contact Returns bool The bool OnDraw() Draws this instance public override void OnDraw() OnExit() Ons the exit public override void OnExit() OnInit() Inits this instance public override void OnInit() OnSeparation(Fixture, Fixture, Contact) Ons the separation using the specified fixture a private void OnSeparation(Fixture fixtureA, Fixture fixtureB, Contact contact) Parameters fixtureA Fixture The fixture fixtureB Fixture The fixture contact Contact The contact OnStart() Starts this instance public override void OnStart() OnUpdate() Updates this instance public override void OnUpdate() Render(IntPtr, Vector2, Vector2, float, Color) Renders the renderer public void Render(IntPtr renderer, Vector2 cameraPosition, Vector2 cameraResolution, float pixelsPerMeter, Color debugColor) Parameters renderer IntPtr The renderer cameraPosition Vector2 The camera position cameraResolution Vector2 The camera resolution pixelsPerMeter float The pixels per meter debugColor Color The debug color See Also ACollider"
  },
  "api/Alis.Core.Ecs.Component.Collider.CircleCollider.html": {
    "href": "api/Alis.Core.Ecs.Component.Collider.CircleCollider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CircleCollider Namespace Alis.Core.Ecs.Component.Collider Assembly Alis.dll The circle collider class public class CircleCollider : ACollider, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ACollider CircleCollider Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members ACollider.OnStart() ACollider.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnStart() Starts this instance public override void OnStart() OnUpdate() Ons the update public override void OnUpdate() See Also ACollider"
  },
  "api/Alis.Core.Ecs.Component.Collider.html": {
    "href": "api/Alis.Core.Ecs.Component.Collider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Collider Classes ACollider The collider class BoxCollider The box collider class CircleCollider The circle collider class"
  },
  "api/Alis.Core.Ecs.Component.IComponent-1.html": {
    "href": "api/Alis.Core.Ecs.Component.IComponent-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IComponent<T> Namespace Alis.Core.Ecs.Component Assembly Alis.dll The component interface public interface IComponent<T> : IEnabled, IIdentifier, IRuntime Type Parameters T Implements IEnabled IIdentifier IRuntime Properties GameObject Gets or sets the value of the game object T GameObject { get; set; } Property Value T Methods Attach(T) Attaches the game object void Attach(T gameObject) Parameters gameObject T The game object OnCollisionEnter(T) Ons the collision enter using the specified game object void OnCollisionEnter(T gameObject) Parameters gameObject T The game object OnCollisionExit(T) Ons the collision exit using the specified game object void OnCollisionExit(T gameObject) Parameters gameObject T The game object OnPressDownKey(KeyCodes) Ons the press down key using the specified key void OnPressDownKey(KeyCodes key) Parameters key KeyCodes The key OnPressKey(KeyCodes) Ons the press key using the specified key void OnPressKey(KeyCodes key) Parameters key KeyCodes The key OnReleaseKey(KeyCodes) Ons the release key using the specified key void OnReleaseKey(KeyCodes key) Parameters key KeyCodes The key"
  },
  "api/Alis.Core.Ecs.Component.Light.ALight.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.ALight.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ALight Namespace Alis.Core.Ecs.Component.Light Assembly Alis.dll The light class public abstract class ALight : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ALight Derived AreaLight DirectionalLight PointLight SpotLight Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnStart() Starts this instance public override void OnStart() OnUpdate() Updates this instance public override void OnUpdate() See Also AComponent"
  },
  "api/Alis.Core.Ecs.Component.Light.AreaLight.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.AreaLight.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AreaLight Namespace Alis.Core.Ecs.Component.Light Assembly Alis.dll The area light class public class AreaLight : ALight, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ALight AreaLight Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members ALight.OnStart() ALight.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnInit() Inits this instance public override void OnInit() See Also ALight"
  },
  "api/Alis.Core.Ecs.Component.Light.DirectionalLight.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.DirectionalLight.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DirectionalLight Namespace Alis.Core.Ecs.Component.Light Assembly Alis.dll The directional light class public class DirectionalLight : ALight, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ALight DirectionalLight Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members ALight.OnStart() ALight.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnInit() Inits this instance public override void OnInit() See Also ALight"
  },
  "api/Alis.Core.Ecs.Component.Light.PointLight.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.PointLight.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PointLight Namespace Alis.Core.Ecs.Component.Light Assembly Alis.dll The point light class public class PointLight : ALight, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ALight PointLight Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members ALight.OnStart() ALight.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnInit() Inits this instance public override void OnInit() See Also ALight"
  },
  "api/Alis.Core.Ecs.Component.Light.SpotLight.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.SpotLight.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SpotLight Namespace Alis.Core.Ecs.Component.Light Assembly Alis.dll The spot light class public class SpotLight : ALight, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime Inheritance object AComponent ALight SpotLight Implements IComponent<GameObject> IEnabled IIdentifier IRuntime Inherited Members ALight.OnStart() ALight.OnUpdate() AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods OnInit() Inits this instance public override void OnInit() See Also ALight"
  },
  "api/Alis.Core.Ecs.Component.Light.html": {
    "href": "api/Alis.Core.Ecs.Component.Light.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Light Classes ALight The light class AreaLight The area light class DirectionalLight The directional light class PointLight The point light class SpotLight The spot light class"
  },
  "api/Alis.Core.Ecs.Component.Render.Animation.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Animation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Animation Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The animation class public class Animation : IBuilder<AnimatorBuilder> Inheritance object Animation Implements IBuilder<AnimatorBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Animation() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Animation class public Animation() Animation(List<Frame>) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Animation class public Animation(List<Frame> textures) Parameters textures List<Frame> The textures Properties Frames Gets or sets the value of the textures internal List<Frame> Frames { get; } Property Value List<Frame> Index Gets or sets the value of the index private int Index { get; set; } Property Value int Name Gets or sets the value of the name public string Name { get; set; } Property Value string Order Gets or sets the value of the order public int Order { get; set; } Property Value int Speed Gets or sets the value of the speed public float Speed { get; set; } Property Value float Methods AddFrame(Frame) Adds the frame using the specified frame public void AddFrame(Frame frame) Parameters frame Frame The frame Builder() Builders this instance public AnimatorBuilder Builder() Returns AnimatorBuilder The animator builder HasNext() Describes whether this instance has next public bool HasNext() Returns bool The bool NextTexture() Nexts the texture public Frame NextTexture() Returns Frame The texture Exceptions InvalidCastException"
  },
  "api/Alis.Core.Ecs.Component.Render.Animator.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Animator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Animator Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The animator class public class Animator : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<AnimatorBuilder> Inheritance object AComponent Animator Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<AnimatorBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Animator() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Animator class public Animator() Animator(List<Animation>) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Animator class public Animator(List<Animation> animations) Parameters animations List<Animation> The animations Fields currentAnimation The current animation [JsonPropertyName(\"_CurrentAnimation_\")] private Animation currentAnimation Field Value Animation Properties Animations Gets or sets the value of the animations public List<Animation> Animations { get; } Property Value List<Animation> Sprite Gets or sets the value of the sprite internal Sprite Sprite { get; set; } Property Value Sprite Timer Gets or sets the value of the timer internal Stopwatch Timer { get; } Property Value Stopwatch Methods AddAnimation(Animation) Adds the animation using the specified animation public void AddAnimation(Animation animation) Parameters animation Animation The animation Builder() Builders this instance public AnimatorBuilder Builder() Returns AnimatorBuilder The animator builder ChangeAnimationTo(string) Changes the animation to using the specified name animation public void ChangeAnimationTo(string nameAnimation) Parameters nameAnimation string The name animation ChangeAnimationTo(string, RendererFlips) Changes the animation to using the specified name animation public void ChangeAnimationTo(string nameAnimation, RendererFlips flipsTo) Parameters nameAnimation string The name animation flipsTo RendererFlips The flip to GetCurrentAnimation() Gets the current animation public Animation GetCurrentAnimation() Returns Animation The animation OnAwake() Awakes this instance public override void OnAwake() OnExit() Exits this instance public override void OnExit() OnInit() Inits this instance public override void OnInit() OnStart() Starts this instance public override void OnStart() OnUpdate() Updates this instance public override void OnUpdate()"
  },
  "api/Alis.Core.Ecs.Component.Render.Camera.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Camera.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Camera Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The camera class public class Camera : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<CameraBuilder> Inheritance object AComponent Camera Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<CameraBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Camera() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Camera class public Camera() Camera(string, string, string, bool, RectangleI, Vector2, Color, float) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Camera class public Camera(string id, string name, string tag, bool isEnable, RectangleI viewport, Vector2 resolution, Color backgroundColor, float cameraBorder) Parameters id string The id name string The name tag string The tag isEnable bool The is enable viewport RectangleI The viewport resolution Vector2 The resolution backgroundColor Color The background color cameraBorder float The camera border Fields Position The position [JsonPropertyName(\"_Position_\")] public Vector2 Position Field Value Vector2 Viewport The viewport [JsonPropertyName(\"_Viewport_\")] public RectangleI Viewport Field Value RectangleI Properties BackgroundColor Gets or sets the value of the background color [JsonPropertyName(\"_BackgroundColor_\")] public Color BackgroundColor { get; set; } Property Value Color CameraBorder Gets or sets the value of the camera border [JsonPropertyName(\"_CameraBorder_\")] public float CameraBorder { get; set; } Property Value float Resolution Gets or sets the value of the resolution [JsonPropertyName(\"_Resolution_\")] public Vector2 Resolution { get; set; } Property Value Vector2 TextureTarget Gets or sets the value of the texture target [JsonPropertyName(\"_TextureTarget_\", true, true)] public IntPtr TextureTarget { get; set; } Property Value IntPtr Methods Builder() Builders this instance public CameraBuilder Builder() Returns CameraBuilder The camera builder OnExit() Ons the exit public override void OnExit() OnStart() Starts this instance public override void OnStart() OnUpdate() Ons the update public override void OnUpdate() See Also AComponent"
  },
  "api/Alis.Core.Ecs.Component.Render.Frame.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Frame.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Frame Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The frame class public class Frame : IBuilder<FrameBuilder> Inheritance object Frame Implements IBuilder<FrameBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Frame() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Frame class public Frame() Frame(string) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Frame class public Frame(string nameFile) Parameters nameFile string The name file Properties FilePath Gets or sets the value of the file path public string FilePath { get; set; } Property Value string NameFile Gets or sets the value of the name file [JsonPropertyName(\"_NameFile_\")] public string NameFile { get; set; } Property Value string Methods Builder() Builders this instance public FrameBuilder Builder() Returns FrameBuilder The frame builder"
  },
  "api/Alis.Core.Ecs.Component.Render.Image.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Image.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Image Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The image class public class Image Inheritance object Image Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Image() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Image class public Image() Image(string) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Image class public Image(string nameFile) Parameters nameFile string The name file Image(string, Vector2) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Image class public Image(string nameFile, Vector2 size) Parameters nameFile string The name file size Vector2 The size Properties Context Gets or sets the value of the context private Context Context { get; } Property Value Context NameFile Gets or sets the value of the name file [JsonPropertyName(\"_NameFile_\")] public string NameFile { get; set; } Property Value string Path Gets or sets the value of the path public string Path { get; set; } Property Value string Size Gets or sets the value of the size [JsonPropertyName(\"_Size_\")] public Vector2 Size { get; set; } Property Value Vector2 Texture Gets or sets the value of the texture public IntPtr Texture { get; set; } Property Value IntPtr Methods Load() Loads this instance public void Load()"
  },
  "api/Alis.Core.Ecs.Component.Render.Sprite.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.Sprite.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Sprite Namespace Alis.Core.Ecs.Component.Render Assembly Alis.dll The sprite class public class Sprite : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<SpriteBuilder> Inheritance object AComponent Sprite Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<SpriteBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Sprite() Initializes a new instance of the Alis.Core.Ecs.Component.Render.Sprite class public Sprite() Sprite(Image) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Sprite class public Sprite(Image image) Parameters image Image The image Sprite(Image, int, RendererFlips) Initializes a new instance of the Alis.Core.Ecs.Component.Render.Sprite class public Sprite(Image image, int depth, RendererFlips flips) Parameters image Image The image depth int The depth flips RendererFlips The flips Fields Rectangle The rectangle private RectangleI Rectangle Field Value RectangleI dstRect The dst rect private RectangleI dstRect Field Value RectangleI h The private int h Field Value int w The private int w Field Value int Properties Depth The level [JsonPropertyName(\"_Depth_\")] public int Depth { get; set; } Property Value int Flips Gets or sets the value of the flip [JsonPropertyName(\"_Flips_\")] public RendererFlips Flips { get; set; } Property Value RendererFlips Image The image [JsonPropertyName(\"_Image_\")] public Image Image { get; set; } Property Value Image Methods Builder() Builders this instance public SpriteBuilder Builder() Returns SpriteBuilder The sprite builder IsVisible(Vector2, Vector2, float) Describes whether this instance is visible public bool IsVisible(Vector2 cameraPosition, Vector2 cameraResolution, float pixelsPerMeter) Parameters cameraPosition Vector2 The camera position cameraResolution Vector2 The camera resolution pixelsPerMeter float The pixels per meter Returns bool The bool Max(float[]) Maxes the corners x private float Max(float[] cornersX) Parameters cornersX float[] The corners Returns float The max Min(float[]) Mins the corners x private float Min(float[] cornersX) Parameters cornersX float[] The corners Returns float The min OnAwake() Awakes this instance public override void OnAwake() OnExit() Exits this instance public override void OnExit() OnInit() Inits this instance public override void OnInit() OnStart() Ons the start public override void OnStart() OnUpdate() Ons the update public override void OnUpdate() Render(IntPtr, Vector2, Vector2, float) Renders the renderer public void Render(IntPtr renderer, Vector2 cameraPosition, Vector2 cameraResolution, float pixelsPerMeter) Parameters renderer IntPtr The renderer cameraPosition Vector2 The camera position cameraResolution Vector2 The camera resolution pixelsPerMeter float The pixels per meter See Also AComponent IBuilder<TOut>"
  },
  "api/Alis.Core.Ecs.Component.Render.html": {
    "href": "api/Alis.Core.Ecs.Component.Render.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Render Classes Animation The animation class Animator The animator class Camera The camera class Frame The frame class Image The image class Sprite The sprite class"
  },
  "api/Alis.Core.Ecs.Component.Ui.Canvas.html": {
    "href": "api/Alis.Core.Ecs.Component.Ui.Canvas.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Canvas Namespace Alis.Core.Ecs.Component.Ui Assembly Alis.dll The canvas class public class Canvas : AComponent, IComponent<GameObject>, IEnabled, IIdentifier, IRuntime, IBuilder<CanvasBuilder> Inheritance object AComponent Canvas Implements IComponent<GameObject> IEnabled IIdentifier IRuntime IBuilder<CanvasBuilder> Inherited Members AComponent.Context AComponent.IsEnable AComponent.Name AComponent.Id AComponent.Tag AComponent.GameObject AComponent.OnEnable() AComponent.OnInit() AComponent.OnAwake() AComponent.OnStart() AComponent.OnBeforeUpdate() AComponent.OnUpdate() AComponent.OnAfterUpdate() AComponent.OnBeforeFixedUpdate() AComponent.OnFixedUpdate() AComponent.OnAfterFixedUpdate() AComponent.OnDispatchEvents() AComponent.OnCalculate() AComponent.OnDraw() AComponent.OnGui() AComponent.OnDisable() AComponent.OnReset() AComponent.OnStop() AComponent.OnExit() AComponent.OnDestroy() AComponent.Attach(GameObject) AComponent.OnPressDownKey(KeyCodes) AComponent.OnReleaseKey(KeyCodes) AComponent.OnPressKey(KeyCodes) AComponent.OnCollisionEnter(GameObject) AComponent.OnCollisionExit(GameObject) AComponent.OnCollisionStay(GameObject) AComponent.OnTriggerEnter(GameObject) AComponent.OnTriggerExit(GameObject) AComponent.OnTriggerStay(GameObject) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Height Gets or sets the value of the height public int Height { get; set; } Property Value int Width Gets or sets the value of the width public int Width { get; set; } Property Value int Methods Builder() Builders this instance public CanvasBuilder Builder() Returns CanvasBuilder The canvas builder See Also AComponent"
  },
  "api/Alis.Core.Ecs.Component.Ui.html": {
    "href": "api/Alis.Core.Ecs.Component.Ui.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component.Ui Classes Canvas The canvas class"
  },
  "api/Alis.Core.Ecs.Component.html": {
    "href": "api/Alis.Core.Ecs.Component.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Component Namespaces Alis.Core.Ecs.Component.Audio Alis.Core.Ecs.Component.Body Alis.Core.Ecs.Component.Collider Alis.Core.Ecs.Component.Light Alis.Core.Ecs.Component.Render Alis.Core.Ecs.Component.Ui Classes AComponent The component class Interfaces IComponent<T> The component interface"
  },
  "api/Alis.Core.Ecs.Entity.GameObject.html": {
    "href": "api/Alis.Core.Ecs.Entity.GameObject.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GameObject Namespace Alis.Core.Ecs.Entity Assembly Alis.dll The game object class public class GameObject : IGameObject<AComponent>, IEnabled, IIdentifier, IRuntime, ICrud<AComponent>, IBuilder<GameObjectBuilder> Inheritance object GameObject Implements IGameObject<AComponent> IEnabled IIdentifier IRuntime ICrud<AComponent> IBuilder<GameObjectBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GameObject() Initializes a new instance of the Alis.Core.Ecs.Entity.GameObject class public GameObject() GameObject(bool, string, string, string, Transform) Initializes a new instance of the Alis.Core.Ecs.Entity.GameObject class public GameObject(bool isEnable, string name, string id, string tag, Transform transform) Parameters isEnable bool The is enable name string The name id string The id tag string The tag transform Transform The transform GameObject(bool, string, string, string, Transform, List<AComponent>) Initializes a new instance of the Alis.Core.Ecs.Entity.GameObject class public GameObject(bool isEnable, string name, string id, string tag, Transform transform, List<AComponent> components) Parameters isEnable bool The is enable name string The name id string The id tag string The tag transform Transform The transform components List<AComponent> The components Properties Components Gets or sets the value of the components [JsonPropertyName(\"_Components_\")] public List<AComponent> Components { get; set; } Property Value List<AComponent> Context Gets or sets the value of the context public Context Context { get; } Property Value Context Id Gets or sets the value of the id [JsonPropertyName(\"_Id_\")] public string Id { get; set; } Property Value string IsEnable Gets or sets the value of the is enable [JsonPropertyName(\"_IsEnable_\")] public bool IsEnable { get; set; } Property Value bool IsStatic Gets or sets the value of the is static [JsonPropertyName(\"_IsStatic_\")] public bool IsStatic { get; set; } Property Value bool Name Gets or sets the value of the name [JsonPropertyName(\"_Name_\")] public string Name { get; set; } Property Value string Tag Gets or sets the value of the tag [JsonPropertyName(\"_Tag_\")] public string Tag { get; set; } Property Value string Transform Gets or sets the value of the transform [JsonPropertyName(\"_Transform_\")] public Transform Transform { get; set; } Property Value Transform Methods Add<T>(T) Adds the component public void Add<T>(T value) where T : AComponent Parameters value T The component Type Parameters T The Builder() Builders this instance public GameObjectBuilder Builder() Returns GameObjectBuilder The game object builder Clear() Clears this instance public void Clear() Contains<T>() Describes whether this instance contains public bool Contains<T>() where T : AComponent Returns bool The bool Type Parameters T The Create() Creates public static GameObjectBuilder Create() Returns GameObjectBuilder The game object builder Get<T>() Gets this instance public T Get<T>() where T : AComponent Returns T The Type Parameters T The OnAfterFixedUpdate() Ons the after fixed update public void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public void OnAfterUpdate() OnAwake() Ons the awake public void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public void OnBeforeUpdate() OnCalculate() Ons the calculate public void OnCalculate() OnDestroy() Ons the destroy public void OnDestroy() OnDisable() Ons the disable public void OnDisable() OnDispatchEvents() Ons the dispatch events public void OnDispatchEvents() OnDraw() Ons the draw public void OnDraw() OnEnable() Ons the enable public void OnEnable() OnExit() Ons the exit public void OnExit() OnFixedUpdate() Ons the fixed update public void OnFixedUpdate() OnGui() Ons the gui public void OnGui() OnInit() Ons the init public void OnInit() OnReset() Ons the reset public void OnReset() OnStart() Ons the start public void OnStart() OnStop() Ons the stop public void OnStop() OnUpdate() Ons the update public void OnUpdate() Remove<T>(T) Removes the component public void Remove<T>(T value) where T : AComponent Parameters value T The component Type Parameters T The See Also IGameObject<T> ISerializable"
  },
  "api/Alis.Core.Ecs.Entity.IGameObject-1.html": {
    "href": "api/Alis.Core.Ecs.Entity.IGameObject-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGameObject<T> Namespace Alis.Core.Ecs.Entity Assembly Alis.dll The game object interface public interface IGameObject<T> : IEnabled, IIdentifier, IRuntime, ICrud<T> Type Parameters T Implements IEnabled IIdentifier IRuntime ICrud<T> Properties Components Gets or sets the value of the components List<T> Components { get; set; } Property Value List<T> IsStatic Gets or sets the value of the is static bool IsStatic { get; set; } Property Value bool"
  },
  "api/Alis.Core.Ecs.Entity.IScene-1.html": {
    "href": "api/Alis.Core.Ecs.Entity.IScene-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IScene<T> Namespace Alis.Core.Ecs.Entity Assembly Alis.dll The scene interface public interface IScene<T> : IEnabled, IIdentifier, IRuntime, ICrud<T> Type Parameters T Implements IEnabled IIdentifier IRuntime ICrud<T> Properties GameObjects Gets or sets the value of the game objects List<T> GameObjects { get; set; } Property Value List<T>"
  },
  "api/Alis.Core.Ecs.Entity.Property.ICrud-1.html": {
    "href": "api/Alis.Core.Ecs.Entity.Property.ICrud-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ICrud<TItem> Namespace Alis.Core.Ecs.Entity.Property Assembly Alis.dll The crud interface public interface ICrud<in TItem> Type Parameters TItem Methods Add<T>(T) Adds the component void Add<T>(T value) where T : TItem Parameters value T The component Type Parameters T The Clear() Cleans this instance void Clear() Contains<T>() Describes whether this instance contains bool Contains<T>() where T : TItem Returns bool The bool Type Parameters T The Get<T>() Gets this instance T Get<T>() where T : TItem Returns T The Type Parameters T The Remove<T>(T) Removes the component void Remove<T>(T value) where T : TItem Parameters value T The component Type Parameters T The"
  },
  "api/Alis.Core.Ecs.Entity.Property.IEnabled.html": {
    "href": "api/Alis.Core.Ecs.Entity.Property.IEnabled.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IEnabled Namespace Alis.Core.Ecs.Entity.Property Assembly Alis.dll The enabled interface public interface IEnabled Properties IsEnable Gets or sets the value of the is enable bool IsEnable { get; set; } Property Value bool"
  },
  "api/Alis.Core.Ecs.Entity.Property.IIdentifier.html": {
    "href": "api/Alis.Core.Ecs.Entity.Property.IIdentifier.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IIdentifier Namespace Alis.Core.Ecs.Entity.Property Assembly Alis.dll The identifier interface public interface IIdentifier Properties Id Gets or sets the value of the id string Id { get; set; } Property Value string Name Gets or sets the value of the name string Name { get; set; } Property Value string Tag Gets or sets the value of the tag string Tag { get; set; } Property Value string"
  },
  "api/Alis.Core.Ecs.Entity.Property.IRuntime.html": {
    "href": "api/Alis.Core.Ecs.Entity.Property.IRuntime.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IRuntime Namespace Alis.Core.Ecs.Entity.Property Assembly Alis.dll The runtime interface public interface IRuntime Methods OnAfterFixedUpdate() Ons the after fixed update void OnAfterFixedUpdate() OnAfterUpdate() Afters the update void OnAfterUpdate() OnAwake() Awakes this instance void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update void OnBeforeFixedUpdate() OnBeforeUpdate() Before run the update void OnBeforeUpdate() OnCalculate() Ons the calculate void OnCalculate() OnDestroy() Ons the destroy void OnDestroy() OnDisable() Ons the disable void OnDisable() OnDispatchEvents() Dispatches the events void OnDispatchEvents() OnDraw() Draws this instance void OnDraw() OnEnable() Ons the enable void OnEnable() OnExit() Exits this instance void OnExit() OnFixedUpdate() Update every frame. void OnFixedUpdate() OnGui() Ons the gui void OnGui() OnInit() Inits this instance void OnInit() OnReset() Resets this instance void OnReset() OnStart() Starts this instance void OnStart() OnStop() Stops this instance void OnStop() OnUpdate() Updates this instance void OnUpdate()"
  },
  "api/Alis.Core.Ecs.Entity.Property.html": {
    "href": "api/Alis.Core.Ecs.Entity.Property.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Entity.Property Interfaces ICrud<TItem> The crud interface IEnabled The enabled interface IIdentifier The identifier interface IRuntime The runtime interface"
  },
  "api/Alis.Core.Ecs.Entity.Scene.html": {
    "href": "api/Alis.Core.Ecs.Entity.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Scene Namespace Alis.Core.Ecs.Entity Assembly Alis.dll The scene class public class Scene : IScene<GameObject>, IEnabled, IIdentifier, IRuntime, ICrud<GameObject> Inheritance object Scene Implements IScene<GameObject> IEnabled IIdentifier IRuntime ICrud<GameObject> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Scene() Initializes a new instance of the Alis.Core.Ecs.Entity.Scene class public Scene() Scene(bool, string, string, string) Initializes a new instance of the Alis.Core.Ecs.Entity.Scene class public Scene(bool isEnable, string name, string id, string tag) Parameters isEnable bool The is enable name string The name id string The id tag string The tag Scene(bool, string, string, string, List<GameObject>) Initializes a new instance of the Alis.Core.Ecs.Entity.Scene class public Scene(bool isEnable, string name, string id, string tag, List<GameObject> gameObjects) Parameters isEnable bool The is enable name string The name id string The id tag string The tag gameObjects List<GameObject> The game objects Fields _gameObjectsToAdd The game objects to add [JsonPropertyName(\"GameObjectsToAdd\", true, true)] private List<GameObject> _gameObjectsToAdd Field Value List<GameObject> Properties Context Gets or sets the value of the context [JsonPropertyName(\"_Context_\", true, true)] protected internal Context Context { get; } Property Value Context GameObjects Gets or sets the value of the game objects [JsonPropertyName(\"_GameObjects_\")] public List<GameObject> GameObjects { get; set; } Property Value List<GameObject> Id Gets or sets the value of the id [JsonPropertyName(\"_Id_\")] public string Id { get; set; } Property Value string IsEnable Gets or sets the value of the is enable [JsonPropertyName(\"_IsEnable_\")] public bool IsEnable { get; set; } Property Value bool Name Gets or sets the value of the name [JsonPropertyName(\"_Name_\")] public string Name { get; set; } Property Value string Tag Gets or sets the value of the tag [JsonPropertyName(\"_Tag_\")] public string Tag { get; set; } Property Value string Methods Add<T>(T) Adds the component public virtual void Add<T>(T value) where T : GameObject Parameters value T The component Type Parameters T The AddPendingGameObjects() Adds the pending game objects private void AddPendingGameObjects() Clear() Clears this instance public virtual void Clear() Contains<T>() Describes whether this instance contains public virtual bool Contains<T>() where T : GameObject Returns bool The bool Type Parameters T The Get<T>() Gets this instance public virtual T Get<T>() where T : GameObject Returns T The Type Parameters T The OnAfterFixedUpdate() Ons the after fixed update public void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public void OnAfterUpdate() OnAwake() Ons the awake public void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public void OnBeforeUpdate() OnCalculate() Ons the calculate public void OnCalculate() OnDestroy() Ons the destroy public void OnDestroy() OnDisable() Ons the disable public void OnDisable() OnDispatchEvents() Ons the dispatch events public void OnDispatchEvents() OnDraw() Ons the draw public void OnDraw() OnEnable() Ons the enable public void OnEnable() OnExit() Ons the exit public void OnExit() OnFixedUpdate() Ons the fixed update public void OnFixedUpdate() OnGui() Ons the gui public void OnGui() OnInit() Ons the init public void OnInit() OnReset() Ons the reset public void OnReset() OnStart() Ons the start public void OnStart() OnStop() Ons the stop public void OnStop() OnUpdate() Ons the update public void OnUpdate() Remove<T>(T) Removes the component public virtual void Remove<T>(T value) where T : GameObject Parameters value T The component Type Parameters T The"
  },
  "api/Alis.Core.Ecs.Entity.html": {
    "href": "api/Alis.Core.Ecs.Entity.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.Entity Namespaces Alis.Core.Ecs.Entity.Property Classes GameObject The game object class Scene The scene class Interfaces IGameObject<T> The game object interface IScene<T> The scene interface"
  },
  "api/Alis.Core.Ecs.IGame.html": {
    "href": "api/Alis.Core.Ecs.IGame.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGame Namespace Alis.Core.Ecs Assembly Alis.dll The game interface public interface IGame Methods Exit() Exits this instance void Exit() Run() Runs this instance void Run()"
  },
  "api/Alis.Core.Ecs.System.Context.html": {
    "href": "api/Alis.Core.Ecs.System.Context.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Context Namespace Alis.Core.Ecs.System Assembly Alis.dll The context class public class Context : IContext Inheritance object Context Implements IContext Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Context() Initializes a new instance of the Alis.Core.Ecs.System.Context class public Context() Context(Settings) Initializes a new instance of the Alis.Core.Ecs.System.Context class public Context(Settings settings) Parameters settings Settings The settings Context(Settings, SceneManager) Initializes a new instance of the Alis.Core.Ecs.System.Context class public Context(Settings settings, SceneManager sceneManager) Parameters settings Settings The settings sceneManager SceneManager The scene manager Context(Settings, AudioManager, GraphicManager, InputManager, NetworkManager, PhysicManager, SceneManager) Initializes a new instance of the Alis.Core.Ecs.System.Context class public Context(Settings settings, AudioManager audioManager, GraphicManager graphicManager, InputManager inputManager, NetworkManager networkManager, PhysicManager physicManager, SceneManager sceneManager) Parameters settings Settings The settings audioManager AudioManager The audio manager graphicManager GraphicManager The graphic manager inputManager InputManager The input manager networkManager NetworkManager The network manager physicManager PhysicManager The physic manager sceneManager SceneManager The scene manager Properties AudioManager Gets the value of the audio manager [JsonPropertyName(\"_AudioManager_\", true, true)] public AudioManager AudioManager { get; set; } Property Value AudioManager GraphicManager Gets the value of the graphic manager [JsonPropertyName(\"_GraphicManager_\", true, true)] public GraphicManager GraphicManager { get; set; } Property Value GraphicManager InputManager Gets the value of the input manager [JsonPropertyName(\"_InputManager_\", true, true)] public InputManager InputManager { get; set; } Property Value InputManager NetworkManager Gets the value of the network manager [JsonPropertyName(\"_NetworkManager_\", true, true)] public NetworkManager NetworkManager { get; set; } Property Value NetworkManager PhysicManager Gets the value of the physic manager [JsonPropertyName(\"_PhysicManager_\", true, true)] public PhysicManager PhysicManager { get; set; } Property Value PhysicManager SceneManager Gets the value of the scene manager [JsonPropertyName(\"_SceneManager_\")] public SceneManager SceneManager { get; set; } Property Value SceneManager Settings The settings [JsonPropertyName(\"_Settings_\")] public Settings Settings { get; set; } Property Value Settings TimeManager Gets the value of the time manager [JsonPropertyName(\"_TimeManager_\", true, true)] public TimeManager TimeManager { get; set; } Property Value TimeManager Methods Exit() Exits this instance public void Exit() OnAfterFixedUpdate() Ons the after fixed update public void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public void OnAfterUpdate() OnAwake() Ons the awake public void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public void OnBeforeUpdate() OnCalculate() Ons the calculate public void OnCalculate() OnDispatchEvents() Ons the dispatch events public void OnDispatchEvents() OnDraw() Ons the draw public void OnDraw() OnExit() Ons the exit public void OnExit() OnFixedUpdate() Ons the fixed update public void OnFixedUpdate() OnGui() Ons the gui public void OnGui() OnInit() Ons the init public void OnInit() OnPhysicUpdate() Ons the physic update public void OnPhysicUpdate() OnStart() Ons the start public void OnStart() OnStop() Ons the stop public void OnStop() OnUpdate() Ons the update public void OnUpdate() SetSceneManager(SceneManager) Sets the scene manager using the specified scene manager public void SetSceneManager(SceneManager sceneManager) Parameters sceneManager SceneManager The scene manager"
  },
  "api/Alis.Core.Ecs.System.IContext.html": {
    "href": "api/Alis.Core.Ecs.System.IContext.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IContext Namespace Alis.Core.Ecs.System Assembly Alis.dll The context interface public interface IContext"
  },
  "api/Alis.Core.Ecs.System.Manager.AManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.AManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AManager Namespace Alis.Core.Ecs.System.Manager Assembly Alis.dll The manager class public abstract class AManager : IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager Derived AudioManager GraphicManager InputManager NetworkManager PhysicManager SceneManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AManager() Initializes a new instance of the Alis.Core.Ecs.System.Manager.AManager class protected AManager() AManager(string, string, string, bool) Initializes a new instance of the Alis.Core.Ecs.System.Manager.AManager class protected AManager(string id, string name, string tag, bool isEnable) Parameters id string The id name string The name tag string The tag isEnable bool The is enable Properties Context Gets or sets the value of the context [JsonPropertyName(\"_Context_\", true, true)] protected Context Context { get; } Property Value Context Id Gets or sets the value of the id [JsonPropertyName(\"_Id_\")] public string Id { get; set; } Property Value string IsEnable Gets or sets the value of the is enable [JsonPropertyName(\"_IsEnable_\")] public bool IsEnable { get; set; } Property Value bool Name Gets or sets the value of the name [JsonPropertyName(\"_Name_\")] public string Name { get; set; } Property Value string Tag Gets or sets the value of the tag [JsonPropertyName(\"_Tag_\")] public string Tag { get; set; } Property Value string Methods OnAfterFixedUpdate() Ons the after fixed update public virtual void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public virtual void OnAfterUpdate() OnAwake() Ons the awake public virtual void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public virtual void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public virtual void OnBeforeUpdate() OnCalculate() Ons the calculate public virtual void OnCalculate() OnDestroy() Ons the destroy public virtual void OnDestroy() OnDisable() Ons the disable public virtual void OnDisable() OnDispatchEvents() Ons the dispatch events public virtual void OnDispatchEvents() OnDraw() Ons the draw public virtual void OnDraw() OnEnable() Ons the enable public virtual void OnEnable() OnExit() Ons the exit public virtual void OnExit() OnFixedUpdate() Ons the fixed update public virtual void OnFixedUpdate() OnGui() Ons the gui public virtual void OnGui() OnInit() Ons the init public virtual void OnInit() OnPhysicUpdate() Ons the physics update public virtual void OnPhysicUpdate() OnReset() Ons the reset public virtual void OnReset() OnStart() Ons the start public virtual void OnStart() OnStop() Ons the stop public virtual void OnStop() OnUpdate() Ons the update public virtual void OnUpdate() See Also IManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Audio.AudioManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Audio.AudioManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioManager Namespace Alis.Core.Ecs.System.Manager.Audio Assembly Alis.dll The audio manager base class public class AudioManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager AudioManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Audio.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Audio Classes AudioManager The audio manager base class"
  },
  "api/Alis.Core.Ecs.System.Manager.Graphic.GraphicManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Graphic.GraphicManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GraphicManager Namespace Alis.Core.Ecs.System.Manager.Graphic Assembly Alis.dll The graphic manager base class public class GraphicManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager GraphicManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GraphicManager() Initializes a new instance of the Alis.Core.Ecs.System.Manager.Graphic.GraphicManager class public GraphicManager() GraphicManager(List<BoxCollider>, IntPtr, Vector2, IntPtr, List<Sprite>, List<Camera>) Initializes a new instance of the Alis.Core.Ecs.System.Manager.Graphic.GraphicManager class public GraphicManager(List<BoxCollider> colliderBases, IntPtr window, Vector2 defaultSize, IntPtr renderer, List<Sprite> sprites, List<Camera> cameras) Parameters colliderBases List<BoxCollider> The collider bases window IntPtr The window defaultSize Vector2 The default size renderer IntPtr The renderer sprites List<Sprite> The sprites cameras List<Camera> The cameras Fields PixelsPerMeter The pixels per meter private const float PixelsPerMeter = 32 Field Value float Properties Cameras Gets or sets the value of the cameras [JsonPropertyName(\"_Cameras_\")] public List<Camera> Cameras { get; } Property Value List<Camera> ColliderBases The box collider [JsonPropertyName(\"_ColliderBases_\")] public List<BoxCollider> ColliderBases { get; set; } Property Value List<BoxCollider> DefaultSize The default size [JsonPropertyName(\"_DefaultSize_\")] public Vector2 DefaultSize { get; set; } Property Value Vector2 Renderer The renderWindow [JsonPropertyName(\"_Renderer_\", true, true)] public IntPtr Renderer { get; set; } Property Value IntPtr Sprites Gets or sets the value of the sprites [JsonPropertyName(\"_Sprites_\")] public List<Sprite> Sprites { get; set; } Property Value List<Sprite> Window The window [JsonPropertyName(\"_Window_\", true, true)] public IntPtr Window { get; set; } Property Value IntPtr Methods Attach(Sprite) Attaches the sprite public void Attach(Sprite sprite) Parameters sprite Sprite The sprite Attach(BoxCollider) Attaches the collider public void Attach(BoxCollider collider) Parameters collider BoxCollider The collider Attach(Camera) Attaches the camera public void Attach(Camera camera) Parameters camera Camera The camera OnEnable() Ons the enable public override void OnEnable() OnInit() Ons the init public override void OnInit() OnStart() Ons the start public override void OnStart() OnUpdate() Ons the update public override void OnUpdate() UnAttach(Sprite) Uns the attach using the specified sprite public void UnAttach(Sprite sprite) Parameters sprite Sprite The sprite UnAttach(BoxCollider) Uns the attach using the specified collider public void UnAttach(BoxCollider collider) Parameters collider BoxCollider The collider UnAttach(Camera) Uns the attach using the specified camera public void UnAttach(Camera camera) Parameters camera Camera The camera See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Graphic.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Graphic Classes GraphicManager The graphic manager base class"
  },
  "api/Alis.Core.Ecs.System.Manager.IManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.IManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IManager Namespace Alis.Core.Ecs.System.Manager Assembly Alis.dll The manager interface public interface IManager : IEnabled, IIdentifier, IRuntime Implements IEnabled IIdentifier IRuntime"
  },
  "api/Alis.Core.Ecs.System.Manager.Input.InputManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Input.InputManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class InputManager Namespace Alis.Core.Ecs.System.Manager.Input Assembly Alis.dll The graphic manager base class public class InputManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager InputManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields axis The sdl game controller axis internal readonly List<GameControllerAxis> axis Field Value List<GameControllerAxis> buttons The sdl game controller button internal readonly List<GameControllerButton> buttons Field Value List<GameControllerButton> sdlEvent The sdl event internal Event sdlEvent Field Value Event tempListOfKeys Temp list of keys internal List<KeyCodes> tempListOfKeys Field Value List<KeyCodes> Methods HandleSdlJoyAxisMotionEvent() Handles the sdl joy axis motion event internal void HandleSdlJoyAxisMotionEvent() HandleSdlJoyButtonDownEvent() Handles the sdl joy button down event internal void HandleSdlJoyButtonDownEvent() HandleSdlKeydownEvent() Handles the sdl keydown event internal void HandleSdlKeydownEvent() HandleSdlKeyupEvent() Handles the sdl keyup event internal void HandleSdlKeyupEvent() HandleSdlQuitEvent() Handles the sdl quit event internal void HandleSdlQuitEvent() NotifyKeyHold() Notifies the key hold internal void NotifyKeyHold() NotifyKeyHold(KeyCodes) Notifies the key hold using the specified key internal void NotifyKeyHold(KeyCodes key) Parameters key KeyCodes The key NotifyKeyPress(KeyCodes) Notifies the key press using the specified key internal void NotifyKeyPress(KeyCodes key) Parameters key KeyCodes The key NotifyKeyRelease(KeyCodes) Notifies the key release using the specified key internal void NotifyKeyRelease(KeyCodes key) Parameters key KeyCodes The key OnDispatchEvents() Ons the dispatch events public override void OnDispatchEvents() OnInit() Ons the init public override void OnInit() See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Input.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Input.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Input Classes InputManager The graphic manager base class"
  },
  "api/Alis.Core.Ecs.System.Manager.Network.NetworkManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Network.NetworkManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NetworkManager Namespace Alis.Core.Ecs.System.Manager.Network Assembly Alis.dll The network manager class public class NetworkManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager NetworkManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Network.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Network.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Network Classes NetworkManager The network manager class"
  },
  "api/Alis.Core.Ecs.System.Manager.Physic.PhysicManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Physic.PhysicManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PhysicManager Namespace Alis.Core.Ecs.System.Manager.Physic Assembly Alis.dll The physic manager base class public class PhysicManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager PhysicManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields World The vector public World World Field Value World timeStepPhysics The time step physics private float timeStepPhysics Field Value float Methods OnAwake() Ons the awake public override void OnAwake() OnInit() Ons the init public override void OnInit() OnPhysicUpdate() Ons the physic update public override void OnPhysicUpdate() OnUpdate() Ons the update public override void OnUpdate() UnAttach(Body) Uns the attach using the specified body public void UnAttach(Body body) Parameters body Body The body See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Physic.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Physic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Physic Classes PhysicManager The physic manager base class"
  },
  "api/Alis.Core.Ecs.System.Manager.Scene.SceneManager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Scene.SceneManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SceneManager Namespace Alis.Core.Ecs.System.Manager.Scene Assembly Alis.dll The scene manager base class public class SceneManager : AManager, IManager, IEnabled, IIdentifier, IRuntime Inheritance object AManager SceneManager Implements IManager IEnabled IIdentifier IRuntime Inherited Members AManager.Context AManager.IsEnable AManager.Name AManager.Id AManager.Tag AManager.OnEnable() AManager.OnInit() AManager.OnAwake() AManager.OnStart() AManager.OnBeforeUpdate() AManager.OnUpdate() AManager.OnAfterUpdate() AManager.OnBeforeFixedUpdate() AManager.OnFixedUpdate() AManager.OnAfterFixedUpdate() AManager.OnDispatchEvents() AManager.OnCalculate() AManager.OnDraw() AManager.OnGui() AManager.OnDisable() AManager.OnReset() AManager.OnStop() AManager.OnExit() AManager.OnDestroy() AManager.OnPhysicUpdate() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SceneManager() Initializes a new instance of the Alis.Core.Ecs.System.Manager.Scene.SceneManager class public SceneManager() Properties CurrentScene Gets or sets the value of the current scene [JsonPropertyName(\"_CurrentScene_\", true, true)] public Scene CurrentScene { get; set; } Property Value Scene Scenes Gets or sets the value of the scenes [JsonPropertyName(\"_Scenes_\")] public List<Scene> Scenes { get; set; } Property Value List<Scene> Methods Add<T>(T) Adds the component public void Add<T>(T component) where T : Scene Parameters component T The component Type Parameters T The Clear<T>() Clears this instance public void Clear<T>() where T : Scene Type Parameters T The Contains<T>() Describes whether this instance contains public bool Contains<T>() where T : Scene Returns bool The bool Type Parameters T The Get<T>() Gets this instance public T Get<T>() where T : Scene Returns T The Type Parameters T The LoadScene(Scene) Loads the scene using the specified scene public void LoadScene(Scene scene) Parameters scene Scene The scene LoadScene(string) Loads the scene using the specified name public void LoadScene(string name) Parameters name string The name LoadScene(int) Loads the scene using the specified index public void LoadScene(int index) Parameters index int The index OnAfterFixedUpdate() Ons the after fixed update public override void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public override void OnAfterUpdate() OnAwake() Ons the awake public override void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public override void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public override void OnBeforeUpdate() OnCalculate() Ons the calculate public override void OnCalculate() OnDestroy() Ons the destroy public override void OnDestroy() OnDisable() Ons the disable public override void OnDisable() OnDispatchEvents() Ons the dispatch events public override void OnDispatchEvents() OnDraw() Ons the draw public override void OnDraw() OnEnable() Ons the enable public override void OnEnable() OnExit() Ons the exit public override void OnExit() OnFixedUpdate() Ons the fixed update public override void OnFixedUpdate() OnGui() Ons the gui public override void OnGui() OnInit() Ons the init public override void OnInit() OnReset() Ons the reset public override void OnReset() OnStart() Ons the start public override void OnStart() OnStop() Ons the stop public override void OnStop() OnUpdate() Ons the update public override void OnUpdate() ReloadScene(Scene) Reloads the scene using the specified scene public void ReloadScene(Scene scene) Parameters scene Scene The scene Remove<T>(T) Removes the component public void Remove<T>(T component) where T : Scene Parameters component T The component Type Parameters T The See Also AManager"
  },
  "api/Alis.Core.Ecs.System.Manager.Scene.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager.Scene Classes SceneManager The scene manager base class"
  },
  "api/Alis.Core.Ecs.System.Manager.html": {
    "href": "api/Alis.Core.Ecs.System.Manager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Manager Namespaces Alis.Core.Ecs.System.Manager.Audio Alis.Core.Ecs.System.Manager.Graphic Alis.Core.Ecs.System.Manager.Input Alis.Core.Ecs.System.Manager.Network Alis.Core.Ecs.System.Manager.Physic Alis.Core.Ecs.System.Manager.Scene Classes AManager The manager class Interfaces IManager The manager interface"
  },
  "api/Alis.Core.Ecs.System.Setting.Audio.AudioSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Audio.AudioSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AudioSetting Namespace Alis.Core.Ecs.System.Setting.Audio Assembly Alis.dll The audio setting class public class AudioSetting : IAudioSetting, IBuilder<AudioSettingBuilder> Inheritance object AudioSetting Implements IAudioSetting IBuilder<AudioSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AudioSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Audio.AudioSetting class public AudioSetting() AudioSetting(int, bool) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Audio.AudioSetting class public AudioSetting(int volume, bool mute) Parameters volume int The volume mute bool The mute Properties Mute Gets or sets the value of the mute [JsonPropertyName(\"_Mute_\")] public bool Mute { get; set; } Property Value bool Volume Gets or sets the value of the volume [JsonPropertyName(\"_Volume_\")] public int Volume { get; set; } Property Value int Methods Builder() Builders this instance public AudioSettingBuilder Builder() Returns AudioSettingBuilder The audio setting builder See Also IAudioSetting IBuilder<TOut>"
  },
  "api/Alis.Core.Ecs.System.Setting.Audio.IAudioSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Audio.IAudioSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IAudioSetting Namespace Alis.Core.Ecs.System.Setting.Audio Assembly Alis.dll The audio setting interface public interface IAudioSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Audio.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Audio.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Audio Classes AudioSetting The audio setting class Interfaces IAudioSetting The audio setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.General.GeneralSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.General.GeneralSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GeneralSetting Namespace Alis.Core.Ecs.System.Setting.General Assembly Alis.dll The general setting class public class GeneralSetting : IGeneralSetting, IBuilder<GeneralSettingBuilder> Inheritance object GeneralSetting Implements IGeneralSetting IBuilder<GeneralSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GeneralSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.General.GeneralSetting class public GeneralSetting() GeneralSetting(bool, string, string, string, string, string, string) Initializes a new instance of the Alis.Core.Ecs.System.Setting.General.GeneralSetting class public GeneralSetting(bool debug, string name, string description, string version, string author, string license, string icon) Parameters debug bool The debug name string The name description string The description version string The version author string The author license string The license icon string The icon Properties Author Gets or sets the value of the author [JsonPropertyName(\"_Author_\")] public string Author { get; set; } Property Value string Debug Gets or sets the value of the debug [JsonPropertyName(\"_Debug_\")] public bool Debug { get; set; } Property Value bool Description Gets or sets the value of the description [JsonPropertyName(\"_Description_\")] public string Description { get; set; } Property Value string Icon Gets or sets the value of the icon [JsonPropertyName(\"_Icon_\")] public string Icon { get; set; } Property Value string License Gets or sets the value of the license [JsonPropertyName(\"_License_\")] public string License { get; set; } Property Value string Name Gets or sets the value of the name [JsonPropertyName(\"_Name_\")] public string Name { get; set; } Property Value string Version Gets or sets the value of the version [JsonPropertyName(\"_Version_\")] public string Version { get; set; } Property Value string Methods Builder() Builders this instance public GeneralSettingBuilder Builder() Returns GeneralSettingBuilder The graphic setting builder See Also IGeneralSetting IBuilder<TOut>"
  },
  "api/Alis.Core.Ecs.System.Setting.General.IGeneralSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.General.IGeneralSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGeneralSetting Namespace Alis.Core.Ecs.System.Setting.General Assembly Alis.dll The general setting interface public interface IGeneralSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.General.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.General.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.General Classes GeneralSetting The general setting class Interfaces IGeneralSetting The general setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.Graphic.GraphicSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Graphic.GraphicSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GraphicSetting Namespace Alis.Core.Ecs.System.Setting.Graphic Assembly Alis.dll The graphic setting class public class GraphicSetting : IGraphicSetting, IBuilder<GraphicSettingBuilder> Inheritance object GraphicSetting Implements IGraphicSetting IBuilder<GraphicSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GraphicSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Graphic.GraphicSetting class public GraphicSetting() GraphicSetting(Window) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Graphic.GraphicSetting class public GraphicSetting(Window window) Parameters window Window The window Properties Target Gets or sets the value of the target [JsonPropertyName(\"_Target_\")] public string Target { get; set; } Property Value string TargetFrames The targetframes [JsonPropertyName(\"_TargetFrames_\")] public double TargetFrames { get; set; } Property Value double Window Gets or sets the value of the window [JsonPropertyName(\"_Window_\")] public Window Window { get; set; } Property Value Window Methods Builder() Builders this instance public GraphicSettingBuilder Builder() Returns GraphicSettingBuilder The graphic setting builder See Also IGraphicSetting IBuilder<TOut>"
  },
  "api/Alis.Core.Ecs.System.Setting.Graphic.IGraphicSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Graphic.IGraphicSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IGraphicSetting Namespace Alis.Core.Ecs.System.Setting.Graphic Assembly Alis.dll The graphic setting interface public interface IGraphicSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Graphic.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Graphic Classes GraphicSetting The graphic setting class Interfaces IGraphicSetting The graphic setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.ISetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.ISetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISetting Namespace Alis.Core.Ecs.System.Setting Assembly Alis.dll The setting interface public interface ISetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Input.IInputSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Input.IInputSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IInputSetting Namespace Alis.Core.Ecs.System.Setting.Input Assembly Alis.dll The input setting interface public interface IInputSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Input.InputSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Input.InputSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class InputSetting Namespace Alis.Core.Ecs.System.Setting.Input Assembly Alis.dll The input setting class public class InputSetting : IInputSetting, IBuilder<InputSettingBuilder> Inheritance object InputSetting Implements IInputSetting IBuilder<InputSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors InputSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Input.InputSetting class public InputSetting() InputSetting(UpdateMode) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Input.InputSetting class public InputSetting(UpdateMode updateMode) Parameters updateMode UpdateMode The update mode Properties UpdateMode Gets or sets the value of the update mode [JsonPropertyName(\"_UpdateMode_\")] public UpdateMode UpdateMode { get; set; } Property Value UpdateMode Methods Builder() Builders this instance public InputSettingBuilder Builder() Returns InputSettingBuilder The input setting builder See Also IInputSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Input.UpdateMode.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Input.UpdateMode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum UpdateMode Namespace Alis.Core.Ecs.System.Setting.Input Assembly Alis.dll The update mode enum public enum UpdateMode Fields Default = 0 The default update mode DynamicUpdate = 1 The dynamic update update mode FixedUpdate = 2 The fixed update update mode ManualUpdate = 3 The manual update update mode"
  },
  "api/Alis.Core.Ecs.System.Setting.Input.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Input.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Input Classes InputSetting The input setting class Interfaces IInputSetting The input setting interface Enums UpdateMode The update mode enum"
  },
  "api/Alis.Core.Ecs.System.Setting.Network.INetworkSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Network.INetworkSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface INetworkSetting Namespace Alis.Core.Ecs.System.Setting.Network Assembly Alis.dll The network setting interface public interface INetworkSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Network.NetworkSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Network.NetworkSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NetworkSetting Namespace Alis.Core.Ecs.System.Setting.Network Assembly Alis.dll The network setting class public class NetworkSetting : INetworkSetting, IBuilder<NetworkSettingBuilder> Inheritance object NetworkSetting Implements INetworkSetting IBuilder<NetworkSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NetworkSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Network.NetworkSetting class public NetworkSetting() NetworkSetting(int, string, string, string) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Network.NetworkSetting class public NetworkSetting(int port, string ip, string host, string protocol) Parameters port int The port ip string The ip host string The host protocol string The protocol Properties Host Gets or sets the value of the host [JsonPropertyName(\"_Host_\")] public string Host { get; set; } Property Value string Ip Gets or sets the value of the ip [JsonPropertyName(\"_Ip_\")] public string Ip { get; set; } Property Value string Port Gets or sets the value of the port [JsonPropertyName(\"_Port_\")] public int Port { get; set; } Property Value int Protocol Gets or sets the value of the protocol [JsonPropertyName(\"_Protocol_\")] public string Protocol { get; set; } Property Value string Methods Builder() Builders this instance public NetworkSettingBuilder Builder() Returns NetworkSettingBuilder The network setting builder See Also INetworkSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Network.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Network.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Network Classes NetworkSetting The network setting class Interfaces INetworkSetting The network setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.Physic.IPhysicSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Physic.IPhysicSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPhysicSetting Namespace Alis.Core.Ecs.System.Setting.Physic Assembly Alis.dll The physic setting interface public interface IPhysicSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Physic.PhysicSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Physic.PhysicSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PhysicSetting Namespace Alis.Core.Ecs.System.Setting.Physic Assembly Alis.dll The physic setting class public class PhysicSetting : IPhysicSetting, IBuilder<PhysicSettingBuilder> Inheritance object PhysicSetting Implements IPhysicSetting IBuilder<PhysicSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PhysicSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Physic.PhysicSetting class public PhysicSetting() PhysicSetting(bool, Color, Vector2) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Physic.PhysicSetting class public PhysicSetting(bool debugMode, Color debugColor, Vector2 gravity) Parameters debugMode bool The debug mode debugColor Color The debug color gravity Vector2 The gravity Properties DebugColor Gets or sets the value of the debug color [JsonPropertyName(\"_DebugColor_\")] public Color DebugColor { get; set; } Property Value Color DebugMode Gets or sets the value of the debug mode [JsonPropertyName(\"_DebugMode_\")] public bool DebugMode { get; set; } Property Value bool Gravity Gets or sets the value of the gravity [JsonPropertyName(\"_Gravity_\")] public Vector2 Gravity { get; set; } Property Value Vector2 Methods Builder() Builders this instance public PhysicSettingBuilder Builder() Returns PhysicSettingBuilder The physic setting builder See Also IPhysicSetting IBuilder<TOut>"
  },
  "api/Alis.Core.Ecs.System.Setting.Physic.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Physic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Physic Classes PhysicSetting The physic setting class Interfaces IPhysicSetting The physic setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.Scene.ISceneSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Scene.ISceneSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface ISceneSetting Namespace Alis.Core.Ecs.System.Setting.Scene Assembly Alis.dll The scene setting interface public interface ISceneSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Scene.SceneSetting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Scene.SceneSetting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SceneSetting Namespace Alis.Core.Ecs.System.Setting.Scene Assembly Alis.dll The scene setting class public class SceneSetting : ISceneSetting, IBuilder<SceneSettingBuilder> Inheritance object SceneSetting Implements ISceneSetting IBuilder<SceneSettingBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SceneSetting() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Scene.SceneSetting class public SceneSetting() SceneSetting(int) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Scene.SceneSetting class public SceneSetting(int maxNumberOfScenes) Parameters maxNumberOfScenes int The max number of scenes Properties MaxNumberOfScenes Gets or sets the value of the max number of scenes [JsonPropertyName(\"_MaxNumberOfScenes_\")] public int MaxNumberOfScenes { get; set; } Property Value int Methods Builder() Builders this instance public SceneSettingBuilder Builder() Returns SceneSettingBuilder The scene setting builder See Also ISceneSetting"
  },
  "api/Alis.Core.Ecs.System.Setting.Scene.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Scene.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting.Scene Classes SceneSetting The scene setting class Interfaces ISceneSetting The scene setting interface"
  },
  "api/Alis.Core.Ecs.System.Setting.Settings.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.Settings.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Settings Namespace Alis.Core.Ecs.System.Setting Assembly Alis.dll The setting class public class Settings : ISetting Inheritance object Settings Implements ISetting Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Settings() Initializes a new instance of the Alis.Core.Ecs.System.Setting.Settings class public Settings() Settings(GeneralSetting, AudioSetting, GraphicSetting, InputSetting, NetworkSetting, PhysicSetting, SceneSetting) Initializes a new instance of the Alis.Core.Ecs.System.Setting.Settings class public Settings(GeneralSetting general, AudioSetting audio, GraphicSetting graphic, InputSetting input, NetworkSetting network, PhysicSetting physic, SceneSetting scene) Parameters general GeneralSetting The general audio AudioSetting The audio graphic GraphicSetting The graphic input InputSetting The input network NetworkSetting The network physic PhysicSetting The physic scene SceneSetting The scene Properties Audio Gets or sets the value of the audio [JsonPropertyName(\"_Audio_\")] public AudioSetting Audio { get; set; } Property Value AudioSetting General Gets or sets the value of the general [JsonPropertyName(\"_General_\")] public GeneralSetting General { get; set; } Property Value GeneralSetting Graphic Gets or sets the value of the graphic [JsonPropertyName(\"_Graphic_\")] public GraphicSetting Graphic { get; set; } Property Value GraphicSetting Input Gets or sets the value of the input [JsonPropertyName(\"_Input_\")] public InputSetting Input { get; set; } Property Value InputSetting Network Gets or sets the value of the network [JsonPropertyName(\"_Network_\")] public NetworkSetting Network { get; set; } Property Value NetworkSetting Physic Gets or sets the value of the physic [JsonPropertyName(\"_Physic_\")] public PhysicSetting Physic { get; set; } Property Value PhysicSetting Scene Gets or sets the value of the scene [JsonPropertyName(\"_Scene_\")] public SceneSetting Scene { get; set; } Property Value SceneSetting See Also ISetting"
  },
  "api/Alis.Core.Ecs.System.Setting.html": {
    "href": "api/Alis.Core.Ecs.System.Setting.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System.Setting Namespaces Alis.Core.Ecs.System.Setting.Audio Alis.Core.Ecs.System.Setting.General Alis.Core.Ecs.System.Setting.Graphic Alis.Core.Ecs.System.Setting.Input Alis.Core.Ecs.System.Setting.Network Alis.Core.Ecs.System.Setting.Physic Alis.Core.Ecs.System.Setting.Scene Classes Settings The setting class Interfaces ISetting The setting interface"
  },
  "api/Alis.Core.Ecs.System.html": {
    "href": "api/Alis.Core.Ecs.System.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs.System Namespaces Alis.Core.Ecs.System.Manager Alis.Core.Ecs.System.Setting Classes Context The context class Interfaces IContext The context interface"
  },
  "api/Alis.Core.Ecs.VideoGame.html": {
    "href": "api/Alis.Core.Ecs.VideoGame.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class VideoGame Namespace Alis.Core.Ecs Assembly Alis.dll The video game class public sealed class VideoGame : IGame Inheritance object VideoGame Implements IGame Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors VideoGame() Initializes a new instance of the Alis.Core.Ecs.VideoGame class public VideoGame() VideoGame(Context) Initializes a new instance of the Alis.Core.Ecs.VideoGame class public VideoGame(Context context) Parameters context Context The context VideoGame(Settings, AudioManager, GraphicManager, InputManager, NetworkManager, PhysicManager, SceneManager) Initializes a new instance of the Alis.Core.Ecs.VideoGame class public VideoGame(Settings settings, AudioManager audioManager, GraphicManager graphicManager, InputManager inputManager, NetworkManager networkManager, PhysicManager physicManager, SceneManager sceneManager) Parameters settings Settings The settings audioManager AudioManager The audio manager graphicManager GraphicManager The graphic manager inputManager InputManager The input manager networkManager NetworkManager The network manager physicManager PhysicManager The physic manager sceneManager SceneManager The scene manager Fields _instancie The instancie public static VideoGame _instancie Field Value VideoGame accumulator The accumulator private double accumulator Field Value double currentTime The current time private double currentTime Field Value double lastDeltaTime The last delta time private float lastDeltaTime Field Value float lastLogTime The last log time private double lastLogTime Field Value double lastTime The last time private double lastTime Field Value double smoothDeltaTimeCount The smooth delta time count private int smoothDeltaTimeCount Field Value int smoothDeltaTimeSum The smooth delta time sum private float smoothDeltaTimeSum Field Value float targetFrameDuration The target frame duration private double targetFrameDuration Field Value double totalTime The total time private double totalTime Field Value double Properties Context Gets or sets the value of the context [JsonPropertyName(\"_Context_\")] public Context Context { get; set; } Property Value Context Methods Builder() Builders public static VideoGameBuilder Builder() Returns VideoGameBuilder The video game builder Exit() Exits this instance public void Exit() ExitPreview() Exits the preview public void ExitPreview() GetContext() Gets the context public static Context GetContext() Returns Context The context InitPreview() Inits the preview public void InitPreview() LastLogTime(double, double) Lasts the log time using the specified new time public double LastLogTime(double newTime, double lastLogTime) Parameters newTime double The new time lastLogTime double The last log time Returns double The last log time OnAfterFixedUpdate() Ons the after fixed update public void OnAfterFixedUpdate() OnAfterUpdate() Ons the after update public void OnAfterUpdate() OnAwake() Ons the awake public void OnAwake() OnBeforeFixedUpdate() Ons the before fixed update public void OnBeforeFixedUpdate() OnBeforeUpdate() Ons the before update public void OnBeforeUpdate() OnCalculate() Ons the calculate public void OnCalculate() OnDispatchEvents() Ons the dispatch events public void OnDispatchEvents() OnDraw() Ons the draw public void OnDraw() OnExit() Ons the exit public void OnExit() OnFixedUpdate() Ons the fixed update public void OnFixedUpdate() OnGui() Ons the gui public void OnGui() OnInit() Ons the init public void OnInit() OnPhysicUpdate() Ons the physic update private void OnPhysicUpdate() OnStart() Ons the start public void OnStart() OnStop() Ons the stop public void OnStop() OnUpdate() Ons the update public void OnUpdate() Run() Run program public void Run() RunPreview() Runs the preview public void RunPreview() SetContext(Context) Sets the context using the specified context public static void SetContext(Context context) Parameters context Context The context See Also IGame"
  },
  "api/Alis.Core.Ecs.html": {
    "href": "api/Alis.Core.Ecs.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Ecs Namespaces Alis.Core.Ecs.Component Alis.Core.Ecs.Entity Alis.Core.Ecs.System Classes VideoGame The video game class Interfaces IGame The game interface"
  },
  "api/Alis.Core.Graphic.IWindow.html": {
    "href": "api/Alis.Core.Graphic.IWindow.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWindow Namespace Alis.Core.Graphic Assembly Alis.dll The window interface public interface IWindow Properties Background Gets or sets the value of the background Color Background { get; set; } Property Value Color IsWindowResizable Gets or sets the value of the is window resizable bool IsWindowResizable { get; set; } Property Value bool Resolution Gets or sets the value of the resolution Vector2 Resolution { get; set; } Property Value Vector2"
  },
  "api/Alis.Core.Graphic.Properties.Sdl2Dlls.html": {
    "href": "api/Alis.Core.Graphic.Properties.Sdl2Dlls.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Sdl2Dlls Namespace Alis.Core.Graphic.Properties Assembly Alis.dll The im gui dlls class public static class Sdl2Dlls Inheritance object Sdl2Dlls Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields GlSdlDllBytes The osx arm64 sdl2 internal static readonly Dictionary<PlatformInfo, string> GlSdlDllBytes Field Value Dictionary<PlatformInfo, string> GlSdlTtfDllBytes The sdl2 ttf internal static readonly Dictionary<PlatformInfo, string> GlSdlTtfDllBytes Field Value Dictionary<PlatformInfo, string> LinuxArm The arm private static readonly PlatformInfo LinuxArm Field Value PlatformInfo LinuxArm64 The arm 64 private static readonly PlatformInfo LinuxArm64 Field Value PlatformInfo LinuxX64 The 64 private static readonly PlatformInfo LinuxX64 Field Value PlatformInfo LinuxX86 The 86 private static readonly PlatformInfo LinuxX86 Field Value PlatformInfo OsxArm The arm private static readonly PlatformInfo OsxArm Field Value PlatformInfo OsxArm64 The arm 64 private static readonly PlatformInfo OsxArm64 Field Value PlatformInfo OsxX64 The 64 private static readonly PlatformInfo OsxX64 Field Value PlatformInfo OsxX86 The 86 private static readonly PlatformInfo OsxX86 Field Value PlatformInfo ResourcePath The resource path private static readonly string ResourcePath Field Value string WinArm The arm private static readonly PlatformInfo WinArm Field Value PlatformInfo WinArm64 The arm 64 private static readonly PlatformInfo WinArm64 Field Value PlatformInfo WinX64 The 64 private static readonly PlatformInfo WinX64 Field Value PlatformInfo WinX86 The 86 private static readonly PlatformInfo WinX86 Field Value PlatformInfo"
  },
  "api/Alis.Core.Graphic.Properties.html": {
    "href": "api/Alis.Core.Graphic.Properties.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Properties Classes Sdl2Dlls The im gui dlls class"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlAudioCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlAudioCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlAudioCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl audio callback public delegate void SdlAudioCallback(IntPtr userdata, IntPtr stream, int len) Parameters userdata IntPtr stream IntPtr len int"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlEventFilter.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlEventFilter.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlEventFilter Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl event filter public delegate int SdlEventFilter(IntPtr userdata, IntPtr sdlEvent) Parameters userdata IntPtr sdlEvent IntPtr Returns int"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlHitTest.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlHitTest.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlHitTest Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl hit test public delegate HitTestResult SdlHitTest(IntPtr win, IntPtr area, IntPtr data) Parameters win IntPtr area IntPtr data IntPtr Returns HitTestResult"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlIPhoneAnimationCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlIPhoneAnimationCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlIPhoneAnimationCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl iphone animation callback public delegate void SdlIPhoneAnimationCallback(IntPtr p) Parameters p IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlLogOutputFunction.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlLogOutputFunction.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlLogOutputFunction Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl log output function public delegate void SdlLogOutputFunction(IntPtr userdata, int category, LogPriority priority, IntPtr message) Parameters userdata IntPtr category int priority LogPriority message IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlMainFunc.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlMainFunc.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlMainFunc Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl main func public delegate int SdlMainFunc(int argc, IntPtr argv) Parameters argc int argv IntPtr Returns int"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlTimerCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlTimerCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlTimerCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl timer callback public delegate uint SdlTimerCallback(uint interval, IntPtr param) Parameters interval uint param IntPtr Returns uint"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWindowsMessageHook.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWindowsMessageHook.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWindowsMessageHook Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl windows message hook public delegate IntPtr SdlWindowsMessageHook(IntPtr userdata, IntPtr hWnd, uint message, ulong wParam, long lParam) Parameters userdata IntPtr hWnd IntPtr message uint wParam ulong lParam long Returns IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsCloseCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsCloseCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWopsCloseCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl wops close callback public delegate int SdlWopsCloseCallback(IntPtr context) Parameters context IntPtr Returns int"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsReadCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsReadCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWopsReadCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl wops read callback public delegate IntPtr SdlWopsReadCallback(IntPtr context, IntPtr ptr, IntPtr size, IntPtr maxNum) Parameters context IntPtr ptr IntPtr size IntPtr maxNum IntPtr Returns IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsSeekCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsSeekCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWopsSeekCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl wops seek callback public delegate long SdlWopsSeekCallback(IntPtr context, long offset, int whence) Parameters context IntPtr offset long whence int Returns long"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsSizeCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsSizeCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWopsSizeCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl wops size callback public delegate long SdlWopsSizeCallback(IntPtr context) Parameters context IntPtr Returns long"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsWriteCallback.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.SdlWopsWriteCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate SdlWopsWriteCallback Namespace Alis.Core.Graphic.Sdl2.Delegates Assembly Alis.dll The sdl wops write callback public delegate IntPtr SdlWopsWriteCallback(IntPtr context, IntPtr ptr, IntPtr size, IntPtr num) Parameters context IntPtr ptr IntPtr size IntPtr num IntPtr Returns IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Delegates.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Delegates.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2.Delegates Delegates SdlAudioCallback The sdl audio callback SdlEventFilter The sdl event filter SdlHitTest The sdl hit test SdlIPhoneAnimationCallback The sdl iphone animation callback SdlLogOutputFunction The sdl log output function SdlMainFunc The sdl main func SdlTimerCallback The sdl timer callback SdlWindowsMessageHook The sdl windows message hook SdlWopsCloseCallback The sdl wops close callback SdlWopsReadCallback The sdl wops read callback SdlWopsSeekCallback The sdl wops seek callback SdlWopsSizeCallback The sdl wops size callback SdlWopsWriteCallback The sdl wops write callback"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.ArrayOrder.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.ArrayOrder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ArrayOrder Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl array order enum public enum ArrayOrder Fields SdlArrayOrderNone = 0 The sdl array order none sdl array order SdlArrayOrderRgb = 1 The sdl array order rgb sdl array order SdlArrayOrderRgba = 2 The sdl array order rgba sdl array order SdlArrayOrderArgb = 3 The sdl array order argb sdl array order SdlArrayOrderBgr = 4 The sdl array order bgr sdl array order SdlArrayOrderBgrA = 5 The sdl array order bgr sdl array order SdlArrayOrderAbgR = 6 The sdl array order abg sdl array order"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Attr.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Attr.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Attr Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl gl attr enum public enum Attr Fields SdlGlRedSize = 0 The sdl gl red size sdl gl attr SdlGlGreenSize = 1 The sdl gl green size sdl gl attr SdlGlBlueSize = 2 The sdl gl blue size sdl gl attr SdlGlAlphaSize = 3 The sdl gl alpha size sdl gl attr SdlGlBufferSize = 4 The sdl gl buffer size sdl gl attr SdlGlDoubleBuffer = 5 The sdl gl double buffer sdl gl attr SdlGlDepthSize = 6 The sdl gl depth size sdl gl attr SdlGlStencilSize = 7 The sdl gl stencil size sdl gl attr SdlGlAccumRedSize = 8 The sdl gl accum red size sdl gl attr SdlGlAccumGreenSize = 9 The sdl gl accum green size sdl gl attr SdlGlAccumBlueSize = 10 The sdl gl accum blue size sdl gl attr SdlGlAccumAlphaSize = 11 The sdl gl accum alpha size sdl gl attr SdlGlStereo = 12 The sdl gl stereo sdl gl attr SdlGlMultiSampleBuffers = 13 The sdl gl multi sample buffers sdl gl attr SdlGlMultiSampleSamples = 14 The sdl gl multi sample samples sdl gl attr SdlGlAcceleratedVisual = 15 The sdl gl accelerated visual sdl gl attr SdlGlRetainedBacking = 16 The sdl gl retained backing sdl gl attr SdlGlContextMajorVersion = 17 The sdl gl context major version sdl gl attr SdlGlContextMinorVersion = 18 The sdl gl context minor version sdl gl attr SdlGlContextEgl = 19 The sdl gl context egl sdl gl attr SdlGlContextFlags = 20 The sdl gl context flags sdl gl attr SdlGlContextProfileMask = 21 The sdl gl context profile mask sdl gl attr SdlGlShareWithCurrentContext = 22 The sdl gl share with current context sdl gl attr SdlGlFramebufferSrgbCapable = 23 The sdl gl framebuffer srgb capable sdl gl attr SdlGlContextReleaseBehavior = 24 The sdl gl context release behavior sdl gl attr SdlGlContextResetNotification = 25 The sdl gl context reset notification sdl gl attr SdlGlContextNoError = 26 The sdl gl context no error sdl gl attr"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.AudioAllow.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.AudioAllow.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum AudioAllow Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The audio allow enum public enum AudioAllow : uint Fields AudioAllowFrequencyChange = 1 The sdl audio allow frequency change AudioAllowFormatChange = 2 The sdl audio allow format change AudioAllowChannelsChange = 4 The sdl audio allow channels change AudioAllowSamplesChange = 8 The sdl audio allow samples change AudioAllowAnyChange = 15 The sdl audio allow samples change"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.AudioStatus.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.AudioStatus.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum AudioStatus Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl audio status enum public enum AudioStatus Fields SdlAudioStopped = 0 The sdl audio stopped sdl audio status SdlAudioPlaying = 1 The sdl audio playing sdl audio status SdlAudioPaused = 2 The sdl audio paused sdl audio status"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.BitmapOrder.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.BitmapOrder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BitmapOrder Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl bit map order enum public enum BitmapOrder Fields BitMapOrderNone = 0 The sdl bit map order none sdl bit map order BitMapOrder4321 = 1 The sdl bit map order 4321 sdl bit map order BitMapOrder1234 = 2 The sdl bit map order 1234 sdl bit map order"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.BlendFactor.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.BlendFactor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BlendFactor Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl blend factor enum public enum BlendFactor Fields SdlBlendFactorZero = 1 The sdl blend factor zero sdl blend factor SdlBlendFactorOne = 2 The sdl blend factor one sdl blend factor SdlBlendFactorSrcColor = 3 The sdl blend factor src color sdl blend factor SdlBlendFactorOneMinusSrcColor = 4 The sdl blend factor one minus src color sdl blend factor SdlBlendFactorSrcAlpha = 5 The sdl blend factor src alpha sdl blend factor SdlBlendFactorOneMinusSrcAlpha = 6 The sdl blend factor one minus src alpha sdl blend factor SdlBlendFactorDstColor = 7 The sdl blend factor dst color sdl blend factor SdlBlendFactorOneMinusDstColor = 8 The sdl blend factor one minus dst color sdl blend factor SdlBlendFactorDstAlpha = 9 The sdl blend factor dst alpha sdl blend factor SdlBlendFactorOneMinusDstAlpha = 10 The sdl blend factor one minus dst alpha sdl blend factor"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.BlendModes.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.BlendModes.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BlendModes Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl blend mode enum [Flags] public enum BlendModes Fields None = 0 The sdl blend factor none sdl blend factor BlendModeBlend = 1 The sdl blend factor blend sdl blend factor BlendModeAdd = 2 The sdl blend factor add sdl blend factor BlendModeMod = 4 The sdl blend factor mod sdl blend factor BlendModeMul = 8 The sdl blend factor mul sdl blend factor BlendModeInvalid = 2147483647 The sdl blend factor invalid sdl blend factor BlendAll = 2147483647 The blend all blend mode"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.BlendOperation.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.BlendOperation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BlendOperation Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl blend operation enum public enum BlendOperation Fields SdlBlendOperationAdd = 1 The sdl blend operation add sdl blend operation SdlBlendOperationSubtract = 2 The sdl blend operation subtract sdl blend operation SdlBlendOperationRevSubtract = 3 The sdl blend operation rev subtract sdl blend operation SdlBlendOperationMinimum = 4 The sdl blend operation minimum sdl blend operation SdlBlendOperationMaximum = 5 The sdl blend operation maximum sdl blend operation"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Contexts.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Contexts.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Contexts Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl gl context enum [Flags] public enum Contexts Fields SdlGlContextDebugFlag = 1 The sdl gl context debug flag sdl gl context SdlGlContextForwardCompatibleFlag = 2 The sdl gl context forward compatible flag sdl gl context SdlGlContextRobustAccessFlag = 4 The sdl gl context robust access flag sdl gl context SdlGlContextResetIsolationFlag = 8 The sdl gl context reset isolation flag sdl gl context"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.DisplayEventId.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.DisplayEventId.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum DisplayEventId Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl display event id enum public enum DisplayEventId : byte Fields SdlDisplayEventNone = 0 The sdl display event none sdl display event id SdlDisplayEventOrientation = 1 The sdl display event orientation sdl display event id SdlDisplayEventConnected = 2 The sdl display event connected sdl display event id SdlDisplayEventDisconnected = 3 The sdl display event disconnected sdl display event id"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.DisplayOrientation.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.DisplayOrientation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum DisplayOrientation Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl display orientation enum public enum DisplayOrientation Fields SdlOrientationUnknown = 0 The sdl orientation unknown sdl display orientation SdlOrientationLandscape = 1 The sdl orientation landscape sdl display orientation SdlOrientationLandscapeFlipped = 2 The sdl orientation landscape flipped sdl display orientation SdlOrientationPortrait = 3 The sdl orientation portrait sdl display orientation SdlOrientationPortraitFlipped = 4 The sdl orientation portrait flipped sdl display orientation"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.EventAction.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.EventAction.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum EventAction Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl event action enum public enum EventAction Fields SdlAddEvent = 0 The sdl add event sdl event action SdlPeekEvent = 1 The sdl peek event sdl event action SdlGetEvent = 2 The sdl get event sdl event action"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.EventType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.EventType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum EventType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl event type enum public enum EventType : uint Fields FirstEvent = 0 The sdl first event sdl event type Quit = 256 The sdl quit sdl event type AppTerminating = 257 The sdl app terminating sdl event type AppLowMemory = 258 The sdl app low memory sdl event type AppWillEnterBackground = 259 The sdl app will enter background sdl event type AppDidEnterBackground = 260 The sdl app did enter background sdl event type AppWillEnterForeground = 261 The sdl app will enter foreground sdl event type AppDidEnterForeground = 262 The sdl app did enter foreground sdl event type LocaleChanged = 263 The sdl locale changed sdl event type DisplayEvent = 336 The sdl display event sdl event type WindowEvent = 512 The sdl window event sdl event type SysWmEvent = 513 The sdl sys wm event sdl event type Keydown = 768 The sdl keydown sdl event type Keyup = 769 The sdl keyup sdl event type TextEditing = 770 The sdl text editing sdl event type TextInput = 771 The sdl text input sdl event type KeymapChanged = 772 The sdl keymap changed sdl event type MouseMotion = 1024 The sdl mouse motion sdl event type MouseButtonDown = 1025 The sdl mouse button down sdl event type MouseButtonUp = 1026 The sdl mouse button up sdl event type Mousewheel = 1027 The sdl mousewheel sdl event type JoyAxisMotion = 1536 The sdl joy axis motion sdl event type JoyBallMotion = 1537 The sdl joy ball motion sdl event type JoyHatMotion = 1538 The sdl joy hat motion sdl event type JoyButtonDown = 1539 The sdl joy button down sdl event type JoyButtonUp = 1540 The sdl joy button up sdl event type JoyDeviceAdded = 1541 The sdl joy device added sdl event type JoyDeviceRemoved = 1542 The sdl joy device removed sdl event type ControllerAxisMotion = 1616 The sdl controller axis motion sdl event type ControllerButtonDown = 1617 The sdl controller button down sdl event type ControllerButtonUp = 1618 The sdl controller button up sdl event type ControllerDeviceAdded = 1619 The sdl controller device added sdl event type ControllerDeviceRemoved = 1620 The sdl controller device removed sdl event type ControllerDeviceRemapped = 1621 The sdl controller device remapped sdl event type ControllerTouchpadDown = 1622 The sdl controller touchpad down sdl event type ControllerTouchpadMotion = 1623 The sdl controller touchpad motion sdl event type ControllerTouchpadUp = 1624 The sdl controller touchpad up sdl event type ControllerSensorUpdate = 1625 The sdl controller sensor update sdl event type FingerDown = 1792 The sdl finger down sdl event type FingerUp = 1793 The sdl finger up sdl event type FingerMotion = 1794 The sdl finger motion sdl event type DollarGesture = 2048 The sdl dollar gesture sdl event type DollarRecord = 2049 The sdl dollar record sdl event type MultiGesture = 2050 The sdl multi gesture sdl event type ClipBoardUpdate = 2304 The sdl clip board update sdl event type DropFile = 4096 The sdl drop file sdl event type DropText = 4097 The sdl drop text sdl event type DropBegin = 4098 The sdl drop begin sdl event type DropComplete = 4099 The sdl drop complete sdl event type AudioDeviceAdded = 4352 The sdl audio device added sdl event type AudioDeviceRemoved = 4353 The sdl audio device removed sdl event type SensorUpdate = 4608 The sdl sensor update sdl event type RenderTargetsReset = 8192 The sdl render targets reset sdl event type RenderDeviceReset = 8193 The sdl render device reset sdl event type PollSentinel = 32512 The sdl poll sentinel sdl event type UserEvent = 32768 The sdl user event sdl event type LastEvent = 65535 The sdl last event sdl event type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.FlashOperation.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.FlashOperation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum FlashOperation Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl flash operation enum public enum FlashOperation Fields SdlFlashCancel = 0 The sdl flash cancel sdl flash operation SdlFlashBriefly = 1 The sdl flash briefly sdl flash operation SdlFlashUntilFocused = 2 The sdl flash until focused sdl flash operation"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerAxis.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerAxis.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum GameControllerAxis Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl game controller axis enum public enum GameControllerAxis Fields SdlControllerAxisInvalid = -1 The sdl controller axis invalid sdl game controller axis SdlControllerAxisLeftX = 0 The sdl controller axis left x sdl game controller axis SdlControllerAxisLeftY = 1 The sdl controller axis lefty sdl game controller axis SdlControllerAxisRightX = 2 The sdl controller axis right X sdl game controller axis SdlControllerAxisRightY = 3 The sdl controller axis right Y sdl game controller axis SdlControllerAxisTriggerLeft = 4 The sdl controller axis trigger left sdl game controller axis SdlControllerAxisTriggerRight = 5 The sdl controller axis trigger right sdl game controller axis SdlControllerAxisMax = 6 The sdl controller axis max sdl game controller axis"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerBindType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerBindType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum GameControllerBindType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl game controller bind type enum public enum GameControllerBindType Fields SdlControllerBindTypeNone = 0 The sdl controller bind type none sdl game controller bind type SdlControllerBindTypeButton = 1 The sdl controller bind type button sdl game controller bind type SdlControllerBindTypeAxis = 2 The sdl controller bind type axis sdl game controller bind type SdlControllerBindTypeHat = 3 The sdl controller bind type hat sdl game controller bind type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerButton.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.GameControllerButton.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum GameControllerButton Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl game controller button enum public enum GameControllerButton Fields SdlControllerButtonInvalid = -1 The sdl controller button invalid sdl game controller button SdlControllerButtonA = 0 The sdl controller button sdl game controller button SdlControllerButtonB = 1 The sdl controller button sdl game controller button SdlControllerButtonX = 2 The sdl controller button sdl game controller button SdlControllerButtonY = 3 The sdl controller button sdl game controller button SdlControllerButtonBack = 4 The sdl controller button back sdl game controller button SdlControllerButtonGuide = 5 The sdl controller button guide sdl game controller button SdlControllerButtonStart = 6 The sdl controller button start sdl game controller button SdlControllerButtonLeftStick = 7 The sdl controller button left stick sdl game controller button SdlControllerButtonRightStick = 8 The sdl controller button right stick sdl game controller button SdlControllerButtonLeftShoulder = 9 The sdl controller button left shoulder sdl game controller button SdlControllerButtonRightShoulder = 10 The sdl controller button right shoulder sdl game controller button SdlControllerButtonDpadUp = 11 The sdl controller button dpad up sdl game controller button SdlControllerButtonDpadDown = 12 The sdl controller button dpad down sdl game controller button SdlControllerButtonDpadLeft = 13 The sdl controller button dpad left sdl game controller button SdlControllerButtonDpadRight = 14 The sdl controller button dpad right sdl game controller button SdlControllerButtonMisc1 = 15 The sdl controller button misc1 sdl game controller button SdlControllerButtonPaddle1 = 16 The sdl controller button paddle1 sdl game controller button SdlControllerButtonPaddle2 = 17 The sdl controller button paddle2 sdl game controller button SdlControllerButtonPaddle3 = 18 The sdl controller button paddle3 sdl game controller button SdlControllerButtonPaddle4 = 19 The sdl controller button paddle4 sdl game controller button SdlControllerButtonTouchpad = 20 The sdl controller button touchpad sdl game controller button SdlControllerButtonMax = 21 The sdl controller button max sdl game controller button"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Haptic.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Haptic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Haptic Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The haptic enum public enum Haptic : byte Fields HapticPolar = 0 The sdl haptic polar HapticCartesian = 1 The sdl haptic cartesian HapticSpherical = 2 The sdl haptic spherical HapticSteeringAxis = 3 The sdl haptic steering axis"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.HapticConstant.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.HapticConstant.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum HapticConstant Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The haptic constant enum public enum HapticConstant : ushort Fields HapticConstant = 1 The sdl haptic constant HapticSine = 2 The sdl haptic sine HapticLeftRight = 4 The sdl haptic left right HapticTriangle = 8 The sdl haptic triangle HapticSawToothUp = 16 The sdl haptic saw tooth up HapticSawToothDown = 32 The sdl haptic saw tooth down HapticSpring = 128 The sdl haptic spring HapticDamper = 256 The sdl haptic damper HapticInertia = 512 The sdl haptic inertia HapticFriction = 1024 The sdl haptic friction HapticCustom = 2048 The sdl haptic custom HapticGain = 4096 The sdl haptic gain HapticAutoCenter = 8192 The sdl haptic auto center HapticStatus = 16384 The sdl haptic status HapticPauseVar = 32768 The sdl haptic pause"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Hat.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Hat.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Hat Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The hat enum public enum Hat : byte Fields HatCentered = 0 The sdl hat centered HatUp = 1 The sdl hat up HatRight = 2 The sdl hat right HatDown = 4 The sdl hat down HatLeft = 8 The sdl hat left HatRightUp = 3 The sdl hat up HatRightDown = 6 The sdl hat down HatLeftUp = 9 The sdl hat up HatLeftDown = 12 The sdl hat down"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.HintPriority.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.HintPriority.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum HintPriority Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl hint priority enum public enum HintPriority Fields SdlHintDefault = 0 The sdl hint default sdl hint priority SdlHintNormal = 1 The sdl hint normal sdl hint priority SdlHintOverride = 2 The sdl hint override sdl hint priority"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.HitTestResult.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.HitTestResult.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum HitTestResult Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl hit test result enum public enum HitTestResult Fields SdlHitTestNormal = 0 The sdl hit test normal sdl hit test result SdlHitTestDraggable = 1 The sdl hit test draggable sdl hit test result SdlHitTestResizeTopLeft = 2 The sdl hit test resize top left sdl hit test result SdlHitTestResizeTop = 3 The sdl hit test resize top sdl hit test result SdlHitTestResizeTopRight = 4 The sdl hit test resize top right sdl hit test result SdlHitTestResizeRight = 5 The sdl hit test resize right sdl hit test result SdlHitTestResizeBottomRight = 6 The sdl hit test resize bottom right sdl hit test result SdlHitTestResizeBottom = 7 The sdl hit test resize bottom sdl hit test result SdlHitTestResizeBottomLeft = 8 The sdl hit test resize bottom left sdl hit test result SdlHitTestResizeLeft = 9 The sdl hit test resize left sdl hit test result"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.InitSettings.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.InitSettings.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum InitSettings Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl init enum [Flags] public enum InitSettings : uint Fields InitTimer = 1 The sdl init timer InitAudio = 16 The sdl init audio InitVideo = 32 The sdl init video InitJoystick = 512 The sdl init joystick InitHaptic = 4096 The sdl init haptic InitGameController = 8192 The sdl init game controller InitEvents = 16384 The sdl init events InitSensor = 32768 The sdl init sensor InitEverything = 62001 The init everything sdl init"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.JoystickPowerLevel.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.JoystickPowerLevel.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum JoystickPowerLevel Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl joystick power level enum public enum JoystickPowerLevel Fields SdlJoystickPowerUnknown = -1 The sdl joystick power unknown sdl joystick power level SdlJoystickPowerEmpty = 0 The sdl joystick power empty sdl joystick power level SdlJoystickPowerLow = 1 The sdl joystick power low sdl joystick power level SdlJoystickPowerMedium = 2 The sdl joystick power medium sdl joystick power level SdlJoystickPowerFull = 3 The sdl joystick power full sdl joystick power level SdlJoystickPowerWired = 4 The sdl joystick power wired sdl joystick power level SdlJoystickPowerMax = 5 The sdl joystick power max sdl joystick power level"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.JoystickType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.JoystickType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum JoystickType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl joystick type enum public enum JoystickType Fields SdlJoystickTypeUnknown = 0 The sdl joystick type unknown sdl joystick type SdlJoystickTypeGameController = 1 The sdl joystick type game controller sdl joystick type SdlJoystickTypeWheel = 2 The sdl joystick type wheel sdl joystick type SdlJoystickTypeArcadeStick = 3 The sdl joystick type arcade stick sdl joystick type SdlJoystickTypeFlightStick = 4 The sdl joystick type flight stick sdl joystick type SdlJoystickTypeDancePad = 5 The sdl joystick type dance pad sdl joystick type SdlJoystickTypeGuitar = 6 The sdl joystick type guitar sdl joystick type SdlJoystickTypeDrumKit = 7 The sdl joystick type drum kit sdl joystick type SdlJoystickTypeArcadePad = 8 The sdl joystick type arcade pad sdl joystick type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.KeyMods.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.KeyMods.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum KeyMods Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl key mod enum [Flags] public enum KeyMods : ushort Fields None = 0 The k mod none sdl key mod KModLShift = 1 The k mod l shift sdl key mod KModRShift = 2 The k mod r shift sdl key mod KModLCtrl = 64 The k mod l ctrl sdl key mod KModRCtrl = 128 The k mod r ctrl sdl key mod KModLAlt = 256 The k mod l alt sdl key mod KModRAlt = 512 The k mod r alt sdl key mod KModLGui = 1024 The k mod l gui sdl key mod KModRGui = 2048 The k mod r gui sdl key mod KModNum = 4096 The k mod num sdl key mod KModCaps = 8192 The k mod caps sdl key mod KModMode = 16384 The k mod mode sdl key mod KModScroll = 32768 The k mod scroll sdl key mod KModCtrl = 192 The k mod ctrl sdl key mod KModShift = 3 The k mod shift sdl key mod KModAlt = 768 The k mod alt sdl key mod KModGui = 3072 The k mod gui sdl key mod KModReserved = 32768 The k mod reserved sdl key mod"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.LogCategory.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.LogCategory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum LogCategory Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl log category enum public enum LogCategory Fields SdlLogCategoryApplication = 0 The sdl log category application sdl log category SdlLogCategoryError = 1 The sdl log category error sdl log category SdlLogCategoryAssert = 2 The sdl log category assert sdl log category SdlLogCategorySystem = 3 The sdl log category system sdl log category SdlLogCategoryAudio = 4 The sdl log category audio sdl log category SdlLogCategoryVideo = 5 The sdl log category video sdl log category SdlLogCategoryRender = 6 The sdl log category render sdl log category SdlLogCategoryInput = 7 The sdl log category input sdl log category SdlLogCategoryTest = 8 The sdl log category test sdl log category SdlLogCategoryReserved1 = 9 The sdl log category reserved1 sdl log category SdlLogCategoryReserved2 = 10 The sdl log category reserved2 sdl log category SdlLogCategoryReserved3 = 11 The sdl log category reserved3 sdl log category SdlLogCategoryReserved4 = 12 The sdl log category reserved4 sdl log category SdlLogCategoryReserved5 = 13 The sdl log category reserved5 sdl log category SdlLogCategoryReserved6 = 14 The sdl log category reserved6 sdl log category SdlLogCategoryReserved7 = 15 The sdl log category reserved7 sdl log category SdlLogCategoryReserved8 = 16 The sdl log category reserved8 sdl log category SdlLogCategoryReserved9 = 17 The sdl log category reserved9 sdl log category SdlLogCategoryReserved10 = 18 The sdl log category reserved10 sdl log category SdlLogCategoryCustom = 19 The sdl log category custom sdl log category"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.LogPriority.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.LogPriority.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum LogPriority Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl log priority enum public enum LogPriority Fields SdlLogPriorityVerbose = 1 The sdl log priority verbose sdl log priority SdlLogPriorityDebug = 2 The sdl log priority debug sdl log priority SdlLogPriorityInfo = 3 The sdl log priority info sdl log priority SdlLogPriorityWarn = 4 The sdl log priority warn sdl log priority SdlLogPriorityError = 5 The sdl log priority error sdl log priority SdlLogPriorityCritical = 6 The sdl log priority critical sdl log priority SdlNumLogPriorities = 7 The sdl num log priorities sdl log priority"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.MouseWheelDirection.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.MouseWheelDirection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum MouseWheelDirection Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl mouse wheel direction enum public enum MouseWheelDirection : uint Fields SdlMousewheelNormal = 0 The sdl mousewheel normal sdl mouse wheel direction SdlMousewheelFlipped = 1 The sdl mousewheel flipped sdl mouse wheel direction"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.PackedLayout.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.PackedLayout.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PackedLayout Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl packed layout enum public enum PackedLayout Fields PackedLayoutNone = 0 The sdl packed layout none sdl packed layout PackedLayout332 = 1 The sdl packed layout 332 sdl packed layout PackedLayout4444 = 2 The sdl packed layout 4444 sdl packed layout PackedLayout1555 = 3 The sdl packed layout 1555 sdl packed layout PackedLayout5551 = 4 The sdl packed layout 5551 sdl packed layout PackedLayout565 = 5 The sdl packed layout 565 sdl packed layout PackedLayout8888 = 6 The sdl packed layout 8888 sdl packed layout PackedLayout2101010 = 7 The sdl packed layout 2101010 sdl packed layout PackedLayout1010102 = 8 The sdl packed layout 1010102 sdl packed layout"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.PackedOrder.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.PackedOrder.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PackedOrder Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl packed order enum public enum PackedOrder Fields PackedOrderNone = 0 The sdl packed order none sdl packed order PackedOrderXRgb = 1 The sdl packed order x rgb sdl packed order PackedOrderRGbx = 2 The sdl packed order r gbx sdl packed order PackedOrderARgb = 3 The sdl packed order argb sdl packed order PackedOrderRGba = 4 The sdl packed order rgba sdl packed order PackedOrderXBgr = 5 The sdl packed order x bgr sdl packed order PackedOrderBGrx = 6 The sdl packed order b grx sdl packed order PackedOrderABgr = 7 The sdl packed order a bgr sdl packed order PackedOrderBGra = 8 The sdl packed order b gra sdl packed order"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.PowerState.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.PowerState.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PowerState Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl power state enum public enum PowerState Fields SdlPowerStateUnknown = 0 The sdl power state unknown sdl power state SdlPowerStateOnBattery = 1 The sdl power state on battery sdl power state SdlPowerStateNoBattery = 2 The sdl power state no battery sdl power state SdlPowerStateCharging = 3 The sdl power state charging sdl power state SdlPowerStateCharged = 4 The sdl power state charged sdl power state"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Profiles.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Profiles.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Profiles Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl gl profile enum [Flags] public enum Profiles Fields SdlGlContextProfileCore = 1 The sdl gl context profile core sdl gl profile SdlGlContextProfileCompatibility = 2 The sdl gl context profile compatibility sdl gl profile SdlGlContextProfileEs = 4 The sdl gl context profile es sdl gl profile"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.RendererFlips.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.RendererFlips.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum RendererFlips Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl renderer flip enum [Flags] public enum RendererFlips Fields None = 0 The sdl flip none sdl renderer flip FlipHorizontal = 1 The sdl flip horizontal sdl renderer flip FlipVertical = 2 The sdl flip vertical sdl renderer flip"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.Renderers.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.Renderers.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Renderers Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl renderer flags enum [Flags] public enum Renderers : uint Fields None = 0 The none renderer SdlRendererSoftware = 1 The sdl renderer software sdl renderer flags SdlRendererAccelerated = 2 The sdl renderer accelerated sdl renderer flags SdlRendererPresentVSync = 4 The sdl renderer present vsync sdl renderer flags SdlRendererTargetTexture = 8 The sdl renderer target texture sdl renderer flags"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.RwOps.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.RwOps.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum RwOps Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The rw ops enum public enum RwOps : uint Fields RwOpsUnknown = 0 The sdl rw ops unknown RwOpsWinFile = 1 The sdl rw ops win file RwOpsStdFile = 2 The sdl rw ops std file RwOpsJniFile = 3 The sdl rw ops jni file RwOpsMemory = 4 The sdl rw ops memory RwOpsMemoryRo = 5 The sdl rw ops memory ro"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.RwSeek.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.RwSeek.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum RwSeek Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The rw seek enum public enum RwSeek Fields RwSeekSet = 0 The rw seek set RwSeekCur = 1 The rw seek cur RwSeekEnd = 2 The rw seek end"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.ScaleMode.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.ScaleMode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ScaleMode Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl scale mode enum public enum ScaleMode Fields SdlScaleModeNearest = 0 The sdl scale mode nearest sdl scale mode SdlScaleModeLinear = 1 The sdl scale mode linear sdl scale mode SdlScaleModeBest = 2 The sdl scale mode best sdl scale mode"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.SensorType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.SensorType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum SensorType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl sensor type enum public enum SensorType Fields SdlSensorInvalid = -1 The sdl sensor invalid sdl sensor type SdlSensorUnknown = 0 The sdl sensor unknown sdl sensor type SdlSensorAccel = 1 The sdl sensor accel sdl sensor type SdlSensorGyro = 2 The sdl sensor gyro sdl sensor type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.SysWmType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.SysWmType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum SysWmType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl sys wm type enum public enum SysWmType Fields SdlSysWmUnknown = 0 The sdl sys wm unknown sdl sys wm type SdlSysWmWindows = 1 The sdl sys wm windows sdl sys wm type SdlSysWmX11 = 2 The sdl sys wm x11 sdl sys wm type SdlSysWmDirectfb = 3 The sdl sys wm directfb sdl sys wm type SdlSysWmCocoa = 4 The sdl sys wm cocoa sdl sys wm type SdlSysWmUikit = 5 The sdl sys wm uikit sdl sys wm type SdlSysWmWayland = 6 The sdl sys wm wayland sdl sys wm type SdlSysWmMir = 7 The sdl sys wm mir sdl sys wm type SdlSysWmWinrt = 8 The sdl sys wm winrt sdl sys wm type SdlSysWmAndroid = 9 The sdl sys wm android sdl sys wm type SdlSysWmVivante = 10 The sdl sys wm vivante sdl sys wm type SdlSysWmOs2 = 11 The sdl sys wm os2 sdl sys wm type SdlSysWmHaiku = 12 The sdl sys wm haiku sdl sys wm type SdlSysWmKmsDrm = 13 The sdl sys wm kms drm sdl sys wm type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.SystemCursor.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.SystemCursor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum SystemCursor Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl system cursor enum public enum SystemCursor Fields SdlSystemCursorArrow = 0 The sdl system cursor arrow sdl system cursor SdlSystemCursorIbeAm = 1 The sdl system cursor ibe am sdl system cursor SdlSystemCursorWait = 2 The sdl system cursor wait sdl system cursor SdlSystemCursorCrosshair = 3 The sdl system cursor crosshair sdl system cursor SdlSystemCursorWaitArrow = 4 The sdl system cursor wait arrow sdl system cursor SdlSystemCursorSizeNwSe = 5 The sdl system cursor size n wse sdl system cursor SdlSystemCursorSizeNesW = 6 The sdl system cursor size nes w sdl system cursor SdlSystemCursorSizeWe = 7 The sdl system cursor size we sdl system cursor SdlSystemCursorSizeNs = 8 The sdl system cursor size ns sdl system cursor SdlSystemCursorSizeAll = 9 The sdl system cursor size all sdl system cursor SdlSystemCursorNo = 10 The sdl system cursor no sdl system cursor SdlSystemCursorHand = 11 The sdl system cursor hand sdl system cursor SdlNumSystemCursors = 12 The sdl num system cursors sdl system cursor"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.TextureAccess.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.TextureAccess.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TextureAccess Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl texture access enum [Flags] public enum TextureAccess Fields None = 0 The sdl texture access static sdl texture access SdlTextureAccessStreaming = 1 The sdl texture access streaming sdl texture access SdlTextureAccessTarget = 2 The sdl texture access target sdl texture access"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.TextureModulate.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.TextureModulate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TextureModulate Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl texture modulate enum [Flags] public enum TextureModulate Fields None = 0 The sdl texture modulate none sdl texture modulate SdlTextureModulateHorizontal = 1 The sdl texture modulate horizontal sdl texture modulate SdlTextureModulateVertical = 2 The sdl texture modulate vertical sdl texture modulate"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.TouchDeviceType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.TouchDeviceType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TouchDeviceType Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl touch device type enum public enum TouchDeviceType Fields SdlTouchDeviceInvalid = -1 The sdl touch device invalid sdl touch device type SdlTouchDeviceDirect = 0 The sdl touch device direct sdl touch device type SdlTouchDeviceIndirectAbsolute = 1 The sdl touch device indirect absolute sdl touch device type SdlTouchDeviceIndirectRelative = 2 The sdl touch device indirect relative sdl touch device type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.TypePixel.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.TypePixel.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TypePixel Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl pixel type enum public enum TypePixel Fields TypeUnknown = 0 The sdl pixel type unknown sdl pixel type TypeIndex1 = 1 The sdl pixel type index1 sdl pixel type TypeIndex4 = 2 The sdl pixel type index4 sdl pixel type TypeIndex8 = 3 The sdl pixel type index8 sdl pixel type TypePacked8 = 4 The sdl pixel type packed8 sdl pixel type TypePacked16 = 5 The sdl pixel type packed16 sdl pixel type TypePacked32 = 6 The sdl pixel type packed32 sdl pixel type TypeArrayU8 = 7 The sdl pixel type array u8 sdl pixel type TypeArrayU16 = 8 The sdl pixel type arrayu16 sdl pixel type TypeArrayU32 = 9 The sdl pixel type arrayu32 sdl pixel type TypeArrayF16 = 10 The sdl pixel type arrayf16 sdl pixel type TypeArrayF32 = 11 The sdl pixel type arrayf32 sdl pixel type"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.WinRtDeviceFamily.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.WinRtDeviceFamily.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum WinRtDeviceFamily Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl winrt device family enum public enum WinRtDeviceFamily Fields SdlWinrtDeviceFamilyUnknown = 0 The sdl winrt device family unknown sdl winrt device family SdlWinrtDeviceFamilyDesktop = 1 The sdl winrt device family desktop sdl winrt device family SdlWinrtDeviceFamilyMobile = 2 The sdl winrt device family mobile sdl winrt device family SdlWinrtDeviceFamilyXbox = 3 The sdl winrt device family xbox sdl winrt device family"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.WindowEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.WindowEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct WindowEvent Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl window event public struct WindowEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields data1 The data public readonly int data1 Field Value int data2 The data public readonly int data2 Field Value int padding1 The padding private readonly byte padding1 Field Value byte padding2 The padding private readonly byte padding2 Field Value byte padding3 The padding private readonly byte padding3 Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType windowEvent The window event public readonly WindowEventId windowEvent Field Value WindowEventId windowID The window id public readonly uint windowID Field Value uint"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.WindowEventId.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.WindowEventId.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum WindowEventId Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl window event id enum public enum WindowEventId : byte Fields SdlWindowEventNone = 0 The sdl window event none sdl window event id SdlWindowEventShown = 1 The sdl window event shown sdl window event id SdlWindowEventHidden = 2 The sdl window event hidden sdl window event id SdlWindowEventExposed = 3 The sdl window event exposed sdl window event id SdlWindowEventMoved = 4 The sdl window event moved sdl window event id SdlWindowEventResized = 5 The sdl window event resized sdl window event id SdlWindowEventSizeChanged = 6 The sdl window event size changed sdl window event id SdlWindowEventMinimized = 7 The sdl window event minimized sdl window event id SdlWindowEventMaximized = 8 The sdl window event maximized sdl window event id SdlWindowEventRestored = 9 The sdl window event restored sdl window event id SdlWindowEventEnter = 10 The sdl window event enter sdl window event id SdlWindowEventLeave = 11 The sdl window event leave sdl window event id SdlWindowEventFocusGained = 12 The sdl window event focus gained sdl window event id SdlWindowEventFocusLost = 13 The sdl window event focus lost sdl window event id SdlWindowEventClose = 14 The sdl window event close sdl window event id SdlWindowEventTakeFocus = 15 The sdl window event take focus sdl window event id SdlWindowEventHitTest = 16 The sdl window event hit test sdl window event id SdlWindowEventIccProfChanged = 17 The sdl window event icc prof changed sdl window event id SdlWindowEventDisplayChanged = 18 The sdl window event display changed sdl window event id"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.WindowPos.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.WindowPos.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum WindowPos Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The window pos enum [Flags] public enum WindowPos Fields WindowPosUndefinedMask = 536805376 The sdl window pos undefined mask WindowPosCenteredMask = 805240832 The sdl window pos centered mask WindowPosUndefined = 536805376 The sdl window pos undefined WindowPosCentered = 805240832 The sdl window pos centered"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.WindowSettings.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.WindowSettings.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum WindowSettings Namespace Alis.Core.Graphic.Sdl2.Enums Assembly Alis.dll The sdl window flags enum [Flags] public enum WindowSettings : uint Fields None = 0 The none window WindowFullscreen = 1 The sdl window fullscreen sdl window flags WindowOpengl = 2 The sdl window opengl sdl window flags WindowShown = 4 The sdl window shown sdl window flags WindowHidden = 8 The sdl window hidden sdl window flags WindowBorderless = 16 The sdl window borderless sdl window flags WindowResizable = 32 The sdl window resizable sdl window flags WindowMinimized = 64 The sdl window minimized sdl window flags WindowMaximized = 128 The sdl window maximized sdl window flags WindowMouseGrabbed = 256 The sdl window mouse grabbed sdl window flags WindowInputFocus = 512 The sdl window input focus sdl window flags WindowMouseFocus = 1024 The sdl window mouse focus sdl window flags WindowFullscreenDesktop = 4097 The sdl window fullscreen desktop sdl window flags WindowForeign = 2048 The sdl window foreign sdl window flags WindowAllowHighDpi = 8192 The sdl window allow high dpi sdl window flags WindowMouseCapture = 16384 The sdl window mouse capture sdl window flags WindowAlwaysOnTop = 32768 The sdl window always on top sdl window flags WindowSkipTaskbar = 65536 The sdl window skip taskbar sdl window flags WindowUtility = 131072 The sdl window utility sdl window flags WindowTooltip = 262144 The sdl window tooltip sdl window flags WindowPopupMenu = 524288 The sdl window popup menu sdl window flags WindowKeyboardGrabbed = 1048576 The sdl window keyboard grabbed sdl window flags WindowVulkan = 268435456 The sdl window vulkan sdl window flags WindowMetal = 33554432 The sdl window metal sdl window flags WindowInputGrabbed = 256 The sdl window input grabbed sdl window flags"
  },
  "api/Alis.Core.Graphic.Sdl2.Enums.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Enums.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2.Enums Structs WindowEvent The sdl window event Enums ArrayOrder The sdl array order enum Attr The sdl gl attr enum AudioAllow The audio allow enum AudioStatus The sdl audio status enum BitmapOrder The sdl bit map order enum BlendFactor The sdl blend factor enum BlendModes The sdl blend mode enum BlendOperation The sdl blend operation enum Contexts The sdl gl context enum DisplayEventId The sdl display event id enum DisplayOrientation The sdl display orientation enum EventAction The sdl event action enum EventType The sdl event type enum FlashOperation The sdl flash operation enum GameControllerAxis The sdl game controller axis enum GameControllerBindType The sdl game controller bind type enum GameControllerButton The sdl game controller button enum Haptic The haptic enum HapticConstant The haptic constant enum Hat The hat enum HintPriority The sdl hint priority enum HitTestResult The sdl hit test result enum InitSettings The sdl init enum JoystickPowerLevel The sdl joystick power level enum JoystickType The sdl joystick type enum KeyMods The sdl key mod enum LogCategory The sdl log category enum LogPriority The sdl log priority enum MouseWheelDirection The sdl mouse wheel direction enum PackedLayout The sdl packed layout enum PackedOrder The sdl packed order enum PowerState The sdl power state enum Profiles The sdl gl profile enum RendererFlips The sdl renderer flip enum Renderers The sdl renderer flags enum RwOps The rw ops enum RwSeek The rw seek enum ScaleMode The sdl scale mode enum SensorType The sdl sensor type enum SysWmType The sdl sys wm type enum SystemCursor The sdl system cursor enum TextureAccess The sdl texture access enum TextureModulate The sdl texture modulate enum TouchDeviceType The sdl touch device type enum TypePixel The sdl pixel type enum WinRtDeviceFamily The sdl winrt device family enum WindowEventId The sdl window event id enum WindowPos The window pos enum WindowSettings The sdl window flags enum"
  },
  "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.NativeSdlTtf.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.NativeSdlTtf.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NativeSdlTtf Namespace Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf Assembly Alis.dll The native sdl ttf class internal static class NativeSdlTtf Inheritance object NativeSdlTtf Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NativeSdlTtf() Initializes a new instance of the Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.SdlTtf class private static NativeSdlTtf() Fields NativeLibName The native lib name private const string NativeLibName = \"sdl2_ttf\" Field Value string Methods InternalByteSwappedUnicode(int) Ttf the byte swapped unicode using the specified swapped internal static extern void InternalByteSwappedUnicode(int swapped) Parameters swapped int The swapped InternalCloseFont(IntPtr) Ttf the close font using the specified font internal static extern void InternalCloseFont(IntPtr font) Parameters font IntPtr The font InternalFontAscent(IntPtr) Ttf the font ascent using the specified font internal static extern int InternalFontAscent(IntPtr font) Parameters font IntPtr The font Returns int The int InternalFontDescent(IntPtr) Ttf the font descent using the specified font internal static extern int InternalFontDescent(IntPtr font) Parameters font IntPtr The font Returns int The int InternalFontFaceIsFixedWidth(IntPtr) Ttf the font face is fixed width using the specified font internal static extern int InternalFontFaceIsFixedWidth(IntPtr font) Parameters font IntPtr The font Returns int The int InternalFontFaceStyleName(IntPtr) Internals the ttf font face style name using the specified font internal static extern IntPtr InternalFontFaceStyleName(IntPtr font) Parameters font IntPtr The font Returns IntPtr The int ptr InternalFontFaces(IntPtr) Ttf the font faces using the specified font internal static extern IntPtr InternalFontFaces(IntPtr font) Parameters font IntPtr The font Returns IntPtr The int ptr InternalFontHeight(IntPtr) Ttf the font height using the specified font internal static extern int InternalFontHeight(IntPtr font) Parameters font IntPtr The font Returns int The int InternalFontLineSkip(IntPtr) Ttf the font line skip using the specified font internal static extern int InternalFontLineSkip(IntPtr font) Parameters font IntPtr The font Returns int The int InternalGetFontHinting(IntPtr) Ttf the get font hinting using the specified font internal static extern int InternalGetFontHinting(IntPtr font) Parameters font IntPtr The font Returns int The int InternalGetFontKerning(IntPtr) Ttf the get font kerning using the specified font internal static extern int InternalGetFontKerning(IntPtr font) Parameters font IntPtr The font Returns int The int InternalGetFontKerningSize(IntPtr, int, int) Sdl the get font kerning size using the specified font internal static extern int InternalGetFontKerningSize(IntPtr font, int prevIndex, int index) Parameters font IntPtr The font prevIndex int The prev index index int The index Returns int The int InternalGetFontKerningSizeGlyphs(IntPtr, ushort, ushort) Ttf the get font kerning size glyphs using the specified font internal static extern int InternalGetFontKerningSizeGlyphs(IntPtr font, ushort previousCh, ushort ch) Parameters font IntPtr The font previousCh ushort The previous ch ch ushort The ch Returns int The int InternalGetFontOutline(IntPtr) Ttf the get font outline using the specified font internal static extern int InternalGetFontOutline(IntPtr font) Parameters font IntPtr The font Returns int The int InternalGetFontStyle(IntPtr) Ttf the get font style using the specified font internal static extern int InternalGetFontStyle(IntPtr font) Parameters font IntPtr The font Returns int The int InternalGetTtfVersion() Internals the get ttf version public static Version InternalGetTtfVersion() Returns Version The sdl version InternalGlyphIsProvided(IntPtr, ushort) Ttf the glyph is provided using the specified font internal static extern int InternalGlyphIsProvided(IntPtr font, ushort ch) Parameters font IntPtr The font ch ushort The ch Returns int The int InternalGlyphMetrics(IntPtr, ushort, out int, out int, out int, out int, out int) Ttf the glyph metrics using the specified font internal static extern int InternalGlyphMetrics(IntPtr font, ushort ch, out int minx, out int max, out int miny, out int maxy, out int advance) Parameters font IntPtr The font ch ushort The ch minx int The minx max int The max miny int The miny maxy int The maxy advance int The advance Returns int The int InternalInit() Ttf the init internal static extern int InternalInit() Returns int The int InternalOpenFont(string, int) Internals the ttf open font using the specified file internal static extern IntPtr InternalOpenFont(string file, int ptSize) Parameters file string The file ptSize int The ptSize Returns IntPtr The int ptr InternalOpenFontIndex(string, int, long) Internals the ttf open font index using the specified file internal static extern IntPtr InternalOpenFontIndex(string file, int ptSize, long index) Parameters file string The file ptSize int the size index long The index Returns IntPtr The int ptr InternalQuit() Ttf the quit internal static extern void InternalQuit() InternalRenderGlyphBlended(IntPtr, ushort, Color) Ttf the render glyph blended using the specified font internal static extern IntPtr InternalRenderGlyphBlended(IntPtr font, ushort ch, Color fg) Parameters font IntPtr The font ch ushort The ch fg Color The fg Returns IntPtr The int ptr InternalRenderGlyphShaded(IntPtr, ushort, Color, Color) Ttf the render glyph shaded using the specified font internal static extern IntPtr InternalRenderGlyphShaded(IntPtr font, ushort ch, Color fg, Color bg) Parameters font IntPtr The font ch ushort The ch fg Color The fg bg Color The bg Returns IntPtr The int ptr InternalRenderGlyphSolid(IntPtr, ushort, Color) Ttf the render glyph solid using the specified font internal static extern IntPtr InternalRenderGlyphSolid(IntPtr font, ushort ch, Color fg) Parameters font IntPtr The font ch ushort The ch fg Color The fg Returns IntPtr The int ptr InternalRenderTextBlended(IntPtr, string, Color) Ttf the render text blended using the specified font internal static extern IntPtr InternalRenderTextBlended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderTextBlendedWrapped(IntPtr, string, Color, uint) Ttf the render text blended wrapped using the specified font internal static extern IntPtr InternalRenderTextBlendedWrapped(IntPtr font, string text, Color fg, uint wrapped) Parameters font IntPtr The font text string The text fg Color The fg wrapped uint The wrapped Returns IntPtr The int ptr InternalRenderTextShaded(IntPtr, string, Color, Color) Ttf the render text shaded using the specified font internal static extern IntPtr InternalRenderTextShaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr InternalRenderTextSolid(IntPtr, string, Color) Ttf the render text solid using the specified font internal static extern IntPtr InternalRenderTextSolid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderUTF8Solid(IntPtr, string, Color) Internals the ttf render utf 8 solid using the specified font internal static extern IntPtr InternalRenderUTF8Solid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderUnicodeBlended(IntPtr, string, Color) Ttf the render unicode blended using the specified font internal static extern IntPtr InternalRenderUnicodeBlended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderUnicodeBlendedWrapped(IntPtr, string, Color, uint) Ttf the render unicode blended wrapped using the specified font internal static extern IntPtr InternalRenderUnicodeBlendedWrapped(IntPtr font, string text, Color fg, uint wrapped) Parameters font IntPtr The font text string The text fg Color The fg wrapped uint The wrapped Returns IntPtr The int ptr InternalRenderUnicodeShaded(IntPtr, string, Color, Color) Ttf the render unicode shaded using the specified font internal static extern IntPtr InternalRenderUnicodeShaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr InternalRenderUnicodeSolid(IntPtr, string, Color) Ttf the render unicode solid using the specified font internal static extern IntPtr InternalRenderUnicodeSolid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderUtf8Blended(IntPtr, string, Color) Internals the ttf render utf 8 blended using the specified font internal static extern IntPtr InternalRenderUtf8Blended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr InternalRenderUtf8BlendedWrapped(IntPtr, string, Color, uint) Internals the ttf render utf 8 blended wrapped using the specified font internal static extern IntPtr InternalRenderUtf8BlendedWrapped(IntPtr font, string text, Color fg, uint wrapped) Parameters font IntPtr The font text string The text fg Color The fg wrapped uint The wrapped Returns IntPtr The int ptr InternalRenderUtf8Shaded(IntPtr, string, Color, Color) Internals the ttf render utf 8 shaded using the specified font internal static extern IntPtr InternalRenderUtf8Shaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr InternalSetFontHinting(IntPtr, int) Ttf the set font hinting using the specified font internal static extern void InternalSetFontHinting(IntPtr font, int hinting) Parameters font IntPtr The font hinting int The hinting InternalSetFontKerning(IntPtr, int) Ttf the set font kerning using the specified font internal static extern void InternalSetFontKerning(IntPtr font, int allowed) Parameters font IntPtr The font allowed int The allowed InternalSetFontOutline(IntPtr, int) Ttf the set font outline using the specified font internal static extern void InternalSetFontOutline(IntPtr font, int outline) Parameters font IntPtr The font outline int The outline InternalSetFontStyle(IntPtr, int) Ttf the set font style using the specified font internal static extern void InternalSetFontStyle(IntPtr font, int style) Parameters font IntPtr The font style int The style InternalSetScript(int) Ttf the set script using the specified script internal static extern int InternalSetScript(int script) Parameters script int The script Returns int The int InternalSizeText(IntPtr, string, out int, out int) Ttf the size text using the specified font internal static extern int InternalSizeText(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int InternalSizeUTF8(IntPtr, string, out int, out int) Internals the ttf size utf 8 using the specified font internal static extern int InternalSizeUTF8(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int InternalSizeUnicode(IntPtr, string, out int, out int) Ttf the size unicode using the specified font internal static extern int InternalSizeUnicode(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int InternalWasInit() Ttf the was init internal static extern int InternalWasInit() Returns int The int"
  },
  "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.SdlTtf.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.SdlTtf.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SdlTtf Namespace Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf Assembly Alis.dll The sdl ttf extern class public static class SdlTtf Inheritance object SdlTtf Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields TtfHintingLight The ttf hinting light public const int TtfHintingLight = 1 Field Value int TtfHintingLightSubpixel The ttf hinting light subpixel public const int TtfHintingLightSubpixel = 4 Field Value int TtfHintingMono The ttf hinting mono public const int TtfHintingMono = 2 Field Value int TtfHintingNone The ttf hinting none public const int TtfHintingNone = 3 Field Value int TtfHintingNormal The ttf hinting normal public const int TtfHintingNormal = 0 Field Value int TtfStyleBold The ttf style bold public const int TtfStyleBold = 1 Field Value int TtfStyleItalic The ttf style italic public const int TtfStyleItalic = 2 Field Value int TtfStyleNormal The ttf style normal public const int TtfStyleNormal = 0 Field Value int TtfStyleStrikethrough The ttf style strikethrough public const int TtfStyleStrikethrough = 8 Field Value int TtfStyleUnderline The ttf style underline public const int TtfStyleUnderline = 4 Field Value int UnicodeBomNative The unicode bom native public const int UnicodeBomNative = 65279 Field Value int UnicodeBomSwapped The unicode bom swapped public const int UnicodeBomSwapped = 65534 Field Value int Methods ByteSwappedUnicode(int) Ttf the byte swapped unicode using the specified swapped public static void ByteSwappedUnicode(int swapped) Parameters swapped int The swapped CloseFont(IntPtr) Ttf the close font using the specified font public static void CloseFont(IntPtr font) Parameters font IntPtr The font FontAscent(IntPtr) Ttf the font ascent using the specified font public static int FontAscent(IntPtr font) Parameters font IntPtr The font Returns int The int FontDescent(IntPtr) Ttf the font descent using the specified font public static int FontDescent(IntPtr font) Parameters font IntPtr The font Returns int The int FontFaceIsFixedWidth(IntPtr) Ttf the font face is fixed width using the specified font public static int FontFaceIsFixedWidth(IntPtr font) Parameters font IntPtr The font Returns int The int FontFaceStyleName(IntPtr) Internals the ttf font face style name using the specified font public static string FontFaceStyleName(IntPtr font) Parameters font IntPtr The font Returns string The int ptr FontFaces(IntPtr) Ttf the font faces using the specified font public static IntPtr FontFaces(IntPtr font) Parameters font IntPtr The font Returns IntPtr The int ptr FontHeight(IntPtr) Ttf the font height using the specified font public static int FontHeight(IntPtr font) Parameters font IntPtr The font Returns int The int FontLineSkip(IntPtr) Ttf the font line skip using the specified font public static int FontLineSkip(IntPtr font) Parameters font IntPtr The font Returns int The int GetError() Ttf the get error public static string GetError() Returns string The string GetFontHinting(IntPtr) Ttf the get font hinting using the specified font public static int GetFontHinting(IntPtr font) Parameters font IntPtr The font Returns int The int GetFontKerning(IntPtr) Ttf the get font kerning using the specified font public static int GetFontKerning(IntPtr font) Parameters font IntPtr The font Returns int The int GetFontKerningSize(IntPtr, int, int) Sdl the get font kerning size using the specified font public static int GetFontKerningSize(IntPtr font, int prevIndex, int index) Parameters font IntPtr The font prevIndex int The prev index index int The index Returns int The int GetFontKerningSizeGlyphs(IntPtr, ushort, ushort) Ttf the get font kerning size glyphs using the specified font public static int GetFontKerningSizeGlyphs(IntPtr font, ushort previousCh, ushort ch) Parameters font IntPtr The font previousCh ushort The previous ch ch ushort The ch Returns int The int GetFontOutline(IntPtr) Ttf the get font outline using the specified font public static int GetFontOutline(IntPtr font) Parameters font IntPtr The font Returns int The int GetFontStyle(IntPtr) Ttf the get font style using the specified font public static int GetFontStyle(IntPtr font) Parameters font IntPtr The font Returns int The int GetVersion() Sdl the ttf version using the specified x public static Version GetVersion() Returns Version GlyphIsProvided(IntPtr, ushort) Ttf the glyph is provided using the specified font public static int GlyphIsProvided(IntPtr font, ushort ch) Parameters font IntPtr The font ch ushort The ch Returns int The int GlyphMetrics(IntPtr, ushort, out int, out int, out int, out int, out int) Ttf the glyph metrics using the specified font public static int GlyphMetrics(IntPtr font, ushort ch, out int minx, out int max, out int miny, out int maxy, out int advance) Parameters font IntPtr The font ch ushort The ch minx int The minx max int The max miny int The miny maxy int The maxy advance int The advance Returns int The int Init() Ttf the init public static int Init() Returns int The result Exceptions Exception InternalInit failed OpenFont(string, int) Ttf the open font using the specified file public static IntPtr OpenFont(string file, int ptSize) Parameters file string The file ptSize int The pt size Returns IntPtr The handle OpenFontIndex(string, int, long) Internals the ttf open font index using the specified file public static IntPtr OpenFontIndex(string file, int ptSize, long index) Parameters file string The file ptSize int The pt size index long The index Returns IntPtr The int ptr Quit() Ttf the quit public static void Quit() RenderGlyphBlended(IntPtr, ushort, Color) Ttf the render glyph blended using the specified font public static IntPtr RenderGlyphBlended(IntPtr font, ushort ch, Color fg) Parameters font IntPtr The font ch ushort The ch fg Color The fg Returns IntPtr The int ptr RenderGlyphShaded(IntPtr, ushort, Color, Color) Ttf the render glyph shaded using the specified font public static IntPtr RenderGlyphShaded(IntPtr font, ushort ch, Color fg, Color bg) Parameters font IntPtr The font ch ushort The ch fg Color The fg bg Color The bg Returns IntPtr The int ptr RenderGlyphSolid(IntPtr, ushort, Color) Ttf the render glyph solid using the specified font public static IntPtr RenderGlyphSolid(IntPtr font, ushort ch, Color fg) Parameters font IntPtr The font ch ushort The ch fg Color The fg Returns IntPtr The int ptr RenderTextBlended(IntPtr, string, Color) Ttf the render text blended using the specified font public static IntPtr RenderTextBlended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr RenderTextBlendedWrapped(IntPtr, string, Color, uint) Ttf the render text blended wrapped using the specified font public static IntPtr RenderTextBlendedWrapped(IntPtr font, string text, Color fg, uint wrapped) Parameters font IntPtr The font text string The text fg Color The fg wrapped uint The wrapped Returns IntPtr The int ptr RenderTextShaded(IntPtr, string, Color, Color) Ttf the render text shaded using the specified font public static IntPtr RenderTextShaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr RenderTextSolid(IntPtr, string, Color) Ttf the render text solid using the specified font public static IntPtr RenderTextSolid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr RenderUnicodeBlended(IntPtr, string, Color) Ttf the render unicode blended using the specified font public static IntPtr RenderUnicodeBlended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr RenderUnicodeBlendedWrapped(IntPtr, string, Color, uint) Ttf the render unicode blended wrapped using the specified font public static IntPtr RenderUnicodeBlendedWrapped(IntPtr font, string text, Color fg, uint wrapped) Parameters font IntPtr The font text string The text fg Color The fg wrapped uint The wrapped Returns IntPtr The int ptr RenderUnicodeShaded(IntPtr, string, Color, Color) Ttf the render unicode shaded using the specified font public static IntPtr RenderUnicodeShaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr RenderUnicodeSolid(IntPtr, string, Color) Ttf the render unicode solid using the specified font public static IntPtr RenderUnicodeSolid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr RenderUtf8Blended(IntPtr, string, Color) Internals the ttf render utf 8 blended using the specified font public static IntPtr RenderUtf8Blended(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr RenderUtf8BlendedWrapped(IntPtr, string, Color, uint) Internals the ttf render utf 8 blended wrapped using the specified font public static IntPtr RenderUtf8BlendedWrapped(IntPtr font, string text, Color sdlColor, uint wrapped) Parameters font IntPtr The font text string The text sdlColor Color The fg wrapped uint The wrapped Returns IntPtr The int ptr RenderUtf8Shaded(IntPtr, string, Color, Color) Internals the ttf render utf 8 shaded using the specified font public static IntPtr RenderUtf8Shaded(IntPtr font, string text, Color fg, Color bg) Parameters font IntPtr The font text string The text fg Color The fg bg Color The bg Returns IntPtr The int ptr RenderUtf8Solid(IntPtr, string, Color) Internals the ttf render utf 8 solid using the specified font public static IntPtr RenderUtf8Solid(IntPtr font, string text, Color fg) Parameters font IntPtr The font text string The text fg Color The fg Returns IntPtr The int ptr SetError(string) Ttf the set error using the specified fmt and arg public static void SetError(string fmtAndArgList) Parameters fmtAndArgList string The fmt and arg SetFontHinting(IntPtr, int) Ttf the set font hinting using the specified font public static void SetFontHinting(IntPtr font, int hinting) Parameters font IntPtr The font hinting int The hinting SetFontKerning(IntPtr, int) Ttf the set font kerning using the specified font public static void SetFontKerning(IntPtr font, int allowed) Parameters font IntPtr The font allowed int The allowed SetFontOutline(IntPtr, int) Ttf the set font outline using the specified font public static void SetFontOutline(IntPtr font, int outline) Parameters font IntPtr The font outline int The outline SetFontStyle(IntPtr, int) Ttf the set font style using the specified font public static void SetFontStyle(IntPtr font, int style) Parameters font IntPtr The font style int The style SizeText(IntPtr, string, out int, out int) Ttf the size text using the specified font public static int SizeText(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int SizeUnicode(IntPtr, string, out int, out int) Ttf the size unicode using the specified font public static int SizeUnicode(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int SizeUtf8(IntPtr, string, out int, out int) Internals the ttf size utf 8 using the specified font public static int SizeUtf8(IntPtr font, string text, out int w, out int h) Parameters font IntPtr The font text string The text w int The h int The Returns int The int WasInit() Ttf the was init public static int WasInit() Returns int The int"
  },
  "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf Classes NativeSdlTtf The native sdl ttf class SdlTtf The sdl ttf extern class"
  },
  "api/Alis.Core.Graphic.Sdl2.Extensions.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Extensions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2.Extensions Namespaces Alis.Core.Graphic.Sdl2.Extensions.Sdl2Ttf"
  },
  "api/Alis.Core.Graphic.Sdl2.NativeSdl.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.NativeSdl.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class NativeSdl Namespace Alis.Core.Graphic.Sdl2 Assembly Alis.dll The native sdl class internal static class NativeSdl Inheritance object NativeSdl Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors NativeSdl() Initializes a new instance of the Alis.Core.Graphic.Sdl2.Sdl class private static NativeSdl() Fields NativeLibName The native lib name private const string NativeLibName = \"sdl2\" Field Value string Methods InternalAddEventWatch(SdlEventFilter, IntPtr) Sdl the add event watch using the specified filter internal static extern void InternalAddEventWatch(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata InternalAudioStreamAvailable(IntPtr) Sdl the audio stream available using the specified stream internal static extern int InternalAudioStreamAvailable(IntPtr stream) Parameters stream IntPtr The stream Returns int The int InternalAudioStreamClear(IntPtr) Sdl the audio stream clear using the specified stream internal static extern void InternalAudioStreamClear(IntPtr stream) Parameters stream IntPtr The stream InternalAudioStreamGet(IntPtr, IntPtr, int) Sdl the audio stream get using the specified stream internal static extern int InternalAudioStreamGet(IntPtr stream, IntPtr buf, int len) Parameters stream IntPtr The stream buf IntPtr The buf len int The len Returns int The int InternalAudioStreamPut(IntPtr, IntPtr, int) Sdl the audio stream put using the specified stream internal static extern int InternalAudioStreamPut(IntPtr stream, IntPtr buf, int len) Parameters stream IntPtr The stream buf IntPtr The buf len int The len Returns int The int InternalBlitSurface(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Sdl the blit surface using the specified src internal static extern int InternalBlitSurface(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int InternalBlitSurface(IntPtr, IntPtr, IntPtr, ref RectangleI) Sdl the blit surface using the specified src internal static extern int InternalBlitSurface(IntPtr src, IntPtr srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect IntPtr The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int InternalBlitSurface(IntPtr, ref RectangleI, IntPtr, IntPtr) Sdl the blit surface using the specified src internal static extern int InternalBlitSurface(IntPtr src, ref RectangleI srcRect, IntPtr dst, IntPtr dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect IntPtr The dst rect Returns int The int InternalBlitSurface(IntPtr, IntPtr, IntPtr, IntPtr) Sdl the blit surface using the specified src internal static extern int InternalBlitSurface(IntPtr src, IntPtr srcRect, IntPtr dst, IntPtr dstRect) Parameters src IntPtr The src srcRect IntPtr The src rect dst IntPtr The dst dstRect IntPtr The dst rect Returns int The int InternalCalculateGammaRamp(float, ushort[]) Sdl the calculate gamma ramp using the specified gamma internal static extern void InternalCalculateGammaRamp(float gamma, ushort[] ramp) Parameters gamma float The gamma ramp ushort[] The ramp InternalCaptureMouse(bool) Sdl the capture mouse using the specified enabled internal static extern int InternalCaptureMouse(bool enabled) Parameters enabled bool The enabled Returns int The int InternalClearHints() Sdl the clear hints internal static extern void InternalClearHints() InternalCloseAudioDevice(uint) Sdl the close audio device using the specified dev internal static extern void InternalCloseAudioDevice(uint dev) Parameters dev uint The dev InternalComposeCustomBlendMode(BlendFactor, BlendFactor, BlendOperation, BlendFactor, BlendFactor, BlendOperation) Sdl the compose custom blend mode using the specified src color factor internal static extern BlendModes InternalComposeCustomBlendMode(BlendFactor srcColorFactor, BlendFactor dstColorFactor, BlendOperation colorOperation, BlendFactor srcAlphaFactor, BlendFactor dstAlphaFactor, BlendOperation alphaOperation) Parameters srcColorFactor BlendFactor The src color factor dstColorFactor BlendFactor The dst color factor colorOperation BlendOperation The color operation srcAlphaFactor BlendFactor The src alpha factor dstAlphaFactor BlendFactor The dst alpha factor alphaOperation BlendOperation The alpha operation Returns BlendModes The sdl blend mode InternalConvertSurface(IntPtr, IntPtr, uint) Sdl the convert surface using the specified src internal static extern IntPtr InternalConvertSurface(IntPtr src, IntPtr fmt, uint flags) Parameters src IntPtr The src fmt IntPtr The fmt flags uint The flags Returns IntPtr The int ptr InternalCreateColorCursor(IntPtr, int, int) Sdl the create color cursor using the specified surface internal static extern IntPtr InternalCreateColorCursor(IntPtr surface, int hotX, int hotY) Parameters surface IntPtr The surface hotX int The hot hotY int The hot Returns IntPtr The int ptr InternalCreateCursor(IntPtr, IntPtr, int, int, int, int) Sdl the create cursor using the specified data internal static extern IntPtr InternalCreateCursor(IntPtr data, IntPtr mask, int w, int h, int hotX, int hotY) Parameters data IntPtr The data mask IntPtr The mask w int The h int The hotX int The hot hotY int The hot Returns IntPtr The int ptr InternalCreateRGBSurfaceWithFormat(uint, int, int, int, uint) Sdl the create rgb surface with format using the specified flags internal static extern IntPtr InternalCreateRGBSurfaceWithFormat(uint flags, int width, int height, int depth, uint format) Parameters flags uint The flags width int The width height int The height depth int The depth format uint The format Returns IntPtr The int ptr InternalCreateRenderer(IntPtr, int, Renderers) Sdl the create renderer using the specified window internal static extern IntPtr InternalCreateRenderer(IntPtr window, int index, Renderers flags) Parameters window IntPtr The window index int The index flags Renderers The flags Returns IntPtr The int ptr InternalCreateSoftwareRenderer(IntPtr) Sdl the create software renderer using the specified surface internal static extern IntPtr InternalCreateSoftwareRenderer(IntPtr surface) Parameters surface IntPtr The surface Returns IntPtr The int ptr InternalCreateSystemCursor(SystemCursor) Sdl the create system cursor using the specified id internal static extern IntPtr InternalCreateSystemCursor(SystemCursor id) Parameters id SystemCursor The id Returns IntPtr The int ptr InternalCreateTexture(IntPtr, uint, int, int, int) Sdl the create texture using the specified renderer internal static extern IntPtr InternalCreateTexture(IntPtr renderer, uint format, int access, int w, int h) Parameters renderer IntPtr The renderer format uint The format access int The access w int The h int The Returns IntPtr The int ptr InternalCreateTextureFromSurface(IntPtr, IntPtr) Sdl the create texture from surface using the specified renderer internal static extern IntPtr InternalCreateTextureFromSurface(IntPtr renderer, IntPtr surface) Parameters renderer IntPtr The renderer surface IntPtr The surface Returns IntPtr The int ptr InternalCreateWindow(string, int, int, int, int, WindowSettings) Internals the sdl create window using the specified title internal static extern IntPtr InternalCreateWindow(string title, int x, int y, int w, int h, WindowSettings flags) Parameters title string The title x int The y int The w int The h int The flags WindowSettings The flags Returns IntPtr The int ptr InternalCreateWindowAndRenderer(int, int, WindowSettings, out IntPtr, out IntPtr) Sdl the create window and renderer using the specified width internal static extern int InternalCreateWindowAndRenderer(int width, int height, WindowSettings windowFlags, out IntPtr window, out IntPtr renderer) Parameters width int The width height int The height windowFlags WindowSettings The window flags window IntPtr The window renderer IntPtr The renderer Returns int The int InternalDelEventWatch(SdlEventFilter, IntPtr) Sdl the del event watch using the specified filter internal static extern void InternalDelEventWatch(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata InternalDestroyRenderer(IntPtr) Sdl the destroy renderer using the specified renderer internal static extern void InternalDestroyRenderer(IntPtr renderer) Parameters renderer IntPtr The renderer InternalDestroyTexture(IntPtr) Sdl the destroy texture using the specified texture internal static extern void InternalDestroyTexture(IntPtr texture) Parameters texture IntPtr The texture InternalDestroyWindow(IntPtr) Sdl the destroy window using the specified window internal static extern void InternalDestroyWindow(IntPtr window) Parameters window IntPtr The window InternalEventState(EventType, int) Sdl the event state using the specified type internal static extern byte InternalEventState(EventType type, int state) Parameters type EventType The type state int The state Returns byte The byte InternalFillRect(IntPtr, ref RectangleI, uint) Sdl the fill rect using the specified dst internal static extern int InternalFillRect(IntPtr dst, ref RectangleI rect, uint color) Parameters dst IntPtr The dst rect RectangleI The rect color uint The color Returns int The int InternalFillRect(IntPtr, IntPtr, uint) Sdl the fill rect using the specified dst internal static extern int InternalFillRect(IntPtr dst, IntPtr rect, uint color) Parameters dst IntPtr The dst rect IntPtr The rect color uint The color Returns int The int InternalFillRects(IntPtr, RectangleI[], int, uint) Sdl the fill rects using the specified dst internal static extern int InternalFillRects(IntPtr dst, RectangleI[] rects, int count, uint color) Parameters dst IntPtr The dst rects RectangleI[] The rects count int The count color uint The color Returns int The int InternalFlushEvent(EventType) Sdl the flush event using the specified type internal static extern void InternalFlushEvent(EventType type) Parameters type EventType The type InternalFreeAudioStream(IntPtr) Sdl the free audio stream using the specified stream internal static extern void InternalFreeAudioStream(IntPtr stream) Parameters stream IntPtr The stream InternalFreeCursor(IntPtr) Sdl the free cursor using the specified cursor internal static extern void InternalFreeCursor(IntPtr cursor) Parameters cursor IntPtr The cursor InternalGameControllerAddMapping(string) Internals the sdl game controller add mapping using the specified mapping string internal static extern int InternalGameControllerAddMapping(string mappingString) Parameters mappingString string The mapping string Returns int The int InternalGameControllerAddMappingsFromRW(IntPtr, int) Internals the sdl game controller add mappings from rw using the specified rw internal static extern int InternalGameControllerAddMappingsFromRW(IntPtr rw, int freeRw) Parameters rw IntPtr The rw freeRw int The free rw Returns int The int InternalGameControllerClose(IntPtr) Sdl the game controller close using the specified game controller internal static extern void InternalGameControllerClose(IntPtr gameController) Parameters gameController IntPtr The game controller InternalGameControllerEventState(int) Sdl the game controller event state using the specified state internal static extern int InternalGameControllerEventState(int state) Parameters state int The state Returns int The int InternalGameControllerFromInstanceID(int) Sdl the game controller from instance id using the specified joy id internal static extern IntPtr InternalGameControllerFromInstanceID(int joyId) Parameters joyId int The joy id Returns IntPtr The int ptr InternalGameControllerGetAttached(IntPtr) Sdl the game controller get attached using the specified game controller internal static extern bool InternalGameControllerGetAttached(IntPtr gameController) Parameters gameController IntPtr The game controller Returns bool The sdl bool InternalGameControllerGetAxis(IntPtr, GameControllerAxis) Sdl the game controller get axis using the specified game controller internal static extern short InternalGameControllerGetAxis(IntPtr gameController, GameControllerAxis axis) Parameters gameController IntPtr The game controller axis GameControllerAxis The axis Returns short The short InternalGameControllerGetAxisFromString(string) Internals the sdl game controller get axis from string using the specified pch string internal static extern GameControllerAxis InternalGameControllerGetAxisFromString(string pchString) Parameters pchString string The pch string Returns GameControllerAxis The sdl game controller axis InternalGameControllerGetBindForAxis(IntPtr, GameControllerAxis) Internals the sdl game controller get bind for axis using the specified game controller internal static extern InternalSdlGameControllerButtonBind InternalGameControllerGetBindForAxis(IntPtr gameController, GameControllerAxis axis) Parameters gameController IntPtr The game controller axis GameControllerAxis The axis Returns InternalSdlGameControllerButtonBind The internal sdl game controller button bind InternalGameControllerGetBindForButton(IntPtr, GameControllerButton) Internals the sdl game controller get bind for button using the specified game controller internal static extern InternalSdlGameControllerButtonBind InternalGameControllerGetBindForButton(IntPtr gameController, GameControllerButton button) Parameters gameController IntPtr The game controller button GameControllerButton The button Returns InternalSdlGameControllerButtonBind The internal sdl game controller button bind InternalGameControllerGetButton(IntPtr, GameControllerButton) Sdl the game controller get button using the specified game controller internal static extern byte InternalGameControllerGetButton(IntPtr gameController, GameControllerButton button) Parameters gameController IntPtr The game controller button GameControllerButton The button Returns byte The byte InternalGameControllerGetButtonFromString(string) Internals the sdl game controller get button from string using the specified pch string internal static extern GameControllerButton InternalGameControllerGetButtonFromString(string pchString) Parameters pchString string The pch string Returns GameControllerButton The sdl game controller button InternalGameControllerGetJoystick(IntPtr) Sdl the game controller get joystick using the specified game controller internal static extern IntPtr InternalGameControllerGetJoystick(IntPtr gameController) Parameters gameController IntPtr The game controller Returns IntPtr The int ptr InternalGameControllerGetProduct(IntPtr) Sdl the game controller get product using the specified game controller internal static extern ushort InternalGameControllerGetProduct(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort InternalGameControllerGetProductVersion(IntPtr) Sdl the game controller get product version using the specified game controller internal static extern ushort InternalGameControllerGetProductVersion(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort InternalGameControllerGetStringForAxis(GameControllerAxis) Internals the sdl game controller get string for axis using the specified axis internal static extern IntPtr InternalGameControllerGetStringForAxis(GameControllerAxis axis) Parameters axis GameControllerAxis The axis Returns IntPtr The int ptr InternalGameControllerGetStringForButton(GameControllerButton) Internals the sdl game controller get string for button using the specified button internal static extern IntPtr InternalGameControllerGetStringForButton(GameControllerButton button) Parameters button GameControllerButton The button Returns IntPtr The int ptr InternalGameControllerGetVendor(IntPtr) Sdl the game controller get vendor using the specified game controller internal static extern ushort InternalGameControllerGetVendor(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort InternalGameControllerMapping(IntPtr) Internals the sdl game controller mapping using the specified game controller internal static extern IntPtr InternalGameControllerMapping(IntPtr gameController) Parameters gameController IntPtr The game controller Returns IntPtr The int ptr InternalGameControllerMappingForDeviceIndex(int) Internals the sdl game controller mapping for device index using the specified joystick index internal static extern IntPtr InternalGameControllerMappingForDeviceIndex(int joystickIndex) Parameters joystickIndex int The joystick index Returns IntPtr The int ptr InternalGameControllerMappingForGUID(Guid) Internals the sdl game controller mapping for guid using the specified guid internal static extern IntPtr InternalGameControllerMappingForGUID(Guid guid) Parameters guid Guid The guid Returns IntPtr The int ptr InternalGameControllerMappingForIndex(int) Internals the sdl game controller mapping for index using the specified mapping index internal static extern IntPtr InternalGameControllerMappingForIndex(int mappingIndex) Parameters mappingIndex int The mapping index Returns IntPtr The int ptr InternalGameControllerName(IntPtr) Internals the sdl game controller name using the specified game controller internal static extern IntPtr InternalGameControllerName(IntPtr gameController) Parameters gameController IntPtr The game controller Returns IntPtr The int ptr InternalGameControllerNameForIndex(int) Internals the sdl game controller name for index using the specified joystick index internal static extern IntPtr InternalGameControllerNameForIndex(int joystickIndex) Parameters joystickIndex int The joystick index Returns IntPtr The int ptr InternalGameControllerNumMappings() Sdl the game controller num mappings internal static extern int InternalGameControllerNumMappings() Returns int The int InternalGameControllerOpen(int) Sdl the game controller open using the specified joystick index internal static extern IntPtr InternalGameControllerOpen(int joystickIndex) Parameters joystickIndex int The joystick index Returns IntPtr The int ptr InternalGameControllerRumble(IntPtr, ushort, ushort, uint) Sdl the game controller rumble using the specified game controller internal static extern int InternalGameControllerRumble(IntPtr gameController, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs) Parameters gameController IntPtr The game controller lowFrequencyRumble ushort The low frequency rumble highFrequencyRumble ushort The high frequency rumble durationMs uint The duration ms Returns int The int InternalGameControllerUpdate() Sdl the game controller update internal static extern void InternalGameControllerUpdate() InternalGetAudioDeviceName(int, int) Internals the sdl get audio device name using the specified index internal static extern IntPtr InternalGetAudioDeviceName(int index, int isCapture) Parameters index int The index isCapture int The is capture Returns IntPtr The int ptr InternalGetAudioDeviceStatus(uint) Sdl the get audio device status using the specified dev internal static extern AudioStatus InternalGetAudioDeviceStatus(uint dev) Parameters dev uint The dev Returns AudioStatus The sdl audio status InternalGetAudioDriver(int) Internals the sdl get audio driver using the specified index internal static extern IntPtr InternalGetAudioDriver(int index) Parameters index int The index Returns IntPtr The int ptr InternalGetClipRect(IntPtr, out RectangleI) Sdl the get clip rect using the specified surface internal static extern void InternalGetClipRect(IntPtr surface, out RectangleI rect) Parameters surface IntPtr The surface rect RectangleI The rect InternalGetClipboardText() Internals the sdl get clipboard text internal static extern IntPtr InternalGetClipboardText() Returns IntPtr The int ptr InternalGetClosestDisplayMode(int, ref DisplayMode, out DisplayMode) Sdl the get closest display mode using the specified display index internal static extern IntPtr InternalGetClosestDisplayMode(int displayIndex, ref DisplayMode mode, out DisplayMode closest) Parameters displayIndex int The display index mode DisplayMode The mode closest DisplayMode The closest Returns IntPtr The int ptr InternalGetColorKey(IntPtr, out uint) Sdl the get color key using the specified surface internal static extern int InternalGetColorKey(IntPtr surface, out uint key) Parameters surface IntPtr The surface key uint The key Returns int The int InternalGetCurrentAudioDriver() Internals the sdl get current audio driver internal static extern IntPtr InternalGetCurrentAudioDriver() Returns IntPtr The int ptr InternalGetCurrentDisplayMode(int, out DisplayMode) Sdl the get current display mode using the specified display index internal static extern int InternalGetCurrentDisplayMode(int displayIndex, out DisplayMode mode) Parameters displayIndex int The display index mode DisplayMode The mode Returns int The int InternalGetCurrentVideoDriver() Internals the sdl get current video driver internal static extern IntPtr InternalGetCurrentVideoDriver() Returns IntPtr The int ptr InternalGetCursor() Sdl the get cursor internal static extern IntPtr InternalGetCursor() Returns IntPtr The int ptr InternalGetDesktopDisplayMode(int, out DisplayMode) Sdl the get desktop display mode using the specified display index internal static extern int InternalGetDesktopDisplayMode(int displayIndex, out DisplayMode mode) Parameters displayIndex int The display index mode DisplayMode The mode Returns int The int InternalGetDisplayBounds(int, out RectangleI) Sdl the get display bounds using the specified display index internal static extern int InternalGetDisplayBounds(int displayIndex, out RectangleI rect) Parameters displayIndex int The display index rect RectangleI The rect Returns int The int InternalGetDisplayDPI(int, out float, out float, out float) Sdl the get display dpi using the specified display index internal static extern int InternalGetDisplayDPI(int displayIndex, out float dDpi, out float hDpi, out float vDpi) Parameters displayIndex int The display index dDpi float The d dpi hDpi float The h dpi vDpi float The v dpi Returns int The int InternalGetDisplayMode(int, int, out DisplayMode) Sdl the get display mode using the specified display index internal static extern int InternalGetDisplayMode(int displayIndex, int modeIndex, out DisplayMode mode) Parameters displayIndex int The display index modeIndex int The mode index mode DisplayMode The mode Returns int The int InternalGetDisplayName(int) Internals the sdl get display name using the specified index internal static extern IntPtr InternalGetDisplayName(int index) Parameters index int The index Returns IntPtr The int ptr InternalGetDisplayUsableBounds(int, out RectangleI) Sdl the get display usable bounds using the specified display index internal static extern int InternalGetDisplayUsableBounds(int displayIndex, out RectangleI rect) Parameters displayIndex int The display index rect RectangleI The rect Returns int The int InternalGetError() Internals the sdl get error internal static extern IntPtr InternalGetError() Returns IntPtr The int ptr InternalGetEventFilter(out IntPtr, out IntPtr) Sdl the get event filter using the specified filter internal static extern bool InternalGetEventFilter(out IntPtr filter, out IntPtr userdata) Parameters filter IntPtr The filter userdata IntPtr The userdata Returns bool The sdl bool InternalGetGlobalMouseState(out int, out int) Sdl the get global mouse state using the specified x internal static extern uint InternalGetGlobalMouseState(out int x, out int y) Parameters x int The y int The Returns uint The int 32 InternalGetGlobalMouseState(IntPtr, IntPtr) Sdl the get global mouse state using the specified x internal static extern uint InternalGetGlobalMouseState(IntPtr x, IntPtr y) Parameters x IntPtr The y IntPtr The Returns uint The int 32 InternalGetGrabbedWindow() Sdl the get grabbed window internal static extern IntPtr InternalGetGrabbedWindow() Returns IntPtr The int ptr InternalGetHint(string) Internals the sdl get hint using the specified name internal static extern IntPtr InternalGetHint(string name) Parameters name string The name Returns IntPtr The int ptr InternalGetHintBoolean(string, bool) Internals the sdl get hint boolean using the specified name internal static extern bool InternalGetHintBoolean(string name, bool defaultValue) Parameters name string The name defaultValue bool The default value Returns bool The sdl bool InternalGetKeyFromName(string) Internals the sdl get key from name using the specified name internal static extern KeyCodes InternalGetKeyFromName(string name) Parameters name string The name Returns KeyCodes The sdl keycode InternalGetKeyFromScancode(SdlScancode) Sdl the get key from scancode using the specified scancode internal static extern KeyCodes InternalGetKeyFromScancode(SdlScancode scancode) Parameters scancode SdlScancode The scancode Returns KeyCodes The sdl keycode InternalGetKeyName(KeyCodes) Internals the sdl get key name using the specified key internal static extern IntPtr InternalGetKeyName(KeyCodes key) Parameters key KeyCodes The key Returns IntPtr The int ptr InternalGetKeyboardFocus() Sdl the get keyboard focus internal static extern IntPtr InternalGetKeyboardFocus() Returns IntPtr The int ptr InternalGetKeyboardState(out int) Sdl the get keyboard state using the specified num keys internal static extern IntPtr InternalGetKeyboardState(out int numKeys) Parameters numKeys int The num keys Returns IntPtr The int ptr InternalGetModState() Sdl the get mod state internal static extern KeyMods InternalGetModState() Returns KeyMods The sdl key mod InternalGetMouseFocus() Sdl the get mouse focus internal static extern IntPtr InternalGetMouseFocus() Returns IntPtr The int ptr InternalGetMouseState(out int, out int) Sdl the get mouse state using the specified x internal static extern uint InternalGetMouseState(out int x, out int y) Parameters x int The y int The Returns uint The int 32 InternalGetMouseState(IntPtr, out int) Sdl the get mouse state using the specified x internal static extern uint InternalGetMouseState(IntPtr x, out int y) Parameters x IntPtr The y int The Returns uint The int 32 InternalGetMouseState(out int, IntPtr) Sdl the get mouse state using the specified x internal static extern uint InternalGetMouseState(out int x, IntPtr y) Parameters x int The y IntPtr The Returns uint The int 32 InternalGetMouseState(IntPtr, IntPtr) Sdl the get mouse state using the specified x internal static extern uint InternalGetMouseState(IntPtr x, IntPtr y) Parameters x IntPtr The y IntPtr The Returns uint The int 32 InternalGetNumAudioDevices(int) Sdl the get num audio devices using the specified is capture internal static extern int InternalGetNumAudioDevices(int isCapture) Parameters isCapture int The is capture Returns int The int InternalGetNumAudioDrivers() Sdl the get num audio drivers internal static extern int InternalGetNumAudioDrivers() Returns int The int InternalGetNumDisplayModes(int) Sdl the get num display modes using the specified display index internal static extern int InternalGetNumDisplayModes(int displayIndex) Parameters displayIndex int The display index Returns int The int InternalGetNumRenderDrivers() Sdl the get num render drivers internal static extern int InternalGetNumRenderDrivers() Returns int The int InternalGetNumTouchFingers(long) Sdl the get num touch fingers using the specified touch id internal static extern int InternalGetNumTouchFingers(long touchId) Parameters touchId long The touch id Returns int The int InternalGetNumVideoDisplays() Sdl the get num video displays internal static extern int InternalGetNumVideoDisplays() Returns int The int InternalGetNumVideoDrivers() Sdl the get num video drivers internal static extern int InternalGetNumVideoDrivers() Returns int The int InternalGetPerformanceCounter() Sdl the get performance counter internal static extern ulong InternalGetPerformanceCounter() Returns ulong The int 64 InternalGetPerformanceFrequency() Sdl the get performance frequency internal static extern ulong InternalGetPerformanceFrequency() Returns ulong The int 64 InternalGetPixelFormatName(uint) Internals the sdl get pixel format name using the specified format internal static extern IntPtr InternalGetPixelFormatName(uint format) Parameters format uint The format Returns IntPtr The int ptr InternalGetRelativeMouseMode() Sdl the get relative mouse mode internal static extern bool InternalGetRelativeMouseMode() Returns bool The sdl bool InternalGetRelativeMouseState(out int, out int) Sdl the get relative mouse state using the specified x internal static extern uint InternalGetRelativeMouseState(out int x, out int y) Parameters x int The y int The Returns uint The int 32 InternalGetRenderDrawBlendMode(IntPtr, out BlendModes) Sdl the get render draw blend mode using the specified renderer internal static extern int InternalGetRenderDrawBlendMode(IntPtr renderer, out BlendModes blendMode) Parameters renderer IntPtr The renderer blendMode BlendModes The blend mode Returns int The int InternalGetRenderDrawColor(IntPtr, out byte, out byte, out byte, out byte) Sdl the get render draw color using the specified renderer internal static extern int InternalGetRenderDrawColor(IntPtr renderer, out byte r, out byte g, out byte b, out byte a) Parameters renderer IntPtr The renderer r byte The g byte The b byte The a byte The Returns int The int InternalGetRenderDriverInfo(int, out RendererInfo) Sdl the get render driver info using the specified index internal static extern int InternalGetRenderDriverInfo(int index, out RendererInfo info) Parameters index int The index info RendererInfo The info Returns int The int InternalGetRenderer(IntPtr) Sdl the get renderer using the specified window internal static extern IntPtr InternalGetRenderer(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr InternalGetRendererInfo(IntPtr, out RendererInfo) Sdl the get renderer info using the specified renderer internal static extern int InternalGetRendererInfo(IntPtr renderer, out RendererInfo info) Parameters renderer IntPtr The renderer info RendererInfo The info Returns int The int InternalGetRendererOutputSize(IntPtr, out int, out int) Sdl the get renderer output size using the specified renderer internal static extern int InternalGetRendererOutputSize(IntPtr renderer, out int w, out int h) Parameters renderer IntPtr The renderer w int The h int The Returns int The int InternalGetScancodeFromKey(KeyCodes) Sdl the get scancode from key using the specified key internal static extern SdlScancode InternalGetScancodeFromKey(KeyCodes key) Parameters key KeyCodes The key Returns SdlScancode The sdl scancode InternalGetScancodeFromName(string) Internals the sdl get scancode from name using the specified name internal static extern SdlScancode InternalGetScancodeFromName(string name) Parameters name string The name Returns SdlScancode The sdl scancode InternalGetScancodeName(SdlScancode) Internals the sdl get scancode name using the specified scancode internal static extern IntPtr InternalGetScancodeName(SdlScancode scancode) Parameters scancode SdlScancode The scancode Returns IntPtr The int ptr InternalGetSurfaceAlphaMod(IntPtr, out byte) Sdl the get surface alpha mod using the specified surface internal static extern int InternalGetSurfaceAlphaMod(IntPtr surface, out byte alpha) Parameters surface IntPtr The surface alpha byte The alpha Returns int The int InternalGetSurfaceBlendMode(IntPtr, out BlendModes) Sdl the get surface blend mode using the specified surface internal static extern int InternalGetSurfaceBlendMode(IntPtr surface, out BlendModes blendMode) Parameters surface IntPtr The surface blendMode BlendModes The blend mode Returns int The int InternalGetSurfaceColorMod(IntPtr, out byte, out byte, out byte) Sdl the get surface color mod using the specified surface internal static extern int InternalGetSurfaceColorMod(IntPtr surface, out byte r, out byte g, out byte b) Parameters surface IntPtr The surface r byte The g byte The b byte The Returns int The int InternalGetTextureAlphaMod(IntPtr, out byte) Sdl the get texture alpha mod using the specified texture internal static extern int InternalGetTextureAlphaMod(IntPtr texture, out byte alpha) Parameters texture IntPtr The texture alpha byte The alpha Returns int The int InternalGetTextureBlendMode(IntPtr, out BlendModes) Sdl the get texture blend mode using the specified texture internal static extern int InternalGetTextureBlendMode(IntPtr texture, out BlendModes blendMode) Parameters texture IntPtr The texture blendMode BlendModes The blend mode Returns int The int InternalGetTextureColorMod(IntPtr, out byte, out byte, out byte) Sdl the get texture color mod using the specified texture internal static extern int InternalGetTextureColorMod(IntPtr texture, out byte r, out byte g, out byte b) Parameters texture IntPtr The texture r byte The g byte The b byte The Returns int The int InternalGetTouchDevice(int) Sdl the get touch device using the specified index internal static extern long InternalGetTouchDevice(int index) Parameters index int The index Returns long The long InternalGetTouchDeviceType(long) Sdl the get touch device type using the specified touch id internal static extern TouchDeviceType InternalGetTouchDeviceType(long touchId) Parameters touchId long The touch id Returns TouchDeviceType The sdl touch device type InternalGetTouchFinger(long, int) Sdl the get touch finger using the specified touch id internal static extern IntPtr InternalGetTouchFinger(long touchId, int index) Parameters touchId long The touch id index int The index Returns IntPtr The int ptr InternalGetVideoDriver(int) Internals the sdl get video driver using the specified index internal static extern IntPtr InternalGetVideoDriver(int index) Parameters index int The index Returns IntPtr The int ptr InternalGetWindowBordersSize(IntPtr, out int, out int, out int, out int) Sdl the get window borders size using the specified window internal static extern int InternalGetWindowBordersSize(IntPtr window, out int top, out int left, out int bottom, out int right) Parameters window IntPtr The window top int The top left int The left bottom int The bottom right int The right Returns int The int InternalGetWindowBrightness(IntPtr) Sdl the get window brightness using the specified window internal static extern float InternalGetWindowBrightness(IntPtr window) Parameters window IntPtr The window Returns float The float InternalGetWindowData(IntPtr, string) Internals the sdl get window data using the specified window internal static extern IntPtr InternalGetWindowData(IntPtr window, string name) Parameters window IntPtr The window name string The name Returns IntPtr The int ptr InternalGetWindowDisplayIndex(IntPtr) Sdl the get window display index using the specified window internal static extern int InternalGetWindowDisplayIndex(IntPtr window) Parameters window IntPtr The window Returns int The int InternalGetWindowDisplayMode(IntPtr, out DisplayMode) Sdl the get window display mode using the specified window internal static extern int InternalGetWindowDisplayMode(IntPtr window, out DisplayMode mode) Parameters window IntPtr The window mode DisplayMode The mode Returns int The int InternalGetWindowFlags(IntPtr) Sdl the get window flags using the specified window internal static extern uint InternalGetWindowFlags(IntPtr window) Parameters window IntPtr The window Returns uint The uint InternalGetWindowFromID(uint) Sdl the get window from id using the specified id internal static extern IntPtr InternalGetWindowFromID(uint id) Parameters id uint The id Returns IntPtr The int ptr InternalGetWindowGammaRamp(IntPtr, ushort[], ushort[], ushort[]) Sdl the get window gamma ramp using the specified window internal static extern int InternalGetWindowGammaRamp(IntPtr window, ushort[] red, ushort[] green, ushort[] blue) Parameters window IntPtr The window red ushort[] The red green ushort[] The green blue ushort[] The blue Returns int The int InternalGetWindowGrab(IntPtr) Sdl the get window grab using the specified window internal static extern bool InternalGetWindowGrab(IntPtr window) Parameters window IntPtr The window Returns bool The sdl bool InternalGetWindowID(IntPtr) Sdl the get window id using the specified window internal static extern uint InternalGetWindowID(IntPtr window) Parameters window IntPtr The window Returns uint The uint InternalGetWindowMaximumSize(IntPtr, out int, out int) Sdl the get window maximum size using the specified window internal static extern void InternalGetWindowMaximumSize(IntPtr window, out int maxW, out int maxH) Parameters window IntPtr The window maxW int The max maxH int The max InternalGetWindowMinimumSize(IntPtr, out int, out int) Sdl the get window minimum size using the specified window internal static extern void InternalGetWindowMinimumSize(IntPtr window, out int minW, out int minH) Parameters window IntPtr The window minW int The min minH int The min InternalGetWindowOpacity(IntPtr, out float) Sdl the get window opacity using the specified window internal static extern int InternalGetWindowOpacity(IntPtr window, out float outOpacity) Parameters window IntPtr The window outOpacity float The out opacity Returns int The int InternalGetWindowPixelFormat(IntPtr) Sdl the get window pixel format using the specified window internal static extern uint InternalGetWindowPixelFormat(IntPtr window) Parameters window IntPtr The window Returns uint The uint InternalGetWindowPosition(IntPtr, out int, out int) Sdl the get window position using the specified window internal static extern void InternalGetWindowPosition(IntPtr window, out int x, out int y) Parameters window IntPtr The window x int The y int The InternalGetWindowSize(IntPtr, out int, out int) Sdl the get window size using the specified window internal static extern void InternalGetWindowSize(IntPtr window, out int w, out int h) Parameters window IntPtr The window w int The h int The InternalGetWindowSurface(IntPtr) Sdl the get window surface using the specified window internal static extern IntPtr InternalGetWindowSurface(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr InternalGetWindowTitle(IntPtr) Internals the sdl get window title using the specified window internal static extern IntPtr InternalGetWindowTitle(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr InternalGlBindTexture(IntPtr, out float, out float) Sdl the gl bind texture using the specified texture internal static extern int InternalGlBindTexture(IntPtr texture, out float texW, out float texH) Parameters texture IntPtr The texture texW float The tex w texH float The tex h Returns int The int InternalGlCreateContext(IntPtr) Sdl the gl create context using the specified window internal static extern IntPtr InternalGlCreateContext(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr InternalGlDeleteContext(IntPtr) Sdl the gl delete context using the specified context internal static extern void InternalGlDeleteContext(IntPtr context) Parameters context IntPtr The context InternalGlExtensionSupported(string) Internals the sdl gl extension supported using the specified extension internal static extern bool InternalGlExtensionSupported(string extension) Parameters extension string The extension Returns bool The sdl bool InternalGlGetAttribute(Attr, out int) Sdl the gl get attribute using the specified attr internal static extern int InternalGlGetAttribute(Attr attr, out int value) Parameters attr Attr The attr value int The value Returns int The int InternalGlGetCurrentContext() Sdl the gl get current context internal static extern IntPtr InternalGlGetCurrentContext() Returns IntPtr The int ptr InternalGlGetCurrentWindow() Sdl the gl get current window internal static extern IntPtr InternalGlGetCurrentWindow() Returns IntPtr The int ptr InternalGlGetDrawableSize(IntPtr, out int, out int) Sdl the gl get drawable size using the specified window internal static extern void InternalGlGetDrawableSize(IntPtr window, out int w, out int h) Parameters window IntPtr The window w int The h int The InternalGlGetProcAddress(string) Sdl the gl get proc address using the specified proc internal static extern IntPtr InternalGlGetProcAddress(string proc) Parameters proc string The proc Returns IntPtr The int ptr InternalGlGetSwapInterval() Sdl the gl get swap interval internal static extern int InternalGlGetSwapInterval() Returns int The int InternalGlLoadLibrary(string) Internals the sdl gl load library using the specified path internal static extern int InternalGlLoadLibrary(string path) Parameters path string The path Returns int The int InternalGlMakeCurrent(IntPtr, IntPtr) Sdl the gl make current using the specified window internal static extern int InternalGlMakeCurrent(IntPtr window, IntPtr context) Parameters window IntPtr The window context IntPtr The context Returns int The int InternalGlResetAttributes() Sdl the gl reset attributes internal static extern void InternalGlResetAttributes() InternalGlSetAttribute(Attr, int) Sdl the gl set attribute using the specified attr internal static extern int InternalGlSetAttribute(Attr attr, int value) Parameters attr Attr The attr value int The value Returns int The int InternalGlSetSwapInterval(int) Sdl the gl set swap interval using the specified interval internal static extern int InternalGlSetSwapInterval(int interval) Parameters interval int The interval Returns int The int InternalGlSwapWindow(IntPtr) Sdl the gl swap window using the specified window internal static extern void InternalGlSwapWindow(IntPtr window) Parameters window IntPtr The window InternalGlUnbindTexture(IntPtr) Sdl the gl unbind texture using the specified texture internal static extern int InternalGlUnbindTexture(IntPtr texture) Parameters texture IntPtr The texture Returns int The int InternalHasClipboardText() Sdl the has clipboard text internal static extern bool InternalHasClipboardText() Returns bool The sdl bool InternalHasColorKey(IntPtr) Sdl the has color key using the specified surface internal static extern bool InternalHasColorKey(IntPtr surface) Parameters surface IntPtr The surface Returns bool The sdl bool InternalHasEvent(EventType) Sdl the has event using the specified type internal static extern bool InternalHasEvent(EventType type) Parameters type EventType The type Returns bool The sdl bool InternalHasEvents(EventType, EventType) Sdl the has events using the specified min type internal static extern bool InternalHasEvents(EventType minType, EventType maxType) Parameters minType EventType The min type maxType EventType The max type Returns bool The sdl bool InternalHasScreenKeyboardSupport() Sdl the has screen keyboard support internal static extern bool InternalHasScreenKeyboardSupport() Returns bool The sdl bool InternalHideWindow(IntPtr) Sdl the hide window using the specified window internal static extern void InternalHideWindow(IntPtr window) Parameters window IntPtr The window InternalInit(InitSettings) Sdl the init using the specified flags internal static extern int InternalInit(InitSettings flags) Parameters flags InitSettings The flags Returns int The int InternalIsGameController(int) Sdl the is game controller using the specified joystick index internal static extern bool InternalIsGameController(int joystickIndex) Parameters joystickIndex int The joystick index Returns bool The sdl bool InternalIsScreenKeyboardShown(IntPtr) Sdl the is screen keyboard shown using the specified window internal static extern bool InternalIsScreenKeyboardShown(IntPtr window) Parameters window IntPtr The window Returns bool The sdl bool InternalIsTextInputActive() Sdl the is text input active internal static extern bool InternalIsTextInputActive() Returns bool The sdl bool InternalJoystickClose(IntPtr) Sdl the joystick close using the specified joystick internal static extern void InternalJoystickClose(IntPtr joystick) Parameters joystick IntPtr The joystick InternalJoystickCurrentPowerLevel(IntPtr) Sdl the joystick current power level using the specified joystick internal static extern JoystickPowerLevel InternalJoystickCurrentPowerLevel(IntPtr joystick) Parameters joystick IntPtr The joystick Returns JoystickPowerLevel The sdl joystick power level InternalJoystickEventState(int) Sdl the joystick event state using the specified state internal static extern int InternalJoystickEventState(int state) Parameters state int The state Returns int The int InternalJoystickFromInstanceID(int) Sdl the joystick from instance id using the specified instance id internal static extern IntPtr InternalJoystickFromInstanceID(int instanceId) Parameters instanceId int The instance id Returns IntPtr The int ptr InternalJoystickGetAttached(IntPtr) Sdl the joystick get attached using the specified joystick internal static extern bool InternalJoystickGetAttached(IntPtr joystick) Parameters joystick IntPtr The joystick Returns bool The sdl bool InternalJoystickGetAxis(IntPtr, int) Sdl the joystick get axis using the specified joystick internal static extern short InternalJoystickGetAxis(IntPtr joystick, int axis) Parameters joystick IntPtr The joystick axis int The axis Returns short The short InternalJoystickGetAxisInitialState(IntPtr, int, out ushort) Sdl the joystick get axis initial state using the specified joystick internal static extern bool InternalJoystickGetAxisInitialState(IntPtr joystick, int axis, out ushort state) Parameters joystick IntPtr The joystick axis int The axis state ushort The state Returns bool The sdl bool InternalJoystickGetBall(IntPtr, int, out int, out int) Sdl the joystick get ball using the specified joystick internal static extern int InternalJoystickGetBall(IntPtr joystick, int ball, out int dx, out int dy) Parameters joystick IntPtr The joystick ball int The ball dx int The dx dy int The dy Returns int The int InternalJoystickGetButton(IntPtr, int) Sdl the joystick get button using the specified joystick internal static extern byte InternalJoystickGetButton(IntPtr joystick, int button) Parameters joystick IntPtr The joystick button int The button Returns byte The byte InternalJoystickGetDeviceGUID(int) Sdl the joystick get device guid using the specified device index internal static extern Guid InternalJoystickGetDeviceGUID(int deviceIndex) Parameters deviceIndex int The device index Returns Guid The guid InternalJoystickGetDeviceInstanceID(int) Sdl the joystick get device instance id using the specified device index internal static extern int InternalJoystickGetDeviceInstanceID(int deviceIndex) Parameters deviceIndex int The device index Returns int The int InternalJoystickGetDeviceProduct(int) Sdl the joystick get device product using the specified device index internal static extern ushort InternalJoystickGetDeviceProduct(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort InternalJoystickGetDeviceProductVersion(int) Sdl the joystick get device product version using the specified device index internal static extern ushort InternalJoystickGetDeviceProductVersion(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort InternalJoystickGetDeviceType(int) Sdl the joystick get device type using the specified device index internal static extern JoystickType InternalJoystickGetDeviceType(int deviceIndex) Parameters deviceIndex int The device index Returns JoystickType The sdl joystick type InternalJoystickGetDeviceVendor(int) Sdl the joystick get device vendor using the specified device index internal static extern ushort InternalJoystickGetDeviceVendor(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort InternalJoystickGetGUID(IntPtr) Sdl the joystick get guid using the specified joystick internal static extern Guid InternalJoystickGetGUID(IntPtr joystick) Parameters joystick IntPtr The joystick Returns Guid The guid InternalJoystickGetGUIDFromString(string) Internals the sdl joystick get guid from string using the specified pch guid internal static extern Guid InternalJoystickGetGUIDFromString(string pchGuid) Parameters pchGuid string The pch guid Returns Guid The guid InternalJoystickGetGUIDString(Guid, byte[], int) Sdl the joystick get guid string using the specified guid internal static extern void InternalJoystickGetGUIDString(Guid guid, byte[] pszGuid, int cbGuid) Parameters guid Guid The guid pszGuid byte[] The psz guid cbGuid int The cb guid InternalJoystickGetHat(IntPtr, int) Sdl the joystick get hat using the specified joystick internal static extern byte InternalJoystickGetHat(IntPtr joystick, int hat) Parameters joystick IntPtr The joystick hat int The hat Returns byte The byte InternalJoystickGetProduct(IntPtr) Sdl the joystick get product using the specified joystick internal static extern ushort InternalJoystickGetProduct(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort InternalJoystickGetProductVersion(IntPtr) Sdl the joystick get product version using the specified joystick internal static extern ushort InternalJoystickGetProductVersion(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort InternalJoystickGetType(IntPtr) Sdl the joystick get type using the specified joystick internal static extern JoystickType InternalJoystickGetType(IntPtr joystick) Parameters joystick IntPtr The joystick Returns JoystickType The sdl joystick type InternalJoystickGetVendor(IntPtr) Sdl the joystick get vendor using the specified joystick internal static extern ushort InternalJoystickGetVendor(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort InternalJoystickInstanceID(IntPtr) Sdl the joystick instance id using the specified joystick internal static extern int InternalJoystickInstanceID(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickIsHaptic(IntPtr) Sdl the joystick is haptic using the specified joystick internal static extern int InternalJoystickIsHaptic(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickName(IntPtr) Internals the sdl joystick name using the specified joystick internal static extern IntPtr InternalJoystickName(IntPtr joystick) Parameters joystick IntPtr The joystick Returns IntPtr The int ptr InternalJoystickNameForIndex(int) Internals the sdl joystick name for index using the specified device index internal static extern IntPtr InternalJoystickNameForIndex(int deviceIndex) Parameters deviceIndex int The device index Returns IntPtr The int ptr InternalJoystickNumAxes(IntPtr) Sdl the joystick num axes using the specified joystick internal static extern int InternalJoystickNumAxes(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickNumBalls(IntPtr) Sdl the joystick num balls using the specified joystick internal static extern int InternalJoystickNumBalls(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickNumButtons(IntPtr) Sdl the joystick num buttons using the specified joystick internal static extern int InternalJoystickNumButtons(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickNumHats(IntPtr) Sdl the joystick num hats using the specified joystick internal static extern int InternalJoystickNumHats(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int InternalJoystickOpen(int) Sdl the joystick open using the specified device index internal static extern IntPtr InternalJoystickOpen(int deviceIndex) Parameters deviceIndex int The device index Returns IntPtr The int ptr InternalJoystickRumble(IntPtr, ushort, ushort, uint) Sdl the joystick rumble using the specified joystick internal static extern int InternalJoystickRumble(IntPtr joystick, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs) Parameters joystick IntPtr The joystick lowFrequencyRumble ushort The low frequency rumble highFrequencyRumble ushort The high frequency rumble durationMs uint The duration ms Returns int The int InternalJoystickUpdate() Sdl the joystick update internal static extern void InternalJoystickUpdate() InternalLoadBMP_RW(IntPtr, int) Internals the sdl load bmp rw using the specified src internal static extern IntPtr InternalLoadBMP_RW(IntPtr src, int freeSrc) Parameters src IntPtr The src freeSrc int The free src Returns IntPtr The int ptr InternalLoadFile(string, out IntPtr) Internals the sdl load file using the specified file internal static extern IntPtr InternalLoadFile(string file, out IntPtr dataSize) Parameters file string The file dataSize IntPtr The data size Returns IntPtr The int ptr InternalLoadWAV_RW(IntPtr, int, out AudioSpec, out IntPtr, out uint) Internals the sdl load wav rw using the specified src internal static extern IntPtr InternalLoadWAV_RW(IntPtr src, int freeSrc, out AudioSpec spec, out IntPtr audioBuf, out uint audioLen) Parameters src IntPtr The src freeSrc int The free src spec AudioSpec The spec audioBuf IntPtr The audio buf audioLen uint The audio len Returns IntPtr The int ptr InternalLockAudioDevice(uint) Sdl the lock audio device using the specified dev internal static extern void InternalLockAudioDevice(uint dev) Parameters dev uint The dev InternalLockJoysticks() Sdl the lock joysticks internal static extern void InternalLockJoysticks() InternalLockTexture(IntPtr, ref RectangleI, out IntPtr, out int) Sdl the lock texture using the specified texture internal static extern int InternalLockTexture(IntPtr texture, ref RectangleI rect, out IntPtr pixels, out int pitch) Parameters texture IntPtr The texture rect RectangleI The rect pixels IntPtr The pixels pitch int The pitch Returns int The int InternalMaximizeWindow(IntPtr) Sdl the maximize window using the specified window internal static extern void InternalMaximizeWindow(IntPtr window) Parameters window IntPtr The window InternalMinimizeWindow(IntPtr) Sdl the minimize window using the specified window internal static extern void InternalMinimizeWindow(IntPtr window) Parameters window IntPtr The window InternalMixAudio(byte[], byte[], uint, int) Sdl the mix audio using the specified dst internal static extern void InternalMixAudio(byte[] dst, byte[] src, uint len, int volume) Parameters dst byte[] The dst src byte[] The src len uint The len volume int The volume InternalMixAudioFormat(IntPtr, IntPtr, ushort, uint, int) Sdl the mix audio format using the specified dst internal static extern void InternalMixAudioFormat(IntPtr dst, IntPtr src, ushort format, uint len, int volume) Parameters dst IntPtr The dst src IntPtr The src format ushort The format len uint The len volume int The volume InternalMixAudioFormat(byte[], byte[], ushort, uint, int) Sdl the mix audio format using the specified dst internal static extern void InternalMixAudioFormat(byte[] dst, byte[] src, ushort format, uint len, int volume) Parameters dst byte[] The dst src byte[] The src format ushort The format len uint The len volume int The volume InternalMouseIsHaptic() Sdl the mouse is haptic internal static extern int InternalMouseIsHaptic() Returns int The int InternalNewAudioStream(ushort, byte, int, ushort, byte, int) Sdl the new audio stream using the specified src format internal static extern IntPtr InternalNewAudioStream(ushort srcFormat, byte srcChannels, int srcRate, ushort dstFormat, byte dstChannels, int dstRate) Parameters srcFormat ushort The src format srcChannels byte The src channels srcRate int The src rate dstFormat ushort The dst format dstChannels byte The dst channels dstRate int The dst rate Returns IntPtr The int ptr InternalNumHaptics() Sdl the num haptics internal static extern int InternalNumHaptics() Returns int The int InternalNumJoysticks() Sdl the num joysticks internal static extern int InternalNumJoysticks() Returns int The int InternalOpenAudioDevice(IntPtr, int, ref AudioSpec, out AudioSpec, int) Sdl the open audio device using the specified device internal static extern uint InternalOpenAudioDevice(IntPtr device, int isCapture, ref AudioSpec desired, out AudioSpec obtained, int allowedChanges) Parameters device IntPtr The device isCapture int The is capture desired AudioSpec The desired obtained AudioSpec The obtained allowedChanges int The allowed changes Returns uint The uint InternalOpenAudioDevice(string, int, ref AudioSpec, out AudioSpec, int) Internals the sdl open audio device using the specified device internal static extern uint InternalOpenAudioDevice(string device, int isCapture, ref AudioSpec desired, out AudioSpec obtained, int allowedChanges) Parameters device string The device isCapture int The is capture desired AudioSpec The desired obtained AudioSpec The obtained allowedChanges int The allowed changes Returns uint The uint InternalPauseAudio(int) Sdl the pause audio using the specified pause on internal static extern void InternalPauseAudio(int pauseOn) Parameters pauseOn int The pause on InternalPauseAudioDevice(uint, int) Sdl the pause audio device using the specified dev internal static extern void InternalPauseAudioDevice(uint dev, int pauseOn) Parameters dev uint The dev pauseOn int The pause on InternalPeepEvents(Event[], int, EventAction, EventType, EventType) Sdl the peep events using the specified events internal static extern int InternalPeepEvents(Event[] events, int numEvents, EventAction action, EventType minType, EventType maxType) Parameters events Event[] The events numEvents int The num events action EventAction The action minType EventType The min type maxType EventType The max type Returns int The int InternalPixelFormatEnumToMasks(uint, out int, out uint, out uint, out uint, out uint) Sdl the pixel format enum to masks using the specified format internal static extern bool InternalPixelFormatEnumToMasks(uint format, out int bpp, out uint rMask, out uint gMask, out uint bMask, out uint aMask) Parameters format uint The format bpp int The bpp rMask uint The r mask gMask uint The g mask bMask uint The b mask aMask uint The a mask Returns bool The sdl bool InternalPollEvent(out Event) Sdl the poll event using the specified event internal static extern int InternalPollEvent(out Event sdlEvent) Parameters sdlEvent Event The event Returns int The int InternalPushEvent(ref Event) Sdl the push event using the specified event internal static extern int InternalPushEvent(ref Event sdlEvent) Parameters sdlEvent Event The event Returns int The int InternalQueryTexture(IntPtr, out uint, out int, out int, out int) Sdl the query texture using the specified texture internal static extern int InternalQueryTexture(IntPtr texture, out uint format, out int access, out int w, out int h) Parameters texture IntPtr The texture format uint The format access int The access w int The h int The Returns int The int InternalQueueAudio(int, byte[], uint) Internals the queue audio using the specified device id internal static extern void InternalQueueAudio(int deviceId, byte[] audioData, uint wavLength) Parameters deviceId int The device id audioData byte[] The audio data wavLength uint The wav length InternalQuit() Sdl the quit internal static extern void InternalQuit() InternalRWFromFile(string, string) Internals the sdl rw from file using the specified file internal static extern IntPtr InternalRWFromFile(string file, string mode) Parameters file string The file mode string The mode Returns IntPtr The int ptr InternalRaiseWindow(IntPtr) Sdl the raise window using the specified window internal static extern void InternalRaiseWindow(IntPtr window) Parameters window IntPtr The window InternalRegisterEvents(int) Sdl the register events using the specified num events internal static extern uint InternalRegisterEvents(int numEvents) Parameters numEvents int The num events Returns uint The int 32 InternalRenderClear(IntPtr) Sdl the render clear using the specified renderer internal static extern int InternalRenderClear(IntPtr renderer) Parameters renderer IntPtr The renderer Returns int The int InternalRenderCopy(IntPtr, IntPtr, ref RectangleI, ref RectangleI) Sdl the render copy using the specified renderer internal static extern int InternalRenderCopy(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI The dst rect Returns int The int InternalRenderCopy(IntPtr, IntPtr, IntPtr, ref RectangleI) Sdl the render copy using the specified renderer internal static extern int InternalRenderCopy(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect Returns int The int InternalRenderCopy(IntPtr, IntPtr, ref RectangleI, IntPtr) Sdl the render copy using the specified renderer internal static extern int InternalRenderCopy(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect Returns int The int InternalRenderCopy(IntPtr, IntPtr, IntPtr, IntPtr) Sdl the render copy using the specified renderer internal static extern int InternalRenderCopy(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleI, double, ref PointI, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleF, double, ref PointF, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleI, double, ref PointI, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, ref RectangleI, IntPtr, double, ref PointI, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleI, double, IntPtr, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, IntPtr, IntPtr, double, ref PointI, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleI, double, IntPtr, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, ref RectangleI, IntPtr, double, IntPtr, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, IntPtr, IntPtr, double, IntPtr, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleF, double, ref PointF, RendererFlips) Sdl the render copy ex using the specified renderer internal static extern int InternalRenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, ref RectangleI, IntPtr, double, ref PointF, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, ref RectangleI, ref RectangleF, double, IntPtr, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, IntPtr, IntPtr, double, ref PointF, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, IntPtr, ref RectangleF, double, IntPtr, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, ref RectangleI, IntPtr, double, IntPtr, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyExF(IntPtr, IntPtr, IntPtr, IntPtr, double, IntPtr, RendererFlips) Sdl the render copy ex f using the specified renderer internal static extern int InternalRenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int InternalRenderCopyF(IntPtr, IntPtr, ref RectangleI, ref RectangleF) Sdl the render copy f using the specified renderer internal static extern int InternalRenderCopyF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect Returns int The int InternalRenderCopyF(IntPtr, IntPtr, IntPtr, ref RectangleF) Sdl the render copy f using the specified renderer internal static extern int InternalRenderCopyF(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect Returns int The int InternalRenderCopyF(IntPtr, IntPtr, ref RectangleI, IntPtr) Sdl the render copy f using the specified renderer internal static extern int InternalRenderCopyF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect Returns int The int InternalRenderCopyF(IntPtr, IntPtr, IntPtr, IntPtr) Sdl the render copy f using the specified renderer internal static extern int InternalRenderCopyF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect Returns int The int InternalRenderDrawLine(IntPtr, int, int, int, int) Sdl the render draw line using the specified renderer internal static extern int InternalRenderDrawLine(IntPtr renderer, int x1, int y1, int x2, int y2) Parameters renderer IntPtr The renderer x1 int The y1 int The x2 int The y2 int The Returns int The int InternalRenderDrawLineF(IntPtr, float, float, float, float) Sdl the render draw line f using the specified renderer internal static extern int InternalRenderDrawLineF(IntPtr renderer, float x1, float y1, float x2, float y2) Parameters renderer IntPtr The renderer x1 float The y1 float The x2 float The y2 float The Returns int The int InternalRenderDrawLines(IntPtr, PointI[], int) Sdl the render draw lines using the specified renderer internal static extern int InternalRenderDrawLines(IntPtr renderer, PointI[] points, int count) Parameters renderer IntPtr The renderer points PointI[] The points count int The count Returns int The int InternalRenderDrawLinesF(IntPtr, PointF[], int) Sdl the render draw lines f using the specified renderer internal static extern int InternalRenderDrawLinesF(IntPtr renderer, PointF[] points, int count) Parameters renderer IntPtr The renderer points PointF[] The points count int The count Returns int The int InternalRenderDrawPoint(IntPtr, int, int) Sdl the render draw point using the specified renderer internal static extern int InternalRenderDrawPoint(IntPtr renderer, int x, int y) Parameters renderer IntPtr The renderer x int The y int The Returns int The int InternalRenderDrawPointF(IntPtr, float, float) Sdl the render draw point f using the specified renderer internal static extern int InternalRenderDrawPointF(IntPtr renderer, float x, float y) Parameters renderer IntPtr The renderer x float The y float The Returns int The int InternalRenderDrawPoints(IntPtr, PointI[], int) Sdl the render draw points using the specified renderer internal static extern int InternalRenderDrawPoints(IntPtr renderer, PointI[] points, int count) Parameters renderer IntPtr The renderer points PointI[] The points count int The count Returns int The int InternalRenderDrawPointsF(IntPtr, PointF[], int) Sdl the render draw points f using the specified renderer internal static extern int InternalRenderDrawPointsF(IntPtr renderer, PointF[] points, int count) Parameters renderer IntPtr The renderer points PointF[] The points count int The count Returns int The int InternalRenderDrawRect(IntPtr, ref RectangleI) Sdl the render draw rect using the specified renderer internal static extern int InternalRenderDrawRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int InternalRenderDrawRect(IntPtr, IntPtr) Sdl the render draw rect using the specified renderer internal static extern int InternalRenderDrawRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int InternalRenderDrawRectF(IntPtr, ref RectangleF) Sdl the render draw rect f using the specified renderer internal static extern int InternalRenderDrawRectF(IntPtr renderer, ref RectangleF rect) Parameters renderer IntPtr The renderer rect RectangleF The rect Returns int The int InternalRenderDrawRectF(IntPtr, IntPtr) Sdl the render draw rect f using the specified renderer internal static extern int InternalRenderDrawRectF(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int InternalRenderDrawRects(IntPtr, RectangleI[], int) Sdl the render draw rects using the specified renderer internal static extern int InternalRenderDrawRects(IntPtr renderer, RectangleI[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleI[] The rects count int The count Returns int The int InternalRenderDrawRectsF(IntPtr, RectangleF[], int) Sdl the render draw rects f using the specified renderer internal static extern int InternalRenderDrawRectsF(IntPtr renderer, RectangleF[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleF[] The rects count int The count Returns int The int InternalRenderFillRect(IntPtr, ref RectangleI) Sdl the render fill rect using the specified renderer internal static extern int InternalRenderFillRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int InternalRenderFillRect(IntPtr, IntPtr) Sdl the render fill rect using the specified renderer internal static extern int InternalRenderFillRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int InternalRenderFillRectF(IntPtr, RectangleF) Sdl the render fill rect f using the specified renderer internal static extern int InternalRenderFillRectF(IntPtr renderer, RectangleF rect) Parameters renderer IntPtr The renderer rect RectangleF The rect Returns int The int InternalRenderFillRectF(IntPtr, IntPtr) Sdl the render fill rect f using the specified renderer internal static extern int InternalRenderFillRectF(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int InternalRenderFillRects(IntPtr, RectangleI[], int) Sdl the render fill rects using the specified renderer internal static extern int InternalRenderFillRects(IntPtr renderer, RectangleI[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleI[] The rects count int The count Returns int The int InternalRenderFillRectsF(IntPtr, RectangleF[], int) Sdl the render fill rects f using the specified renderer internal static extern int InternalRenderFillRectsF(IntPtr renderer, RectangleF[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleF[] The rects count int The count Returns int The int InternalRenderGetClipRect(IntPtr, out RectangleI) Sdl the render get clip rect using the specified renderer internal static extern void InternalRenderGetClipRect(IntPtr renderer, out RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect InternalRenderGetLogicalSize(IntPtr, out int, out int) Sdl the render get logical size using the specified renderer internal static extern void InternalRenderGetLogicalSize(IntPtr renderer, out int w, out int h) Parameters renderer IntPtr The renderer w int The h int The InternalRenderGetScale(IntPtr, out float, out float) Sdl the render get scale using the specified renderer internal static extern void InternalRenderGetScale(IntPtr renderer, out float scaleX, out float scaleY) Parameters renderer IntPtr The renderer scaleX float The scale scaleY float The scale InternalRenderGetViewport(IntPtr, out RectangleI) Sdl the render get viewport using the specified renderer internal static extern int InternalRenderGetViewport(IntPtr renderer, out RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int InternalRenderIsClipEnabled(IntPtr) Sdl the render is clip enabled using the specified renderer internal static extern bool InternalRenderIsClipEnabled(IntPtr renderer) Parameters renderer IntPtr The renderer Returns bool The sdl bool InternalRenderPresent(IntPtr) Sdl the render present using the specified renderer internal static extern void InternalRenderPresent(IntPtr renderer) Parameters renderer IntPtr The renderer InternalRenderReadPixels(IntPtr, ref RectangleI, uint, IntPtr, int) Sdl the render read pixels using the specified renderer internal static extern int InternalRenderReadPixels(IntPtr renderer, ref RectangleI rect, uint format, IntPtr pixels, int pitch) Parameters renderer IntPtr The renderer rect RectangleI The rect format uint The format pixels IntPtr The pixels pitch int The pitch Returns int The int InternalRenderSetClipRect(IntPtr, ref RectangleI) Sdl the render set clip rect using the specified renderer internal static extern int InternalRenderSetClipRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int InternalRenderSetClipRect(IntPtr, IntPtr) Sdl the render set clip rect using the specified renderer internal static extern int InternalRenderSetClipRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int InternalRenderSetIntegerScale(IntPtr, bool) Sdl the render set integer scale using the specified renderer internal static extern int InternalRenderSetIntegerScale(IntPtr renderer, bool enable) Parameters renderer IntPtr The renderer enable bool The enable Returns int The int InternalRenderSetLogicalSize(IntPtr, int, int) Sdl the render set logical size using the specified renderer internal static extern int InternalRenderSetLogicalSize(IntPtr renderer, int w, int h) Parameters renderer IntPtr The renderer w int The h int The Returns int The int InternalRenderSetScale(IntPtr, float, float) Sdl the render set scale using the specified renderer internal static extern int InternalRenderSetScale(IntPtr renderer, float scaleX, float scaleY) Parameters renderer IntPtr The renderer scaleX float The scale scaleY float The scale Returns int The int InternalRenderSetViewportWithRef(IntPtr, ref RectangleI) Sdl the render set viewport using the specified renderer internal static extern int InternalRenderSetViewportWithRef(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int InternalRenderTargetSupported(IntPtr) Sdl the render target supported using the specified renderer internal static extern bool InternalRenderTargetSupported(IntPtr renderer) Parameters renderer IntPtr The renderer Returns bool The sdl bool InternalRestoreWindow(IntPtr) Sdl the restore window using the specified window internal static extern void InternalRestoreWindow(IntPtr window) Parameters window IntPtr The window InternalSetClipRect(IntPtr, ref RectangleI) Sdl the set clip rect using the specified surface internal static extern bool InternalSetClipRect(IntPtr surface, ref RectangleI rect) Parameters surface IntPtr The surface rect RectangleI The rect Returns bool The sdl bool InternalSetClipboardText(string) Internals the sdl set clipboard text using the specified text internal static extern int InternalSetClipboardText(string text) Parameters text string The text Returns int The int InternalSetColorKey(IntPtr, int, uint) Sdl the set color key using the specified surface internal static extern int InternalSetColorKey(IntPtr surface, int flag, uint key) Parameters surface IntPtr The surface flag int The flag key uint The key Returns int The int InternalSetCursor(IntPtr) Sdl the set cursor using the specified cursor internal static extern void InternalSetCursor(IntPtr cursor) Parameters cursor IntPtr The cursor InternalSetError(string) Internals the sdl set error using the specified fmt and arg list internal static extern void InternalSetError(string fmtAndArgList) Parameters fmtAndArgList string The fmt and arg list InternalSetEventFilter(SdlEventFilter, IntPtr) Sdl the set event filter using the specified filter internal static extern void InternalSetEventFilter(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata InternalSetHint(string, string) Internals the sdl set hint using the specified name internal static extern bool InternalSetHint(string name, string value) Parameters name string The name value string The value Returns bool The sdl bool InternalSetHintWithPriority(string, string, HintPriority) Internals the sdl set hint with priority using the specified name internal static extern bool InternalSetHintWithPriority(string name, string value, HintPriority priority) Parameters name string The name value string The value priority HintPriority The priority Returns bool The sdl bool InternalSetModState(KeyMods) Sdl the set mod state using the specified mod state internal static extern void InternalSetModState(KeyMods modState) Parameters modState KeyMods The mod state InternalSetPaletteColors(IntPtr, Color[], int, int) Sdl the set palette colors using the specified palette internal static extern int InternalSetPaletteColors(IntPtr palette, Color[] colors, int firstColor, int nColors) Parameters palette IntPtr The palette colors Color[] The colors firstColor int The first color nColors int The n colors Returns int The int InternalSetPixelFormatPalette(IntPtr, IntPtr) Sdl the set pixel format palette using the specified format internal static extern int InternalSetPixelFormatPalette(IntPtr format, IntPtr palette) Parameters format IntPtr The format palette IntPtr The palette Returns int The int InternalSetRelativeMouseMode(bool) Sdl the set relative mouse mode using the specified enabled internal static extern int InternalSetRelativeMouseMode(bool enabled) Parameters enabled bool The enabled Returns int The int InternalSetRenderDrawBlendMode(IntPtr, BlendModes) Sdl the set render draw blend mode using the specified renderer internal static extern int InternalSetRenderDrawBlendMode(IntPtr renderer, BlendModes blendMode) Parameters renderer IntPtr The renderer blendMode BlendModes The blend mode Returns int The int InternalSetRenderDrawColor(IntPtr, byte, byte, byte, byte) Sdl the set render draw color using the specified renderer internal static extern int InternalSetRenderDrawColor(IntPtr renderer, byte r, byte g, byte b, byte a) Parameters renderer IntPtr The renderer r byte The g byte The b byte The a byte The Returns int The int InternalSetRenderTarget(IntPtr, IntPtr) Sdl the set render target using the specified renderer internal static extern int InternalSetRenderTarget(IntPtr renderer, IntPtr texture) Parameters renderer IntPtr The renderer texture IntPtr The texture Returns int The int InternalSetSurfaceAlphaMod(IntPtr, byte) Sdl the set surface alpha mod using the specified surface internal static extern int InternalSetSurfaceAlphaMod(IntPtr surface, byte alpha) Parameters surface IntPtr The surface alpha byte The alpha Returns int The int InternalSetSurfaceBlendMode(IntPtr, BlendModes) Sdl the set surface blend mode using the specified surface internal static extern int InternalSetSurfaceBlendMode(IntPtr surface, BlendModes blendMode) Parameters surface IntPtr The surface blendMode BlendModes The blend mode Returns int The int InternalSetSurfaceColorMod(IntPtr, byte, byte, byte) Sdl the set surface color mod using the specified surface internal static extern int InternalSetSurfaceColorMod(IntPtr surface, byte r, byte g, byte b) Parameters surface IntPtr The surface r byte The g byte The b byte The Returns int The int InternalSetSurfacePalette(IntPtr, IntPtr) Sdl the set surface palette using the specified surface internal static extern int InternalSetSurfacePalette(IntPtr surface, IntPtr palette) Parameters surface IntPtr The surface palette IntPtr The palette Returns int The int InternalSetTextInputRect(ref RectangleI) Sdl the set text input rect using the specified rect internal static extern void InternalSetTextInputRect(ref RectangleI rect) Parameters rect RectangleI The rect InternalSetTextureAlphaMod(IntPtr, byte) Sdl the set texture alpha mod using the specified texture internal static extern int InternalSetTextureAlphaMod(IntPtr texture, byte alpha) Parameters texture IntPtr The texture alpha byte The alpha Returns int The int InternalSetTextureBlendMode(IntPtr, BlendModes) Sdl the set texture blend mode using the specified texture internal static extern int InternalSetTextureBlendMode(IntPtr texture, BlendModes blendMode) Parameters texture IntPtr The texture blendMode BlendModes The blend mode Returns int The int InternalSetTextureColorMod(IntPtr, byte, byte, byte) Sdl the set texture color mod using the specified texture internal static extern int InternalSetTextureColorMod(IntPtr texture, byte r, byte g, byte b) Parameters texture IntPtr The texture r byte The g byte The b byte The Returns int The int InternalSetWindowBordered(IntPtr, bool) Sdl the set window bordered using the specified window internal static extern void InternalSetWindowBordered(IntPtr window, bool bordered) Parameters window IntPtr The window bordered bool The bordered InternalSetWindowBrightness(IntPtr, float) Sdl the set window brightness using the specified window internal static extern int InternalSetWindowBrightness(IntPtr window, float brightness) Parameters window IntPtr The window brightness float The brightness Returns int The int InternalSetWindowData(IntPtr, string, IntPtr) Internals the sdl set window data using the specified window internal static extern IntPtr InternalSetWindowData(IntPtr window, string name, IntPtr userdata) Parameters window IntPtr The window name string The name userdata IntPtr The userdata Returns IntPtr The int ptr InternalSetWindowDisplayMode(IntPtr, ref DisplayMode) Sdl the set window display mode using the specified window internal static extern int InternalSetWindowDisplayMode(IntPtr window, ref DisplayMode mode) Parameters window IntPtr The window mode DisplayMode The mode Returns int The int InternalSetWindowDisplayMode(IntPtr, IntPtr) Sdl the set window display mode using the specified window internal static extern int InternalSetWindowDisplayMode(IntPtr window, IntPtr mode) Parameters window IntPtr The window mode IntPtr The mode Returns int The int InternalSetWindowFullscreen(IntPtr, uint) Sdl the set window fullscreen using the specified window internal static extern int InternalSetWindowFullscreen(IntPtr window, uint flags) Parameters window IntPtr The window flags uint The flags Returns int The int InternalSetWindowGammaRamp(IntPtr, ushort[], ushort[], ushort[]) Sdl the set window gamma ramp using the specified window internal static extern int InternalSetWindowGammaRamp(IntPtr window, ushort[] red, ushort[] green, ushort[] blue) Parameters window IntPtr The window red ushort[] The red green ushort[] The green blue ushort[] The blue Returns int The int InternalSetWindowGrab(IntPtr, bool) Sdl the set window grab using the specified window internal static extern void InternalSetWindowGrab(IntPtr window, bool grabbed) Parameters window IntPtr The window grabbed bool The grabbed InternalSetWindowHitTest(IntPtr, SdlHitTest, IntPtr) Sdl the set window hit test using the specified window internal static extern int InternalSetWindowHitTest(IntPtr window, SdlHitTest callback, IntPtr callbackData) Parameters window IntPtr The window callback SdlHitTest The callback callbackData IntPtr The callback data Returns int The int InternalSetWindowIcon(IntPtr, IntPtr) Sdl the set window icon using the specified window internal static extern void InternalSetWindowIcon(IntPtr window, IntPtr icon) Parameters window IntPtr The window icon IntPtr The icon InternalSetWindowInputFocus(IntPtr) Sdl the set window input focus using the specified window internal static extern int InternalSetWindowInputFocus(IntPtr window) Parameters window IntPtr The window Returns int The int InternalSetWindowMaximumSize(IntPtr, int, int) Sdl the set window maximum size using the specified window internal static extern void InternalSetWindowMaximumSize(IntPtr window, int maxW, int maxH) Parameters window IntPtr The window maxW int The max maxH int The max InternalSetWindowMinimumSize(IntPtr, int, int) Sdl the set window minimum size using the specified window internal static extern void InternalSetWindowMinimumSize(IntPtr window, int minW, int minH) Parameters window IntPtr The window minW int The min minH int The min InternalSetWindowModalFor(IntPtr, IntPtr) Sdl the set window modal for using the specified modal window internal static extern int InternalSetWindowModalFor(IntPtr modalWindow, IntPtr parentWindow) Parameters modalWindow IntPtr The modal window parentWindow IntPtr The parent window Returns int The int InternalSetWindowOpacity(IntPtr, float) Sdl the set window opacity using the specified window internal static extern int InternalSetWindowOpacity(IntPtr window, float opacity) Parameters window IntPtr The window opacity float The opacity Returns int The int InternalSetWindowPosition(IntPtr, int, int) Sdl the set window position using the specified window internal static extern void InternalSetWindowPosition(IntPtr window, int x, int y) Parameters window IntPtr The window x int The y int The InternalSetWindowResizable(IntPtr, bool) Sdl the set window resizable using the specified window internal static extern void InternalSetWindowResizable(IntPtr window, bool resizable) Parameters window IntPtr The window resizable bool The resizable InternalSetWindowSize(IntPtr, int, int) Sdl the set window size using the specified window internal static extern void InternalSetWindowSize(IntPtr window, int w, int h) Parameters window IntPtr The window w int The h int The InternalSetWindowTitle(IntPtr, string) Internals the sdl set window title using the specified window internal static extern void InternalSetWindowTitle(IntPtr window, string title) Parameters window IntPtr The window title string The title InternalShowCursor(int) Sdl the show cursor using the specified toggle internal static extern int InternalShowCursor(int toggle) Parameters toggle int The toggle Returns int The int InternalShowWindow(IntPtr) Sdl the show window using the specified window internal static extern void InternalShowWindow(IntPtr window) Parameters window IntPtr The window InternalStartTextInput() Sdl the start text input internal static extern void InternalStartTextInput() InternalStopTextInput() Sdl the stop text input internal static extern void InternalStopTextInput() InternalUnlockAudioDevice(uint) Sdl the unlock audio device using the specified dev internal static extern void InternalUnlockAudioDevice(uint dev) Parameters dev uint The dev InternalUnlockJoysticks() Sdl the unlock joysticks internal static extern void InternalUnlockJoysticks() InternalUpdateTexture(IntPtr, ref RectangleI, IntPtr, int) Sdl the update texture using the specified texture internal static extern int InternalUpdateTexture(IntPtr texture, ref RectangleI rect, IntPtr pixels, int pitch) Parameters texture IntPtr The texture rect RectangleI The rect pixels IntPtr The pixels pitch int The pitch Returns int The int InternalUpdateTexture(IntPtr, IntPtr, IntPtr, int) Sdl the update texture using the specified texture internal static extern int InternalUpdateTexture(IntPtr texture, IntPtr rect, IntPtr pixels, int pitch) Parameters texture IntPtr The texture rect IntPtr The rect pixels IntPtr The pixels pitch int The pitch Returns int The int InternalUpdateTexturev2(IntPtr, IntPtr, byte[], int) Sdl the update texture using the specified texture internal static extern int InternalUpdateTexturev2(IntPtr texture, IntPtr rect, byte[] pixels, int pitch) Parameters texture IntPtr The texture rect IntPtr The rect pixels byte[] The pixels pitch int The pitch Returns int The int InternalUpdateWindowSurface(IntPtr) Sdl the update window surface using the specified window internal static extern int InternalUpdateWindowSurface(IntPtr window) Parameters window IntPtr The window Returns int The int InternalUpdateWindowSurfaceRects(IntPtr, RectangleI[], int) Sdl the update window surface rects using the specified window internal static extern int InternalUpdateWindowSurfaceRects(IntPtr window, RectangleI[] rects, int numRects) Parameters window IntPtr The window rects RectangleI[] The rects numRects int The num rects Returns int The int InternalUpperBlit(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Sdl the upper blit using the specified src internal static extern int InternalUpperBlit(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int InternalUpperBlitScaled(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Sdl the upper blit scaled using the specified src internal static extern int InternalUpperBlitScaled(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int InternalWarpMouseGlobal(int, int) Sdl the warp mouse global using the specified x internal static extern int InternalWarpMouseGlobal(int x, int y) Parameters x int The y int The Returns int The int InternalWarpMouseInWindow(IntPtr, int, int) Sdl the warp mouse in window using the specified window internal static extern void InternalWarpMouseInWindow(IntPtr window, int x, int y) Parameters window IntPtr The window x int The y int The InternalWasInit(InitSettings) Sdl the was init using the specified flags internal static extern uint InternalWasInit(InitSettings flags) Parameters flags InitSettings The flags Returns uint The uint"
  },
  "api/Alis.Core.Graphic.Sdl2.Sdl.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Sdl.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Sdl Namespace Alis.Core.Graphic.Sdl2 Assembly Alis.dll The sdl class public static class Sdl Inheritance object Sdl Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields AndroidExternalStorageRead The sdl android external storage read public const int AndroidExternalStorageRead = 1 Field Value int AndroidExternalStorageWrite The sdl android external storage write public const int AndroidExternalStorageWrite = 2 Field Value int AudioF32 The audio f32lsb public const ushort AudioF32 = 33056 Field Value ushort AudioF32Lsb The audio f32lsb public const ushort AudioF32Lsb = 33056 Field Value ushort AudioF32Msb The audio f32msb public const ushort AudioF32Msb = 37152 Field Value ushort AudioMaskBitSize The sdl audio mask bit size public const ushort AudioMaskBitSize = 255 Field Value ushort AudioMaskDatatype The sdl audio mask datatype public const ushort AudioMaskDatatype = 256 Field Value ushort AudioMaskEndian The sdl audio mask endian public const ushort AudioMaskEndian = 4096 Field Value ushort AudioMaskSigned The sdl audio mask signed public const ushort AudioMaskSigned = 32768 Field Value ushort AudioS16 The audio s16lsb public const ushort AudioS16 = 32784 Field Value ushort AudioS16Lsb The audio s16lsb public const ushort AudioS16Lsb = 32784 Field Value ushort AudioS16Msb The audio s16msb public const ushort AudioS16Msb = 36880 Field Value ushort AudioS32 The audio s32lsb public const ushort AudioS32 = 32800 Field Value ushort AudioS32Lsb The audio s32lsb public const ushort AudioS32Lsb = 32800 Field Value ushort AudioS32Msb The audio s32msb public const ushort AudioS32Msb = 36896 Field Value ushort AudioS8 The audio s8 public const ushort AudioS8 = 32776 Field Value ushort AudioU16 The audio u16lsb public const ushort AudioU16 = 16 Field Value ushort AudioU16Lsb The audio u16lsb public const ushort AudioU16Lsb = 16 Field Value ushort AudioU16Msb The audio u16msb public const ushort AudioU16Msb = 4112 Field Value ushort AudioU8 The audio u8 public const ushort AudioU8 = 8 Field Value ushort ButtonLeft The sdl button left public const uint ButtonLeft = 1 Field Value uint ButtonMiddle The sdl button middle public const uint ButtonMiddle = 2 Field Value uint ButtonRight The sdl button right public const uint ButtonRight = 3 Field Value uint ButtonX1 The sdl button x1 public const uint ButtonX1 = 4 Field Value uint ButtonX2 The sdl button x2 public const uint ButtonX2 = 5 Field Value uint Disable The sdl disable public const int Disable = 0 Field Value int Enable The sdl enable public const int Enable = 1 Field Value int GlAudioF32Sys The audio f32msb public static readonly ushort GlAudioF32Sys Field Value ushort GlAudioS16Sys The audio s16msb public static readonly ushort GlAudioS16Sys Field Value ushort GlAudioS32Sys The audio s32msb public static readonly ushort GlAudioS32Sys Field Value ushort GlAudioU16Sys The audio u16msb public static readonly ushort GlAudioU16Sys Field Value ushort GlButtonLMask The sdl button left public static readonly uint GlButtonLMask Field Value uint GlButtonMMask The sdl button middle public static readonly uint GlButtonMMask Field Value uint GlButtonRMask The sdl button right public static readonly uint GlButtonRMask Field Value uint GlButtonX1Mask The sdl button x1 public static readonly uint GlButtonX1Mask Field Value uint GlButtonX2Mask The sdl button x2 public static readonly uint GlButtonX2Mask Field Value uint GlFormatXBgr1555 The sdl packed layout 1555 public static readonly uint GlFormatXBgr1555 Field Value uint GlFormatXBgr444 The sdl packed layout 4444 public static readonly uint GlFormatXBgr444 Field Value uint GlFormatXBgr888 The sdl packed layout 8888 public static readonly uint GlFormatXBgr888 Field Value uint GlFormatXRgb1555 The sdl packed layout 1555 public static readonly uint GlFormatXRgb1555 Field Value uint GlFormatXRgb444 The sdl packed layout 4444 public static readonly uint GlFormatXRgb444 Field Value uint GlFormatXRgb888 The sdl packed layout 8888 public static readonly uint GlFormatXRgb888 Field Value uint Ignore The sdl ignore public const int Ignore = 0 Field Value int KScancodeMask The sdl scancode mask public const int KScancodeMask = 1073741824 Field Value int MixMaxVolume The sdl mix max volume public const int MixMaxVolume = 128 Field Value int PixelFormatABgr1555 The sdl packed layout 1555 public static readonly uint PixelFormatABgr1555 Field Value uint PixelFormatABgr4444 The sdl packed layout 4444 public static readonly uint PixelFormatABgr4444 Field Value uint PixelFormatABgr8888 The sdl packed layout 8888 public static readonly uint PixelFormatABgr8888 Field Value uint PixelFormatArgb1555 The sdl packed layout 1555 public static readonly uint PixelFormatArgb1555 Field Value uint PixelFormatArgb2101010 The sdl packed layout 2101010 public static readonly uint PixelFormatArgb2101010 Field Value uint PixelFormatArgb4444 The sdl packed layout 4444 public static readonly uint PixelFormatArgb4444 Field Value uint PixelFormatArgb8888 The sdl packed layout 8888 public static readonly uint PixelFormatArgb8888 Field Value uint PixelFormatB8888 The sdl packed layout 8888 public static readonly uint PixelFormatB8888 Field Value uint PixelFormatBGra4444 The sdl packed layout 4444 public static readonly uint PixelFormatBGra4444 Field Value uint PixelFormatBGra5551 The sdl packed layout 5551 public static readonly uint PixelFormatBGra5551 Field Value uint PixelFormatBGrx8888 The sdl packed layout 8888 public static readonly uint PixelFormatBGrx8888 Field Value uint PixelFormatBgr24 The sdl array order bgr public static readonly uint PixelFormatBgr24 Field Value uint PixelFormatBgr444 The sdl pixel format x bgr 444 public static readonly uint PixelFormatBgr444 Field Value uint PixelFormatBgr555 The sdl pixel format xbgr1555 public static readonly uint PixelFormatBgr555 Field Value uint PixelFormatBgr565 The sdl packed layout 565 public static readonly uint PixelFormatBgr565 Field Value uint PixelFormatBgr888 The sdl pixel format x bgr 888 public static readonly uint PixelFormatBgr888 Field Value uint PixelFormatIndex1Lsb The sdl bit map order 4321 public static readonly uint PixelFormatIndex1Lsb Field Value uint PixelFormatIndex1Msb The sdl bit map order 1234 public static readonly uint PixelFormatIndex1Msb Field Value uint PixelFormatIndex4Lsb The sdl bit map order 4321 public static readonly uint PixelFormatIndex4Lsb Field Value uint PixelFormatIndex4Msb The sdl bit map order 1234 public static readonly uint PixelFormatIndex4Msb Field Value uint PixelFormatIndex8 The sdl pixel TypePixel index8 public static readonly uint PixelFormatIndex8 Field Value uint PixelFormatIy The sdl define pixel four cc public static readonly uint PixelFormatIy Field Value uint PixelFormatRgb24 The sdl array order rgb public static readonly uint PixelFormatRgb24 Field Value uint PixelFormatRgb332 The sdl packed layout 332 public static readonly uint PixelFormatRgb332 Field Value uint PixelFormatRgb444 The sdl pixel format x rgb 444 public static readonly uint PixelFormatRgb444 Field Value uint PixelFormatRgb555 The sdl pixel format xrgb1555 public static readonly uint PixelFormatRgb555 Field Value uint PixelFormatRgb565 The sdl packed layout 565 public static readonly uint PixelFormatRgb565 Field Value uint PixelFormatRgb888 The sdl pixel format x rgb 888 public static readonly uint PixelFormatRgb888 Field Value uint PixelFormatRgbX8888 The sdl packed layout 8888 public static readonly uint PixelFormatRgbX8888 Field Value uint PixelFormatRgba4444 The sdl packed layout 4444 public static readonly uint PixelFormatRgba4444 Field Value uint PixelFormatRgba5551 The sdl packed layout 5551 public static readonly uint PixelFormatRgba5551 Field Value uint PixelFormatRgba8888 The sdl packed layout 8888 public static readonly uint PixelFormatRgba8888 Field Value uint PixelFormatUnknown The sdl pixel format unknown public static readonly uint PixelFormatUnknown Field Value uint PixelFormatYv12 The sdl define pixel four cc public static readonly uint PixelFormatYv12 Field Value uint Query The sdl query public const int Query = -1 Field Value int TextEditingEventTextSize The sdl text editing event text size public const int TextEditingEventTextSize = 32 Field Value int TextInputEventTextSize The sdl text input event text size public const int TextInputEventTextSize = 32 Field Value int Methods AddEventWatch(SdlEventFilter, IntPtr) Adds the event watch using the specified filter public static void AddEventWatch(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata BindTexture(IntPtr, out float, out float) Gls the bind texture using the specified texture public static int BindTexture(IntPtr texture, out float texW, out float texH) Parameters texture IntPtr The texture texW float The tex texH float The tex Returns int The int BlitSurface(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Blit the surface using the specified src public static int BlitSurface(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int BlitSurface(IntPtr, IntPtr, IntPtr, ref RectangleI) Blit the surface using the specified src public static int BlitSurface(IntPtr src, IntPtr srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect IntPtr The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int BlitSurface(IntPtr, ref RectangleI, IntPtr, IntPtr) Blit the surface using the specified src public static int BlitSurface(IntPtr src, ref RectangleI srcRect, IntPtr dst, IntPtr dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect IntPtr The dst rect Returns int The int BlitSurface(IntPtr, IntPtr, IntPtr, IntPtr) Blit the surface using the specified src public static int BlitSurface(IntPtr src, IntPtr srcRect, IntPtr dst, IntPtr dstRect) Parameters src IntPtr The src srcRect IntPtr The src rect dst IntPtr The dst dstRect IntPtr The dst rect Returns int The int Button(uint) Sdl the button using the specified x public static uint Button(uint x) Parameters x uint The Returns uint The uint CalculateGammaRamp(float, ushort[]) Calculates the gamma ramp using the specified gamma public static void CalculateGammaRamp(float gamma, ushort[] ramp) Parameters gamma float The gamma ramp ushort[] The ramp CaptureMouse(bool) Captures the mouse using the specified enabled public static int CaptureMouse(bool enabled) Parameters enabled bool The enabled Returns int The int ClearHints() Clears the hints public static void ClearHints() CloseAudioDevice(uint) Closes the audio device using the specified dev public static void CloseAudioDevice(uint dev) Parameters dev uint The dev ComposeCustomBlendMode(BlendFactor, BlendFactor, BlendOperation, BlendFactor, BlendFactor, BlendOperation) Composes the custom blend mode using the specified src color factor public static BlendModes ComposeCustomBlendMode(BlendFactor srcColorFactor, BlendFactor dstColorFactor, BlendOperation colorOperation, BlendFactor srcAlphaFactor, BlendFactor dstAlphaFactor, BlendOperation alphaOperation) Parameters srcColorFactor BlendFactor The src color factor dstColorFactor BlendFactor The dst color factor colorOperation BlendOperation The color operation srcAlphaFactor BlendFactor The src alpha factor dstAlphaFactor BlendFactor The dst alpha factor alphaOperation BlendOperation The alpha operation Returns BlendModes The sdl blend mode ConvertSurface(IntPtr, IntPtr, uint) Converts the surface using the specified src public static IntPtr ConvertSurface(IntPtr src, IntPtr fmt, uint flags) Parameters src IntPtr The src fmt IntPtr The fmt flags uint The flags Returns IntPtr The int ptr CreateColorCursor(IntPtr, int, int) Creates the color cursor using the specified surface public static IntPtr CreateColorCursor(IntPtr surface, int hotX, int hotY) Parameters surface IntPtr The surface hotX int The hot hotY int The hot Returns IntPtr The int ptr CreateContext(IntPtr) Gls the create context using the specified window public static IntPtr CreateContext(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr CreateCursor(IntPtr, IntPtr, int, int, int, int) Creates the cursor using the specified data public static IntPtr CreateCursor(IntPtr data, IntPtr mask, int w, int h, int hotX, int hotY) Parameters data IntPtr The data mask IntPtr The mask w int The h int The hotX int The hot hotY int The hot Returns IntPtr The int ptr CreateRenderer(IntPtr, int, Renderers) Creates the renderer using the specified window public static IntPtr CreateRenderer(IntPtr window, int index, Renderers flags) Parameters window IntPtr The window index int The index flags Renderers The flags Returns IntPtr The int ptr CreateRgbSurfaceWithFormat(uint, int, int, int, uint) Creates the rgb surface with format using the specified flags public static IntPtr CreateRgbSurfaceWithFormat(uint flags, int width, int height, int depth, uint format) Parameters flags uint The flags width int The width height int The height depth int The depth format uint The format Returns IntPtr The int ptr CreateSoftwareRenderer(IntPtr) Creates the software renderer using the specified surface public static IntPtr CreateSoftwareRenderer(IntPtr surface) Parameters surface IntPtr The surface Returns IntPtr The int ptr CreateSystemCursor(SystemCursor) Creates the system cursor using the specified id public static IntPtr CreateSystemCursor(SystemCursor id) Parameters id SystemCursor The id Returns IntPtr The int ptr CreateTexture(IntPtr, uint, int, int, int) Creates the texture using the specified renderer public static IntPtr CreateTexture(IntPtr renderer, uint format, int access, int w, int h) Parameters renderer IntPtr The renderer format uint The format access int The access w int The h int The Returns IntPtr The int ptr CreateTextureFromSurface(IntPtr, IntPtr) Creates the texture from surface using the specified renderer public static IntPtr CreateTextureFromSurface(IntPtr renderer, IntPtr surface) Parameters renderer IntPtr The renderer surface IntPtr The surface Returns IntPtr The int ptr CreateWindow(string, int, int, int, int, WindowSettings) Sdl the create window using the specified title public static IntPtr CreateWindow(string title, int x, int y, int w, int h, WindowSettings flags) Parameters title string The title x int The y int The w int The h int The flags WindowSettings The flags Returns IntPtr The int ptr CreateWindowAndRenderer(int, int, WindowSettings, out IntPtr, out IntPtr) Sdl the create window and renderer using the specified width public static int CreateWindowAndRenderer(int width, int height, WindowSettings windowFlags, out IntPtr window, out IntPtr renderer) Parameters width int The width height int The height windowFlags WindowSettings The window flags window IntPtr The window renderer IntPtr The renderer Returns int The int DelEventWatch(SdlEventFilter, IntPtr) Del the event watch using the specified filter public static void DelEventWatch(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata DeleteContext(IntPtr) Gls the delete context using the specified context public static void DeleteContext(IntPtr context) Parameters context IntPtr The context DestroyRenderer(IntPtr) Destroys the renderer using the specified renderer public static void DestroyRenderer(IntPtr renderer) Parameters renderer IntPtr The renderer DestroyTexture(IntPtr) Destroys the texture using the specified texture public static void DestroyTexture(IntPtr texture) Parameters texture IntPtr The texture DestroyWindow(IntPtr) Sdl the destroy window using the specified window public static void DestroyWindow(IntPtr window) Parameters window IntPtr The window ExtensionSupported(string) Sdl the gl extension supported using the specified extension public static bool ExtensionSupported(string extension) Parameters extension string The extension Returns bool The sdl bool FillRect(IntPtr, ref RectangleI, uint) Fills the rect using the specified dst public static int FillRect(IntPtr dst, ref RectangleI rect, uint color) Parameters dst IntPtr The dst rect RectangleI The rect color uint The color Returns int The int FillRect(IntPtr, IntPtr, uint) Fills the rect using the specified dst public static int FillRect(IntPtr dst, IntPtr rect, uint color) Parameters dst IntPtr The dst rect IntPtr The rect color uint The color Returns int The int FillRects(IntPtr, RectangleI[], int, uint) Fills the rects using the specified dst public static int FillRects(IntPtr dst, RectangleI[] rects, int count, uint color) Parameters dst IntPtr The dst rects RectangleI[] The rects count int The count color uint The color Returns int The int FlushEvent(EventType) Flushes the event using the specified type public static void FlushEvent(EventType type) Parameters type EventType The type FormatEnumToMasks(uint, out int, out uint, out uint, out uint, out uint) Pixels the format enum to masks using the specified format public static bool FormatEnumToMasks(uint format, out int bpp, out uint rMask, out uint gMask, out uint bMask, out uint aMask) Parameters format uint The format bpp int The bpp rMask uint The mask gMask uint The mask bMask uint The mask aMask uint The mask Returns bool The sdl bool Fourcc(byte, byte, byte, byte) Sdl the fourcc using the specified a public static uint Fourcc(byte a, byte b, byte c, byte d) Parameters a byte The b byte The c byte The d byte The Returns uint The uint FreeCursor(IntPtr) Frees the cursor using the specified cursor public static void FreeCursor(IntPtr cursor) Parameters cursor IntPtr The cursor GameControllerAddMapping(string) Sdl the game controller add mapping using the specified mapping string public static int GameControllerAddMapping(string mappingString) Parameters mappingString string The mapping string Returns int The result GameControllerAddMappingsFromFile(string) Sdl the game controller add mappings from file using the specified file public static int GameControllerAddMappingsFromFile(string file) Parameters file string The file Returns int The int GameControllerClose(IntPtr) Games the controller close using the specified game controller public static void GameControllerClose(IntPtr gameController) Parameters gameController IntPtr The game controller GameControllerEventState(int) Games the controller event state using the specified state public static int GameControllerEventState(int state) Parameters state int The state Returns int The int GameControllerFromInstanceId(int) Internals the sdl game controller from instance id using the specified joy id public static IntPtr GameControllerFromInstanceId(int joyId) Parameters joyId int The joy id Returns IntPtr The int ptr GameControllerGetAttached(IntPtr) Games the controller get attached using the specified game controller public static bool GameControllerGetAttached(IntPtr gameController) Parameters gameController IntPtr The game controller Returns bool The sdl bool GameControllerGetAxis(IntPtr, GameControllerAxis) Games the controller get axis using the specified game controller public static short GameControllerGetAxis(IntPtr gameController, GameControllerAxis axis) Parameters gameController IntPtr The game controller axis GameControllerAxis The axis Returns short The short GameControllerGetAxisFromString(string) Sdl the game controller get axis from string using the specified pch string public static GameControllerAxis GameControllerGetAxisFromString(string pchString) Parameters pchString string The pch string Returns GameControllerAxis The sdl game controller axis GameControllerGetBindForAxis(IntPtr, GameControllerAxis) Sdl the game controller get bind for axis using the specified game controller public static GameControllerButtonBind GameControllerGetBindForAxis(IntPtr gameController, GameControllerAxis axis) Parameters gameController IntPtr The game controller axis GameControllerAxis The axis Returns GameControllerButtonBind The result GameControllerGetBindForButton(IntPtr, GameControllerButton) Sdl the game controller get bind for button using the specified game controller public static GameControllerButtonBind GameControllerGetBindForButton(IntPtr gameController, GameControllerButton button) Parameters gameController IntPtr The game controller button GameControllerButton The button Returns GameControllerButtonBind The result GameControllerGetButton(IntPtr, GameControllerButton) Games the controller get button using the specified game controller public static byte GameControllerGetButton(IntPtr gameController, GameControllerButton button) Parameters gameController IntPtr The game controller button GameControllerButton The button Returns byte The byte GameControllerGetButtonFromString(string) Sdl the game controller get button from string using the specified pch string public static GameControllerButton GameControllerGetButtonFromString(string pchString) Parameters pchString string The pch string Returns GameControllerButton The sdl game controller button GameControllerGetJoystick(IntPtr) Games the controller get joystick using the specified game controller public static IntPtr GameControllerGetJoystick(IntPtr gameController) Parameters gameController IntPtr The game controller Returns IntPtr The int ptr GameControllerGetProduct(IntPtr) Games the controller get product using the specified game controller public static ushort GameControllerGetProduct(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort GameControllerGetProductVersion(IntPtr) Games the controller get product version using the specified game controller public static ushort GameControllerGetProductVersion(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort GameControllerGetStringForAxis(GameControllerAxis) Sdl the game controller get string for axis using the specified axis public static string GameControllerGetStringForAxis(GameControllerAxis axis) Parameters axis GameControllerAxis The axis Returns string The string GameControllerGetStringForButton(GameControllerButton) Sdl the game controller get string for button using the specified button public static string GameControllerGetStringForButton(GameControllerButton button) Parameters button GameControllerButton The button Returns string The string GameControllerGetVendor(IntPtr) Games the controller get vendor using the specified game controller public static ushort GameControllerGetVendor(IntPtr gameController) Parameters gameController IntPtr The game controller Returns ushort The ushort GameControllerMapping(IntPtr) Sdl the game controller mapping using the specified game controller public static string GameControllerMapping(IntPtr gameController) Parameters gameController IntPtr The game controller Returns string The string GameControllerMappingForDeviceIndex(int) Sdl the game controller mapping for device index using the specified joystick index public static string GameControllerMappingForDeviceIndex(int joystickIndex) Parameters joystickIndex int The joystick index Returns string The string GameControllerMappingForGuid(Guid) Sdl the game controller mapping for guid using the specified guid public static string GameControllerMappingForGuid(Guid guid) Parameters guid Guid The guid Returns string The string GameControllerMappingForIndex(int) Sdl the game controller mapping for index using the specified mapping index public static string GameControllerMappingForIndex(int mappingIndex) Parameters mappingIndex int The mapping index Returns string The string GameControllerName(IntPtr) Sdl the game controller name using the specified game controller public static string GameControllerName(IntPtr gameController) Parameters gameController IntPtr The game controller Returns string The string GameControllerNameForIndex(int) Sdl the game controller name for index using the specified joystick index public static string GameControllerNameForIndex(int joystickIndex) Parameters joystickIndex int The joystick index Returns string The string GameControllerNumMappings() Games the controller num mappings public static int GameControllerNumMappings() Returns int The int GameControllerOpen(int) Games the controller open using the specified joystick index public static IntPtr GameControllerOpen(int joystickIndex) Parameters joystickIndex int The joystick index Returns IntPtr The int ptr GameControllerRumble(IntPtr, ushort, ushort, uint) Games the controller rumble using the specified game controller public static int GameControllerRumble(IntPtr gameController, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs) Parameters gameController IntPtr The game controller lowFrequencyRumble ushort The low frequency rumble highFrequencyRumble ushort The high frequency rumble durationMs uint The duration ms Returns int The int GameControllerUpdate() Games the controller update public static void GameControllerUpdate() GetAttribute(Attr, out int) Gls the get attribute using the specified attr public static int GetAttribute(Attr attr, out int value) Parameters attr Attr The attr value int The value Returns int The int GetAudioDeviceName(int, int) Sdl the get audio device name using the specified index public static string GetAudioDeviceName(int index, int isCapture) Parameters index int The index isCapture int The is capture Returns string The string GetAudioDeviceStatus(uint) Gets the audio device status using the specified dev public static AudioStatus GetAudioDeviceStatus(uint dev) Parameters dev uint The dev Returns AudioStatus The sdl audio status GetAudioDriver(int) Sdl the get audio driver using the specified index public static string GetAudioDriver(int index) Parameters index int The index Returns string The string GetClipRect(IntPtr, out RectangleI) Gets the clip rect using the specified surface public static void GetClipRect(IntPtr surface, out RectangleI rect) Parameters surface IntPtr The surface rect RectangleI The rect GetClipboardText() Sdl the get clipboard text public static string GetClipboardText() Returns string The string GetClosestDisplayMode(int, ref DisplayMode, out DisplayMode) Sdl the get closest display mode using the specified display index public static IntPtr GetClosestDisplayMode(int displayIndex, ref DisplayMode mode, out DisplayMode closest) Parameters displayIndex int The display index mode DisplayMode The mode closest DisplayMode The closest Returns IntPtr The int ptr GetColorKey(IntPtr, out uint) Gets the color key using the specified surface public static int GetColorKey(IntPtr surface, out uint key) Parameters surface IntPtr The surface key uint The key Returns int The int GetCurrentAudioDriver() Sdl the get current audio driver public static string GetCurrentAudioDriver() Returns string The string GetCurrentContext() Gls the get current context public static IntPtr GetCurrentContext() Returns IntPtr The int ptr GetCurrentDisplayMode(int, out DisplayMode) Sdl the get current display mode using the specified display index public static int GetCurrentDisplayMode(int displayIndex, out DisplayMode mode) Parameters displayIndex int The display index mode DisplayMode The mode Returns int The int GetCurrentVideoDriver() Sdl the get current video driver public static string GetCurrentVideoDriver() Returns string The string GetCurrentWindow() Gls the get current window public static IntPtr GetCurrentWindow() Returns IntPtr The int ptr GetCursor() Gets the cursor public static IntPtr GetCursor() Returns IntPtr The int ptr GetDesktopDisplayMode(int, out DisplayMode) Gets the desktop display mode using the specified display index public static int GetDesktopDisplayMode(int displayIndex, out DisplayMode mode) Parameters displayIndex int The display index mode DisplayMode The mode Returns int The int GetDisplayBounds(int, out RectangleI) Gets the display bounds using the specified display index public static int GetDisplayBounds(int displayIndex, out RectangleI rect) Parameters displayIndex int The display index rect RectangleI The rect Returns int The int GetDisplayDpi(int, out float, out float, out float) Gets the display dpi using the specified display index public static int GetDisplayDpi(int displayIndex, out float dDpi, out float hDpi, out float vDpi) Parameters displayIndex int The display index dDpi float The dpi hDpi float The dpi vDpi float The dpi Returns int The int GetDisplayMode(int, int, out DisplayMode) Gets the display mode using the specified display index public static int GetDisplayMode(int displayIndex, int modeIndex, out DisplayMode mode) Parameters displayIndex int The display index modeIndex int The mode index mode DisplayMode The mode Returns int The int GetDisplayName(int) Sdl the get display name using the specified index public static string GetDisplayName(int index) Parameters index int The index Returns string The string GetDisplayUsableBounds(int, out RectangleI) Gets the display usable bounds using the specified display index public static int GetDisplayUsableBounds(int displayIndex, out RectangleI rect) Parameters displayIndex int The display index rect RectangleI The rect Returns int The int GetDrawableSize(IntPtr, out int, out int) Gls the get drawable size using the specified window public static void GetDrawableSize(IntPtr window, out int w, out int h) Parameters window IntPtr The window w int The h int The GetError() Sdl the get error public static string GetError() Returns string The string GetEventState(EventType) Sdl the get event state using the specified type public static byte GetEventState(EventType type) Parameters type EventType The type Returns byte The byte GetGlCompiledVersion() The sdl patch level public static int GetGlCompiledVersion() Returns int GetGlobalMouseStateOutXAndOutY(out int, out int) Gets the global mouse state using the specified x public static uint GetGlobalMouseStateOutXAndOutY(out int x, out int y) Parameters x int The y int The Returns uint The uint GetGlobalMouseStateXAndY(IntPtr, IntPtr) Gets the global mouse state using the specified x public static uint GetGlobalMouseStateXAndY(IntPtr x, IntPtr y) Parameters x IntPtr The y IntPtr The Returns uint The uint GetGrabbedWindow() Gets the grabbed window public static IntPtr GetGrabbedWindow() Returns IntPtr The int ptr GetHint(string) Sdl the get hint using the specified name public static string GetHint(string name) Parameters name string The name Returns string The string GetHintBoolean(string, bool) Sdl the get hint boolean using the specified name public static bool GetHintBoolean(string name, bool defaultValue) Parameters name string The name defaultValue bool The default value Returns bool The sdl bool GetKeyFromName(string) Sdl the get key from name using the specified name public static KeyCodes GetKeyFromName(string name) Parameters name string The name Returns KeyCodes The sdl keycode GetKeyFromScancode(SdlScancode) Gets the key from scancode using the specified scancode public static KeyCodes GetKeyFromScancode(SdlScancode scancode) Parameters scancode SdlScancode The scancode Returns KeyCodes The sdl keycode GetKeyboardFocus() Gets the keyboard focus public static IntPtr GetKeyboardFocus() Returns IntPtr The int ptr GetKeyboardState(out int) Gets the keyboard state using the specified num keys public static IntPtr GetKeyboardState(out int numKeys) Parameters numKeys int The num keys Returns IntPtr The int ptr GetModState() Gets the mod state public static KeyMods GetModState() Returns KeyMods The sdl key mod GetMouseFocus() Gets the mouse focus public static IntPtr GetMouseFocus() Returns IntPtr The int ptr GetMouseStateOutXAndY(out int, out int) Gets the mouse state using the specified x public static uint GetMouseStateOutXAndY(out int x, out int y) Parameters x int The y int The Returns uint The uint GetMouseStateToXAndY(IntPtr, IntPtr) Gets the mouse state using the specified x public static uint GetMouseStateToXAndY(IntPtr x, IntPtr y) Parameters x IntPtr The y IntPtr The Returns uint The uint GetMouseStateXAndYOut(IntPtr, out int) Gets the mouse state using the specified x public static uint GetMouseStateXAndYOut(IntPtr x, out int y) Parameters x IntPtr The y int The Returns uint The uint GetMouseStateXOutAndY(out int, IntPtr) Gets the mouse state using the specified x public static uint GetMouseStateXOutAndY(out int x, IntPtr y) Parameters x int The y IntPtr The Returns uint The uint GetNumAudioDevices(int) Gets the num audio devices using the specified is capture public static int GetNumAudioDevices(int isCapture) Parameters isCapture int The is capture Returns int The int GetNumAudioDrivers() Gets the num audio drivers public static int GetNumAudioDrivers() Returns int The int GetNumDisplayModes(int) Gets the num display modes using the specified display index public static int GetNumDisplayModes(int displayIndex) Parameters displayIndex int The display index Returns int The int GetNumRenderDrivers() Gets the num render drivers public static int GetNumRenderDrivers() Returns int The int GetNumTouchFingers(long) Gets the num touch fingers using the specified touch id public static int GetNumTouchFingers(long touchId) Parameters touchId long The touch id Returns int The int GetNumVideoDisplays() Gets the num video displays public static int GetNumVideoDisplays() Returns int The int GetNumVideoDrivers() Gets the num video drivers public static int GetNumVideoDrivers() Returns int The int GetPerformanceCounter() Gets the performance counter public static ulong GetPerformanceCounter() Returns ulong The ulong GetPerformanceFrequency() Internals the sdl get performance frequency public static ulong GetPerformanceFrequency() Returns ulong The ulong GetPixelFormatName(uint) Sdl the get pixel format name using the specified format public static string GetPixelFormatName(uint format) Parameters format uint The format Returns string The string GetProcAddress(string) Sdl the gl get proc address using the specified proc public static IntPtr GetProcAddress(string proc) Parameters proc string The proc Returns IntPtr The int ptr GetRelativeMouseMode() Gets the relative mouse mode public static bool GetRelativeMouseMode() Returns bool The sdl bool GetRelativeMouseState(out int, out int) Gets the relative mouse state using the specified x public static uint GetRelativeMouseState(out int x, out int y) Parameters x int The y int The Returns uint The uint GetRenderDrawBlendMode(IntPtr, out BlendModes) Gets the render draw blend mode using the specified renderer public static int GetRenderDrawBlendMode(IntPtr renderer, out BlendModes blendMode) Parameters renderer IntPtr The renderer blendMode BlendModes The blend mode Returns int The int GetRenderDrawColor(IntPtr, out byte, out byte, out byte, out byte) Gets the render draw color using the specified renderer public static int GetRenderDrawColor(IntPtr renderer, out byte r, out byte g, out byte b, out byte a) Parameters renderer IntPtr The renderer r byte The g byte The b byte The a byte The Returns int The int GetRenderDriverInfo(int, out RendererInfo) Gets the render driver info using the specified index public static int GetRenderDriverInfo(int index, out RendererInfo info) Parameters index int The index info RendererInfo The info Returns int The int GetRenderer(IntPtr) Gets the renderer using the specified window public static IntPtr GetRenderer(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr GetRendererInfo(IntPtr, out RendererInfo) Gets the renderer info using the specified renderer public static int GetRendererInfo(IntPtr renderer, out RendererInfo info) Parameters renderer IntPtr The renderer info RendererInfo The info Returns int The int GetRendererOutputSize(IntPtr, out int, out int) Gets the renderer output size using the specified renderer public static int GetRendererOutputSize(IntPtr renderer, out int w, out int h) Parameters renderer IntPtr The renderer w int The h int The Returns int The int GetScancodeFromKey(KeyCodes) Gets the scancode from key using the specified key public static SdlScancode GetScancodeFromKey(KeyCodes key) Parameters key KeyCodes The key Returns SdlScancode The sdl scancode GetScancodeFromName(string) Sdl the get scancode from name using the specified name public static SdlScancode GetScancodeFromName(string name) Parameters name string The name Returns SdlScancode The sdl scancode GetScancodeName(SdlScancode) Sdl the get scancode name using the specified scancode public static string GetScancodeName(SdlScancode scancode) Parameters scancode SdlScancode The scancode Returns string The string GetSurfaceAlphaMod(IntPtr, out byte) Gets the surface alpha mod using the specified surface public static int GetSurfaceAlphaMod(IntPtr surface, out byte alpha) Parameters surface IntPtr The surface alpha byte The alpha Returns int The int GetSurfaceBlendMode(IntPtr, out BlendModes) Gets the surface blend mode using the specified surface public static int GetSurfaceBlendMode(IntPtr surface, out BlendModes blendMode) Parameters surface IntPtr The surface blendMode BlendModes The blend mode Returns int The int GetSurfaceColorMod(IntPtr, out byte, out byte, out byte) Gets the surface color mod using the specified surface public static int GetSurfaceColorMod(IntPtr surface, out byte r, out byte g, out byte b) Parameters surface IntPtr The surface r byte The g byte The b byte The Returns int The int GetSwapInterval() Gls the get swap interval public static int GetSwapInterval() Returns int The int GetTextureAlphaMod(IntPtr, out byte) Gets the texture alpha mod using the specified texture public static int GetTextureAlphaMod(IntPtr texture, out byte alpha) Parameters texture IntPtr The texture alpha byte The alpha Returns int The int GetTextureBlendMode(IntPtr, out BlendModes) Gets the texture blend mode using the specified texture public static int GetTextureBlendMode(IntPtr texture, out BlendModes blendMode) Parameters texture IntPtr The texture blendMode BlendModes The blend mode Returns int The int GetTextureColorMod(IntPtr, out byte, out byte, out byte) Gets the texture color mod using the specified texture public static int GetTextureColorMod(IntPtr texture, out byte r, out byte g, out byte b) Parameters texture IntPtr The texture r byte The g byte The b byte The Returns int The int GetTouchDevice(int) Gets the touch device using the specified index public static long GetTouchDevice(int index) Parameters index int The index Returns long The long GetTouchDeviceType(long) Gets the touch device type using the specified touch id public static TouchDeviceType GetTouchDeviceType(long touchId) Parameters touchId long The touch id Returns TouchDeviceType The sdl touch device type GetTouchFinger(long, int) Gets the touch finger using the specified touch id public static IntPtr GetTouchFinger(long touchId, int index) Parameters touchId long The touch id index int The index Returns IntPtr The int ptr GetVersion() Sdl the get version using the specified ver public static Version GetVersion() Returns Version GetVideoDriver(int) Sdl the get video driver using the specified index public static string GetVideoDriver(int index) Parameters index int The index Returns string The string GetWindowBordersSize(IntPtr, out int, out int, out int, out int) Gets the window borders size using the specified window public static int GetWindowBordersSize(IntPtr window, out int top, out int left, out int bottom, out int right) Parameters window IntPtr The window top int The top left int The left bottom int The bottom right int The right Returns int The int GetWindowBrightness(IntPtr) Gets the window brightness using the specified window public static float GetWindowBrightness(IntPtr window) Parameters window IntPtr The window Returns float The float GetWindowData(IntPtr, string) Sdl the get window data using the specified window public static IntPtr GetWindowData(IntPtr window, string name) Parameters window IntPtr The window name string The name Returns IntPtr The int ptr GetWindowDisplayIndex(IntPtr) Gets the window display index using the specified window public static int GetWindowDisplayIndex(IntPtr window) Parameters window IntPtr The window Returns int The int GetWindowDisplayMode(IntPtr, out DisplayMode) Gets the window display mode using the specified window public static int GetWindowDisplayMode(IntPtr window, out DisplayMode mode) Parameters window IntPtr The window mode DisplayMode The mode Returns int The int GetWindowFlags(IntPtr) Gets the window flags using the specified window public static uint GetWindowFlags(IntPtr window) Parameters window IntPtr The window Returns uint The uint GetWindowFromId(uint) Gets the window from id using the specified id public static IntPtr GetWindowFromId(uint id) Parameters id uint The id Returns IntPtr The int ptr GetWindowGammaRamp(IntPtr, ushort[], ushort[], ushort[]) Gets the window gamma ramp using the specified window public static int GetWindowGammaRamp(IntPtr window, ushort[] red, ushort[] green, ushort[] blue) Parameters window IntPtr The window red ushort[] The red green ushort[] The green blue ushort[] The blue Returns int The int GetWindowGrab(IntPtr) Gets the window grab using the specified window public static bool GetWindowGrab(IntPtr window) Parameters window IntPtr The window Returns bool The sdl bool GetWindowId(IntPtr) Gets the window id using the specified window public static uint GetWindowId(IntPtr window) Parameters window IntPtr The window Returns uint The uint GetWindowMaximumSize(IntPtr, out int, out int) Gets the window maximum size using the specified window public static void GetWindowMaximumSize(IntPtr window, out int maxW, out int maxH) Parameters window IntPtr The window maxW int The max maxH int The max GetWindowMinimumSize(IntPtr, out int, out int) Gets the window minimum size using the specified window public static void GetWindowMinimumSize(IntPtr window, out int minW, out int minH) Parameters window IntPtr The window minW int The min minH int The min GetWindowOpacity(IntPtr, out float) Gets the window opacity using the specified window public static int GetWindowOpacity(IntPtr window, out float outOpacity) Parameters window IntPtr The window outOpacity float The out opacity Returns int The int GetWindowPixelFormat(IntPtr) Gets the window pixel format using the specified window public static uint GetWindowPixelFormat(IntPtr window) Parameters window IntPtr The window Returns uint The uint GetWindowPosition(IntPtr, out int, out int) Gets the window position using the specified window public static void GetWindowPosition(IntPtr window, out int x, out int y) Parameters window IntPtr The window x int The y int The GetWindowSize(IntPtr) simple public static Vector2 GetWindowSize(IntPtr window) Parameters window IntPtr Returns Vector2 GetWindowSurface(IntPtr) Gets the window surface using the specified window public static IntPtr GetWindowSurface(IntPtr window) Parameters window IntPtr The window Returns IntPtr The int ptr GetWindowTitle(IntPtr) Sdl the get window title using the specified window public static string GetWindowTitle(IntPtr window) Parameters window IntPtr The window Returns string The string HasClipboardText() Has the clipboard text public static bool HasClipboardText() Returns bool The sdl bool HasColorKey(IntPtr) Has the color key using the specified surface public static bool HasColorKey(IntPtr surface) Parameters surface IntPtr The surface Returns bool The sdl bool HasEvent(EventType) Has the event using the specified type public static bool HasEvent(EventType type) Parameters type EventType The type Returns bool The sdl bool HasEvents(EventType, EventType) Has the events using the specified min type public static bool HasEvents(EventType minType, EventType maxType) Parameters minType EventType The min type maxType EventType The max type Returns bool The sdl bool HasScreenKeyboardSupport() Has the screen keyboard support public static bool HasScreenKeyboardSupport() Returns bool The sdl bool HideWindow(IntPtr) Hides the window using the specified window public static void HideWindow(IntPtr window) Parameters window IntPtr The window Init(InitSettings) Sdl the init using the specified flags public static int Init(InitSettings flags) Parameters flags InitSettings The flags Returns int The int IsGameController(int) Is the game controller using the specified joystick index public static bool IsGameController(int joystickIndex) Parameters joystickIndex int The joystick index Returns bool The sdl bool IsScreenKeyboardShown(IntPtr) Is the screen keyboard shown using the specified window public static bool IsScreenKeyboardShown(IntPtr window) Parameters window IntPtr The window Returns bool The sdl bool IsTextInputActive() Is the text input active public static bool IsTextInputActive() Returns bool The sdl bool JoystickClose(IntPtr) Joysticks the close using the specified joystick public static void JoystickClose(IntPtr joystick) Parameters joystick IntPtr The joystick JoystickCurrentPowerLevel(IntPtr) Joysticks the current power level using the specified joystick public static JoystickPowerLevel JoystickCurrentPowerLevel(IntPtr joystick) Parameters joystick IntPtr The joystick Returns JoystickPowerLevel The sdl joystick power level JoystickEventState(int) Joysticks the event state using the specified state public static int JoystickEventState(int state) Parameters state int The state Returns int The int JoystickFromInstanceId(int) Joysticks the from instance id using the specified instance id public static IntPtr JoystickFromInstanceId(int instanceId) Parameters instanceId int The instance id Returns IntPtr The int ptr JoystickGetAttached(IntPtr) Joysticks the get attached using the specified joystick public static bool JoystickGetAttached(IntPtr joystick) Parameters joystick IntPtr The joystick Returns bool The sdl bool JoystickGetAxis(IntPtr, int) Joysticks the get axis using the specified joystick public static short JoystickGetAxis(IntPtr joystick, int axis) Parameters joystick IntPtr The joystick axis int The axis Returns short The short JoystickGetAxisInitialState(IntPtr, int, out ushort) Joysticks the get axis initial state using the specified joystick public static bool JoystickGetAxisInitialState(IntPtr joystick, int axis, out ushort state) Parameters joystick IntPtr The joystick axis int The axis state ushort The state Returns bool The sdl bool JoystickGetBall(IntPtr, int, out int, out int) Joysticks the get ball using the specified joystick public static int JoystickGetBall(IntPtr joystick, int ball, out int dx, out int dy) Parameters joystick IntPtr The joystick ball int The ball dx int The dx dy int The dy Returns int The int JoystickGetButton(IntPtr, int) Joysticks the get button using the specified joystick public static byte JoystickGetButton(IntPtr joystick, int button) Parameters joystick IntPtr The joystick button int The button Returns byte The byte JoystickGetDeviceGuid(int) Joysticks the get device guid using the specified device index public static Guid JoystickGetDeviceGuid(int deviceIndex) Parameters deviceIndex int The device index Returns Guid The guid JoystickGetDeviceInstanceId(int) Joysticks the get device instance id using the specified device index public static int JoystickGetDeviceInstanceId(int deviceIndex) Parameters deviceIndex int The device index Returns int The int JoystickGetDeviceProduct(int) Joysticks the get device product using the specified device index public static ushort JoystickGetDeviceProduct(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort JoystickGetDeviceProductVersion(int) Joysticks the get device product version using the specified device index public static ushort JoystickGetDeviceProductVersion(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort JoystickGetDeviceType(int) Joysticks the get device type using the specified device index public static JoystickType JoystickGetDeviceType(int deviceIndex) Parameters deviceIndex int The device index Returns JoystickType The sdl joystick type JoystickGetDeviceVendor(int) Joysticks the get device vendor using the specified device index public static ushort JoystickGetDeviceVendor(int deviceIndex) Parameters deviceIndex int The device index Returns ushort The ushort JoystickGetGuid(IntPtr) Joysticks the get guid using the specified joystick public static Guid JoystickGetGuid(IntPtr joystick) Parameters joystick IntPtr The joystick Returns Guid The guid JoystickGetGuidFromString(string) Sdl the joystick get guid from string using the specified pch guid public static Guid JoystickGetGuidFromString(string pchGuid) Parameters pchGuid string The pch guid Returns Guid The guid JoystickGetGuidString(Guid, byte[], int) Joysticks the get guid string using the specified guid public static void JoystickGetGuidString(Guid guid, byte[] pszGuid, int cbGuid) Parameters guid Guid The guid pszGuid byte[] The psz guid cbGuid int The cb guid JoystickGetHat(IntPtr, int) Joysticks the get hat using the specified joystick public static byte JoystickGetHat(IntPtr joystick, int hat) Parameters joystick IntPtr The joystick hat int The hat Returns byte The byte JoystickGetProduct(IntPtr) Joysticks the get product using the specified joystick public static ushort JoystickGetProduct(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort JoystickGetProductVersion(IntPtr) Joysticks the get product version using the specified joystick public static ushort JoystickGetProductVersion(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort JoystickGetType(IntPtr) Joysticks the get type using the specified joystick public static JoystickType JoystickGetType(IntPtr joystick) Parameters joystick IntPtr The joystick Returns JoystickType The sdl joystick type JoystickGetVendor(IntPtr) Joysticks the get vendor using the specified joystick public static ushort JoystickGetVendor(IntPtr joystick) Parameters joystick IntPtr The joystick Returns ushort The ushort JoystickInstanceId(IntPtr) Joysticks the instance id using the specified joystick public static int JoystickInstanceId(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickIsHaptic(IntPtr) Joysticks the is haptic using the specified joystick public static int JoystickIsHaptic(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickName(IntPtr) Sdl the joystick name using the specified joystick public static string JoystickName(IntPtr joystick) Parameters joystick IntPtr The joystick Returns string The string JoystickNameForIndex(int) Sdl the joystick name for index using the specified device index public static string JoystickNameForIndex(int deviceIndex) Parameters deviceIndex int The device index Returns string The string JoystickNumAxes(IntPtr) Joysticks the num axes using the specified joystick public static int JoystickNumAxes(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickNumBalls(IntPtr) Joysticks the num balls using the specified joystick public static int JoystickNumBalls(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickNumButtons(IntPtr) Joysticks the num buttons using the specified joystick public static int JoystickNumButtons(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickNumHats(IntPtr) Joysticks the num hats using the specified joystick public static int JoystickNumHats(IntPtr joystick) Parameters joystick IntPtr The joystick Returns int The int JoystickOpen(int) Joysticks the open using the specified device index public static IntPtr JoystickOpen(int deviceIndex) Parameters deviceIndex int The device index Returns IntPtr The int ptr JoystickRumble(IntPtr, ushort, ushort, uint) Joysticks the rumble using the specified joystick public static int JoystickRumble(IntPtr joystick, ushort lowFrequencyRumble, ushort highFrequencyRumble, uint durationMs) Parameters joystick IntPtr The joystick lowFrequencyRumble ushort The low frequency rumble highFrequencyRumble ushort The high frequency rumble durationMs uint The duration ms Returns int The int JoystickUpdate() Joysticks the update public static void JoystickUpdate() LoadBmp(string) Sdl the load bmp using the specified file public static IntPtr LoadBmp(string file) Parameters file string The file Returns IntPtr The int ptr LoadFile(string, out IntPtr) Sdl the load file using the specified file public static IntPtr LoadFile(string file, out IntPtr dataSize) Parameters file string The file dataSize IntPtr The data size Returns IntPtr The result LoadWav(string, out AudioSpec, out IntPtr, out uint) Sdl the load wav using the specified file public static IntPtr LoadWav(string file, out AudioSpec spec, out IntPtr audioBuf, out uint audioLen) Parameters file string The file spec AudioSpec The spec audioBuf IntPtr The audio buf audioLen uint The audio len Returns IntPtr The int ptr LockAudioDevice(uint) Locks the audio device using the specified dev public static void LockAudioDevice(uint dev) Parameters dev uint The dev LockJoysticks() Locks the joysticks public static void LockJoysticks() LockTexture(IntPtr, ref RectangleI, out IntPtr, out int) Locks the texture using the specified texture public static int LockTexture(IntPtr texture, ref RectangleI rect, out IntPtr pixels, out int pitch) Parameters texture IntPtr The texture rect RectangleI The rect pixels IntPtr The pixels pitch int The pitch Returns int The int MakeCurrent(IntPtr, IntPtr) Gls the make current using the specified window public static int MakeCurrent(IntPtr window, IntPtr context) Parameters window IntPtr The window context IntPtr The context Returns int The int MaximizeWindow(IntPtr) Maximizes the window using the specified window public static void MaximizeWindow(IntPtr window) Parameters window IntPtr The window MinimizeWindow(IntPtr) Minimizes the window using the specified window public static void MinimizeWindow(IntPtr window) Parameters window IntPtr The window MixAudio(byte[], byte[], uint, int) Mixes the audio using the specified dst public static void MixAudio(byte[] dst, byte[] src, uint len, int volume) Parameters dst byte[] The dst src byte[] The src len uint The len volume int The volume MixAudioFormat(IntPtr, IntPtr, ushort, uint, int) Mixes the audio format using the specified dst public static void MixAudioFormat(IntPtr dst, IntPtr src, ushort format, uint len, int volume) Parameters dst IntPtr The dst src IntPtr The src format ushort The format len uint The len volume int The volume MixAudioFormat(byte[], byte[], ushort, uint, int) Mixes the audio format using the specified dst public static void MixAudioFormat(byte[] dst, byte[] src, ushort format, uint len, int volume) Parameters dst byte[] The dst src byte[] The src format ushort The format len uint The len volume int The volume MouseIsHaptic() Mouses the is haptic public static int MouseIsHaptic() Returns int The int NumHaptics() Nums the haptics public static int NumHaptics() Returns int The int NumJoysticks() Nums the joysticks public static int NumJoysticks() Returns int The int OpenAudioDevice(IntPtr, int, ref AudioSpec, out AudioSpec, int) Sdl the open audio device using the specified device public static uint OpenAudioDevice(IntPtr device, int isCapture, ref AudioSpec desired, out AudioSpec obtained, int allowedChanges) Parameters device IntPtr The device isCapture int The is capture desired AudioSpec The desired obtained AudioSpec The obtained allowedChanges int The allowed changes Returns uint The uint PeepEvents(Event[], int, EventAction, EventType, EventType) Peeps the events using the specified events public static int PeepEvents(Event[] events, int numEvents, EventAction action, EventType minType, EventType maxType) Parameters events Event[] The events numEvents int The num events action EventAction The action minType EventType The min type maxType EventType The max type Returns int The int PollEvent(out Event) Polls the event using the specified sdl event public static int PollEvent(out Event sdlEvent) Parameters sdlEvent Event The sdl event Returns int The int PushEvent(ref Event) Pushes the event using the specified sdl event public static int PushEvent(ref Event sdlEvent) Parameters sdlEvent Event The sdl event Returns int The int QueryTexture(IntPtr, out uint, out int, out int, out int) Queries the texture using the specified texture public static int QueryTexture(IntPtr texture, out uint format, out int access, out int w, out int h) Parameters texture IntPtr The texture format uint The format access int The access w int The h int The Returns int The int QueueAudio(int, byte[], uint) Queues the audio using the specified device id public static void QueueAudio(int deviceId, byte[] audioData, uint wavLength) Parameters deviceId int The device id audioData byte[] The audio data wavLength uint The wav length Quit() Sdl the quit public static void Quit() RaiseWindow(IntPtr) Raises the window using the specified window public static void RaiseWindow(IntPtr window) Parameters window IntPtr The window RegisterEvents(int) Registers the events using the specified num events public static uint RegisterEvents(int numEvents) Parameters numEvents int The num events Returns uint The uint RenderClear(IntPtr) Renders the clear using the specified renderer public static int RenderClear(IntPtr renderer) Parameters renderer IntPtr The renderer Returns int The int RenderCopy(IntPtr, IntPtr, ref RectangleI, ref RectangleI) Renders the copy using the specified renderer public static int RenderCopy(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI The dst rect Returns int The int RenderCopy(IntPtr, IntPtr, IntPtr, ref RectangleI) Renders the copy using the specified renderer public static int RenderCopy(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect Returns int The int RenderCopy(IntPtr, IntPtr, ref RectangleI, IntPtr) Renders the copy using the specified renderer public static int RenderCopy(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect Returns int The int RenderCopy(IntPtr, IntPtr, IntPtr, IntPtr) Renders the copy using the specified renderer public static int RenderCopy(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect Returns int The int RenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleI, double, ref PointI, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleI, double, ref PointI, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, ref RectangleI, IntPtr, double, ref PointI, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleI, double, IntPtr, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleI dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect RectangleI The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, IntPtr, IntPtr, double, ref PointI, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, ref PointI center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center PointI The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleI, double, IntPtr, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleI dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect RectangleI The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, ref RectangleI, IntPtr, double, IntPtr, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, IntPtr, IntPtr, double, IntPtr, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, ref RectangleI, ref RectangleF, double, ref PointF, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int RenderCopyEx(IntPtr, IntPtr, IntPtr, ref RectangleF, double, ref PointF, RendererFlips) Renders the copy ex using the specified renderer public static int RenderCopyEx(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, ref RectangleI, IntPtr, double, ref PointF, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, ref RectangleI, ref RectangleF, double, IntPtr, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, IntPtr, IntPtr, double, ref PointF, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, ref PointF center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center PointF The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, IntPtr, ref RectangleF, double, IntPtr, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, ref RectangleI, IntPtr, double, IntPtr, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyExF(IntPtr, IntPtr, IntPtr, IntPtr, double, IntPtr, RendererFlips) Renders the copy ex f using the specified renderer public static int RenderCopyExF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect, double angle, IntPtr center, RendererFlips flips) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect angle double The angle center IntPtr The center flips RendererFlips The flip Returns int The int RenderCopyF(IntPtr, IntPtr, ref RectangleI, ref RectangleF) Renders the copy f using the specified renderer public static int RenderCopyF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, ref RectangleF dst) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dst RectangleF The dst rect Returns int The int RenderCopyF(IntPtr, IntPtr, IntPtr, ref RectangleF) Renders the copy f using the specified renderer public static int RenderCopyF(IntPtr renderer, IntPtr texture, IntPtr srcRect, ref RectangleF dst) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dst RectangleF The dst rect Returns int The int RenderCopyF(IntPtr, IntPtr, ref RectangleI, IntPtr) Renders the copy f using the specified renderer public static int RenderCopyF(IntPtr renderer, IntPtr texture, ref RectangleI srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect RectangleI The src rect dstRect IntPtr The dst rect Returns int The int RenderCopyF(IntPtr, IntPtr, IntPtr, IntPtr) Renders the copy f using the specified renderer public static int RenderCopyF(IntPtr renderer, IntPtr texture, IntPtr srcRect, IntPtr dstRect) Parameters renderer IntPtr The renderer texture IntPtr The texture srcRect IntPtr The src rect dstRect IntPtr The dst rect Returns int The int RenderDrawLine(IntPtr, int, int, int, int) Renders the draw line using the specified renderer public static int RenderDrawLine(IntPtr renderer, int x1, int y1, int x2, int y2) Parameters renderer IntPtr The renderer x1 int The y1 int The x2 int The y2 int The Returns int The int RenderDrawLineF(IntPtr, float, float, float, float) Renders the draw line f using the specified renderer public static int RenderDrawLineF(IntPtr renderer, float x1, float y1, float x2, float y2) Parameters renderer IntPtr The renderer x1 float The y1 float The x2 float The y2 float The Returns int The int RenderDrawLines(IntPtr, PointI[], int) Renders the draw lines using the specified renderer public static int RenderDrawLines(IntPtr renderer, PointI[] points, int count) Parameters renderer IntPtr The renderer points PointI[] The points count int The count Returns int The int RenderDrawLinesF(IntPtr, PointF[], int) Renders the draw lines f using the specified renderer public static int RenderDrawLinesF(IntPtr renderer, PointF[] points, int count) Parameters renderer IntPtr The renderer points PointF[] The points count int The count Returns int The int RenderDrawPoint(IntPtr, int, int) Renders the draw point using the specified renderer public static int RenderDrawPoint(IntPtr renderer, int x, int y) Parameters renderer IntPtr The renderer x int The y int The Returns int The int RenderDrawPointF(IntPtr, float, float) Renders the draw point f using the specified renderer public static int RenderDrawPointF(IntPtr renderer, float x, float y) Parameters renderer IntPtr The renderer x float The y float The Returns int The int RenderDrawPoints(IntPtr, PointI[], int) Renders the draw points using the specified renderer public static int RenderDrawPoints(IntPtr renderer, PointI[] points, int count) Parameters renderer IntPtr The renderer points PointI[] The points count int The count Returns int The int RenderDrawPointsF(IntPtr, PointF[], int) Renders the draw points f using the specified renderer public static int RenderDrawPointsF(IntPtr renderer, PointF[] points, int count) Parameters renderer IntPtr The renderer points PointF[] The points count int The count Returns int The int RenderDrawRect(IntPtr, ref RectangleI) Renders the draw rect using the specified renderer public static int RenderDrawRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int RenderDrawRect(IntPtr, IntPtr) Renders the draw rect using the specified renderer public static int RenderDrawRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int RenderDrawRectF(IntPtr, ref RectangleF) Renders the draw rect f using the specified renderer public static int RenderDrawRectF(IntPtr renderer, ref RectangleF rect) Parameters renderer IntPtr The renderer rect RectangleF The rect Returns int The int RenderDrawRectF(IntPtr, IntPtr) Renders the draw rect f using the specified renderer public static int RenderDrawRectF(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int RenderDrawRects(IntPtr, RectangleI[], int) Renders the draw rects using the specified renderer public static int RenderDrawRects(IntPtr renderer, RectangleI[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleI[] The rects count int The count Returns int The int RenderDrawRectsF(IntPtr, RectangleF[], int) Renders the draw rects f using the specified renderer public static int RenderDrawRectsF(IntPtr renderer, RectangleF[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleF[] The rects count int The count Returns int The int RenderFillRect(IntPtr, ref RectangleI) Renders the fill rect using the specified renderer public static int RenderFillRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int RenderFillRect(IntPtr, IntPtr) Renders the fill rect using the specified renderer public static int RenderFillRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int RenderFillRectF(IntPtr, RectangleF) Renders the fill rect f using the specified renderer public static int RenderFillRectF(IntPtr renderer, RectangleF rect) Parameters renderer IntPtr The renderer rect RectangleF The rect Returns int The int RenderFillRectF(IntPtr, IntPtr) Renders the fill rect f using the specified renderer public static int RenderFillRectF(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int RenderFillRects(IntPtr, RectangleI[], int) Renders the fill rects using the specified renderer public static int RenderFillRects(IntPtr renderer, RectangleI[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleI[] The rects count int The count Returns int The int RenderFillRectsF(IntPtr, RectangleF[], int) Renders the fill rects f using the specified renderer public static int RenderFillRectsF(IntPtr renderer, RectangleF[] rects, int count) Parameters renderer IntPtr The renderer rects RectangleF[] The rects count int The count Returns int The int RenderGetClipRect(IntPtr, out RectangleI) Renders the get clip rect using the specified renderer public static void RenderGetClipRect(IntPtr renderer, out RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect RenderGetLogicalSize(IntPtr, out int, out int) Renders the get logical size using the specified renderer public static void RenderGetLogicalSize(IntPtr renderer, out int w, out int h) Parameters renderer IntPtr The renderer w int The h int The RenderGetScale(IntPtr, out float, out float) Renders the get scale using the specified renderer public static void RenderGetScale(IntPtr renderer, out float scaleX, out float scaleY) Parameters renderer IntPtr The renderer scaleX float The scale scaleY float The scale RenderGetViewport(IntPtr, out RectangleI) Renders the get viewport using the specified renderer public static int RenderGetViewport(IntPtr renderer, out RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int RenderIsClipEnabled(IntPtr) Renders the is clip enabled using the specified renderer public static bool RenderIsClipEnabled(IntPtr renderer) Parameters renderer IntPtr The renderer Returns bool The sdl bool RenderPresent(IntPtr) Renders the present using the specified renderer public static void RenderPresent(IntPtr renderer) Parameters renderer IntPtr The renderer RenderReadPixels(IntPtr, ref RectangleI, uint, IntPtr, int) Renders the read pixels using the specified renderer public static int RenderReadPixels(IntPtr renderer, ref RectangleI rect, uint format, IntPtr pixels, int pitch) Parameters renderer IntPtr The renderer rect RectangleI The rect format uint The format pixels IntPtr The pixels pitch int The pitch Returns int The int RenderSetClipRect(IntPtr, ref RectangleI) Renders the set clip rect using the specified renderer public static int RenderSetClipRect(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int RenderSetClipRect(IntPtr, IntPtr) Renders the set clip rect using the specified renderer public static int RenderSetClipRect(IntPtr renderer, IntPtr rect) Parameters renderer IntPtr The renderer rect IntPtr The rect Returns int The int RenderSetIntegerScale(IntPtr, bool) Renders the set integer scale using the specified renderer public static int RenderSetIntegerScale(IntPtr renderer, bool enable) Parameters renderer IntPtr The renderer enable bool The enable Returns int The int RenderSetLogicalSize(IntPtr, int, int) Renders the set logical size using the specified renderer public static int RenderSetLogicalSize(IntPtr renderer, int w, int h) Parameters renderer IntPtr The renderer w int The h int The Returns int The int RenderSetScale(IntPtr, float, float) Renders the set scale using the specified renderer public static int RenderSetScale(IntPtr renderer, float scaleX, float scaleY) Parameters renderer IntPtr The renderer scaleX float The scale scaleY float The scale Returns int The int RenderSetViewport(IntPtr, ref RectangleI) Renders the set viewport using the specified renderer public static int RenderSetViewport(IntPtr renderer, ref RectangleI rect) Parameters renderer IntPtr The renderer rect RectangleI The rect Returns int The int RenderTargetSupported(IntPtr) Renders the target supported using the specified renderer public static bool RenderTargetSupported(IntPtr renderer) Parameters renderer IntPtr The renderer Returns bool The sdl bool ResetAttributes() Gls the reset attributes public static void ResetAttributes() RestoreWindow(IntPtr) Restores the window using the specified window public static void RestoreWindow(IntPtr window) Parameters window IntPtr The window RwFromFile(string, string) Sdl the rw from file using the specified file private static IntPtr RwFromFile(string file, string mode) Parameters file string The file mode string The mode Returns IntPtr The rw ops SGetKeyName(KeyCodes) Sdl the get key name using the specified key public static string SGetKeyName(KeyCodes key) Parameters key KeyCodes The key Returns string The string ScanCodeToKeyCode(SdlScancode) Sdl the scancode to keycode using the specified x public static KeyCodes ScanCodeToKeyCode(SdlScancode x) Parameters x SdlScancode The Returns KeyCodes The sdl keycode SdlAudioBitSize(ushort) Sdl the audio bit size using the specified x public static ushort SdlAudioBitSize(ushort x) Parameters x ushort The Returns ushort The ushort SdlAudioIsBigEndian(ushort) Describes whether sdl audio is big endian public static bool SdlAudioIsBigEndian(ushort x) Parameters x ushort The Returns bool The bool SdlAudioIsFloat(ushort) Describes whether sdl audio is float public static bool SdlAudioIsFloat(ushort x) Parameters x ushort The Returns bool The bool SdlAudioIsInt(ushort) Describes whether sdl audio is int public static bool SdlAudioIsInt(ushort x) Parameters x ushort The Returns bool The bool SdlAudioIsLittleEndian(ushort) Describes whether sdl audio is little endian public static bool SdlAudioIsLittleEndian(ushort x) Parameters x ushort The Returns bool The bool SdlAudioIsSigned(ushort) Describes whether sdl audio is signed public static bool SdlAudioIsSigned(ushort x) Parameters x ushort The Returns bool The bool SdlAudioIsUnsigned(ushort) Describes whether sdl audio is unsigned public static bool SdlAudioIsUnsigned(ushort x) Parameters x ushort The Returns bool The bool SdlAudioStreamAvailable(IntPtr) Sdl the audio stream available using the specified stream public static int SdlAudioStreamAvailable(IntPtr stream) Parameters stream IntPtr The stream Returns int The int SdlAudioStreamClear(IntPtr) Sdl the audio stream clear using the specified stream public static void SdlAudioStreamClear(IntPtr stream) Parameters stream IntPtr The stream SdlAudioStreamGet(IntPtr, IntPtr, int) Sdl the audio stream get using the specified stream public static int SdlAudioStreamGet(IntPtr stream, IntPtr buf, int len) Parameters stream IntPtr The stream buf IntPtr The buf len int The len Returns int The int SdlAudioStreamPut(IntPtr, IntPtr, int) Sdl the audio stream put using the specified stream public static int SdlAudioStreamPut(IntPtr stream, IntPtr buf, int len) Parameters stream IntPtr The stream buf IntPtr The buf len int The len Returns int The int SdlDefinePixelFormat(TypePixel, uint, PackedLayout, byte, byte) Sdl the define pixel format using the specified type private static uint SdlDefinePixelFormat(TypePixel type, uint order, PackedLayout layout, byte bits, byte bytes) Parameters type TypePixel The type order uint The order layout PackedLayout The layout bits byte The bits bytes byte The bytes Returns uint The uint SdlDefinePixelFourcc(byte, byte, byte, byte) Sdl the define pixel fourcc using the specified a public static uint SdlDefinePixelFourcc(byte a, byte b, byte c, byte d) Parameters a byte The b byte The c byte The d byte The Returns uint The uint SdlFreeAudioStream(IntPtr) Sdl the free audio stream using the specified stream public static void SdlFreeAudioStream(IntPtr stream) Parameters stream IntPtr The stream SdlNewAudioStream(ushort, byte, int, ushort, byte, int) Sdl the new audio stream using the specified src format public static IntPtr SdlNewAudioStream(ushort srcFormat, byte srcChannels, int srcRate, ushort dstFormat, byte dstChannels, int dstRate) Parameters srcFormat ushort The src format srcChannels byte The src channels srcRate int The src rate dstFormat ushort The dst format dstChannels byte The dst channels dstRate int The dst rate Returns IntPtr The int ptr SdlOpenAudioDevice(string, int, ref AudioSpec, out AudioSpec, int) Sdl the open audio device using the specified device public static uint SdlOpenAudioDevice(string device, int isCapture, ref AudioSpec desired, out AudioSpec obtained, int allowedChanges) Parameters device string The device isCapture int The is capture desired AudioSpec The desired obtained AudioSpec The obtained allowedChanges int The allowed changes Returns uint The uint SdlPauseAudio(int) Sdl the pause audio using the specified pause on public static void SdlPauseAudio(int pauseOn) Parameters pauseOn int The pause on SdlPauseAudioDevice(uint, int) Sdl the pause audio device using the specified dev public static void SdlPauseAudioDevice(uint dev, int pauseOn) Parameters dev uint The dev pauseOn int The pause on SdlUnlockAudioDevice(uint) Sdl the unlock audio device using the specified dev public static void SdlUnlockAudioDevice(uint dev) Parameters dev uint The dev SetAttributeByInt(Attr, int) Gls the set attribute using the specified attr public static int SetAttributeByInt(Attr attr, int value) Parameters attr Attr The attr value int The value Returns int The int SetAttributeByProfile(Attr, Profiles) Sdl the gl set attribute using the specified attr public static int SetAttributeByProfile(Attr attr, Profiles profile) Parameters attr Attr The attr profile Profiles The profile Returns int The int SetClipRect(IntPtr, ref RectangleI) Sets the clip rect using the specified surface public static bool SetClipRect(IntPtr surface, ref RectangleI rect) Parameters surface IntPtr The surface rect RectangleI The rect Returns bool The sdl bool SetClipboardText(string) Sdl the set clipboard text using the specified text public static int SetClipboardText(string text) Parameters text string The text Returns int The result SetColorKey(IntPtr, int, uint) Sets the color key using the specified surface public static int SetColorKey(IntPtr surface, int flag, uint key) Parameters surface IntPtr The surface flag int The flag key uint The key Returns int The int SetCursor(IntPtr) Sets the cursor using the specified cursor public static void SetCursor(IntPtr cursor) Parameters cursor IntPtr The cursor SetError(string) Sdl the set error using the specified fmt and arg list public static void SetError(string fmtAndArgList) Parameters fmtAndArgList string The fmt and arg list SetEventFilter(SdlEventFilter, IntPtr) Sets the event filter using the specified filter public static void SetEventFilter(SdlEventFilter filter, IntPtr userdata) Parameters filter SdlEventFilter The filter userdata IntPtr The userdata SetHint(string, string) Sdl the set hint using the specified name public static bool SetHint(string name, string value) Parameters name string The name value string The value Returns bool The sdl bool SetHintWithPriority(string, string, HintPriority) Sdl the set hint with priority using the specified name public static bool SetHintWithPriority(string name, string value, HintPriority priority) Parameters name string The name value string The value priority HintPriority The priority Returns bool The sdl bool SetModState(KeyMods) Sets the mod state using the specified mod state public static void SetModState(KeyMods modState) Parameters modState KeyMods The mod state SetPaletteColors(IntPtr, Color[], int, int) Sets the palette colors using the specified palette public static int SetPaletteColors(IntPtr palette, Color[] colors, int firstColor, int nColors) Parameters palette IntPtr The palette colors Color[] The colors firstColor int The first color nColors int The colors Returns int The int SetPixelFormatPalette(IntPtr, IntPtr) Sets the pixel format palette using the specified format public static int SetPixelFormatPalette(IntPtr format, IntPtr palette) Parameters format IntPtr The format palette IntPtr The palette Returns int The int SetRelativeMouseMode(bool) Sets the relative mouse mode using the specified enabled public static int SetRelativeMouseMode(bool enabled) Parameters enabled bool The enabled Returns int The int SetRenderDrawBlendMode(IntPtr, BlendModes) Sets the render draw blend mode using the specified renderer public static int SetRenderDrawBlendMode(IntPtr renderer, BlendModes blendMode) Parameters renderer IntPtr The renderer blendMode BlendModes The blend mode Returns int The int SetRenderDrawColor(IntPtr, byte, byte, byte, byte) Sets the render draw color using the specified renderer public static int SetRenderDrawColor(IntPtr renderer, byte r, byte g, byte b, byte a) Parameters renderer IntPtr The renderer r byte The g byte The b byte The a byte The Returns int The int SetRenderTarget(IntPtr, IntPtr) Sets the render target using the specified renderer public static int SetRenderTarget(IntPtr renderer, IntPtr texture) Parameters renderer IntPtr The renderer texture IntPtr The texture Returns int The int SetSurfaceAlphaMod(IntPtr, byte) Sets the surface alpha mod using the specified surface public static int SetSurfaceAlphaMod(IntPtr surface, byte alpha) Parameters surface IntPtr The surface alpha byte The alpha Returns int The int SetSurfaceBlendMode(IntPtr, BlendModes) Sets the surface blend mode using the specified surface public static int SetSurfaceBlendMode(IntPtr surface, BlendModes blendMode) Parameters surface IntPtr The surface blendMode BlendModes The blend mode Returns int The int SetSurfaceColorMod(IntPtr, byte, byte, byte) Sets the surface color mod using the specified surface public static int SetSurfaceColorMod(IntPtr surface, byte r, byte g, byte b) Parameters surface IntPtr The surface r byte The g byte The b byte The Returns int The int SetSurfacePalette(IntPtr, IntPtr) Sets the surface palette using the specified surface public static int SetSurfacePalette(IntPtr surface, IntPtr palette) Parameters surface IntPtr The surface palette IntPtr The palette Returns int The int SetSwapInterval(int) Gls the set swap interval using the specified interval public static int SetSwapInterval(int interval) Parameters interval int The interval Returns int The int SetTextInputRect(ref RectangleI) Sets the text input rect using the specified rect public static void SetTextInputRect(ref RectangleI rect) Parameters rect RectangleI The rect SetTextureAlphaMod(IntPtr, byte) Sets the texture alpha mod using the specified texture public static int SetTextureAlphaMod(IntPtr texture, byte alpha) Parameters texture IntPtr The texture alpha byte The alpha Returns int The int SetTextureBlendMode(IntPtr, BlendModes) Sets the texture blend mode using the specified texture public static int SetTextureBlendMode(IntPtr texture, BlendModes blendMode) Parameters texture IntPtr The texture blendMode BlendModes The blend mode Returns int The int SetTextureColorMod(IntPtr, byte, byte, byte) Sets the texture color mod using the specified texture public static int SetTextureColorMod(IntPtr texture, byte r, byte g, byte b) Parameters texture IntPtr The texture r byte The g byte The b byte The Returns int The int SetWindowBordered(IntPtr, bool) Sets the window bordered using the specified window public static void SetWindowBordered(IntPtr window, bool bordered) Parameters window IntPtr The window bordered bool The bordered SetWindowBrightness(IntPtr, float) Sets the window brightness using the specified window public static int SetWindowBrightness(IntPtr window, float brightness) Parameters window IntPtr The window brightness float The brightness Returns int The int SetWindowData(IntPtr, string, IntPtr) Sdl the set window data using the specified window public static IntPtr SetWindowData(IntPtr window, string name, IntPtr userdata) Parameters window IntPtr The window name string The name userdata IntPtr The userdata Returns IntPtr The int ptr SetWindowDisplayMode(IntPtr, ref DisplayMode) Sets the window display mode using the specified window public static int SetWindowDisplayMode(IntPtr window, ref DisplayMode mode) Parameters window IntPtr The window mode DisplayMode The mode Returns int The int SetWindowDisplayMode(IntPtr, IntPtr) Sets the window display mode using the specified window public static int SetWindowDisplayMode(IntPtr window, IntPtr mode) Parameters window IntPtr The window mode IntPtr The mode Returns int The int SetWindowFullscreen(IntPtr, uint) Sets the window fullscreen using the specified window public static int SetWindowFullscreen(IntPtr window, uint flags) Parameters window IntPtr The window flags uint The flags Returns int The int SetWindowGammaRamp(IntPtr, ushort[], ushort[], ushort[]) Sets the window gamma ramp using the specified window public static int SetWindowGammaRamp(IntPtr window, ushort[] red, ushort[] green, ushort[] blue) Parameters window IntPtr The window red ushort[] The red green ushort[] The green blue ushort[] The blue Returns int The int SetWindowGrab(IntPtr, bool) Sets the window grab using the specified window public static void SetWindowGrab(IntPtr window, bool grabbed) Parameters window IntPtr The window grabbed bool The grabbed SetWindowHitTest(IntPtr, SdlHitTest, IntPtr) Sets the window hit test using the specified window public static int SetWindowHitTest(IntPtr window, SdlHitTest callback, IntPtr callbackData) Parameters window IntPtr The window callback SdlHitTest The callback callbackData IntPtr The callback data Returns int The int SetWindowIcon(IntPtr, IntPtr) Sets the window icon using the specified window public static void SetWindowIcon(IntPtr window, IntPtr icon) Parameters window IntPtr The window icon IntPtr The icon SetWindowInputFocus(IntPtr) Sets the window input focus using the specified window public static int SetWindowInputFocus(IntPtr window) Parameters window IntPtr The window Returns int The int SetWindowMaximumSize(IntPtr, int, int) Sets the window maximum size using the specified window public static void SetWindowMaximumSize(IntPtr window, int maxW, int maxH) Parameters window IntPtr The window maxW int The max maxH int The max SetWindowMinimumSize(IntPtr, int, int) Sets the window minimum size using the specified window public static void SetWindowMinimumSize(IntPtr window, int minW, int minH) Parameters window IntPtr The window minW int The min minH int The min SetWindowModalFor(IntPtr, IntPtr) Sets the window modal for using the specified modal window public static int SetWindowModalFor(IntPtr modalWindow, IntPtr parentWindow) Parameters modalWindow IntPtr The modal window parentWindow IntPtr The parent window Returns int The int SetWindowOpacity(IntPtr, float) Sets the window opacity using the specified window public static int SetWindowOpacity(IntPtr window, float opacity) Parameters window IntPtr The window opacity float The opacity Returns int The int SetWindowPosition(IntPtr, int, int) Sets the window position using the specified window public static void SetWindowPosition(IntPtr window, int x, int y) Parameters window IntPtr The window x int The y int The SetWindowResizable(IntPtr, bool) Sets the window resizable using the specified window public static void SetWindowResizable(IntPtr window, bool resizable) Parameters window IntPtr The window resizable bool The resizable SetWindowSize(IntPtr, int, int) Sets the window size using the specified window public static void SetWindowSize(IntPtr window, int w, int h) Parameters window IntPtr The window w int The h int The SetWindowTitle(IntPtr, string) Sdl the set window title using the specified window public static void SetWindowTitle(IntPtr window, string title) Parameters window IntPtr The window title string The title ShowCursor(int) Shows the cursor using the specified toggle public static int ShowCursor(int toggle) Parameters toggle int The toggle Returns int The int ShowWindow(IntPtr) Shows the window using the specified window public static void ShowWindow(IntPtr window) Parameters window IntPtr The window StartTextInput() Starts the text input public static void StartTextInput() StopTextInput() Stops the text input public static void StopTextInput() SwapWindow(IntPtr) Gls the swap window using the specified window public static void SwapWindow(IntPtr window) Parameters window IntPtr The window UnbindTexture(IntPtr) Gls the unbind texture using the specified texture public static int UnbindTexture(IntPtr texture) Parameters texture IntPtr The texture Returns int The int UnlockJoysticks() Unlocks the joysticks public static void UnlockJoysticks() UpdateTexture(IntPtr, ref RectangleI, IntPtr, int) Updates the texture using the specified texture public static int UpdateTexture(IntPtr texture, ref RectangleI rect, IntPtr pixels, int pitch) Parameters texture IntPtr The texture rect RectangleI The rect pixels IntPtr The pixels pitch int The pitch Returns int The int UpdateTexture(IntPtr, IntPtr, IntPtr, int) Updates the texture using the specified texture public static int UpdateTexture(IntPtr texture, IntPtr rect, IntPtr pixels, int pitch) Parameters texture IntPtr The texture rect IntPtr The rect pixels IntPtr The pixels pitch int The pitch Returns int The int UpdateTexture(IntPtr, IntPtr, byte[], int) Updates the texture using the specified texture public static int UpdateTexture(IntPtr texture, IntPtr rect, byte[] pixels, int pitch) Parameters texture IntPtr The texture rect IntPtr The rect pixels byte[] The pixels pitch int The pitch Returns int The int UpdateWindowSurface(IntPtr) Updates the window surface using the specified window public static int UpdateWindowSurface(IntPtr window) Parameters window IntPtr The window Returns int The int UpdateWindowSurfaceRects(IntPtr, RectangleI[], int) Updates the window surface rects using the specified window public static int UpdateWindowSurfaceRects(IntPtr window, RectangleI[] rects, int numRects) Parameters window IntPtr The window rects RectangleI[] The rects numRects int The num rects Returns int The int UpperBlit(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Uppers the blit using the specified src public static int UpperBlit(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int UpperBlitScaled(IntPtr, ref RectangleI, IntPtr, ref RectangleI) Uppers the blit scaled using the specified src public static int UpperBlitScaled(IntPtr src, ref RectangleI srcRect, IntPtr dst, ref RectangleI dstRect) Parameters src IntPtr The src srcRect RectangleI The src rect dst IntPtr The dst dstRect RectangleI The dst rect Returns int The int WarpMouseGlobal(int, int) Warps the mouse global using the specified x public static int WarpMouseGlobal(int x, int y) Parameters x int The y int The Returns int The int WarpMouseInWindow(IntPtr, int, int) Warps the mouse in window using the specified window public static void WarpMouseInWindow(IntPtr window, int x, int y) Parameters window IntPtr The window x int The y int The WasInit(InitSettings) Sdl the was init using the specified flags public static uint WasInit(InitSettings flags) Parameters flags InitSettings The flags Returns uint The uint WindowPosCenteredDisplay(int) Sdl the window pos centered display using the specified x public static int WindowPosCenteredDisplay(int x) Parameters x int The Returns int The int WindowPosIsCentered(int) Describes whether sdl window pos is centered public static bool WindowPosIsCentered(int x) Parameters x int The Returns bool The bool WindowPosIsUndefined(int) Describes whether sdl window pos is undefined public static bool WindowPosIsUndefined(int x) Parameters x int The Returns bool The bool WindowPosUndefinedDisplay(int) Sdl the window pos undefined display using the specified x public static int WindowPosUndefinedDisplay(int x) Parameters x int The Returns int The int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.AudioDeviceEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.AudioDeviceEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct AudioDeviceEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl audio device event public struct AudioDeviceEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields isCapture The is capture public byte isCapture Field Value byte timestamp The timestamp public uint timestamp Field Value uint type The type public uint type Field Value uint which The which public uint which Field Value uint"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.AudioSpec.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.AudioSpec.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct AudioSpec Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl audio spec public struct AudioSpec Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields silence The silence public readonly byte silence Field Value byte size The size public readonly uint size Field Value uint Properties Callback The callback public SdlAudioCallback Callback { readonly get; set; } Property Value SdlAudioCallback Channels The channels public byte Channels { readonly get; set; } Property Value byte Format The SDL_AudioFormat public ushort Format { readonly get; set; } Property Value ushort Freq The freq public int Freq { readonly get; set; } Property Value int Samples The samples public ushort Samples { readonly get; set; } Property Value ushort Userdata The userdata public IntPtr Userdata { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.ControllerAxisEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.ControllerAxisEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerAxisEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl controller axis event public struct ControllerAxisEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields axis The axis public byte axis Field Value byte timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType which The which SDL_JoystickID public int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.ControllerButtonEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.ControllerButtonEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerButtonEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl controller button event public struct ControllerButtonEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields button The button public byte button Field Value byte state The state public byte state Field Value byte timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType which The which SDL_JoystickID public int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.ControllerDeviceEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.ControllerDeviceEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerDeviceEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl controller device event public struct ControllerDeviceEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType which The which joystick id public int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.ControllerSensorEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.ControllerSensorEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerSensorEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl controller sensor event public struct ControllerSensorEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields data1 The data public readonly float data1 Field Value float data2 The data public readonly float data2 Field Value float data3 The data public readonly float data3 Field Value float sensor The sensor public readonly int sensor Field Value int timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly uint type Field Value uint which The which SDL_JoystickID public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.ControllerTouchpadEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.ControllerTouchpadEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerTouchpadEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl controller touch pad event public struct ControllerTouchpadEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields finger The finger public int finger Field Value int pressure The pressure public float pressure Field Value float timestamp The timestamp public uint timestamp Field Value uint touchpad The touchpad public int touchpad Field Value int type The type public uint type Field Value uint which The which SDL_JoystickID public int which Field Value int x The public float x Field Value float y The public float y Field Value float"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.DisplayEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.DisplayEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DisplayEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl display event public struct DisplayEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields display The display public uint display Field Value uint displayEvent The display event public DisplayEventId displayEvent Field Value DisplayEventId timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.DisplayMode.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.DisplayMode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DisplayMode Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl display mode public struct DisplayMode Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields format The format public uint format Field Value uint h The public int h Field Value int refresh_rate The refresh rate public int refresh_rate Field Value int w The public int w Field Value int Properties DriverData The driver data public IntPtr DriverData { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.DollarGestureEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.DollarGestureEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DollarGestureEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl dollar gesture event public struct DollarGestureEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields error The error public float error Field Value float gestureId The gesture id public long gestureId Field Value long numFingers The num fingers public uint numFingers Field Value uint timestamp The timestamp public uint timestamp Field Value uint touchId The touch id public long touchId Field Value long type The type public uint type Field Value uint x The public float x Field Value float y The public float y Field Value float"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.DropEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.DropEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DropEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl drop event public struct DropEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType windowID The window id public readonly uint windowID Field Value uint Properties File The file public IntPtr File { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.Event.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.Event.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Event Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl event public struct Event Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields aDevice The audio device public AudioDeviceEvent aDevice Field Value AudioDeviceEvent button The button public MouseButtonEvent button Field Value MouseButtonEvent cAxis The c axis public ControllerAxisEvent cAxis Field Value ControllerAxisEvent cButton The c button public ControllerButtonEvent cButton Field Value ControllerButtonEvent cDevice The c device public ControllerDeviceEvent cDevice Field Value ControllerDeviceEvent cSensor The c sensor public ControllerSensorEvent cSensor Field Value ControllerSensorEvent cTouchpad The c touchpad public ControllerTouchpadEvent cTouchpad Field Value ControllerTouchpadEvent dGesture The d gesture public DollarGestureEvent dGesture Field Value DollarGestureEvent display The display public DisplayEvent display Field Value DisplayEvent drop The drop public DropEvent drop Field Value DropEvent edit The edit public TextEditingEvent edit Field Value TextEditingEvent jAxis The j axis public JoyAxisEvent jAxis Field Value JoyAxisEvent jBall The j ball public JoyBallEvent jBall Field Value JoyBallEvent jButton The j button public JoyButtonEvent jButton Field Value JoyButtonEvent jDevice The j device public JoyDeviceEvent jDevice Field Value JoyDeviceEvent jHat The j hat public JoyHatEvent jHat Field Value JoyHatEvent key The key public KeyboardEvent key Field Value KeyboardEvent mGesture The m gesture public MultiGestureEvent mGesture Field Value MultiGestureEvent motion The motion public MouseMotionEvent motion Field Value MouseMotionEvent padding0 The padding private readonly byte padding0 Field Value byte padding1 The padding private readonly byte padding1 Field Value byte padding10 The padding 10 private readonly byte padding10 Field Value byte padding11 The padding 11 private readonly byte padding11 Field Value byte padding12 The padding 12 private readonly byte padding12 Field Value byte padding13 The padding 13 private readonly byte padding13 Field Value byte padding14 The padding 14 private readonly byte padding14 Field Value byte padding15 The padding 15 private readonly byte padding15 Field Value byte padding16 The padding 16 private readonly byte padding16 Field Value byte padding17 The padding 17 private readonly byte padding17 Field Value byte padding18 The padding 18 private readonly byte padding18 Field Value byte padding19 The padding 19 private readonly byte padding19 Field Value byte padding2 The padding private readonly byte padding2 Field Value byte padding20 The padding 20 private readonly byte padding20 Field Value byte padding21 The padding 21 private readonly byte padding21 Field Value byte padding22 The padding 22 private readonly byte padding22 Field Value byte padding23 The padding 23 private readonly byte padding23 Field Value byte padding24 The padding 24 private readonly byte padding24 Field Value byte padding25 The padding 25 private readonly byte padding25 Field Value byte padding26 The padding 26 private readonly byte padding26 Field Value byte padding27 The padding 27 private readonly byte padding27 Field Value byte padding28 The padding 28 private readonly byte padding28 Field Value byte padding29 The padding 29 private readonly byte padding29 Field Value byte padding3 The padding private readonly byte padding3 Field Value byte padding30 The padding 30 private readonly byte padding30 Field Value byte padding31 The padding 31 private readonly byte padding31 Field Value byte padding32 The padding 32 private readonly byte padding32 Field Value byte padding33 The padding 33 private readonly byte padding33 Field Value byte padding34 The padding 34 private readonly byte padding34 Field Value byte padding35 The padding 35 private readonly byte padding35 Field Value byte padding36 The padding 36 private readonly byte padding36 Field Value byte padding37 The padding 37 private readonly byte padding37 Field Value byte padding38 The padding 38 private readonly byte padding38 Field Value byte padding39 The padding 39 private readonly byte padding39 Field Value byte padding4 The padding private readonly byte padding4 Field Value byte padding40 The padding 40 private readonly byte padding40 Field Value byte padding41 The padding 41 private readonly byte padding41 Field Value byte padding42 The padding 42 private readonly byte padding42 Field Value byte padding43 The padding 43 private readonly byte padding43 Field Value byte padding44 The padding 44 private readonly byte padding44 Field Value byte padding45 The padding 45 private readonly byte padding45 Field Value byte padding46 The padding 46 private readonly byte padding46 Field Value byte padding47 The padding 47 private readonly byte padding47 Field Value byte padding48 The padding 48 private readonly byte padding48 Field Value byte padding49 The padding 49 private readonly byte padding49 Field Value byte padding5 The padding private readonly byte padding5 Field Value byte padding50 The padding 50 private readonly byte padding50 Field Value byte padding51 The padding 51 private readonly byte padding51 Field Value byte padding52 The padding 52 private readonly byte padding52 Field Value byte padding53 The padding 53 private readonly byte padding53 Field Value byte padding54 The padding 54 private readonly byte padding54 Field Value byte padding55 The padding 55 private readonly byte padding55 Field Value byte padding6 The padding private readonly byte padding6 Field Value byte padding7 The padding private readonly byte padding7 Field Value byte padding8 The padding private readonly byte padding8 Field Value byte padding9 The padding private readonly byte padding9 Field Value byte quit The quit public QuitEvent quit Field Value QuitEvent sensor The sensor public SensorEvent sensor Field Value SensorEvent sysWm The sys wm public SysWmEvent sysWm Field Value SysWmEvent tFinger The t finger public TouchFingerEvent tFinger Field Value TouchFingerEvent text The text public TextInputEvent text Field Value TextInputEvent type The type public EventType type Field Value EventType typeFSharp The type sharp public EventType typeFSharp Field Value EventType user The user public UserEvent user Field Value UserEvent wheel The wheel public MouseWheelEvent wheel Field Value MouseWheelEvent window The window public WindowEvent window Field Value WindowEvent"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.GameControllerButtonBind.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.GameControllerButtonBind.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct GameControllerButtonBind Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl game controller button bind public struct GameControllerButtonBind Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields bindType The bind type public GameControllerBindType bindType Field Value GameControllerBindType value The value public InternalGameControllerButtonBindUnion value Field Value InternalGameControllerButtonBindUnion"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.GameControllerType.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.GameControllerType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum GameControllerType Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl game controller type enum public enum GameControllerType Fields ControllerTypeUnknown = 0 The sdl controller type unknown sdl game controller type ControllerTypeXbox360 = 1 The sdl controller type xbox360 sdl game controller type ControllerTypeXboxOne = 2 The sdl controller type xbox one sdl game controller type ControllerTypePs3 = 3 The sdl controller type ps3 sdl game controller type ControllerTypePs4 = 4 The sdl controller type ps4 sdl game controller type ControllerTypeNintendoSwitchPro = 5 The sdl controller type nintendo switch pro sdl game controller type ControllerTypeVirtual = 6 The sdl controller type virtual sdl game controller type ControllerTypePs5 = 7 The sdl controller type ps5 sdl game controller type ControllerTypeAmazonLuna = 8 The sdl controller type amazon luna sdl game controller type ControllerTypeGoogleStadia = 9 The sdl controller type google stadia sdl game controller type"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.GenericEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.GenericEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct GenericEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl generic event public struct GenericEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.HapticDirection.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.HapticDirection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct HapticDirection Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl haptic direction public struct HapticDirection Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields dir The dir public readonly int[] dir Field Value int[] type The type public readonly byte type Field Value byte"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.Hint.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.Hint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Hint Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl hint class public static class Hint Inheritance object Hint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields HintAccelerometerAsJoystick The sdl hint accelerometer as joystick public const string HintAccelerometerAsJoystick = \"SDL_ACCELEROMETER_AS_JOYSTICK\" Field Value string HintAllowAltTabWhileGrabbed The sdl hint allow alt tab while grabbed public const string HintAllowAltTabWhileGrabbed = \"SDL_ALLOW_ALT_TAB_WHILE_GRABBED\" Field Value string HintAllowTopmost The sdl hint allow topmost public const string HintAllowTopmost = \"SDL_ALLOW_TOPMOST\" Field Value string HintAndroidApkExpansionMainFileVersion The sdl hint android apk expansion main file version public const string HintAndroidApkExpansionMainFileVersion = \"SDL_ANDROID_APK_EXPANSION_MAIN_FILE_VERSION\" Field Value string HintAndroidApkExpansionPatchFileVersion The sdl hint android apk expansion patch file version public const string HintAndroidApkExpansionPatchFileVersion = \"SDL_ANDROID_APK_EXPANSION_PATCH_FILE_VERSION\" Field Value string HintAndroidBlockOnPause The sdl hint android block on pause public const string HintAndroidBlockOnPause = \"SDL_ANDROID_BLOCK_ON_PAUSE\" Field Value string HintAndroidBlockOnPausePauseAudio The sdl hint android block on pause pause audio public const string HintAndroidBlockOnPausePauseAudio = \"SDL_ANDROID_BLOCK_ON_PAUSE_PAUSEAUDIO\" Field Value string HintAndroidSeparateMouseAndTouch The sdl hint android separate mouse and touch public const string HintAndroidSeparateMouseAndTouch = \"SDL_ANDROID_SEPARATE_MOUSE_AND_TOUCH\" Field Value string HintAndroidTrapBackButton The sdl hint android trap back button public const string HintAndroidTrapBackButton = \"SDL_ANDROID_TRAP_BACK_BUTTON\" Field Value string HintAppName The sdl hint app name public const string HintAppName = \"SDL_APP_NAME\" Field Value string HintAppleTvRemoteAllowRotation The sdl hint apple tv remote allow rotation public const string HintAppleTvRemoteAllowRotation = \"SDL_APPLE_TV_REMOTE_ALLOW_ROTATION\" Field Value string HintAudioDeviceAppName The sdl hint audio device app name public const string HintAudioDeviceAppName = \"SDL_AUDIO_DEVICE_APP_NAME\" Field Value string HintAudioDeviceStreamName The sdl hint audio device stream name public const string HintAudioDeviceStreamName = \"SDL_AUDIO_DEVICE_STREAM_NAME\" Field Value string HintAudioDeviceStreamRole The sdl hint audio device stream role public const string HintAudioDeviceStreamRole = \"SDL_AUDIO_DEVICE_STREAM_ROLE\" Field Value string HintAudioIncludeMonitors The sdl hint audio include monitors public const string HintAudioIncludeMonitors = \"SDL_AUDIO_INCLUDE_MONITORS\" Field Value string HintAudioResamplingMode The sdl hint audio resampling mode public const string HintAudioResamplingMode = \"SDL_AUDIO_RESAMPLING_MODE\" Field Value string HintAutoUpdateJoysticks The sdl hint auto update joysticks public const string HintAutoUpdateJoysticks = \"SDL_AUTO_UPDATE_JOYSTICKS\" Field Value string HintAutoUpdateSensors The sdl hint auto update sensors public const string HintAutoUpdateSensors = \"SDL_AUTO_UPDATE_SENSORS\" Field Value string HintBmpSaveLegacyFormat The sdl hint bmp save legacy format public const string HintBmpSaveLegacyFormat = \"SDL_BMP_SAVE_LEGACY_FORMAT\" Field Value string HintCtrlClickEmulateRightClick The sdl hint ctrl click emulate right click public const string HintCtrlClickEmulateRightClick = \"SDL_CTRL_CLICK_EMULATE_RIGHT_CLICK\" Field Value string HintDisplayUsableBounds The sdl hint display usable bounds public const string HintDisplayUsableBounds = \"SDL_DISPLAY_USABLE_BOUNDS\" Field Value string HintEmscriptenAsyncify The sdl hint emscripten asyncify public const string HintEmscriptenAsyncify = \"SDL_EMSCRIPTEN_ASYNCIFY\" Field Value string HintEmscriptenKeyboardElement The sdl hint emscripten keyboard element public const string HintEmscriptenKeyboardElement = \"SDL_EMSCRIPTEN_KEYBOARD_ELEMENT\" Field Value string HintEnableSteamControllers The sdl hint enable steam controllers public const string HintEnableSteamControllers = \"SDL_ENABLE_STEAM_CONTROLLERS\" Field Value string HintEventLogging The sdl hint event logging public const string HintEventLogging = \"SDL_EVENT_LOGGING\" Field Value string HintFramebufferAcceleration The sdl hint framebuffer acceleration public const string HintFramebufferAcceleration = \"SDL_FRAMEBUFFER_ACCELERATION\" Field Value string HintGameControllerConfig The sdl hint game controller config public const string HintGameControllerConfig = \"SDL_GAMECONTROLLERCONFIG\" Field Value string HintGameControllerConfigFile The sdl hint game controller config file public const string HintGameControllerConfigFile = \"SDL_GAMECONTROLLERCONFIG_FILE\" Field Value string HintGameControllerType The sdl hint game controller type public const string HintGameControllerType = \"SDL_GAMECONTROLLERTYPE\" Field Value string HintGameControllerUseButtonLabels The sdl hint game controller use button labels public const string HintGameControllerUseButtonLabels = \"SDL_GAMECONTROLLER_USE_BUTTON_LABELS\" Field Value string HintGrabKeyboard The sdl hint grab keyboard public const string HintGrabKeyboard = \"SDL_GRAB_KEYBOARD\" Field Value string HintIdleTimerDisabled The sdl hint idle timer disabled public const string HintIdleTimerDisabled = \"SDL_IOS_IDLE_TIMER_DISABLED\" Field Value string HintImeInternalEditing The sdl hint ime internal editing public const string HintImeInternalEditing = \"SDL_IME_INTERNAL_EDITING\" Field Value string HintImeShowUi The sdl hint ime show ui public const string HintImeShowUi = \"SDL_IME_SHOW_UI\" Field Value string HintIosHideHomeIndicator The sdl hint ios hide home indicator public const string HintIosHideHomeIndicator = \"SDL_IOS_HIDE_HOME_INDICATOR\" Field Value string HintJoystickAllowBackgroundEvents The sdl hint joystick allow background events public const string HintJoystickAllowBackgroundEvents = \"SDL_JOYSTICK_ALLOW_BACKGROUND_EVENTS\" Field Value string HintJoystickDevice The sdl hint joystick device public const string HintJoystickDevice = \"SDL_JOYSTICK_DEVICE\" Field Value string HintJoystickHidapi The sdl hint joystick hidapi public const string HintJoystickHidapi = \"SDL_JOYSTICK_HIDAPI\" Field Value string HintJoystickHidapiCorrelateXInput The sdl hint joystick hidapi correlate x input public const string HintJoystickHidapiCorrelateXInput = \"SDL_JOYSTICK_HIDAPI_CORRELATE_XINPUT\" Field Value string HintJoystickHidapiGameCube The sdl hint joystick hidapi game cube public const string HintJoystickHidapiGameCube = \"SDL_JOYSTICK_HIDAPI_GAMECUBE\" Field Value string HintJoystickHidapiJoyCons The sdl hint joystick hidapi joy cons public const string HintJoystickHidapiJoyCons = \"SDL_JOYSTICK_HIDAPI_JOY_CONS\" Field Value string HintJoystickHidapiLuna The sdl hint joystick hidapi luna public const string HintJoystickHidapiLuna = \"SDL_JOYSTICK_HIDAPI_LUNA\" Field Value string HintJoystickHidapiPs4 The sdl hint joystick hidapi ps4 public const string HintJoystickHidapiPs4 = \"SDL_JOYSTICK_HIDAPI_PS4\" Field Value string HintJoystickHidapiPs4Rumble The sdl hint joystick hidapi ps4 rumble public const string HintJoystickHidapiPs4Rumble = \"SDL_JOYSTICK_HIDAPI_PS4_RUMBLE\" Field Value string HintJoystickHidapiPs5 The sdl hint joystick hidapi ps5 public const string HintJoystickHidapiPs5 = \"SDL_JOYSTICK_HIDAPI_PS5\" Field Value string HintJoystickHidapiPs5PlayerLed The sdl hint joystick hidapi ps5 player led public const string HintJoystickHidapiPs5PlayerLed = \"SDL_JOYSTICK_HIDAPI_PS5_PLAYER_LED\" Field Value string HintJoystickHidapiPs5Rumble The sdl hint joystick hidapi ps5 rumble public const string HintJoystickHidapiPs5Rumble = \"SDL_JOYSTICK_HIDAPI_PS5_RUMBLE\" Field Value string HintJoystickHidapiStadia The sdl hint joystick hidapi stadia public const string HintJoystickHidapiStadia = \"SDL_JOYSTICK_HIDAPI_STADIA\" Field Value string HintJoystickHidapiSteam The sdl hint joystick hidapi steam public const string HintJoystickHidapiSteam = \"SDL_JOYSTICK_HIDAPI_STEAM\" Field Value string HintJoystickHidapiSwitch The sdl hint joystick hidapi switch public const string HintJoystickHidapiSwitch = \"SDL_JOYSTICK_HIDAPI_SWITCH\" Field Value string HintJoystickHidapiSwitchHomeLed The sdl hint joystick hidapi switch home led public const string HintJoystickHidapiSwitchHomeLed = \"SDL_JOYSTICK_HIDAPI_SWITCH_HOME_LED\" Field Value string HintJoystickHidapiXbox The sdl hint joystick hidapi xbox public const string HintJoystickHidapiXbox = \"SDL_JOYSTICK_HIDAPI_XBOX\" Field Value string HintJoystickRawInput The sdl hint joystick raw input public const string HintJoystickRawInput = \"SDL_JOYSTICK_RAWINPUT\" Field Value string HintJoystickRawInputCorrelateXInput The sdl hint joystick raw input correlate x input public const string HintJoystickRawInputCorrelateXInput = \"SDL_JOYSTICK_RAWINPUT_CORRELATE_XINPUT\" Field Value string HintKmSdFmRequireDrmMaster The sdl hint km sd rm require drm master public const string HintKmSdFmRequireDrmMaster = \"SDL_KMSDRM_REQUIRE_DRM_MASTER\" Field Value string HintLinuxJoystickClassic The sdl hint linux joystick classic public const string HintLinuxJoystickClassic = \"SDL_LINUX_JOYSTICK_CLASSIC\" Field Value string HintLinuxJoystickDeadZones The sdl hint linux joystick dead zones public const string HintLinuxJoystickDeadZones = \"SDL_LINUX_JOYSTICK_DEADZONES\" Field Value string HintMacBackgroundApp The sdl hint mac background app public const string HintMacBackgroundApp = \"SDL_MAC_BACKGROUND_APP\" Field Value string HintMouseDoubleClickRadius The sdl hint mouse double click radius public const string HintMouseDoubleClickRadius = \"SDL_MOUSE_DOUBLE_CLICK_RADIUS\" Field Value string HintMouseDoubleClickTime The sdl hint mouse double click time public const string HintMouseDoubleClickTime = \"SDL_MOUSE_DOUBLE_CLICK_TIME\" Field Value string HintMouseFocusClickThrough The sdl hint mouse focus click through public const string HintMouseFocusClickThrough = \"SDL_MOUSE_FOCUS_CLICKTHROUGH\" Field Value string HintMouseNormalSpeedScale The sdl hint mouse normal speed scale public const string HintMouseNormalSpeedScale = \"SDL_MOUSE_NORMAL_SPEED_SCALE\" Field Value string HintMouseRelativeModeWarp The sdl hint mouse relative mode warp public const string HintMouseRelativeModeWarp = \"SDL_MOUSE_RELATIVE_MODE_WARP\" Field Value string HintMouseRelativeScaling The sdl hint mouse relative scaling public const string HintMouseRelativeScaling = \"SDL_MOUSE_RELATIVE_SCALING\" Field Value string HintMouseRelativeSpeedScale The sdl hint mouse relative speed scale public const string HintMouseRelativeSpeedScale = \"SDL_MOUSE_RELATIVE_SPEED_SCALE\" Field Value string HintMouseTouchEvents The sdl hint mouse touch events public const string HintMouseTouchEvents = \"SDL_MOUSE_TOUCH_EVENTS\" Field Value string HintNoSignalHandlers The sdl hint no signal handlers public const string HintNoSignalHandlers = \"SDL_NO_SIGNAL_HANDLERS\" Field Value string HintOrientations The sdl hint orientations public const string HintOrientations = \"SDL_IOS_ORIENTATIONS\" Field Value string HintPollSentinel The sdl hint poll sentinel public const string HintPollSentinel = \"SDL_POLL_SENTINEL\" Field Value string HintPreferredLocales The sdl hint preferred locales public const string HintPreferredLocales = \"SDL_PREFERRED_LOCALES\" Field Value string HintRenderBatching The sdl hint render batching public const string HintRenderBatching = \"SDL_RENDER_BATCHING\" Field Value string HintRenderDirect3DThreadsafe The sdl hint render direct3d threadsafe public const string HintRenderDirect3DThreadsafe = \"SDL_RENDER_DIRECT3D_THREADSAFE\" Field Value string HintRenderDriver The sdl hint render driver public const string HintRenderDriver = \"SDL_RENDER_DRIVER\" Field Value string HintRenderLogicalSizeMode The sdl hint render logical size mode public const string HintRenderLogicalSizeMode = \"SDL_RENDER_LOGICAL_SIZE_MODE\" Field Value string HintRenderOpenglShaders The sdl hint render opengl shaders public const string HintRenderOpenglShaders = \"SDL_RENDER_OPENGL_SHADERS\" Field Value string HintRenderScaleQuality The sdl hint render scale quality public const string HintRenderScaleQuality = \"SDL_RENDER_SCALE_QUALITY\" Field Value string HintRenderVsync The sdl hint render vsync public const string HintRenderVsync = \"SDL_RENDER_VSYNC\" Field Value string HintScreensaverInhibitActivityName The sdl hint screensaver inhibit activity name public const string HintScreensaverInhibitActivityName = \"SDL_SCREENSAVER_INHIBIT_ACTIVITY_NAME\" Field Value string HintThreadForceRealtimeTimeCritical The sdl hint thread force realtime time critical public const string HintThreadForceRealtimeTimeCritical = \"SDL_THREAD_FORCE_REALTIME_TIME_CRITICAL\" Field Value string HintThreadPriorityPolicy The sdl hint thread priority policy public const string HintThreadPriorityPolicy = \"SDL_THREAD_PRIORITY_POLICY\" Field Value string HintThreadStackSize The sdl hint thread stack size public const string HintThreadStackSize = \"SDL_THREAD_STACK_SIZE\" Field Value string HintTimerResolution The sdl hint timer resolution public const string HintTimerResolution = \"SDL_TIMER_RESOLUTION\" Field Value string HintTouchMouseEvents The sdl hint touch mouse events public const string HintTouchMouseEvents = \"SDL_TOUCH_MOUSE_EVENTS\" Field Value string HintTvRemoteAsJoystick The sdl hint tv remote as joystick public const string HintTvRemoteAsJoystick = \"SDL_TV_REMOTE_AS_JOYSTICK\" Field Value string HintVideoAllowScreensaver The sdl hint video allow screensaver public const string HintVideoAllowScreensaver = \"SDL_VIDEO_ALLOW_SCREENSAVER\" Field Value string HintVideoEglAllowTransparency The sdl hint video egl allow transparency public const string HintVideoEglAllowTransparency = \"SDL_VIDEO_EGL_ALLOW_TRANSPARENCY\" Field Value string HintVideoExternalContext The sdl hint video external context public const string HintVideoExternalContext = \"SDL_VIDEO_EXTERNAL_CONTEXT\" Field Value string HintVideoHighDpiDisabled The sdl hint video high dpi disabled public const string HintVideoHighDpiDisabled = \"SDL_VIDEO_HIGHDPI_DISABLED\" Field Value string HintVideoMacFullscreenSpaces The sdl hint video mac fullscreen spaces public const string HintVideoMacFullscreenSpaces = \"SDL_VIDEO_MAC_FULLSCREEN_SPACES\" Field Value string HintVideoMinimizeOnFocusLoss The sdl hint video minimize on focus loss public const string HintVideoMinimizeOnFocusLoss = \"SDL_VIDEO_MINIMIZE_ON_FOCUS_LOSS\" Field Value string HintVideoWaylandAllowLibDecor The sdl hint video wayland allow lib decor public const string HintVideoWaylandAllowLibDecor = \"SDL_VIDEO_WAYLAND_ALLOW_LIBDECOR\" Field Value string HintVideoWinD3DCompiler The sdl hint video win d3d compiler public const string HintVideoWinD3DCompiler = \"SDL_VIDEO_WIN_D3DCOMPILER\" Field Value string HintVideoWindowSharePixelFormat The sdl hint video window share pixel format public const string HintVideoWindowSharePixelFormat = \"SDL_VIDEO_WINDOW_SHARE_PIXEL_FORMAT\" Field Value string HintVideoX11ForceEgl The sdl hint video x11 force egl public const string HintVideoX11ForceEgl = \"SDL_VIDEO_X11_FORCE_EGL\" Field Value string HintVideoX11NetWmPing The sdl hint video x11 net wm ping public const string HintVideoX11NetWmPing = \"SDL_VIDEO_X11_NET_WM_PING\" Field Value string HintVideoX11WindowVisualId The sdl hint x11 window visual id public const string HintVideoX11WindowVisualId = \"SDL_VIDEO_X11_WINDOW_VISUALID\" Field Value string HintVideoX11XIneRama The sdl hint video x11 x ine rama public const string HintVideoX11XIneRama = \"SDL_VIDEO_X11_XINERAMA\" Field Value string HintVideoX11XVidMode The sdl hint video x11 x vid mode public const string HintVideoX11XVidMode = \"SDL_VIDEO_X11_XVIDMODE\" Field Value string HintVideoX11Xrandr The sdl hint video x11 xrandr public const string HintVideoX11Xrandr = \"SDL_VIDEO_X11_XRANDR\" Field Value string HintWaveFactChunk The sdl hint wave fact chunk public const string HintWaveFactChunk = \"SDL_WAVE_FACT_CHUNK\" Field Value string HintWaveRiffChunkSize The sdl hint wave riff chunk size public const string HintWaveRiffChunkSize = \"SDL_WAVE_RIFF_CHUNK_SIZE\" Field Value string HintWaveTruncation The sdl hint wave truncation public const string HintWaveTruncation = \"SDL_WAVE_TRUNCATION\" Field Value string HintWindowFrameUsableWhileCursorHidden The sdl hint window frame usable while cursor hidden public const string HintWindowFrameUsableWhileCursorHidden = \"SDL_WINDOW_FRAME_USABLE_WHILE_CURSOR_HIDDEN\" Field Value string HintWindowNoActivationWhenShown The sdl hint window no activation when shown public const string HintWindowNoActivationWhenShown = \"SDL_WINDOW_NO_ACTIVATION_WHEN_SHOWN\" Field Value string HintWindowsDisableThreadNaming The sdl hint windows disable thread naming public const string HintWindowsDisableThreadNaming = \"SDL_WINDOWS_DISABLE_THREAD_NAMING\" Field Value string HintWindowsEnableMessageLoop The sdl hint windows enable message loop public const string HintWindowsEnableMessageLoop = \"SDL_WINDOWS_ENABLE_MESSAGELOOP\" Field Value string HintWindowsForceMutexCriticalSections The sdl hint windows force mutex critical sections public const string HintWindowsForceMutexCriticalSections = \"SDL_WINDOWS_FORCE_MUTEX_CRITICAL_SECTIONS\" Field Value string HintWindowsForceSemaphoreKernel The sdl hint windows force semaphore kernel public const string HintWindowsForceSemaphoreKernel = \"SDL_WINDOWS_FORCE_SEMAPHORE_KERNEL\" Field Value string HintWindowsIntroSourceIcon The sdl hint windows intro source icon public const string HintWindowsIntroSourceIcon = \"SDL_WINDOWS_INTRESOURCE_ICON\" Field Value string HintWindowsIntroSourceIconSmall The sdl hint windows intro source icon small public const string HintWindowsIntroSourceIconSmall = \"SDL_WINDOWS_INTRESOURCE_ICON_SMALL\" Field Value string HintWindowsNoCloseOnAltF4 The sdl hint windows no close on alt f4 public const string HintWindowsNoCloseOnAltF4 = \"SDL_WINDOWS_NO_CLOSE_ON_ALT_F4\" Field Value string HintWindowsUseD3D9Ex The sdl hint windows use d3d9ex public const string HintWindowsUseD3D9Ex = \"SDL_WINDOWS_USE_D3D9EX\" Field Value string HintWinrtHandleBackButton The sdl hint winrt handle back button public const string HintWinrtHandleBackButton = \"SDL_WINRT_HANDLE_BACK_BUTTON\" Field Value string HintWinrtPrivacyPolicyLabel The sdl hint winrt privacy policy label public const string HintWinrtPrivacyPolicyLabel = \"SDL_WINRT_PRIVACY_POLICY_LABEL\" Field Value string HintWinrtPrivacyPolicyUrl The sdl hint winrt privacy policy url public const string HintWinrtPrivacyPolicyUrl = \"SDL_WINRT_PRIVACY_POLICY_URL\" Field Value string HintX11ForceOverrideRedirect The sdl hint x11 force override redirect public const string HintX11ForceOverrideRedirect = \"SDL_X11_FORCE_OVERRIDE_REDIRECT\" Field Value string HintXInputEnabled The sdl hint x input enabled public const string HintXInputEnabled = \"SDL_XINPUT_ENABLED\" Field Value string HintXInputUseOldJoystickMapping The sdl hint x input use old joystick mapping public const string HintXInputUseOldJoystickMapping = \"SDL_XINPUT_USE_OLD_JOYSTICK_MAPPING\" Field Value string SdlHintJoystickThread The sdl hint joystick thread public const string SdlHintJoystickThread = \"SDL_JOYSTICK_THREAD\" Field Value string VideoX11NetWmBypassCompositor The sdl video x11 net wm bypass compositor public const string VideoX11NetWmBypassCompositor = \"SDL_VIDEO_X11_NET_WM_BYPASS_COMPOSITOR\" Field Value string"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalAndroidWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalAndroidWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalAndroidWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal android wm info public struct InternalAndroidWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Surface Refers to an EGLSurface public IntPtr Surface { readonly get; set; } Property Value IntPtr Window Refers to an ANativeWindow public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalCocoaWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalCocoaWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalCocoaWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal cocoa wm info public struct InternalCocoaWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Window Refers to an NSWindow* public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalDirectfbWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalDirectfbWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalDirectfbWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal directfb info public struct InternalDirectfbWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Dfb Refers to an IDirectFB* public IntPtr Dfb { readonly get; set; } Property Value IntPtr Surface Refers to an IDirectFBSurface* public IntPtr Surface { readonly get; set; } Property Value IntPtr Window Refers to an IDirectFBWindow* public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalGameControllerButtonBindHat.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalGameControllerButtonBindHat.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalGameControllerButtonBindHat Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal game controller button bind hat public struct InternalGameControllerButtonBindHat Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Hat The hat public int Hat { readonly get; set; } Property Value int HatMask The hat mask public int HatMask { readonly get; set; } Property Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalGameControllerButtonBindUnion.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalGameControllerButtonBindUnion.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalGameControllerButtonBindUnion Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal game controller button bind union public struct InternalGameControllerButtonBindUnion Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields axis The axis public readonly int axis Field Value int button The button public readonly int button Field Value int hat The hat public InternalGameControllerButtonBindHat hat Field Value InternalGameControllerButtonBindHat"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalKmsWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalKmsWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalKmsWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal kms wm info public struct InternalKmsWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields dev_index The dev index public readonly int dev_index Field Value int drm_fd The drm fd public readonly int drm_fd Field Value int gbm_dev Refers to a gbm_device* public readonly IntPtr gbm_dev Field Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalMirWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalMirWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalMirWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal mir wm info public struct InternalMirWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Connection Refers to a MirConnection* public IntPtr Connection { readonly get; set; } Property Value IntPtr Surface Refers to a MirSurface* public IntPtr Surface { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalOs2WmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalOs2WmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalOs2WmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal os2 wm info public struct InternalOs2WmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Hwnd Refers to window public IntPtr Hwnd { readonly get; set; } Property Value IntPtr HwndFrame Refers to frame public IntPtr HwndFrame { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalSdlGameControllerButtonBind.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalSdlGameControllerButtonBind.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalSdlGameControllerButtonBind Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal sdl game controller button bind internal struct InternalSdlGameControllerButtonBind Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields bindType The bind type public readonly int bindType Field Value int unionVal0 The union val public readonly int unionVal0 Field Value int unionVal1 The union val public readonly int unionVal1 Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalSysWmDriverUnion.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalSysWmDriverUnion.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalSysWmDriverUnion Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal sys wm driver union public struct InternalSysWmDriverUnion Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields VivanteWmInfo The vivante public InternalVivanteWmInfo VivanteWmInfo Field Value InternalVivanteWmInfo android The android public InternalAndroidWmInfo android Field Value InternalAndroidWmInfo cocoa The cocoa public InternalCocoaWmInfo cocoa Field Value InternalCocoaWmInfo dfb The dfb public InternalDirectfbWmInfo dfb Field Value InternalDirectfbWmInfo ksm The ksm public InternalKmsWmInfo ksm Field Value InternalKmsWmInfo mir The mir public InternalMirWmInfo mir Field Value InternalMirWmInfo os2 The os public InternalOs2WmInfo os2 Field Value InternalOs2WmInfo uikit The uikit public InternalUikitWmInfo uikit Field Value InternalUikitWmInfo win The win public InternalWindowsWmInfo win Field Value InternalWindowsWmInfo winrt The winrt public InternalWinrtWmInfo winrt Field Value InternalWinrtWmInfo wl The wl public InternalWaylandWmInfo wl Field Value InternalWaylandWmInfo x11 The 11 public InternalX11WmInfo x11 Field Value InternalX11WmInfo"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalUikitWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalUikitWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalUikitWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal uikit wm info public struct InternalUikitWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields colorBuffer The color buffer public uint colorBuffer Field Value uint framebuffer The frame buffer public uint framebuffer Field Value uint resolveFramebuffer The resolve frame buffer public uint resolveFramebuffer Field Value uint Properties Window Refers to a UIWindow* public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalVivanteWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalVivanteWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalVivanteWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal vivante wm info public struct InternalVivanteWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Display The display public IntPtr Display { readonly get; set; } Property Value IntPtr Window The window public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalWaylandWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalWaylandWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalWaylandWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal wayland wm info public struct InternalWaylandWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Display Refers to a wl_display* public IntPtr Display { readonly get; set; } Property Value IntPtr EglWindow Refers to an egl_window*, requires >= 2.0.16 public IntPtr EglWindow { readonly get; set; } Property Value IntPtr ShellSurface Refers to a wl_shell_surface* public IntPtr ShellSurface { readonly get; set; } Property Value IntPtr Surface Refers to a wl_surface* public IntPtr Surface { readonly get; set; } Property Value IntPtr XdgSurface Refers to an xdg_surface*, requires >= 2.0.16 public IntPtr XdgSurface { readonly get; set; } Property Value IntPtr XdgToplevel Refers to an xdg_toplevel*, requires >= 2.0.18 public IntPtr XdgToplevel { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalWindowsWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalWindowsWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalWindowsWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal windows wm info public struct InternalWindowsWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties HInstance Refers to an H INSTANCE public IntPtr HInstance { readonly get; set; } Property Value IntPtr Hdc Refers to an HDC public IntPtr Hdc { readonly get; set; } Property Value IntPtr Window Refers to an HWND public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalWinrtWmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalWinrtWmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalWinrtWmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal winrt wm info public struct InternalWinrtWmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Window Refers to an inspect public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.InternalX11WmInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.InternalX11WmInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct InternalX11WmInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The internal x11 wm info public struct InternalX11WmInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Display Refers to a Display* public IntPtr Display { readonly get; set; } Property Value IntPtr Window Refers to a Window (XID, use ToInt64!) public IntPtr Window { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.JoyAxisEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.JoyAxisEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JoyAxisEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl joy axis event public struct JoyAxisEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields axis The axis public readonly byte axis Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.JoyBallEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.JoyBallEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JoyBallEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl joy ball event public struct JoyBallEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields ball The ball public readonly byte ball Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.JoyButtonEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.JoyButtonEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JoyButtonEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl joy button event public struct JoyButtonEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields button The button public readonly byte button Field Value byte state The state public readonly byte state Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.JoyDeviceEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.JoyDeviceEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JoyDeviceEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl joy device event public struct JoyDeviceEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.JoyHatEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.JoyHatEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JoyHatEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl joy hat event public struct JoyHatEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields hat The hat public readonly byte hat Field Value byte hatValue The hat value public readonly byte hatValue Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.KeySym.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.KeySym.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct KeySym Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl key sym public struct KeySym Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields mod The mod public KeyMods mod Field Value KeyMods scancode The scancode public SdlScancode scancode Field Value SdlScancode sym The sym public KeyCodes sym Field Value KeyCodes unicode The unicode public uint unicode Field Value uint"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.KeyboardEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.KeyboardEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct KeyboardEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl keyboard event public struct KeyboardEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields repeat The repeat public readonly byte repeat Field Value byte state The state public readonly byte state Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType windowID The window id public readonly uint windowID Field Value uint Properties KeySym The key sym public KeySym KeySym { readonly get; set; } Property Value KeySym"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.MouseButtonEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.MouseButtonEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct MouseButtonEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl mouse button event public struct MouseButtonEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields button The button public readonly byte button Field Value byte clicks The clicks public readonly byte clicks Field Value byte state The state public readonly byte state Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly uint which Field Value uint windowID The window id public readonly uint windowID Field Value uint x The public readonly int x Field Value int y The public readonly int y Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.MouseMotionEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.MouseMotionEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct MouseMotionEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl mouse motion event public struct MouseMotionEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields state The state public readonly byte state Field Value byte timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly uint which Field Value uint windowID The window id public readonly uint windowID Field Value uint x The public readonly int x Field Value int xRel The x rel public readonly int xRel Field Value int y The public readonly int y Field Value int yRel The y rel public readonly int yRel Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.MouseWheelEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.MouseWheelEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct MouseWheelEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl mouse wheel event public struct MouseWheelEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields direction The direction public readonly uint direction Field Value uint preciseX The precise public readonly float preciseX Field Value float preciseY The precise public readonly float preciseY Field Value float timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly uint which Field Value uint windowID The window id public readonly uint windowID Field Value uint x The public readonly int x Field Value int y The public readonly int y Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.MultiGestureEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.MultiGestureEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct MultiGestureEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl multi gesture event public struct MultiGestureEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields dDist The dist public readonly float dDist Field Value float dTheta The theta public readonly float dTheta Field Value float numFingers The num fingers public readonly ushort numFingers Field Value ushort padding The padding public readonly ushort padding Field Value ushort timestamp The timestamp public readonly uint timestamp Field Value uint touchId The touch id public readonly long touchId Field Value long type The type public readonly uint type Field Value uint x The public readonly float x Field Value float y The public readonly float y Field Value float"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.PixelFormat.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.PixelFormat.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct PixelFormat Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl pixel format public struct PixelFormat Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields ALoss The a loss public readonly byte ALoss Field Value byte AMask The a mask public readonly uint AMask Field Value uint AShift The a shift public readonly byte AShift Field Value byte BLoss The b loss public readonly byte BLoss Field Value byte BMask The b mask public readonly uint BMask Field Value uint BShift The b shift public readonly byte BShift Field Value byte BitsPerPixel The bits per pixel public readonly byte BitsPerPixel Field Value byte BytesPerPixel The bytes per pixel public readonly byte BytesPerPixel Field Value byte GMask The g mask public readonly uint GMask Field Value uint GShift The g shift public readonly byte GShift Field Value byte Gloss The g loss public readonly byte Gloss Field Value byte RLoss The r loss public readonly byte RLoss Field Value byte RMask The r mask public readonly uint RMask Field Value uint RShift The r shift public readonly byte RShift Field Value byte format The format public readonly uint format Field Value uint refCount The ref count public readonly int refCount Field Value int Properties Next The next public IntPtr Next { readonly get; set; } Property Value IntPtr Palette The palette public IntPtr Palette { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.QuitEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.QuitEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct QuitEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl quit event public struct QuitEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.RendererInfo.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.RendererInfo.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct RendererInfo Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl renderer info public struct RendererInfo Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields flags The flags public uint flags Field Value uint maxTextureHeight The max texture height public int maxTextureHeight Field Value int maxTextureWidth The max texture width public int maxTextureWidth Field Value int num_texture_formats The num texture formats public uint num_texture_formats Field Value uint textureFormats0 The texture formats public int textureFormats0 Field Value int textureFormats1 The texture formats public int textureFormats1 Field Value int textureFormats10 The texture formats 10 public int textureFormats10 Field Value int textureFormats11 The texture formats 11 public int textureFormats11 Field Value int textureFormats12 The texture formats 12 public int textureFormats12 Field Value int textureFormats13 The texture formats 13 public int textureFormats13 Field Value int textureFormats14 The texture formats 14 public int textureFormats14 Field Value int textureFormats15 The texture formats 15 public int textureFormats15 Field Value int textureFormats2 The texture formats public int textureFormats2 Field Value int textureFormats3 The texture formats public int textureFormats3 Field Value int textureFormats4 The texture formats public int textureFormats4 Field Value int textureFormats5 The texture formats public int textureFormats5 Field Value int textureFormats6 The texture formats public int textureFormats6 Field Value int textureFormats7 The texture formats public int textureFormats7 Field Value int textureFormats8 The texture formats public int textureFormats8 Field Value int textureFormats9 The texture formats public int textureFormats9 Field Value int Properties Name The name public IntPtr Name { readonly get; set; } Property Value IntPtr Methods GetName() Gets the name public string GetName() Returns string The string"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.SensorEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.SensorEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SensorEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl sensor event public struct SensorEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields float0 The data public readonly float float0 Field Value float float1 The data public readonly float float1 Field Value float float2 The data public readonly float float2 Field Value float float3 The data public readonly float float3 Field Value float float4 The data public readonly float float4 Field Value float float5 The data public readonly float float5 Field Value float timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType which The which public readonly int which Field Value int"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.Surface.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.Surface.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Surface Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl surface public struct Surface Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields flags The flags public readonly uint flags Field Value uint h The public readonly int h Field Value int locked The locked public readonly int locked Field Value int pitch The pitch public readonly int pitch Field Value int refCount The ref count public readonly int refCount Field Value int w The public readonly int w Field Value int Properties ClipRect The clip rect public RectangleI ClipRect { readonly get; set; } Property Value RectangleI Format The format public IntPtr Format { readonly get; set; } Property Value IntPtr ListBlitMap The list blit map public IntPtr ListBlitMap { readonly get; set; } Property Value IntPtr Map The map public IntPtr Map { readonly get; set; } Property Value IntPtr Pixels The pixels public IntPtr Pixels { readonly get; set; } Property Value IntPtr Userdata The userdata public IntPtr Userdata { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.SysWmEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.SysWmEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SysWmEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl sys wm event public struct SysWmEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType Properties Msg The msg public IntPtr Msg { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.TextEditingEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.TextEditingEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TextEditingEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl text editing event public readonly struct TextEditingEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields length The length public readonly int length Field Value int start The start public readonly int start Field Value int textPtr The sdl text editing event text size private readonly IntPtr textPtr Field Value IntPtr timestamp The timestamp public readonly uint timestamp Field Value uint type The type public readonly EventType type Field Value EventType windowID The window id public readonly uint windowID Field Value uint Properties Text Gets the value of the text public string Text { get; } Property Value string"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.TextInputEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.TextInputEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TextInputEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl text input event public struct TextInputEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields byte0 The byte internal byte byte0 Field Value byte byte1 The byte internal byte byte1 Field Value byte byte10 The byte 10 internal byte byte10 Field Value byte byte11 The byte 11 internal byte byte11 Field Value byte byte12 The byte 12 internal byte byte12 Field Value byte byte13 The byte 13 internal byte byte13 Field Value byte byte14 The byte 14 internal byte byte14 Field Value byte byte15 The byte 15 internal byte byte15 Field Value byte byte16 The byte 16 internal byte byte16 Field Value byte byte17 The byte 17 internal byte byte17 Field Value byte byte18 The byte 18 internal byte byte18 Field Value byte byte19 The byte 19 internal byte byte19 Field Value byte byte2 The byte internal byte byte2 Field Value byte byte20 The byte 20 internal byte byte20 Field Value byte byte21 The byte 21 internal byte byte21 Field Value byte byte22 The byte 22 internal byte byte22 Field Value byte byte23 The byte 23 internal byte byte23 Field Value byte byte24 The byte 24 internal byte byte24 Field Value byte byte25 The byte 25 internal byte byte25 Field Value byte byte26 The byte 26 internal byte byte26 Field Value byte byte27 The byte 27 internal byte byte27 Field Value byte byte28 The byte 28 internal byte byte28 Field Value byte byte29 The byte 29 internal byte byte29 Field Value byte byte3 The byte internal byte byte3 Field Value byte byte30 The byte 30 internal byte byte30 Field Value byte byte31 The byte 31 internal byte byte31 Field Value byte byte4 The byte internal byte byte4 Field Value byte byte5 The byte internal byte byte5 Field Value byte byte6 The byte internal byte byte6 Field Value byte byte7 The byte internal byte byte7 Field Value byte byte8 The byte internal byte byte8 Field Value byte byte9 The byte internal byte byte9 Field Value byte timestamp The timestamp public uint timestamp Field Value uint type The type public EventType type Field Value EventType windowID The window id public uint windowID Field Value uint Properties Text Gets or sets the value of the text public byte[] Text { get; } Property Value byte[]"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.TouchFingerEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.TouchFingerEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TouchFingerEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl touch finger event public struct TouchFingerEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields dx The dx public float dx Field Value float dy The dy public float dy Field Value float fingerId The finger id public long fingerId Field Value long pressure The pressure public float pressure Field Value float timestamp The timestamp public uint timestamp Field Value uint touchId The touch id public long touchId Field Value long type The type public uint type Field Value uint windowID The window id public uint windowID Field Value uint x The public float x Field Value float y The public float y Field Value float"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.UserEvent.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.UserEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct UserEvent Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl user event public struct UserEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields code The code public int code Field Value int timestamp The timestamp public uint timestamp Field Value uint type The type public uint type Field Value uint windowID The window id public uint windowID Field Value uint Properties Data1 The data public IntPtr Data1 { readonly get; set; } Property Value IntPtr Data2 The data public IntPtr Data2 { readonly get; set; } Property Value IntPtr"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.Version.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.Version.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Version Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl version public struct Version Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Version(int, int, int) Initializes a new instance of the Alis.Core.Graphic.Sdl2.Structs.Version class public Version(int sdlTtfMajorVersion, int sdlTtfMinorVersion, int sdlTtfPatchLevel) Parameters sdlTtfMajorVersion int The sdl ttf major version sdlTtfMinorVersion int The sdl ttf minor version sdlTtfPatchLevel int The sdl ttf patch level Fields major The major public byte major Field Value byte minor The minor public byte minor Field Value byte patch The patch public byte patch Field Value byte"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.Vertex.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.Vertex.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Vertex Namespace Alis.Core.Graphic.Sdl2.Structs Assembly Alis.dll The sdl vertex public struct Vertex Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Color The color public Color Color { readonly get; set; } Property Value Color Position The position public PointF Position { readonly get; set; } Property Value PointF TexCoordinate The text coordinate public PointF TexCoordinate { readonly get; set; } Property Value PointF"
  },
  "api/Alis.Core.Graphic.Sdl2.Structs.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.Structs.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2.Structs Classes Hint The sdl hint class Structs AudioDeviceEvent The sdl audio device event AudioSpec The sdl audio spec ControllerAxisEvent The sdl controller axis event ControllerButtonEvent The sdl controller button event ControllerDeviceEvent The sdl controller device event ControllerSensorEvent The sdl controller sensor event ControllerTouchpadEvent The sdl controller touch pad event DisplayEvent The sdl display event DisplayMode The sdl display mode DollarGestureEvent The sdl dollar gesture event DropEvent The sdl drop event Event The sdl event GameControllerButtonBind The sdl game controller button bind GenericEvent The sdl generic event HapticDirection The sdl haptic direction InternalAndroidWmInfo The internal android wm info InternalCocoaWmInfo The internal cocoa wm info InternalDirectfbWmInfo The internal directfb info InternalGameControllerButtonBindHat The internal game controller button bind hat InternalGameControllerButtonBindUnion The internal game controller button bind union InternalKmsWmInfo The internal kms wm info InternalMirWmInfo The internal mir wm info InternalOs2WmInfo The internal os2 wm info InternalSdlGameControllerButtonBind The internal sdl game controller button bind InternalSysWmDriverUnion The internal sys wm driver union InternalUikitWmInfo The internal uikit wm info InternalVivanteWmInfo The internal vivante wm info InternalWaylandWmInfo The internal wayland wm info InternalWindowsWmInfo The internal windows wm info InternalWinrtWmInfo The internal winrt wm info InternalX11WmInfo The internal x11 wm info JoyAxisEvent The sdl joy axis event JoyBallEvent The sdl joy ball event JoyButtonEvent The sdl joy button event JoyDeviceEvent The sdl joy device event JoyHatEvent The sdl joy hat event KeySym The sdl key sym KeyboardEvent The sdl keyboard event MouseButtonEvent The sdl mouse button event MouseMotionEvent The sdl mouse motion event MouseWheelEvent The sdl mouse wheel event MultiGestureEvent The sdl multi gesture event PixelFormat The sdl pixel format QuitEvent The sdl quit event RendererInfo The sdl renderer info SensorEvent The sdl sensor event Surface The sdl surface SysWmEvent The sdl sys wm event TextEditingEvent The sdl text editing event TextInputEvent The sdl text input event TouchFingerEvent The sdl touch finger event UserEvent The sdl user event Version The sdl version Vertex The sdl vertex Enums GameControllerType The sdl game controller type enum"
  },
  "api/Alis.Core.Graphic.Sdl2.html": {
    "href": "api/Alis.Core.Graphic.Sdl2.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic.Sdl2 Namespaces Alis.Core.Graphic.Sdl2.Delegates Alis.Core.Graphic.Sdl2.Enums Alis.Core.Graphic.Sdl2.Extensions Alis.Core.Graphic.Sdl2.Structs Classes NativeSdl The native sdl class Sdl The sdl class"
  },
  "api/Alis.Core.Graphic.Window.html": {
    "href": "api/Alis.Core.Graphic.Window.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Window Namespace Alis.Core.Graphic Assembly Alis.dll The window class public class Window : IWindow, IBuilder<WindowBuilder> Inheritance object Window Implements IWindow IBuilder<WindowBuilder> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Window() Initializes a new instance of the Alis.Core.Graphic.Window class public Window() Window(Color, Vector2, bool) Initializes a new instance of the Alis.Core.Graphic.Window class public Window(Color background, Vector2 resolution, bool isWindowResizable) Parameters background Color The background resolution Vector2 The resolution isWindowResizable bool The is window resizable Properties Background Gets or sets the value of the background [JsonPropertyName(\"_Background_\")] public Color Background { get; set; } Property Value Color IsWindowResizable Gets or sets the value of the is window resizable [JsonPropertyName(\"_IsWindowResizable_\")] public bool IsWindowResizable { get; set; } Property Value bool Resolution Gets or sets the value of the resolution [JsonPropertyName(\"_Resolution_\")] public Vector2 Resolution { get; set; } Property Value Vector2 Methods Builder() Builders this instance public WindowBuilder Builder() Returns WindowBuilder The window builder See Also IBuilder<TOut>"
  },
  "api/Alis.Core.Graphic.html": {
    "href": "api/Alis.Core.Graphic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Graphic Namespaces Alis.Core.Graphic.Properties Alis.Core.Graphic.Sdl2 Classes Window The window class Interfaces IWindow The window interface"
  },
  "api/Alis.Core.Network.BufferPool.html": {
    "href": "api/Alis.Core.Network.BufferPool.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BufferPool Namespace Alis.Core.Network Assembly Alis.dll This buffer pool is instance thread safe Use GetBuffer to get a MemoryStream (with a publically accessible buffer) Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in) and the underlying buffers will be returned to the pool at their larger sizes public class BufferPool : IBufferPool Inheritance object BufferPool Implements IBufferPool Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors BufferPool() Initializes a new instance of the Alis.Core.Network.BufferPool class public BufferPool() BufferPool(int) Initializes a new instance of the Alis.Core.Network.BufferPool class public BufferPool(int bufferSize) Parameters bufferSize int The buffer size Fields DefaultBufferSize The default buffer size private const int DefaultBufferSize = 16384 Field Value int _bufferPoolStack The buffer pool stack private readonly ConcurrentStack<byte[]> _bufferPoolStack Field Value ConcurrentStack<byte[]> _bufferSize The buffer size private readonly int _bufferSize Field Value int Methods GetBuffer() Gets a MemoryStream built from a buffer plucked from a thread safe pool The pool grows automatically. Closing the memory stream clears the buffer and returns it to the pool public MemoryStream GetBuffer() Returns MemoryStream ReturnBuffer(byte[]) Returns the buffer using the specified buffer protected internal void ReturnBuffer(byte[] buffer) Parameters buffer byte[] The buffer"
  },
  "api/Alis.Core.Network.Exceptions.EntityTooLargeException.html": {
    "href": "api/Alis.Core.Network.Exceptions.EntityTooLargeException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class EntityTooLargeException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The entity too large exception class [Serializable] public class EntityTooLargeException : Exception, ISerializable Inheritance object Exception EntityTooLargeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors EntityTooLargeException() Initializes a new instance of the Alis.Core.Network.Exceptions.EntityTooLargeException class public EntityTooLargeException() EntityTooLargeException(string) Http header too large to fit in buffer public EntityTooLargeException(string message) Parameters message string EntityTooLargeException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.EntityTooLargeException class public EntityTooLargeException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.html": {
    "href": "api/Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class InvalidHttpResponseCodeException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The invalid http response code exception class [Serializable] public class InvalidHttpResponseCodeException : Exception, ISerializable Inheritance object Exception InvalidHttpResponseCodeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors InvalidHttpResponseCodeException() Initializes a new instance of the Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException class public InvalidHttpResponseCodeException() InvalidHttpResponseCodeException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException class public InvalidHttpResponseCodeException(string message) Parameters message string The message InvalidHttpResponseCodeException(string, string, string) Initializes a new instance of the Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException class public InvalidHttpResponseCodeException(string responseCode, string responseDetails, string responseHeader) Parameters responseCode string The response code responseDetails string The response details responseHeader string The response header InvalidHttpResponseCodeException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException class public InvalidHttpResponseCodeException(string message, Exception inner) Parameters message string The message inner Exception The inner Properties ResponseCode Gets or sets the value of the response code public string ResponseCode { get; private set; } Property Value string ResponseDetails Gets or sets the value of the response details public string ResponseDetails { get; private set; } Property Value string ResponseHeader Gets or sets the value of the response header public string ResponseHeader { get; private set; } Property Value string See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.MaskKeyLengthException.html": {
    "href": "api/Alis.Core.Network.Exceptions.MaskKeyLengthException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MaskKeyLengthException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The mask key length exception class public class MaskKeyLengthException : Exception, ISerializable Inheritance object Exception MaskKeyLengthException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors MaskKeyLengthException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.MaskKeyLengthException class public MaskKeyLengthException(string message) Parameters message string The message See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.html": {
    "href": "api/Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SecWebSocketKeyMissingException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The sec web socket key missing exception class [Serializable] public class SecWebSocketKeyMissingException : Exception, ISerializable Inheritance object Exception SecWebSocketKeyMissingException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors SecWebSocketKeyMissingException() Initializes a new instance of the Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException class public SecWebSocketKeyMissingException() SecWebSocketKeyMissingException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException class public SecWebSocketKeyMissingException(string message) Parameters message string The message SecWebSocketKeyMissingException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException class public SecWebSocketKeyMissingException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.ServerListenerSocketException.html": {
    "href": "api/Alis.Core.Network.Exceptions.ServerListenerSocketException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ServerListenerSocketException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The server listener socket exception class [Serializable] public class ServerListenerSocketException : Exception, ISerializable Inheritance object Exception ServerListenerSocketException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ServerListenerSocketException() Initializes a new instance of the Alis.Core.Network.Exceptions.ServerListenerSocketException class public ServerListenerSocketException() ServerListenerSocketException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.ServerListenerSocketException class public ServerListenerSocketException(string message) Parameters message string The message ServerListenerSocketException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.ServerListenerSocketException class public ServerListenerSocketException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.html": {
    "href": "api/Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketBufferOverflowException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The web socket buffer overflow exception class [Serializable] public class WebSocketBufferOverflowException : Exception, ISerializable Inheritance object Exception WebSocketBufferOverflowException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketBufferOverflowException() Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketBufferOverflowException class public WebSocketBufferOverflowException() WebSocketBufferOverflowException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketBufferOverflowException class public WebSocketBufferOverflowException(string message) Parameters message string The message WebSocketBufferOverflowException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketBufferOverflowException class public WebSocketBufferOverflowException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.html": {
    "href": "api/Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketHandshakeFailedException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The web socket handshake failed exception class [Serializable] public class WebSocketHandshakeFailedException : Exception, ISerializable Inheritance object Exception WebSocketHandshakeFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketHandshakeFailedException() Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException class public WebSocketHandshakeFailedException() WebSocketHandshakeFailedException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException class public WebSocketHandshakeFailedException(string message) Parameters message string The message WebSocketHandshakeFailedException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException class public WebSocketHandshakeFailedException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.html": {
    "href": "api/Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketVersionNotSupportedException Namespace Alis.Core.Network.Exceptions Assembly Alis.dll The web socket version not supported exception class [Serializable] public class WebSocketVersionNotSupportedException : Exception, ISerializable Inheritance object Exception WebSocketVersionNotSupportedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketVersionNotSupportedException() Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException class public WebSocketVersionNotSupportedException() WebSocketVersionNotSupportedException(string) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException class public WebSocketVersionNotSupportedException(string message) Parameters message string The message WebSocketVersionNotSupportedException(string, Exception) Initializes a new instance of the Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException class public WebSocketVersionNotSupportedException(string message, Exception inner) Parameters message string The message inner Exception The inner See Also Exception"
  },
  "api/Alis.Core.Network.Exceptions.html": {
    "href": "api/Alis.Core.Network.Exceptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Network.Exceptions Classes EntityTooLargeException The entity too large exception class InvalidHttpResponseCodeException The invalid http response code exception class MaskKeyLengthException The mask key length exception class SecWebSocketKeyMissingException The sec web socket key missing exception class ServerListenerSocketException The server listener socket exception class WebSocketBufferOverflowException The web socket buffer overflow exception class WebSocketHandshakeFailedException The web socket handshake failed exception class WebSocketVersionNotSupportedException The web socket version not supported exception class"
  },
  "api/Alis.Core.Network.HttpHelper.html": {
    "href": "api/Alis.Core.Network.HttpHelper.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class HttpHelper Namespace Alis.Core.Network Assembly Alis.dll The http helper class public class HttpHelper Inheritance object HttpHelper Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields HttpGetHeaderRegex The http get header regex private const string HttpGetHeaderRegex = \"^GET(.*)HTTP\\\\/1\\\\.1\" Field Value string Methods CalculateWebSocketKey() Calculates a random WebSocket key that can be used to initiate a WebSocket handshake public static string CalculateWebSocketKey() Returns string A random websocket key ComputeSocketAcceptString(string) Deprecated Obsolete Computes a WebSocket accept string from a given key [Obsolete(\"Obsolete\")] public static string ComputeSocketAcceptString(string secWebSocketKey) Parameters secWebSocketKey string The web socket key to base the accept string on Returns string A web socket accept string GetPathFromHeader(string) Gets the path from the HTTP header public static string GetPathFromHeader(string httpHeader) Parameters httpHeader string The HTTP header to read Returns string The path GetSubProtocols(string) Gets the sub protocols using the specified http header public static IList<string> GetSubProtocols(string httpHeader) Parameters httpHeader string The http header Returns IList<string> A list of string Exceptions EntityTooLargeException Sec-WebSocket-Protocol exceeded the maximum of length of {MAX_LEN} IsWebSocketUpgradeRequest(string) Decodes the header to detect is this is a web socket upgrade response public static bool IsWebSocketUpgradeRequest(string header) Parameters header string The HTTP header Returns bool True if this is an http WebSocket upgrade response ReadHttpHeaderAsync(Stream, CancellationToken) Reads an http header as per the HTTP spec public static Task<string> ReadHttpHeaderAsync(Stream stream, CancellationToken token) Parameters stream Stream The stream to read UTF8 text from token CancellationToken The cancellation token Returns Task<string> The HTTP header ReadHttpResponseCode(string) Reads the HTTP response code from the http response string public static string ReadHttpResponseCode(string response) Parameters response string The response string Returns string the response code WriteHttpHeaderAsync(string, Stream, CancellationToken) Writes an HTTP response string to the stream public static Task WriteHttpHeaderAsync(string response, Stream stream, CancellationToken token) Parameters response string The response (without the new line characters) stream Stream The stream to write to token CancellationToken The cancellation token Returns Task"
  },
  "api/Alis.Core.Network.IBufferPool.html": {
    "href": "api/Alis.Core.Network.IBufferPool.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBufferPool Namespace Alis.Core.Network Assembly Alis.dll The buffer pool interface public interface IBufferPool Methods GetBuffer() Gets a MemoryStream built from a buffer plucked from a thread safe pool The pool grows automatically. Closing the memory stream clears the buffer and returns it to the pool MemoryStream GetBuffer() Returns MemoryStream"
  },
  "api/Alis.Core.Network.IPingPongManager.html": {
    "href": "api/Alis.Core.Network.IPingPongManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IPingPongManager Namespace Alis.Core.Network Assembly Alis.dll Ping Pong Manager used to facilitate ping pong WebSocket messages internal interface IPingPongManager Methods SendPing(ArraySegment<byte>, CancellationToken) Sends a ping frame Task SendPing(ArraySegment<byte> payload, CancellationToken cancellation) Parameters payload ArraySegment<byte> The payload (must be 125 bytes of less) cancellation CancellationToken The cancellation token Returns Task Pong Raised when a Pong frame is received event EventHandler<PongEventArgs> Pong Event Type EventHandler<PongEventArgs>"
  },
  "api/Alis.Core.Network.IWebSocketClientFactory.html": {
    "href": "api/Alis.Core.Network.IWebSocketClientFactory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWebSocketClientFactory Namespace Alis.Core.Network Assembly Alis.dll Web socket client factory used to open web socket client connections public interface IWebSocketClientFactory Methods ConnectAsync(Uri, CancellationToken) Connect with default options Task<WebSocket> ConnectAsync(Uri uri, CancellationToken token = default) Parameters uri Uri The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL) token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket instance ConnectAsync(Uri, WebSocketClientOptions, CancellationToken) Connect with options specified Task<WebSocket> ConnectAsync(Uri uri, WebSocketClientOptions options, CancellationToken token = default) Parameters uri Uri The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL) options WebSocketClientOptions The WebSocket client options token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket instance ConnectAsync(Stream, string, WebSocketClientOptions, CancellationToken) Connect with a stream that has already been opened and HTTP websocket upgrade request sent This function will check the handshake response from the server and proceed if successful Use this function if you have specific requirements to open a conenction like using special http headers and cookies You will have to build your own HTTP websocket upgrade request You may not even choose to use TCP/IP and this function will allow you to do that Task<WebSocket> ConnectAsync(Stream responseStream, string secWebSocketKey, WebSocketClientOptions options, CancellationToken token = default) Parameters responseStream Stream The full duplex response stream from the server secWebSocketKey string The secWebSocketKey you used in the handshake request options WebSocketClientOptions The WebSocket client options token CancellationToken The optional cancellation token Returns Task<WebSocket>"
  },
  "api/Alis.Core.Network.IWebSocketServerFactory.html": {
    "href": "api/Alis.Core.Network.IWebSocketServerFactory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IWebSocketServerFactory Namespace Alis.Core.Network Assembly Alis.dll Web socket server factory used to open web socket server connections public interface IWebSocketServerFactory Methods AcceptWebSocketAsync(WebSocketHttpContext, CancellationToken) Accept web socket with default options Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, CancellationToken token = default) Parameters context WebSocketHttpContext The http context used to initiate this web socket request token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket AcceptWebSocketAsync(WebSocketHttpContext, WebSocketServerOptions, CancellationToken) Accept web socket with options specified Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, WebSocketServerOptions options, CancellationToken token = default) Parameters context WebSocketHttpContext The http context used to initiate this web socket request options WebSocketServerOptions The web socket options token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket ReadHttpHeaderFromStreamAsync(Stream, CancellationToken) Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade Task<WebSocketHttpContext> ReadHttpHeaderFromStreamAsync(Stream stream, CancellationToken token = default) Parameters stream Stream The network stream token CancellationToken The optional cancellation token Returns Task<WebSocketHttpContext> Http data read from the stream"
  },
  "api/Alis.Core.Network.Internal.BinaryReaderWriter.html": {
    "href": "api/Alis.Core.Network.Internal.BinaryReaderWriter.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BinaryReaderWriter Namespace Alis.Core.Network.Internal Assembly Alis.dll The binary reader writer class internal class BinaryReaderWriter Inheritance object BinaryReaderWriter Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ConvertToLong(ArraySegment<byte>) Converts the to long using the specified buffer internal static long ConvertToLong(ArraySegment<byte> buffer) Parameters buffer ArraySegment<byte> The buffer Returns long The long GetBytesInCorrectEndianness(int, bool) Gets the bytes in correct endianness using the specified value internal static byte[] GetBytesInCorrectEndianness(int value, bool isLittleEndian) Parameters value int The value isLittleEndian bool The is little endian Returns byte[] The buffer HandleEndianness(bool, ArraySegment<byte>) Handles the endianness using the specified is little endian internal static void HandleEndianness(bool isLittleEndian, ArraySegment<byte> buffer) Parameters isLittleEndian bool The is little endian buffer ArraySegment<byte> The buffer ReadExactly(int, Stream, ArraySegment<byte>, CancellationToken) Reads the exactly using the specified length public static Task ReadExactly(int length, Stream stream, ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters length int The length stream Stream The stream buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task Exceptions EndOfStreamException InternalBufferOverflowException Unable to read {length} bytes into buffer (offset: {buffer.Offset} size: {buffer.Count}). Use a larger read buffer ReadLongExactly(Stream, bool, ArraySegment<byte>, CancellationToken) Reads the long exactly using the specified stream public static Task<long> ReadLongExactly(Stream stream, bool isLittleEndian, ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters stream Stream The stream isLittleEndian bool The is little endian buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task<long> A task containing the long ReadULongExactly(Stream, bool, ArraySegment<byte>, CancellationToken) Reads the u long exactly using the specified stream public static Task<ulong> ReadULongExactly(Stream stream, bool isLittleEndian, ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters stream Stream The stream isLittleEndian bool The is little endian buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task<ulong> A task containing the ulong ReadUShortExactly(Stream, bool, ArraySegment<byte>, CancellationToken) Reads the u short exactly using the specified stream public static Task<ushort> ReadUShortExactly(Stream stream, bool isLittleEndian, ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters stream Stream The stream isLittleEndian bool The is little endian buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task<ushort> A task containing the ushort ReverseBuffer(ArraySegment<byte>) Reverses the buffer using the specified buffer internal static void ReverseBuffer(ArraySegment<byte> buffer) Parameters buffer ArraySegment<byte> The buffer WriteInt(int, Stream, bool) Writes the int using the specified value public static void WriteInt(int value, Stream stream, bool isLittleEndian) Parameters value int The value stream Stream The stream isLittleEndian bool The is little endian WriteLong(long, Stream, bool) Writes the long using the specified value public static void WriteLong(long value, Stream stream, bool isLittleEndian) Parameters value long The value stream Stream The stream isLittleEndian bool The is little endian WriteToStream(byte[], Stream) Writes the to stream using the specified buffer internal static void WriteToStream(byte[] buffer, Stream stream) Parameters buffer byte[] The buffer stream Stream The stream WriteULong(ulong, Stream, bool) Writes the u long using the specified value public static void WriteULong(ulong value, Stream stream, bool isLittleEndian) Parameters value ulong The value stream Stream The stream isLittleEndian bool The is little endian WriteUShort(ushort, Stream, bool) Writes the u short using the specified value public static void WriteUShort(ushort value, Stream stream, bool isLittleEndian) Parameters value ushort The value stream Stream The stream isLittleEndian bool The is little endian"
  },
  "api/Alis.Core.Network.Internal.Events.html": {
    "href": "api/Alis.Core.Network.Internal.Events.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Events Namespace Alis.Core.Network.Internal Assembly Alis.dll Use the Guid to locate this EventSource in PerfView using the Additional Providers box (without wildcard characters) [EventSource(Name = \"Ninja-WebSockets\", Guid = \"7DE1A071-4F85-4DBD-8FB1-EE8D3845E087\")] internal sealed class Events : EventSource, IDisposable Inheritance object EventSource Events Implements IDisposable Inherited Members EventSource.Dispose() EventSource.GenerateManifest(Type, string?) EventSource.GenerateManifest(Type, string?, EventManifestOptions) EventSource.GetGuid(Type) EventSource.GetName(Type) EventSource.GetSources() EventSource.GetTrait(string) EventSource.IsEnabled() EventSource.IsEnabled(EventLevel, EventKeywords) EventSource.IsEnabled(EventLevel, EventKeywords, EventChannel) EventSource.SendCommand(EventSource, EventCommand, IDictionary<string, string?>?) EventSource.SetCurrentThreadActivityId(Guid) EventSource.SetCurrentThreadActivityId(Guid, out Guid) EventSource.ToString() EventSource.Write(string?) EventSource.Write(string?, EventSourceOptions) EventSource.Write<T>(string?, EventSourceOptions, T) EventSource.Write<T>(string?, ref EventSourceOptions, ref Guid, ref Guid, ref T) EventSource.Write<T>(string?, ref EventSourceOptions, ref T) EventSource.Write<T>(string?, T) EventSource.ConstructionException EventSource.CurrentThreadActivityId EventSource.Guid EventSource.Name EventSource.Settings EventSource.EventCommandExecuted object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Log The events public static readonly Events Log Field Value Events Methods AcceptWebSocketStarted(Guid) Accepts the web socket started using the specified guid [Event(14, Level = EventLevel.Informational)] public void AcceptWebSocketStarted(Guid guid) Parameters guid Guid The guid AttemtingToSecureSslConnection(Guid) Attemtings the to secure ssl connection using the specified guid [Event(3, Level = EventLevel.Informational)] public void AttemtingToSecureSslConnection(Guid guid) Parameters guid Guid The guid BadRequest(Guid, string) Bads the request using the specified guid [Event(17, Level = EventLevel.Error)] public void BadRequest(Guid guid, string exception) Parameters guid Guid The guid exception string The exception ClientConnectingToHost(Guid, string, int) Clients the connecting to host using the specified guid [Event(2, Level = EventLevel.Informational)] public void ClientConnectingToHost(Guid guid, string host, int port) Parameters guid Guid The guid host string The host port int The port ClientConnectingToIpAddress(Guid, string, int) Clients the connecting to ip address using the specified guid [Event(1, Level = EventLevel.Informational)] public void ClientConnectingToIpAddress(Guid guid, string ipAddress, int port) Parameters guid Guid The guid ipAddress string The ip address port int The port ClientHandshakeSuccess(Guid) Clients the handshake success using the specified guid [Event(12, Level = EventLevel.Informational)] public void ClientHandshakeSuccess(Guid guid) Parameters guid Guid The guid CloseFrameReceivedInUnexpectedState(Guid, WebSocketState, WebSocketCloseStatus?, string) Closes the frame received in unexpected state using the specified guid [Event(34, Level = EventLevel.Warning)] public void CloseFrameReceivedInUnexpectedState(Guid guid, WebSocketState webSocketState, WebSocketCloseStatus? closeStatus, string statusDescription) Parameters guid Guid The guid webSocketState WebSocketState The web socket state closeStatus WebSocketCloseStatus? The close status statusDescription string The status description CloseHandshakeComplete(Guid) Closes the handshake complete using the specified guid [Event(33, Level = EventLevel.Informational)] public void CloseHandshakeComplete(Guid guid) Parameters guid Guid The guid CloseHandshakeRespond(Guid, WebSocketCloseStatus?, string) Closes the handshake respond using the specified guid [Event(32, Level = EventLevel.Informational)] public void CloseHandshakeRespond(Guid guid, WebSocketCloseStatus? closeStatus, string statusDescription) Parameters guid Guid The guid closeStatus WebSocketCloseStatus? The close status statusDescription string The status description CloseHandshakeStarted(Guid, WebSocketCloseStatus?, string) Closes the handshake started using the specified guid [Event(31, Level = EventLevel.Informational)] public void CloseHandshakeStarted(Guid guid, WebSocketCloseStatus? closeStatus, string statusDescription) Parameters guid Guid The guid closeStatus WebSocketCloseStatus? The close status statusDescription string The status description CloseOutputAutoTimeout(Guid, WebSocketCloseStatus, string, string) Closes the output auto timeout using the specified guid [Event(24, Level = EventLevel.Warning)] public void CloseOutputAutoTimeout(Guid guid, WebSocketCloseStatus closeStatus, string statusDescription, string exception) Parameters guid Guid The guid closeStatus WebSocketCloseStatus The close status statusDescription string The status description exception string The exception CloseOutputAutoTimeoutCancelled(Guid, int, WebSocketCloseStatus, string, string) Closes the output auto timeout cancelled using the specified guid [Event(25, Level = EventLevel.Error)] public void CloseOutputAutoTimeoutCancelled(Guid guid, int timeoutSeconds, WebSocketCloseStatus closeStatus, string statusDescription, string exception) Parameters guid Guid The guid timeoutSeconds int The timeout seconds closeStatus WebSocketCloseStatus The close status statusDescription string The status description exception string The exception CloseOutputAutoTimeoutError(Guid, string, WebSocketCloseStatus, string, string) Closes the output auto timeout error using the specified guid [Event(26, Level = EventLevel.Error)] public void CloseOutputAutoTimeoutError(Guid guid, string closeException, WebSocketCloseStatus closeStatus, string statusDescription, string exception) Parameters guid Guid The guid closeException string The close exception closeStatus WebSocketCloseStatus The close status statusDescription string The status description exception string The exception CloseOutputNoHandshake(Guid, WebSocketCloseStatus?, string) Closes the output no handshake using the specified guid [Event(30, Level = EventLevel.Informational)] public void CloseOutputNoHandshake(Guid guid, WebSocketCloseStatus? closeStatus, string statusDescription) Parameters guid Guid The guid closeStatus WebSocketCloseStatus? The close status statusDescription string The status description ConnectionNotSecure(Guid) Connections the not secure using the specified guid [Event(5, Level = EventLevel.Informational)] public void ConnectionNotSecure(Guid guid) Parameters guid Guid The guid ConnectionSecured(Guid) Connections the secured using the specified guid [Event(4, Level = EventLevel.Informational)] public void ConnectionSecured(Guid guid) Parameters guid Guid The guid HandshakeFailure(Guid, string) Handshakes the failure using the specified guid [Event(11, Level = EventLevel.Error)] public void HandshakeFailure(Guid guid, string message) Parameters guid Guid The guid message string The message HandshakeSent(Guid, string) Handshakes the sent using the specified guid [Event(7, Level = EventLevel.Informational)] public void HandshakeSent(Guid guid, string httpHeader) Parameters guid Guid The guid httpHeader string The http header InvalidHttpResponseCode(Guid, string) Invalids the http response code using the specified guid [Event(10, Level = EventLevel.Warning)] public void InvalidHttpResponseCode(Guid guid, string response) Parameters guid Guid The guid response string The response InvalidStateBeforeClose(Guid, WebSocketState) Invalids the state before close using the specified guid [Event(38, Level = EventLevel.Warning)] public void InvalidStateBeforeClose(Guid guid, WebSocketState webSocketState) Parameters guid Guid The guid webSocketState WebSocketState The web socket state InvalidStateBeforeCloseOutput(Guid, WebSocketState) Invalids the state before close output using the specified guid [Event(39, Level = EventLevel.Warning)] public void InvalidStateBeforeCloseOutput(Guid guid, WebSocketState webSocketState) Parameters guid Guid The guid webSocketState WebSocketState The web socket state KeepAliveIntervalExpired(Guid, int) Keeps the alive interval expired using the specified guid [Event(23, Level = EventLevel.Warning)] public void KeepAliveIntervalExpired(Guid guid, int keepAliveIntervalSeconds) Parameters guid Guid The guid keepAliveIntervalSeconds int The keep alive interval seconds KeepAliveIntervalZero(Guid) Keeps the alive interval zero using the specified guid [Event(20, Level = EventLevel.Informational)] public void KeepAliveIntervalZero(Guid guid) Parameters guid Guid The guid NoMessageCompression(Guid) Noes the message compression using the specified guid [Event(19, Level = EventLevel.Informational)] public void NoMessageCompression(Guid guid) Parameters guid Guid The guid PingPongManagerEnded(Guid) Pings the pong manager ended using the specified guid [Event(22, Level = EventLevel.Informational)] public void PingPongManagerEnded(Guid guid) Parameters guid Guid The guid PingPongManagerStarted(Guid, int) Pings the pong manager started using the specified guid [Event(21, Level = EventLevel.Informational)] public void PingPongManagerStarted(Guid guid, int keepAliveIntervalSeconds) Parameters guid Guid The guid keepAliveIntervalSeconds int The keep alive interval seconds ReadHttpResponseError(Guid, string) Reads the http response error using the specified guid [Event(9, Level = EventLevel.Error)] public void ReadHttpResponseError(Guid guid, string exception) Parameters guid Guid The guid exception string The exception ReadingHttpResponse(Guid) Readings the http response using the specified guid [Event(8, Level = EventLevel.Informational)] public void ReadingHttpResponse(Guid guid) Parameters guid Guid The guid ReceivedFrame(Guid, WebSocketOpCode, bool, int) Receiveds the frame using the specified guid [Event(29, Level = EventLevel.Verbose)] public void ReceivedFrame(Guid guid, WebSocketOpCode webSocketOpCode, bool isFinBitSet, int numBytes) Parameters guid Guid The guid webSocketOpCode WebSocketOpCode The web socket op code isFinBitSet bool The is fin bit set numBytes int The num bytes SendingFrame(Guid, WebSocketOpCode, bool, int, bool) Sendings the frame using the specified guid [Event(28, Level = EventLevel.Verbose)] public void SendingFrame(Guid guid, WebSocketOpCode webSocketOpCode, bool isFinBitSet, int numBytes, bool isPayloadCompressed) Parameters guid Guid The guid webSocketOpCode WebSocketOpCode The web socket op code isFinBitSet bool The is fin bit set numBytes int The num bytes isPayloadCompressed bool The is payload compressed SendingHandshakeResponse(Guid, string) Sendings the handshake response using the specified guid [Event(15, Level = EventLevel.Informational)] public void SendingHandshakeResponse(Guid guid, string response) Parameters guid Guid The guid response string The response ServerHandshakeSuccess(Guid) Servers the handshake success using the specified guid [Event(13, Level = EventLevel.Informational)] public void ServerHandshakeSuccess(Guid guid) Parameters guid Guid The guid SslCertificateError(SslPolicyErrors) Ssls the certificate error using the specified ssl policy errors [Event(6, Level = EventLevel.Error)] public void SslCertificateError(SslPolicyErrors sslPolicyErrors) Parameters sslPolicyErrors SslPolicyErrors The ssl policy errors TryGetBufferNotSupported(Guid, string) Tries the get buffer not supported using the specified guid [Event(27, Level = EventLevel.Warning)] public void TryGetBufferNotSupported(Guid guid, string streamType) Parameters guid Guid The guid streamType string The stream type UsePerMessageDeflate(Guid) Uses the per message deflate using the specified guid [Event(18, Level = EventLevel.Informational)] public void UsePerMessageDeflate(Guid guid) Parameters guid Guid The guid WebSocketDispose(Guid, WebSocketState) Webs the socket dispose using the specified guid [Event(35, Level = EventLevel.Informational)] public void WebSocketDispose(Guid guid, WebSocketState webSocketState) Parameters guid Guid The guid webSocketState WebSocketState The web socket state WebSocketDisposeCloseTimeout(Guid, WebSocketState) Webs the socket dispose close timeout using the specified guid [Event(36, Level = EventLevel.Warning)] public void WebSocketDisposeCloseTimeout(Guid guid, WebSocketState webSocketState) Parameters guid Guid The guid webSocketState WebSocketState The web socket state WebSocketDisposeError(Guid, WebSocketState, string) Webs the socket dispose error using the specified guid [Event(37, Level = EventLevel.Error)] public void WebSocketDisposeError(Guid guid, WebSocketState webSocketState, string exception) Parameters guid Guid The guid webSocketState WebSocketState The web socket state exception string The exception WebSocketVersionNotSupported(Guid, string) Webs the socket version not supported using the specified guid [Event(16, Level = EventLevel.Error)] public void WebSocketVersionNotSupported(Guid guid, string exception) Parameters guid Guid The guid exception string The exception"
  },
  "api/Alis.Core.Network.Internal.WebSocketFrame.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketFrame.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketFrame Namespace Alis.Core.Network.Internal Assembly Alis.dll The web socket frame class internal class WebSocketFrame Inheritance object WebSocketFrame Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketFrame(bool, WebSocketOpCode, int, ArraySegment<byte>) Initializes a new instance of the Alis.Core.Network.Internal.WebSocketFrame class public WebSocketFrame(bool isFinBitSet, WebSocketOpCode webSocketOpCode, int count, ArraySegment<byte> maskKey) Parameters isFinBitSet bool The is fin bit set webSocketOpCode WebSocketOpCode The web socket op code count int The count maskKey ArraySegment<byte> The mask key WebSocketFrame(bool, WebSocketOpCode, int, WebSocketCloseStatus, string, ArraySegment<byte>) Initializes a new instance of the Alis.Core.Network.Internal.WebSocketFrame class public WebSocketFrame(bool isFinBitSet, WebSocketOpCode webSocketOpCode, int count, WebSocketCloseStatus closeStatus, string closeStatusDescription, ArraySegment<byte> maskKey) Parameters isFinBitSet bool The is fin bit set webSocketOpCode WebSocketOpCode The web socket op code count int The count closeStatus WebSocketCloseStatus The close status closeStatusDescription string The close status description maskKey ArraySegment<byte> The mask key Properties CloseStatus Gets the value of the close status public WebSocketCloseStatus? CloseStatus { get; } Property Value WebSocketCloseStatus? CloseStatusDescription Gets the value of the close status description public string CloseStatusDescription { get; } Property Value string Count Gets the value of the count public int Count { get; } Property Value int IsFinBitSet Gets the value of the is fin bit set public bool IsFinBitSet { get; } Property Value bool MaskKey Gets the value of the mask key public ArraySegment<byte> MaskKey { get; } Property Value ArraySegment<byte> OpCode Gets the value of the op code public WebSocketOpCode OpCode { get; } Property Value WebSocketOpCode"
  },
  "api/Alis.Core.Network.Internal.WebSocketFrameCommon.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketFrameCommon.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketFrameCommon Namespace Alis.Core.Network.Internal Assembly Alis.dll The web socket frame common class internal static class WebSocketFrameCommon Inheritance object WebSocketFrameCommon Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields MaskKeyLength The mask key length public const int MaskKeyLength = 4 Field Value int Methods ApplyMaskKey(byte[], byte[], int, int, int) Applies the mask key using the specified buffer internal static void ApplyMaskKey(byte[] buffer, byte[] maskKeyArray, int payloadOffset, int payloadCountPlusOffset, int maskKeyOffset) Parameters buffer byte[] The buffer maskKeyArray byte[] The mask key array payloadOffset int The payload offset payloadCountPlusOffset int The payload count plus offset maskKeyOffset int The mask key offset ApplyMaskKeyAtIndex(byte[], byte[], int, int, int) Applies the mask key at index using the specified buffer internal static void ApplyMaskKeyAtIndex(byte[] buffer, byte[] maskKeyArray, int i, int payloadOffset, int maskKeyOffset) Parameters buffer byte[] The buffer maskKeyArray byte[] The mask key array i int The payloadOffset int The payload offset maskKeyOffset int The mask key offset ToggleMask(ArraySegment<byte>, ArraySegment<byte>) Mutate payload with the mask key This is a reversible process If you apply this to masked data it will be unmasked and visa versa public static void ToggleMask(ArraySegment<byte> maskKey, ArraySegment<byte> payload) Parameters maskKey ArraySegment<byte> The 4 byte mask key payload ArraySegment<byte> The payload to mutate ValidateMaskKey(ArraySegment<byte>) Validates the mask key using the specified mask key internal static void ValidateMaskKey(ArraySegment<byte> maskKey) Parameters maskKey ArraySegment<byte> The mask key Exceptions MaskKeyLengthException MaskKey key must be {MaskKeyLength} bytes"
  },
  "api/Alis.Core.Network.Internal.WebSocketFrameReader.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketFrameReader.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketFrameReader Namespace Alis.Core.Network.Internal Assembly Alis.dll Reads a WebSocket frame see http://tools.ietf.org/html/rfc6455 for specification internal static class WebSocketFrameReader Inheritance object WebSocketFrameReader Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods CalculateNumBytesToRead(int, int) Calculates the num bytes to read using the specified num bytes letf to read internal static int CalculateNumBytesToRead(int numBytesLetfToRead, int bufferSize) Parameters numBytesLetfToRead int The num bytes letf to read bufferSize int The buffer size Returns int The num bytes letf to read DecodeCloseFrame(bool, WebSocketOpCode, int, ArraySegment<byte>, ArraySegment<byte>) Extracts close status and close description information from the web socket frame internal static WebSocketFrame DecodeCloseFrame(bool isFinBitSet, WebSocketOpCode opCode, int count, ArraySegment<byte> buffer, ArraySegment<byte> maskKey) Parameters isFinBitSet bool opCode WebSocketOpCode count int buffer ArraySegment<byte> maskKey ArraySegment<byte> Returns WebSocketFrame GetInitialLength(byte) Gets the initial length using the specified byte 2 internal static uint GetInitialLength(byte byte2) Parameters byte2 byte The byte Returns uint The uint ReadAsync(Stream, ArraySegment<byte>, CancellationToken) Read a WebSocket frame from the stream public static Task<WebSocketReadCursor> ReadAsync(Stream fromStream, ArraySegment<byte> intoBuffer, CancellationToken cancellationToken) Parameters fromStream Stream The stream to read from intoBuffer ArraySegment<byte> The buffer to read into cancellationToken CancellationToken the cancellation token Returns Task<WebSocketReadCursor> A websocket frame ReadFromCursorAsync(Stream, ArraySegment<byte>, WebSocketReadCursor, CancellationToken) The last read could not be completed because the read buffer was too small. We need to continue reading bytes off the stream. Not to be confused with a continuation frame public static Task<WebSocketReadCursor> ReadFromCursorAsync(Stream fromStream, ArraySegment<byte> intoBuffer, WebSocketReadCursor readCursor, CancellationToken cancellationToken) Parameters fromStream Stream The stream to read from intoBuffer ArraySegment<byte> The buffer to read into readCursor WebSocketReadCursor The previous partial websocket frame read plus cursor information cancellationToken CancellationToken the cancellation token Returns Task<WebSocketReadCursor> A websocket frame ReadLength(byte, ArraySegment<byte>, Stream, CancellationToken) Reads the length of the payload according to the contents of byte2 internal static Task<uint> ReadLength(byte byte2, ArraySegment<byte> smallBuffer, Stream fromStream, CancellationToken cancellationToken) Parameters byte2 byte smallBuffer ArraySegment<byte> fromStream Stream cancellationToken CancellationToken Returns Task<uint> ReadLongLength(Stream, ArraySegment<byte>, CancellationToken) Reads the long length using the specified from stream internal static Task<uint> ReadLongLength(Stream fromStream, ArraySegment<byte> smallBuffer, CancellationToken cancellationToken) Parameters fromStream Stream The from stream smallBuffer ArraySegment<byte> The small buffer cancellationToken CancellationToken The cancellation token Returns Task<uint> A task containing the uint ReadShortLength(Stream, ArraySegment<byte>, CancellationToken) Reads the short length using the specified from stream internal static Task<uint> ReadShortLength(Stream fromStream, ArraySegment<byte> smallBuffer, CancellationToken cancellationToken) Parameters fromStream Stream The from stream smallBuffer ArraySegment<byte> The small buffer cancellationToken CancellationToken The cancellation token Returns Task<uint> A task containing the uint ValidateLength(uint) Validates the length using the specified len internal static void ValidateLength(uint len) Parameters len uint The len Exceptions ArgumentOutOfRangeException Payload length out of range. Min 0 max 2GB. Actual {len:#,##0} bytes."
  },
  "api/Alis.Core.Network.Internal.WebSocketFrameWriter.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketFrameWriter.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketFrameWriter Namespace Alis.Core.Network.Internal Assembly Alis.dll The web socket frame writer class internal static class WebSocketFrameWriter Inheritance object WebSocketFrameWriter Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods DeterminePayloadCount(ArraySegment<byte>) Determines the payload count using the specified from payload internal static int DeterminePayloadCount(ArraySegment<byte> fromPayload) Parameters fromPayload ArraySegment<byte> The from payload Returns int The int Write(WebSocketOpCode, ArraySegment<byte>, MemoryStream, bool, bool) No async await stuff here because we are dealing with a memory stream public static void Write(WebSocketOpCode opCode, ArraySegment<byte> fromPayload, MemoryStream toStream, bool isLastFrame, bool isClient) Parameters opCode WebSocketOpCode The web socket opcode fromPayload ArraySegment<byte> Array segment to get payload data from toStream MemoryStream Stream to write to isLastFrame bool True is this is the last frame in this message (usually true) isClient bool WriteByteWithPayloadCount(byte, int, MemoryStream) Writes the byte with payload count using the specified mask bit set as byte internal static void WriteByteWithPayloadCount(byte maskBitSetAsByte, int payloadCount, MemoryStream toStream) Parameters maskBitSetAsByte byte The mask bit set as byte payloadCount int The payload count toStream MemoryStream The to stream WriteMaskedPayload(ArraySegment<byte>, MemoryStream) Writes the masked payload using the specified from payload internal static void WriteMaskedPayload(ArraySegment<byte> fromPayload, MemoryStream toStream) Parameters fromPayload ArraySegment<byte> The from payload toStream MemoryStream The to stream WritePayloadData(ArraySegment<byte>, MemoryStream) Writes the payload data using the specified from payload internal static void WritePayloadData(ArraySegment<byte> fromPayload, MemoryStream toStream) Parameters fromPayload ArraySegment<byte> The from payload toStream MemoryStream The to stream WritePayloadLength(ArraySegment<byte>, MemoryStream, bool) Writes the payload length using the specified from payload internal static void WritePayloadLength(ArraySegment<byte> fromPayload, MemoryStream toStream, bool isClient) Parameters fromPayload ArraySegment<byte> The from payload toStream MemoryStream The to stream isClient bool The is client"
  },
  "api/Alis.Core.Network.Internal.WebSocketImplementation.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketImplementation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketImplementation Namespace Alis.Core.Network.Internal Assembly Alis.dll Main implementation of the WebSocket abstract class internal sealed class WebSocketImplementation : WebSocket, IDisposable Inheritance object WebSocket WebSocketImplementation Implements IDisposable Inherited Members WebSocket.Abort() WebSocket.CloseAsync(WebSocketCloseStatus, string, CancellationToken) WebSocket.CloseOutputAsync(WebSocketCloseStatus, string, CancellationToken) WebSocket.CreateClientBuffer(int, int) WebSocket.CreateFromStream(Stream, bool, string, TimeSpan) WebSocket.CreateServerBuffer(int) WebSocket.Dispose() WebSocket.ReceiveAsync(ArraySegment<byte>, CancellationToken) WebSocket.ReceiveAsync(Memory<byte>, CancellationToken) WebSocket.SendAsync(ArraySegment<byte>, WebSocketMessageType, bool, CancellationToken) WebSocket.SendAsync(ReadOnlyMemory<byte>, WebSocketMessageType, bool, CancellationToken) WebSocket.CloseStatus WebSocket.CloseStatusDescription WebSocket.DefaultKeepAliveInterval WebSocket.State WebSocket.SubProtocol object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketImplementation(Guid, Func<MemoryStream>, Stream, TimeSpan, string, bool, bool, string) Initializes a new instance of the Alis.Core.Network.Internal.WebSocketImplementation class internal WebSocketImplementation(Guid guid, Func<MemoryStream> recycledStreamFactory, Stream stream, TimeSpan keepAliveInterval, string secWebSocketExtensions, bool includeExceptionInCloseResponse, bool isClient, string subProtocol) Parameters guid Guid The guid recycledStreamFactory Func<MemoryStream> The recycled stream factory stream Stream The stream keepAliveInterval TimeSpan The keep alive interval secWebSocketExtensions string The sec web socket extensions includeExceptionInCloseResponse bool The include exception in close response isClient bool The is client subProtocol string The sub protocol Exceptions InvalidOperationException KeepAliveInterval must be Zero or positive Fields PingPongPayloadLen The max ping pong payload len internal const int PingPongPayloadLen = 125 Field Value int _closeStatus The close status internal WebSocketCloseStatus? _closeStatus Field Value WebSocketCloseStatus? _closeStatusDescription The close status description internal string _closeStatusDescription Field Value string _continuationFrameMessageType The binary internal WebSocketMessageType _continuationFrameMessageType Field Value WebSocketMessageType _guid The guid internal readonly Guid _guid Field Value Guid _includeExceptionInCloseResponse The include exception in close response internal readonly bool _includeExceptionInCloseResponse Field Value bool _internalReadCts The internal read cts internal readonly CancellationTokenSource _internalReadCts Field Value CancellationTokenSource _isClient The is client internal readonly bool _isClient Field Value bool _isContinuationFrame The is continuation frame internal bool _isContinuationFrame Field Value bool _readCursor The read cursor internal WebSocketReadCursor _readCursor Field Value WebSocketReadCursor _recycledStreamFactory The recycled stream factory internal readonly Func<MemoryStream> _recycledStreamFactory Field Value Func<MemoryStream> _semaphore The semaphore slim internal readonly SemaphoreSlim _semaphore Field Value SemaphoreSlim _state The state internal WebSocketState _state Field Value WebSocketState _stream The stream internal readonly Stream _stream Field Value Stream _tryGetBufferFailureLogged The try get buffer failure logged internal bool _tryGetBufferFailureLogged Field Value bool _usePerMessageDeflate The use per message deflate internal readonly bool _usePerMessageDeflate Field Value bool Properties CloseStatus Gets the value of the close status public override WebSocketCloseStatus? CloseStatus { get; } Property Value WebSocketCloseStatus? CloseStatusDescription Gets the value of the close status description public override string CloseStatusDescription { get; } Property Value string KeepAliveInterval Gets the value of the keep alive interval public TimeSpan KeepAliveInterval { get; } Property Value TimeSpan State Gets the value of the state public override WebSocketState State { get; } Property Value WebSocketState SubProtocol Gets the value of the sub protocol public override string SubProtocol { get; } Property Value string Methods Abort() Aborts the WebSocket without sending a Close frame public override void Abort() BuildClosePayload(WebSocketCloseStatus, string) As per the spec, write the close status followed by the close reason internal ArraySegment<byte> BuildClosePayload(WebSocketCloseStatus closeStatus, string statusDescription) Parameters closeStatus WebSocketCloseStatus The close status statusDescription string Optional extra close details Returns ArraySegment<byte> The payload to sent in the close frame CloseAsync(WebSocketCloseStatus, string, CancellationToken) Closes the close status public override Task CloseAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken) Parameters closeStatus WebSocketCloseStatus The close status statusDescription string The status description cancellationToken CancellationToken The cancellation token Returns Task CloseOutputAsync(WebSocketCloseStatus, string, CancellationToken) Closes the output using the specified close status public override Task CloseOutputAsync(WebSocketCloseStatus closeStatus, string statusDescription, CancellationToken cancellationToken) Parameters closeStatus WebSocketCloseStatus The close status statusDescription string The status description cancellationToken CancellationToken The cancellation token Returns Task CloseOutputAutoTimeoutAsync(WebSocketCloseStatus, string, Exception) Automatic WebSocket close in response to some invalid data from the remote websocket host internal Task CloseOutputAutoTimeoutAsync(WebSocketCloseStatus closeStatus, string statusDescription, Exception ex) Parameters closeStatus WebSocketCloseStatus The close status to use statusDescription string A description of why we are closing ex Exception The exception (for logging) Returns Task Dispose() Dispose will send a close frame if the connection is still open public override void Dispose() GetBuffer(MemoryStream) Note that the way in which the stream buffer is accessed can lead to significant performance problems You want to avoid a call to stream.ToArray to avoid extra memory allocation MemoryStream can be configured to have its internal buffer accessible. internal ArraySegment<byte> GetBuffer(MemoryStream stream) Parameters stream MemoryStream Returns ArraySegment<byte> GetOppCode(WebSocketMessageType) Turns a spec websocket frame opcode into a WebSocketMessageType internal WebSocketOpCode GetOppCode(WebSocketMessageType messageType) Parameters messageType WebSocketMessageType Returns WebSocketOpCode HandleBinaryFrame(WebSocketFrame, bool) Handles the binary frame using the specified frame internal WebSocketReceiveResult HandleBinaryFrame(WebSocketFrame frame, bool endOfMessage) Parameters frame WebSocketFrame The frame endOfMessage bool The end of message Returns WebSocketReceiveResult The web socket receive result HandleConnectionClose(WebSocketFrame, ArraySegment<byte>, CancellationToken) Handles the connection close using the specified frame internal Task<WebSocketReceiveResult> HandleConnectionClose(WebSocketFrame frame, ArraySegment<byte> buffer, CancellationToken token) Parameters frame WebSocketFrame The frame buffer ArraySegment<byte> The buffer token CancellationToken The token Returns Task<WebSocketReceiveResult> A task containing the web socket receive result HandleContinuationFrame(WebSocketFrame, bool) Handles the continuation frame using the specified frame internal WebSocketReceiveResult HandleContinuationFrame(WebSocketFrame frame, bool endOfMessage) Parameters frame WebSocketFrame The frame endOfMessage bool The end of message Returns WebSocketReceiveResult The web socket receive result HandleDefault(WebSocketFrame) Handles the default using the specified frame internal Task<WebSocketReceiveResult> HandleDefault(WebSocketFrame frame) Parameters frame WebSocketFrame The frame Returns Task<WebSocketReceiveResult> A task containing the web socket receive result HandleExceptions(Exception) Handles the exceptions using the specified catch all internal Task<WebSocketReceiveResult> HandleExceptions(Exception catchAll) Parameters catchAll Exception The catch all Returns Task<WebSocketReceiveResult> A task containing the web socket receive result HandlePing(WebSocketFrame, ArraySegment<byte>, CancellationTokenSource) Handles the ping using the specified frame internal Task<WebSocketReceiveResult> HandlePing(WebSocketFrame frame, ArraySegment<byte> buffer, CancellationTokenSource linkedCts) Parameters frame WebSocketFrame The frame buffer ArraySegment<byte> The buffer linkedCts CancellationTokenSource The linked cts Returns Task<WebSocketReceiveResult> A task containing the web socket receive result HandlePong(WebSocketFrame, ArraySegment<byte>) Handles the pong using the specified frame internal WebSocketReceiveResult HandlePong(WebSocketFrame frame, ArraySegment<byte> buffer) Parameters frame WebSocketFrame The frame buffer ArraySegment<byte> The buffer Returns WebSocketReceiveResult The web socket receive result HandleTextFrame(WebSocketFrame, bool) Handles the text frame using the specified frame internal WebSocketReceiveResult HandleTextFrame(WebSocketFrame frame, bool endOfMessage) Parameters frame WebSocketFrame The frame endOfMessage bool The end of message Returns WebSocketReceiveResult The web socket receive result HandleWebSocketOpCodes(WebSocketFrame, ArraySegment<byte>, CancellationTokenSource, bool) Handles the web socket op codes using the specified frame internal Task<WebSocketReceiveResult> HandleWebSocketOpCodes(WebSocketFrame frame, ArraySegment<byte> buffer, CancellationTokenSource linkedCts, bool endOfMessage) Parameters frame WebSocketFrame The frame buffer ArraySegment<byte> The buffer linkedCts CancellationTokenSource The linked cts endOfMessage bool The end of message Returns Task<WebSocketReceiveResult> A task containing the web socket receive result OnPong(PongEventArgs) Called when a Pong frame is received internal void OnPong(PongEventArgs e) Parameters e PongEventArgs ReadWebSocketFrame(ArraySegment<byte>, CancellationToken) Reads the web socket frame using the specified buffer internal Task<WebSocketFrame> ReadWebSocketFrame(ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task<WebSocketFrame> A task containing the web socket frame ReceiveAsync(ArraySegment<byte>, CancellationToken) Receives the buffer public override Task<WebSocketReceiveResult> ReceiveAsync(ArraySegment<byte> buffer, CancellationToken cancellationToken) Parameters buffer ArraySegment<byte> The buffer cancellationToken CancellationToken The cancellation token Returns Task<WebSocketReceiveResult> A task containing the web socket receive result RespondToCloseFrame(WebSocketFrame, ArraySegment<byte>, CancellationToken) Called when a Close frame is received Send a response close frame if applicable internal Task<WebSocketReceiveResult> RespondToCloseFrame(WebSocketFrame frame, ArraySegment<byte> buffer, CancellationToken token) Parameters frame WebSocketFrame buffer ArraySegment<byte> token CancellationToken Returns Task<WebSocketReceiveResult> SendAsync(ArraySegment<byte>, WebSocketMessageType, bool, CancellationToken) Send data to the web socket public override Task SendAsync(ArraySegment<byte> buffer, WebSocketMessageType messageType, bool endOfMessage, CancellationToken cancellationToken) Parameters buffer ArraySegment<byte> the buffer containing data to send messageType WebSocketMessageType The message type. Can be Text or Binary endOfMessage bool True if this message is a standalone message (this is the norm) If it is a multi-part message then false (and true for the last message) cancellationToken CancellationToken the cancellation token Returns Task SendPingAsync(ArraySegment<byte>, CancellationToken) Sends the ping using the specified payload public Task SendPingAsync(ArraySegment<byte> payload, CancellationToken cancellationToken) Parameters payload ArraySegment<byte> The payload cancellationToken CancellationToken The cancellation token Returns Task Exceptions InvalidOperationException Cannot send Ping: Max ping message size {PingPongPayloadLen} exceeded: {payload.Count} SendPongAsync(ArraySegment<byte>, CancellationToken) Sends the pong using the specified payload internal Task SendPongAsync(ArraySegment<byte> payload, CancellationToken cancellationToken) Parameters payload ArraySegment<byte> The payload cancellationToken CancellationToken The cancellation token Returns Task SendPongFrame(ArraySegment<byte>, CancellationToken) Sends the pong frame using the specified payload internal Task SendPongFrame(ArraySegment<byte> payload, CancellationToken cancellationToken) Parameters payload ArraySegment<byte> The payload cancellationToken CancellationToken The cancellation token Returns Task ValidatePayloadSize(ArraySegment<byte>) Validates the payload size using the specified payload internal void ValidatePayloadSize(ArraySegment<byte> payload) Parameters payload ArraySegment<byte> The payload Exceptions InvalidOperationException Max ping message size {PingPongPayloadLen} exceeded: {payload.Count} WriteStreamToNetwork(MemoryStream, CancellationToken) Puts data on the wire internal Task WriteStreamToNetwork(MemoryStream stream, CancellationToken cancellationToken) Parameters stream MemoryStream The stream to read data from cancellationToken CancellationToken Returns Task Pong public event EventHandler<PongEventArgs> Pong Event Type EventHandler<PongEventArgs>"
  },
  "api/Alis.Core.Network.Internal.WebSocketOpCode.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketOpCode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum WebSocketOpCode Namespace Alis.Core.Network.Internal Assembly Alis.dll The web socket op code enum internal enum WebSocketOpCode Fields ContinuationFrame = 0 The continuation frame web socket op code TextFrame = 1 The text frame web socket op code BinaryFrame = 2 The binary frame web socket op code ConnectionClose = 8 The connection close web socket op code Ping = 9 The ping web socket op code Pong = 10 The pong web socket op code"
  },
  "api/Alis.Core.Network.Internal.WebSocketReadCursor.html": {
    "href": "api/Alis.Core.Network.Internal.WebSocketReadCursor.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketReadCursor Namespace Alis.Core.Network.Internal Assembly Alis.dll The web socket read cursor class internal class WebSocketReadCursor Inheritance object WebSocketReadCursor Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketReadCursor(WebSocketFrame, int, int) Initializes a new instance of the Alis.Core.Network.Internal.WebSocketReadCursor class public WebSocketReadCursor(WebSocketFrame frame, int numBytesRead, int numBytesLeftToRead) Parameters frame WebSocketFrame The frame numBytesRead int The num bytes read numBytesLeftToRead int The num bytes left to read Properties NumBytesLeftToRead Gets the value of the num bytes left to read public int NumBytesLeftToRead { get; } Property Value int NumBytesRead Gets the value of the num bytes read public int NumBytesRead { get; } Property Value int WebSocketFrame Gets the value of the web socket frame public WebSocketFrame WebSocketFrame { get; } Property Value WebSocketFrame"
  },
  "api/Alis.Core.Network.Internal.html": {
    "href": "api/Alis.Core.Network.Internal.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Network.Internal Classes BinaryReaderWriter The binary reader writer class Events Use the Guid to locate this EventSource in PerfView using the Additional Providers box (without wildcard characters) WebSocketFrame The web socket frame class WebSocketFrameCommon The web socket frame common class WebSocketFrameReader Reads a WebSocket frame see http://tools.ietf.org/html/rfc6455 for specification WebSocketFrameWriter The web socket frame writer class WebSocketImplementation Main implementation of the WebSocket abstract class WebSocketReadCursor The web socket read cursor class Enums WebSocketOpCode The web socket op code enum"
  },
  "api/Alis.Core.Network.PingPongManager.html": {
    "href": "api/Alis.Core.Network.PingPongManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PingPongManager Namespace Alis.Core.Network Assembly Alis.dll Ping Pong Manager used to facilitate ping pong WebSocket messages public class PingPongManager : IPingPongManager Inheritance object PingPongManager Implements IPingPongManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PingPongManager(Guid, WebSocket, TimeSpan, CancellationToken) Initialises a new instance of the PingPongManager to facilitate ping pong WebSocket messages. If you are manually creating an instance of this class then it is advisable to set keepAliveInterval to TimeSpan.Zero when you create the WebSocket instance (using a factory) otherwise you may be automatically be sending duplicate Ping messages (see keepAliveInterval below) public PingPongManager(Guid guid, WebSocket webSocket, TimeSpan keepAliveInterval, CancellationToken cancellationToken) Parameters guid Guid webSocket WebSocket The web socket used to listen to ping messages and send pong messages keepAliveInterval TimeSpan The time between automatically sending ping messages. Set this to TimeSpan.Zero if you with to manually control sending ping messages. cancellationToken CancellationToken The token used to cancel a pending ping send AND the automatic sending of ping messages if keepAliveInterval is positive Fields _cancellationToken The cancellation token internal readonly CancellationToken _cancellationToken Field Value CancellationToken _guid The guid internal readonly Guid _guid Field Value Guid _keepAliveInterval The keep alive interval internal readonly TimeSpan _keepAliveInterval Field Value TimeSpan _pingSentTicks The ping sent ticks internal long _pingSentTicks Field Value long _stopwatch The stopwatch internal readonly Stopwatch _stopwatch Field Value Stopwatch _webSocket The web socket internal readonly WebSocketImplementation _webSocket Field Value WebSocketImplementation Methods HandleExpiredKeepAliveInterval() Handles the expired keep alive interval internal Task HandleExpiredKeepAliveInterval() Returns Task LogPingPongManagerEnd() Logs the ping pong manager end internal void LogPingPongManagerEnd() LogPingPongManagerStart() Logs the ping pong manager start internal void LogPingPongManagerStart() OnPong(PongEventArgs) Ons the pong using the specified e protected virtual void OnPong(PongEventArgs e) Parameters e PongEventArgs The PingForever() Pings the forever internal Task PingForever() Returns Task PingLoop() Pings the loop internal Task PingLoop() Returns Task PingSentTicksExist() Describes whether this instance ping sent ticks exist internal bool PingSentTicksExist() Returns bool The bool SendPing(ArraySegment<byte>, CancellationToken) Sends a ping frame public Task SendPing(ArraySegment<byte> payload, CancellationToken cancellation) Parameters payload ArraySegment<byte> The payload (must be 125 bytes of less) cancellation CancellationToken The cancellation token Returns Task SendPing() Sends the ping internal Task SendPing() Returns Task WebSocketImplPong(object, PongEventArgs) Webs the socket impl pong using the specified sender internal void WebSocketImplPong(object sender, PongEventArgs e) Parameters sender object The sender e PongEventArgs The Pong Raised when a Pong frame is received public event EventHandler<PongEventArgs> Pong Event Type EventHandler<PongEventArgs>"
  },
  "api/Alis.Core.Network.PongEventArgs.html": {
    "href": "api/Alis.Core.Network.PongEventArgs.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PongEventArgs Namespace Alis.Core.Network Assembly Alis.dll Pong EventArgs public class PongEventArgs : EventArgs Inheritance object EventArgs PongEventArgs Inherited Members EventArgs.Empty object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PongEventArgs(ArraySegment<byte>) Initialises a new instance of the PongEventArgs class public PongEventArgs(ArraySegment<byte> payload) Parameters payload ArraySegment<byte> The pong payload must be 125 bytes or less (can be zero bytes) Properties Payload The data extracted from a Pong WebSocket frame public ArraySegment<byte> Payload { get; } Property Value ArraySegment<byte>"
  },
  "api/Alis.Core.Network.PublicBufferMemoryStream.html": {
    "href": "api/Alis.Core.Network.PublicBufferMemoryStream.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PublicBufferMemoryStream Namespace Alis.Core.Network Assembly Alis.dll This memory stream is not instance thread safe (not to be confused with the BufferPool which is instance thread safe) public class PublicBufferMemoryStream : MemoryStream, IAsyncDisposable, IDisposable Inheritance object MarshalByRefObject Stream MemoryStream PublicBufferMemoryStream Implements IAsyncDisposable IDisposable Inherited Members MemoryStream.BeginRead(byte[], int, int, AsyncCallback, object?) MemoryStream.BeginWrite(byte[], int, int, AsyncCallback, object?) MemoryStream.CopyTo(Stream, int) MemoryStream.CopyToAsync(Stream, int, CancellationToken) MemoryStream.Dispose(bool) MemoryStream.EndRead(IAsyncResult) MemoryStream.EndWrite(IAsyncResult) MemoryStream.Flush() MemoryStream.FlushAsync(CancellationToken) MemoryStream.GetBuffer() MemoryStream.Read(byte[], int, int) MemoryStream.Read(Span<byte>) MemoryStream.ReadAsync(byte[], int, int, CancellationToken) MemoryStream.ReadAsync(Memory<byte>, CancellationToken) MemoryStream.ReadByte() MemoryStream.Seek(long, SeekOrigin) MemoryStream.SetLength(long) MemoryStream.ToArray() MemoryStream.TryGetBuffer(out ArraySegment<byte>) MemoryStream.Write(byte[], int, int) MemoryStream.Write(ReadOnlySpan<byte>) MemoryStream.WriteAsync(byte[], int, int, CancellationToken) MemoryStream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) MemoryStream.WriteByte(byte) MemoryStream.WriteTo(Stream) MemoryStream.CanRead MemoryStream.CanSeek MemoryStream.CanWrite MemoryStream.Capacity MemoryStream.Length MemoryStream.Position Stream.Null Stream.BeginRead(byte[], int, int, AsyncCallback, object?) Stream.BeginWrite(byte[], int, int, AsyncCallback, object?) Stream.Close() Stream.CopyTo(Stream) Stream.CopyTo(Stream, int) Stream.CopyToAsync(Stream) Stream.CopyToAsync(Stream, int) Stream.CopyToAsync(Stream, int, CancellationToken) Stream.CopyToAsync(Stream, CancellationToken) Stream.CreateWaitHandle() Stream.Dispose() Stream.Dispose(bool) Stream.DisposeAsync() Stream.EndRead(IAsyncResult) Stream.EndWrite(IAsyncResult) Stream.Flush() Stream.FlushAsync() Stream.FlushAsync(CancellationToken) Stream.ObjectInvariant() Stream.Read(byte[], int, int) Stream.Read(Span<byte>) Stream.ReadAsync(byte[], int, int) Stream.ReadAsync(byte[], int, int, CancellationToken) Stream.ReadAsync(Memory<byte>, CancellationToken) Stream.ReadByte() Stream.Seek(long, SeekOrigin) Stream.SetLength(long) Stream.Synchronized(Stream) Stream.Write(byte[], int, int) Stream.Write(ReadOnlySpan<byte>) Stream.WriteAsync(byte[], int, int) Stream.WriteAsync(byte[], int, int, CancellationToken) Stream.WriteAsync(ReadOnlyMemory<byte>, CancellationToken) Stream.WriteByte(byte) Stream.CanRead Stream.CanSeek Stream.CanTimeout Stream.CanWrite Stream.Length Stream.Position Stream.ReadTimeout Stream.WriteTimeout MarshalByRefObject.GetLifetimeService() MarshalByRefObject.InitializeLifetimeService() MarshalByRefObject.MemberwiseClone(bool) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PublicBufferMemoryStream(byte[], BufferPool) Initializes a new instance of the Alis.Core.Network.PublicBufferMemoryStream class public PublicBufferMemoryStream(byte[] buffer, BufferPool bufferPool) Parameters buffer byte[] The buffer bufferPool BufferPool The buffer pool Fields _buffer The buffer internal byte[] _buffer Field Value byte[] _bufferPoolInternal The buffer pool internal internal readonly BufferPool _bufferPoolInternal Field Value BufferPool _ms The ms internal MemoryStream _ms Field Value MemoryStream Properties CanRead Gets the value of the can read public override bool CanRead { get; } Property Value bool CanSeek Gets the value of the can seek public override bool CanSeek { get; } Property Value bool CanTimeout Gets the value of the can timeout public override bool CanTimeout { get; } Property Value bool CanWrite Gets the value of the can write public override bool CanWrite { get; } Property Value bool Capacity Gets or sets the value of the capacity public override int Capacity { get; set; } Property Value int Position Gets or sets the value of the position public override long Position { get; set; } Property Value long ReadTimeout Gets or sets the value of the read timeout public override int ReadTimeout { get; set; } Property Value int WriteTimeout Gets or sets the value of the write timeout public override int WriteTimeout { get; set; } Property Value int Methods BeginRead(byte[], int, int, AsyncCallback, object) Begins the read using the specified buffer public override IAsyncResult BeginRead(byte[] buffer, int offset, int count, AsyncCallback callback, object state) Parameters buffer byte[] The buffer offset int The offset count int The count callback AsyncCallback The callback state object The state Returns IAsyncResult The async result BeginWrite(byte[], int, int, AsyncCallback, object) Begins the write using the specified buffer public override IAsyncResult BeginWrite(byte[] buffer, int offset, int count, AsyncCallback callback, object state) Parameters buffer byte[] The buffer offset int The offset count int The count callback AsyncCallback The callback state object The state Returns IAsyncResult The async result CalculateInitialNewSize() Calculates the initial new size internal long CalculateInitialNewSize() Returns long The long CalculateNewSize(int, int) Calculates the new size using the specified count internal long CalculateNewSize(int count, int position) Parameters count int The count position int The position Returns long The new size Exceptions WebSocketBufferOverflowException Tried to create a buffer ({requiredSize:#,##0} bytes) that was larger than the max allowed size ({int.MaxValue:#,##0}) CalculateRequiredSize(int, int) Calculates the required size using the specified count internal long CalculateRequiredSize(int count, int position) Parameters count int The count position int The position Returns long The long Close() Closes this instance public override void Close() ComputeCandidateSize(long) Computes the candidate size using the specified required size internal long ComputeCandidateSize(long requiredSize) Parameters requiredSize long The required size Returns long The long CopyToAsync(Stream, int, CancellationToken) Copies the to using the specified destination public override Task CopyToAsync(Stream destination, int bufferSize, CancellationToken cancellationToken) Parameters destination Stream The destination bufferSize int The buffer size cancellationToken CancellationToken The cancellation token Returns Task CreateNewBuffer(int) Creates the new buffer using the specified count internal void CreateNewBuffer(int count) Parameters count int The count EndRead(IAsyncResult) Ends the read using the specified async result public override int EndRead(IAsyncResult asyncResult) Parameters asyncResult IAsyncResult The async result Returns int The int EndWrite(IAsyncResult) Ends the write using the specified async result public override void EndWrite(IAsyncResult asyncResult) Parameters asyncResult IAsyncResult The async result EnlargeBufferIfRequired(int) Enlarges the buffer if required using the specified count internal void EnlargeBufferIfRequired(int count) Parameters count int The count Exceptions WebSocketBufferOverflowException Tried to create a buffer ({requiredSize:#,##0} bytes) that was larger than the max allowed size ({int.MaxValue:#,##0}) Flush() Flushes this instance public override void Flush() FlushAsync(CancellationToken) Flushes the cancellation token public override Task FlushAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken The cancellation token Returns Task GetBuffer() Gets the buffer public override byte[] GetBuffer() Returns byte[] The byte array IsNewBufferRequired(int) Describes whether this instance is new buffer required internal bool IsNewBufferRequired(int count) Parameters count int The count Returns bool The bool IsNewSizeLessThanRequiredSize(long, long) Describes whether this instance is new size less than required size internal bool IsNewSizeLessThanRequiredSize(long newSize, long requiredSize) Parameters newSize long The new size requiredSize long The required size Returns bool The bool Read(byte[], int, int) Reads the buffer public override int Read(byte[] buffer, int offset, int count) Parameters buffer byte[] The buffer offset int The offset count int The count Returns int The int ReadAsync(byte[], int, int, CancellationToken) Reads the buffer public override Task<int> ReadAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters buffer byte[] The buffer offset int The offset count int The count cancellationToken CancellationToken The cancellation token Returns Task<int> A task containing the int ReadByte() Reads the byte public override int ReadByte() Returns int The int Seek(long, SeekOrigin) Seeks the offset public override long Seek(long offset, SeekOrigin loc) Parameters offset long The offset loc SeekOrigin The loc Returns long The long SetLength(long) Note: This will not make the MemoryStream any smaller, only larger public override void SetLength(long value) Parameters value long ToArray() Returns the array public override byte[] ToArray() Returns byte[] The byte array ValidateRequiredSize(long) Validates the required size using the specified required size internal void ValidateRequiredSize(long requiredSize) Parameters requiredSize long The required size Exceptions WebSocketBufferOverflowException Tried to create a buffer ({requiredSize:#,##0} bytes) that was larger than the max allowed size ({int.MaxValue:#,##0}) Write(byte[], int, int) Writes the buffer public override void Write(byte[] buffer, int offset, int count) Parameters buffer byte[] The buffer offset int The offset count int The count WriteAsync(byte[], int, int, CancellationToken) Writes the buffer public override Task WriteAsync(byte[] buffer, int offset, int count, CancellationToken cancellationToken) Parameters buffer byte[] The buffer offset int The offset count int The count cancellationToken CancellationToken The cancellation token Returns Task WriteByte(byte) Writes the byte using the specified value public override void WriteByte(byte value) Parameters value byte The value WriteTo(Stream) Writes the to using the specified stream public override void WriteTo(Stream stream) Parameters stream Stream The stream"
  },
  "api/Alis.Core.Network.WebSocketClientFactory.html": {
    "href": "api/Alis.Core.Network.WebSocketClientFactory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketClientFactory Namespace Alis.Core.Network Assembly Alis.dll Web socket client factory used to open web socket client connections public class WebSocketClientFactory : IWebSocketClientFactory, IDisposable Inheritance object WebSocketClientFactory Implements IWebSocketClientFactory IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketClientFactory() Initialises a new instance of the WebSocketClientFactory class without caring about internal buffers public WebSocketClientFactory() WebSocketClientFactory(Func<MemoryStream>) Initialises a new instance of the WebSocketClientFactory class with control over internal buffer creation public WebSocketClientFactory(Func<MemoryStream> bufferFactory) Parameters bufferFactory Func<MemoryStream> Used to get a memory stream. Feel free to implement your own buffer pool. MemoryStreams will be disposed when no longer needed and can be returned to the pool. Fields _bufferFactory The buffer factory internal readonly Func<MemoryStream> _bufferFactory Field Value Func<MemoryStream> _bufferPool The buffer pool internal readonly IBufferPool _bufferPool Field Value IBufferPool tcpClient The tcp client internal TcpClient tcpClient Field Value TcpClient Methods BuildHandshakeRequest(Uri, string, string, string) Builds the handshake request using the specified uri internal string BuildHandshakeRequest(Uri uri, string secWebSocketKey, string secWebSocketProtocol, string additionalHeaders) Parameters uri Uri The uri secWebSocketKey string The sec web socket key secWebSocketProtocol string The sec web socket protocol additionalHeaders string The additional headers Returns string The string ConnectAsync(Uri, CancellationToken) Connect with default options public Task<WebSocket> ConnectAsync(Uri uri, CancellationToken token = default) Parameters uri Uri The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL) token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket instance ConnectAsync(Uri, WebSocketClientOptions, CancellationToken) Connect with options specified public Task<WebSocket> ConnectAsync(Uri uri, WebSocketClientOptions options, CancellationToken token = default) Parameters uri Uri The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL) options WebSocketClientOptions The WebSocket client options token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket instance ConnectAsync(Stream, string, WebSocketClientOptions, CancellationToken) Connect with a stream that has already been opened and HTTP websocket upgrade request sent This function will check the handshake response from the server and proceed if successful Use this function if you have specific requirements to open a conenction like using special http headers and cookies You will have to build your own HTTP websocket upgrade request You may not even choose to use TCP/IP and this function will allow you to do that public Task<WebSocket> ConnectAsync(Stream responseStream, string secWebSocketKey, WebSocketClientOptions options, CancellationToken token = default) Parameters responseStream Stream The full duplex response stream from the server secWebSocketKey string The secWebSocketKey you used in the handshake request options WebSocketClientOptions The WebSocket client options token CancellationToken The optional cancellation token Returns Task<WebSocket> ConnectAsync(Guid, Stream, string, TimeSpan, string, bool, CancellationToken) Connects the guid internal Task<WebSocket> ConnectAsync(Guid guid, Stream responseStream, string secWebSocketKey, TimeSpan keepAliveInterval, string secWebSocketExtensions, bool includeExceptionInCloseResponse, CancellationToken token) Parameters guid Guid The guid responseStream Stream The response stream secWebSocketKey string The sec web socket key keepAliveInterval TimeSpan The keep alive interval secWebSocketExtensions string The sec web socket extensions includeExceptionInCloseResponse bool The include exception in close response token CancellationToken The token Returns Task<WebSocket> A task containing the web socket Exceptions WebSocketHandshakeFailedException Handshake unexpected failure Dispose() Disposes this instance public void Dispose() GenerateSecWebSocketKey() Generates the sec web socket key internal string GenerateSecWebSocketKey() Returns string The string GetAdditionalHeaders(Dictionary<string, string>) Gets the additional headers using the specified additional headers internal static string GetAdditionalHeaders(Dictionary<string, string> additionalHeaders) Parameters additionalHeaders Dictionary<string, string> The additional headers Returns string The string GetStream(Guid, bool, bool, string, int, CancellationToken) Override this if you need more control over how the stream used for the websocket is created. It does not event need to be a TCP stream internal virtual Task<Stream> GetStream(Guid loggingGuid, bool isSecure, bool noDelay, string host, int port, CancellationToken cancellationToken) Parameters loggingGuid Guid For logging purposes only isSecure bool Make a secure connection noDelay bool Set to true to send a message immediately with the least amount of latency (typical usage for chat) host string The destination host (can be an IP address) port int The destination port cancellationToken CancellationToken Used to cancel the request Returns Task<Stream> A connected and open stream GetSubProtocolFromHeader(string) Gets the sub protocol from header using the specified response internal string GetSubProtocolFromHeader(string response) Parameters response string The response Returns string The string PerformHandshake(Guid, Uri, Stream, WebSocketClientOptions, CancellationToken) Performs the handshake using the specified guid internal Task<WebSocket> PerformHandshake(Guid guid, Uri uri, Stream stream, WebSocketClientOptions options, CancellationToken token) Parameters guid Guid The guid uri Uri The uri stream Stream The stream options WebSocketClientOptions The options token CancellationToken The token Returns Task<WebSocket> A task containing the web socket SendHandshakeRequest(Stream, string, Guid) Sends the handshake request using the specified stream internal Task SendHandshakeRequest(Stream stream, string handshakeHttpRequest, Guid guid) Parameters stream Stream The stream handshakeHttpRequest string The handshake http request guid Guid The guid Returns Task ThrowIfInvalidAcceptString(Guid, string, string) Throws the if invalid accept string using the specified guid internal void ThrowIfInvalidAcceptString(Guid guid, string response, string secWebSocketKey) Parameters guid Guid The guid response string The response secWebSocketKey string The sec web socket key Exceptions WebSocketHandshakeFailedException ThrowIfInvalidResponseCode(string) Throws the if invalid response code using the specified response header internal void ThrowIfInvalidResponseCode(string responseHeader) Parameters responseHeader string The response header Exceptions InvalidHttpResponseCodeException InvalidHttpResponseCodeException null null TlsAuthenticateAsClient(SslStream, string) Override this if you need more fine grained control over the TLS handshake like setting the SslProtocol or adding a client certificate internal virtual void TlsAuthenticateAsClient(SslStream sslStream, string host) Parameters sslStream SslStream host string ValidateServerCertificate(object, X509Certificate, X509Chain, SslPolicyErrors) Invoked by the RemoteCertificateValidationDelegate If you want to ignore certificate errors (for debugging) then return true internal static bool ValidateServerCertificate(object sender, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors) Parameters sender object certificate X509Certificate chain X509Chain sslPolicyErrors SslPolicyErrors Returns bool"
  },
  "api/Alis.Core.Network.WebSocketClientOptions.html": {
    "href": "api/Alis.Core.Network.WebSocketClientOptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketClientOptions Namespace Alis.Core.Network Assembly Alis.dll Client WebSocket init options public class WebSocketClientOptions Inheritance object WebSocketClientOptions Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketClientOptions() Initialises a new instance of the WebSocketClientOptions class public WebSocketClientOptions() Properties AdditionalHttpHeaders Add any additional http headers to this dictionary public Dictionary<string, string> AdditionalHttpHeaders { get; } Property Value Dictionary<string, string> IncludeExceptionInCloseResponse Include the full exception (with stack trace) in the close response when an exception is encountered and the WebSocket connection is closed The default is false public bool IncludeExceptionInCloseResponse { get; } Property Value bool KeepAliveInterval How often to send ping requests to the Server This is done to prevent proxy servers from closing your connection The default is TimeSpan.Zero meaning that it is disabled. WebSocket servers usually send ping messages so it is not normally necessary for the client to send them (hence the TimeSpan.Zero default) You can manually control ping pong messages using the PingPongManager class. If you do that it is advisible to set this KeepAliveInterval to zero for the WebSocketClientFactory public TimeSpan KeepAliveInterval { get; set; } Property Value TimeSpan NoDelay Set to true to send a message immediately with the least amount of latency (typical usage for chat) This will disable Nagle's algorithm which can cause high tcp latency for small packets sent infrequently However, if you are streaming large packets or sending large numbers of small packets frequently it is advisable to set NoDelay to false This way data will be bundled into larger packets for better throughput public bool NoDelay { get; set; } Property Value bool SecWebSocketExtensions WebSocket Extensions as an HTTP header value public string SecWebSocketExtensions { get; } Property Value string SecWebSocketProtocol A comma separated list of sub protocols in preference order (first one being the most preferred) The server will return the first supported sub protocol (or none if none are supported) Can be null public string SecWebSocketProtocol { get; set; } Property Value string"
  },
  "api/Alis.Core.Network.WebSocketHttpContext.html": {
    "href": "api/Alis.Core.Network.WebSocketHttpContext.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketHttpContext Namespace Alis.Core.Network Assembly Alis.dll The WebSocket HTTP Context used to initiate a WebSocket handshake public class WebSocketHttpContext Inheritance object WebSocketHttpContext Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketHttpContext(bool, IList<string>, string, string, Stream) Initialises a new instance of the WebSocketHttpContext class public WebSocketHttpContext(bool isWebSocketRequest, IList<string> webSocketRequestedProtocols, string httpHeader, string path, Stream stream) Parameters isWebSocketRequest bool True if this is a valid WebSocket request webSocketRequestedProtocols IList<string> httpHeader string The raw http header extracted from the stream path string The Path extracted from the http header stream Stream The stream AFTER the header has already been read Properties HttpHeader The raw http header extracted from the stream public string HttpHeader { get; } Property Value string IsWebSocketRequest True if this is a valid WebSocket request public bool IsWebSocketRequest { get; } Property Value bool Path The Path extracted from the http header public string Path { get; } Property Value string Stream The stream AFTER the header has already been read public Stream Stream { get; } Property Value Stream WebSocketRequestedProtocols Gets the value of the web socket requested protocols public IList<string> WebSocketRequestedProtocols { get; } Property Value IList<string>"
  },
  "api/Alis.Core.Network.WebSocketServerFactory.html": {
    "href": "api/Alis.Core.Network.WebSocketServerFactory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketServerFactory Namespace Alis.Core.Network Assembly Alis.dll Web socket server factory used to open web socket server connections public class WebSocketServerFactory : IWebSocketServerFactory Inheritance object WebSocketServerFactory Implements IWebSocketServerFactory Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketServerFactory() Initialises a new instance of the WebSocketServerFactory class without caring about internal buffers public WebSocketServerFactory() Fields _bufferFactory The buffer factory internal readonly Func<MemoryStream> _bufferFactory Field Value Func<MemoryStream> _bufferPool The buffer pool internal readonly IBufferPool _bufferPool Field Value IBufferPool Methods AcceptWebSocketAsync(WebSocketHttpContext, CancellationToken) Accept web socket with default options Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext public Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, CancellationToken token = default) Parameters context WebSocketHttpContext The http context used to initiate this web socket request token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket AcceptWebSocketAsync(WebSocketHttpContext, WebSocketServerOptions, CancellationToken) Accept web socket with options specified Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext public Task<WebSocket> AcceptWebSocketAsync(WebSocketHttpContext context, WebSocketServerOptions options, CancellationToken token = default) Parameters context WebSocketHttpContext The http context used to initiate this web socket request options WebSocketServerOptions The web socket options token CancellationToken The optional cancellation token Returns Task<WebSocket> A connected web socket BuildHandshakeResponse(string, string) Builds the handshake response using the specified sec web socket key internal static string BuildHandshakeResponse(string secWebSocketKey, string subProtocol) Parameters secWebSocketKey string The sec web socket key subProtocol string The sub protocol Returns string The string CheckWebSocketVersion(string) Checks the web socket version using the specified http header internal static void CheckWebSocketVersion(string httpHeader) Parameters httpHeader string The http header Exceptions WebSocketVersionNotSupportedException WebSocketVersionNotSupportedException Cannot find \"Sec-WebSocket-Version\" in http header ExtractWebSocketKey(string) Extracts the web socket key using the specified http header internal static string ExtractWebSocketKey(string httpHeader) Parameters httpHeader string The http header Returns string The string Exceptions SecWebSocketKeyMissingException Unable to read \"Sec-WebSocket-Key\" from http header ExtractWebSocketVersion(string) Extracts the web socket version using the specified http header internal static int ExtractWebSocketVersion(string httpHeader) Parameters httpHeader string The http header Returns int The int Exceptions WebSocketVersionNotSupportedException Cannot find \"Sec-WebSocket-Version\" in http header HandleBadRequest(Guid, Exception, Stream, CancellationToken) Handles the bad request using the specified guid internal static Task HandleBadRequest(Guid guid, Exception ex, Stream stream, CancellationToken token) Parameters guid Guid The guid ex Exception The ex stream Stream The stream token CancellationToken The token Returns Task HandleWebSocketVersionNotSupported(Guid, WebSocketVersionNotSupportedException, Stream, CancellationToken) Handles the web socket version not supported using the specified guid internal static Task HandleWebSocketVersionNotSupported(Guid guid, WebSocketVersionNotSupportedException ex, Stream stream, CancellationToken token) Parameters guid Guid The guid ex WebSocketVersionNotSupportedException The ex stream Stream The stream token CancellationToken The token Returns Task PerformHandshakeAsync(Guid, string, string, Stream, CancellationToken) Performs the handshake using the specified guid internal static Task PerformHandshakeAsync(Guid guid, string httpHeader, string subProtocol, Stream stream, CancellationToken token) Parameters guid Guid The guid httpHeader string The http header subProtocol string The sub protocol stream Stream The stream token CancellationToken The token Returns Task Exceptions SecWebSocketKeyMissingException Unable to read \"Sec-WebSocket-Key\" from http header PerformHandshakeWithValidations(Guid, string, string, Stream, CancellationToken) Performs the handshake with validations using the specified guid internal static Task PerformHandshakeWithValidations(Guid guid, string httpHeader, string subProtocol, Stream stream, CancellationToken token) Parameters guid Guid The guid httpHeader string The http header subProtocol string The sub protocol stream Stream The stream token CancellationToken The token Returns Task ReadHttpHeaderFromStreamAsync(Stream, CancellationToken) Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade public Task<WebSocketHttpContext> ReadHttpHeaderFromStreamAsync(Stream stream, CancellationToken token = default) Parameters stream Stream The network stream token CancellationToken The optional cancellation token Returns Task<WebSocketHttpContext> Http data read from the stream SendHandshakeResponse(Guid, string, Stream, CancellationToken) Sends the handshake response using the specified guid internal static Task SendHandshakeResponse(Guid guid, string response, Stream stream, CancellationToken token) Parameters guid Guid The guid response string The response stream Stream The stream token CancellationToken The token Returns Task ValidateWebSocketVersion(int) Validates the web socket version using the specified sec web socket version internal static void ValidateWebSocketVersion(int secWebSocketVersion) Parameters secWebSocketVersion int The sec web socket version Exceptions WebSocketVersionNotSupportedException"
  },
  "api/Alis.Core.Network.WebSocketServerOptions.html": {
    "href": "api/Alis.Core.Network.WebSocketServerOptions.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WebSocketServerOptions Namespace Alis.Core.Network Assembly Alis.dll Server WebSocket init options public class WebSocketServerOptions Inheritance object WebSocketServerOptions Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors WebSocketServerOptions() Initialises a new instance of the WebSocketServerOptions class public WebSocketServerOptions() WebSocketServerOptions(double, bool, string) Initializes a new instance of the Alis.Core.Network.WebSocketServerOptions class public WebSocketServerOptions(double keepAliveInterval, bool includeExceptionInCloseResponse, string subProtocol) Parameters keepAliveInterval double The keep alive interval includeExceptionInCloseResponse bool The include exception in close response subProtocol string The sub protocol WebSocketServerOptions(TimeSpan, string) Initializes a new instance of the Alis.Core.Network.WebSocketServerOptions class public WebSocketServerOptions(TimeSpan keepAliveInterval, string subProtocol) Parameters keepAliveInterval TimeSpan The keep alive interval subProtocol string The sub protocol Properties IncludeExceptionInCloseResponse Include the full exception (with stack trace) in the close response when an exception is encountered and the WebSocket connection is closed The default is false public bool IncludeExceptionInCloseResponse { get; } Property Value bool KeepAliveInterval How often to send ping requests to the Client The default is 60 seconds This is done to prevent proxy servers from closing your connection A timespan of zero will disable the automatic ping pong mechanism You can manually control ping pong messages using the PingPongManager class. If you do that it is advisable to set this KeepAliveInterval to zero in the WebSocketServerFactory public TimeSpan KeepAliveInterval { get; } Property Value TimeSpan SubProtocol Specifies the sub protocol to send back to the client in the opening handshake Can be null (the most common use case) The client can specify multiple preferred protocols in the opening handshake header The server should use the first supported one or set this to null if none of the requested sub protocols are supported public string SubProtocol { get; } Property Value string"
  },
  "api/Alis.Core.Network.html": {
    "href": "api/Alis.Core.Network.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Network Namespaces Alis.Core.Network.Exceptions Alis.Core.Network.Internal Classes BufferPool This buffer pool is instance thread safe Use GetBuffer to get a MemoryStream (with a publically accessible buffer) Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in) and the underlying buffers will be returned to the pool at their larger sizes HttpHelper The http helper class PingPongManager Ping Pong Manager used to facilitate ping pong WebSocket messages PongEventArgs Pong EventArgs PublicBufferMemoryStream This memory stream is not instance thread safe (not to be confused with the BufferPool which is instance thread safe) WebSocketClientFactory Web socket client factory used to open web socket client connections WebSocketClientOptions Client WebSocket init options WebSocketHttpContext The WebSocket HTTP Context used to initiate a WebSocket handshake WebSocketServerFactory Web socket server factory used to open web socket server connections WebSocketServerOptions Server WebSocket init options Interfaces IBufferPool The buffer pool interface IPingPongManager Ping Pong Manager used to facilitate ping pong WebSocket messages IWebSocketClientFactory Web socket client factory used to open web socket client connections IWebSocketServerFactory Web socket server factory used to open web socket server connections"
  },
  "api/Alis.Core.Physic.Collision.AABB.html": {
    "href": "api/Alis.Core.Physic.Collision.AABB.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct AABB Namespace Alis.Core.Physic.Collision Assembly Alis.dll An axis aligned bounding box. public struct AABB Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors AABB(Vector2, Vector2) Initializes a new instance of the Alis.Core.Physic.Collision.AABB class public AABB(Vector2 min, Vector2 max) Parameters min Vector2 The min max Vector2 The max AABB(ref Vector2, ref Vector2) Initializes a new instance of the Alis.Core.Physic.Collision.AABB class public AABB(ref Vector2 min, ref Vector2 max) Parameters min Vector2 The min max Vector2 The max AABB(Vector2, float, float) Initializes a new instance of the Alis.Core.Physic.Collision.AABB class public AABB(Vector2 center, float width, float height) Parameters center Vector2 The center width float The width height float The height Fields LowerBound The lower vertex public Vector2 LowerBound Field Value Vector2 UpperBound The upper vertex public Vector2 UpperBound Field Value Vector2 Properties Center Get the center of the AABB. public Vector2 Center { get; } Property Value Vector2 Extents Get the extents of the AABB (half-widths). public Vector2 Extents { get; } Property Value Vector2 Height Gets the value of the height public float Height { get; } Property Value float Perimeter Get the perimeter length public float Perimeter { get; } Property Value float Q1 First quadrant public AABB Q1 { get; } Property Value AABB Q2 Second quadrant public AABB Q2 { get; } Property Value AABB Q3 Third quadrant public AABB Q3 { get; } Property Value AABB Q4 Forth quadrant public AABB Q4 { get; } Property Value AABB Vertices Gets the vertices of the AABB. public Vertices Vertices { get; } Property Value Vertices Width Gets the value of the width public float Width { get; } Property Value float Methods Combine(ref AABB) Combine an AABB into this one. public void Combine(ref AABB aabb) Parameters aabb AABB The aabb. Combine(ref AABB, ref AABB) Combine two AABBs into this one. public void Combine(ref AABB aabb1, ref AABB aabb2) Parameters aabb1 AABB The aabb1. aabb2 AABB The aabb2. Contains(ref AABB) Does this aabb contain the provided AABB. public bool Contains(ref AABB aabb) Parameters aabb AABB The aabb. Returns bool true if it contains the specified aabb; otherwise, false. Contains(ref Vector2) Determines whether the AAABB contains the specified point. public bool Contains(ref Vector2 point) Parameters point Vector2 The point. Returns bool true if it contains the specified point; otherwise, false. IsValid() Verify that the bounds are sorted. And the bounds are valid numbers (not NaN). public bool IsValid() Returns bool true if this instance is valid; otherwise, false. RayCast(out RayCastOutput, ref RayCastInput, bool) Raycast against this AABB using the specificed points and maxfraction (found in input) public bool RayCast(out RayCastOutput output, ref RayCastInput input, bool doInteriorCheck = true) Parameters output RayCastOutput The results of the raycast. input RayCastInput The parameters for the raycast. doInteriorCheck bool Returns bool True if the ray intersects the AABB TestOverlap(ref AABB, ref AABB) Test if the two AABBs overlap. public static bool TestOverlap(ref AABB a, ref AABB b) Parameters a AABB The first AABB. b AABB The second AABB. Returns bool True if they are overlapping."
  },
  "api/Alis.Core.Physic.Collision.BroadPhaseQueryCallback.html": {
    "href": "api/Alis.Core.Physic.Collision.BroadPhaseQueryCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BroadPhaseQueryCallback Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad phase query callback public delegate bool BroadPhaseQueryCallback(int proxyId) Parameters proxyId int Returns bool"
  },
  "api/Alis.Core.Physic.Collision.BroadPhaseRayCastCallback.html": {
    "href": "api/Alis.Core.Physic.Collision.BroadPhaseRayCastCallback.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BroadPhaseRayCastCallback Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad phase ray cast callback public delegate float BroadPhaseRayCastCallback(ref RayCastInput input, int proxyId) Parameters input RayCastInput proxyId int Returns float"
  },
  "api/Alis.Core.Physic.Collision.BroadphaseDelegate.html": {
    "href": "api/Alis.Core.Physic.Collision.BroadphaseDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BroadphaseDelegate Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broadphase delegate public delegate void BroadphaseDelegate(int proxyIdA, int proxyIdB) Parameters proxyIdA int proxyIdB int"
  },
  "api/Alis.Core.Physic.Collision.ClipVertex.html": {
    "href": "api/Alis.Core.Physic.Collision.ClipVertex.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ClipVertex Namespace Alis.Core.Physic.Collision Assembly Alis.dll Used for computing contact manifolds. public struct ClipVertex Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields ID The id public ContactID ID Field Value ContactID V The public Vector2 V Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.Collision.EPCollider.TempPolygon.html": {
    "href": "api/Alis.Core.Physic.Collision.Collision.EPCollider.TempPolygon.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Collision.EPCollider.TempPolygon Namespace Alis.Core.Physic.Collision Assembly Alis.dll This holds polygon B expressed in frame A. internal struct Collision.EPCollider.TempPolygon Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors TempPolygon(int) Initializes a new instance of the Alis.Core.Physic.Collision.Collision.EPCollider.TempPolygon class internal TempPolygon(int maxPolygonVertices) Parameters maxPolygonVertices int The max polygon vertices Fields Count The count public int Count Field Value int Normals The normals public readonly Vector2[] Normals Field Value Vector2[] Vertices The vertices public readonly Vector2[] Vertices Field Value Vector2[]"
  },
  "api/Alis.Core.Physic.Collision.Collision.EPCollider.html": {
    "href": "api/Alis.Core.Physic.Collision.Collision.EPCollider.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Collision.EPCollider Namespace Alis.Core.Physic.Collision Assembly Alis.dll The ep collider class private static class Collision.EPCollider Inheritance object Collision.EPCollider Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Collide(ref Manifold, EdgeShape, ref Transform, PolygonShape, ref Transform) Collides the manifold public static void Collide(ref Manifold manifold, EdgeShape edgeA, ref Transform xfA, PolygonShape polygonB, ref Transform xfB) Parameters manifold Manifold The manifold edgeA EdgeShape The edge xfA Transform The xf polygonB PolygonShape The polygon xfB Transform The xf ComputeEdgeSeparation(ref TempPolygon, ref Vector2, ref Vector2, bool) Computes the edge separation using the specified polygon b private static EPAxis ComputeEdgeSeparation(ref Collision.EPCollider.TempPolygon polygonB, ref Vector2 normal, ref Vector2 v1, bool front) Parameters polygonB Collision.EPCollider.TempPolygon The polygon normal Vector2 The normal v1 Vector2 The front bool The front Returns EPAxis The axis ComputePolygonSeparation(ref TempPolygon, ref Vector2, ref Vector2, ref Vector2, ref Vector2, ref Vector2, float) Computes the polygon separation using the specified polygon b private static EPAxis ComputePolygonSeparation(ref Collision.EPCollider.TempPolygon polygonB, ref Vector2 normal, ref Vector2 v1, ref Vector2 v2, ref Vector2 lowerLimit, ref Vector2 upperLimit, float radius) Parameters polygonB Collision.EPCollider.TempPolygon The polygon normal Vector2 The normal v1 Vector2 The v2 Vector2 The lowerLimit Vector2 The lower limit upperLimit Vector2 The upper limit radius float The radius Returns EPAxis The axis"
  },
  "api/Alis.Core.Physic.Collision.Collision.html": {
    "href": "api/Alis.Core.Physic.Collision.Collision.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Collision Namespace Alis.Core.Physic.Collision Assembly Alis.dll Collision methods public static class Collision Inheritance object Collision Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ClipSegmentToLine(out FixedArray2<ClipVertex>, ref FixedArray2<ClipVertex>, Vector2, float, int) Clipping for contact manifolds. private static int ClipSegmentToLine(out FixedArray2<ClipVertex> vOut, ref FixedArray2<ClipVertex> vIn, Vector2 normal, float offset, int vertexIndexA) Parameters vOut FixedArray2<ClipVertex> The v out. vIn FixedArray2<ClipVertex> The v in. normal Vector2 The normal. offset float The offset. vertexIndexA int The vertex index A. Returns int CollideCircles(ref Manifold, CircleShape, ref Transform, CircleShape, ref Transform) Compute the collision manifold between two circles. public static void CollideCircles(ref Manifold manifold, CircleShape circleA, ref Transform xfA, CircleShape circleB, ref Transform xfB) Parameters manifold Manifold circleA CircleShape xfA Transform circleB CircleShape xfB Transform CollideEdgeAndCircle(ref Manifold, EdgeShape, ref Transform, CircleShape, ref Transform) Compute contact points for edge versus circle. This accounts for edge connectivity. public static void CollideEdgeAndCircle(ref Manifold manifold, EdgeShape edgeA, ref Transform transformA, CircleShape circleB, ref Transform transformB) Parameters manifold Manifold The manifold. edgeA EdgeShape The edge A. transformA Transform The transform A. circleB CircleShape The circle B. transformB Transform The transform B. CollideEdgeAndPolygon(ref Manifold, EdgeShape, ref Transform, PolygonShape, ref Transform) Collides and edge and a polygon, taking into account edge adjacency. public static void CollideEdgeAndPolygon(ref Manifold manifold, EdgeShape edgeA, ref Transform xfA, PolygonShape polygonB, ref Transform xfB) Parameters manifold Manifold The manifold. edgeA EdgeShape The edge A. xfA Transform The xf A. polygonB PolygonShape The polygon B. xfB Transform The xf B. CollidePolygonAndCircle(ref Manifold, PolygonShape, ref Transform, CircleShape, ref Transform) Compute the collision manifold between a polygon and a circle. public static void CollidePolygonAndCircle(ref Manifold manifold, PolygonShape polygonA, ref Transform xfA, CircleShape circleB, ref Transform xfB) Parameters manifold Manifold The manifold. polygonA PolygonShape The polygon A. xfA Transform The transform of A. circleB CircleShape The circle B. xfB Transform The transform of B. CollidePolygons(ref Manifold, PolygonShape, ref Transform, PolygonShape, ref Transform) Compute the collision manifold between two polygons. public static void CollidePolygons(ref Manifold manifold, PolygonShape polyA, ref Transform transformA, PolygonShape polyB, ref Transform transformB) Parameters manifold Manifold The manifold. polyA PolygonShape The poly A. transformA Transform The transform A. polyB PolygonShape The poly B. transformB Transform The transform B. EdgeSeparation(PolygonShape, ref Transform, int, PolygonShape) Find the separation between poly1 and poly2 for a give edge normal on poly1. private static float EdgeSeparation(PolygonShape poly1, ref Transform xf1To2, int edge1, PolygonShape poly2) Parameters poly1 PolygonShape The poly1. xf1To2 Transform edge1 int The edge1. poly2 PolygonShape The poly2. Returns float FindIncidentEdge(out FixedArray2<ClipVertex>, PolygonShape, ref Transform, int, PolygonShape, ref Transform) Finds the incident edge using the specified c private static void FindIncidentEdge(out FixedArray2<ClipVertex> c, PolygonShape poly1, ref Transform xf1, int edge1, PolygonShape poly2, ref Transform xf2) Parameters c FixedArray2<ClipVertex> The poly1 PolygonShape The poly xf1 Transform The xf edge1 int The edge poly2 PolygonShape The poly xf2 Transform The xf FindMaxSeparation(out int, PolygonShape, ref Transform, PolygonShape, ref Transform) Find the max separation between poly1 and poly2 using edge normals from poly1. private static float FindMaxSeparation(out int edgeIndex, PolygonShape poly1, ref Transform xf1, PolygonShape poly2, ref Transform xf2) Parameters edgeIndex int Index of the edge. poly1 PolygonShape The poly1. xf1 Transform The XF1. poly2 PolygonShape The poly2. xf2 Transform The XF2. Returns float GetPointStates(out FixedArray2<PointState>, out FixedArray2<PointState>, ref Manifold, ref Manifold) Gets the point states using the specified state 1 public static void GetPointStates(out FixedArray2<PointState> state1, out FixedArray2<PointState> state2, ref Manifold manifold1, ref Manifold manifold2) Parameters state1 FixedArray2<PointState> The state state2 FixedArray2<PointState> The state manifold1 Manifold The manifold manifold2 Manifold The manifold TestOverlap(Shape, int, Shape, int, ref Transform, ref Transform) Test overlap between the two shapes. public static bool TestOverlap(Shape shapeA, int indexA, Shape shapeB, int indexB, ref Transform xfA, ref Transform xfB) Parameters shapeA Shape The first shape. indexA int The index for the first shape. shapeB Shape The second shape. indexB int The index for the second shape. xfA Transform The transform for the first shape. xfB Transform The transform for the seconds shape. Returns bool"
  },
  "api/Alis.Core.Physic.Collision.ContactFeature.html": {
    "href": "api/Alis.Core.Physic.Collision.ContactFeature.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ContactFeature Namespace Alis.Core.Physic.Collision Assembly Alis.dll The features that intersect to form the contact point This must be 4 bytes or less. public struct ContactFeature Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields IndexA Feature index on ShapeA public byte IndexA Field Value byte IndexB Feature index on ShapeB public byte IndexB Field Value byte TypeA The feature type on ShapeA public byte TypeA Field Value byte TypeB The feature type on ShapeB public byte TypeB Field Value byte"
  },
  "api/Alis.Core.Physic.Collision.ContactFeatureType.html": {
    "href": "api/Alis.Core.Physic.Collision.ContactFeatureType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ContactFeatureType Namespace Alis.Core.Physic.Collision Assembly Alis.dll The contact feature type enum internal enum ContactFeatureType : byte Fields Vertex = 0 The vertex contact feature type Face = 1 The face contact feature type"
  },
  "api/Alis.Core.Physic.Collision.ContactID.html": {
    "href": "api/Alis.Core.Physic.Collision.ContactID.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ContactID Namespace Alis.Core.Physic.Collision Assembly Alis.dll Contact ids to facilitate warm starting. public struct ContactID Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Features The features that intersect to form the contact point public ContactFeature Features Field Value ContactFeature Key Used to quickly compare contact ids. public uint Key Field Value uint"
  },
  "api/Alis.Core.Physic.Collision.Distance.html": {
    "href": "api/Alis.Core.Physic.Collision.Distance.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Distance Namespace Alis.Core.Physic.Collision Assembly Alis.dll The Gilbert‚ÄìJohnson‚ÄìKeerthi distance algorithm that provides the distance between shapes. public static class Distance Inheritance object Distance Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields GJKCalls The number of calls made to the ComputeDistance() function. Note: This is only activated when Settings.EnableDiagnostics = true [ThreadStatic] public static int GJKCalls Field Value int GJKIters The number of iterations that was made on the last call to ComputeDistance(). Note: This is only activated when Settings.EnableDiagnostics = true [ThreadStatic] public static int GJKIters Field Value int GJKMaxIters The maximum numer of iterations ever mae with calls to the CompteDistance() funtion. Note: This is only activated when Settings.EnableDiagnostics = true [ThreadStatic] public static int GJKMaxIters Field Value int Methods ComputeDistance(out DistanceOutput, out SimplexCache, DistanceInput) Computes the distance using the specified output public static void ComputeDistance(out DistanceOutput output, out SimplexCache cache, DistanceInput input) Parameters output DistanceOutput The output cache SimplexCache The cache input DistanceInput The input"
  },
  "api/Alis.Core.Physic.Collision.DistanceInput.html": {
    "href": "api/Alis.Core.Physic.Collision.DistanceInput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DistanceInput Namespace Alis.Core.Physic.Collision Assembly Alis.dll Input for Distance.ComputeDistance(). You have to option to use the shape radii in the computation. public struct DistanceInput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields ProxyA The proxy public DistanceProxy ProxyA Field Value DistanceProxy ProxyB The proxy public DistanceProxy ProxyB Field Value DistanceProxy TransformA The transform public Transform TransformA Field Value Transform TransformB The transform public Transform TransformB Field Value Transform UseRadii The use radii public bool UseRadii Field Value bool"
  },
  "api/Alis.Core.Physic.Collision.DistanceOutput.html": {
    "href": "api/Alis.Core.Physic.Collision.DistanceOutput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DistanceOutput Namespace Alis.Core.Physic.Collision Assembly Alis.dll Output for Distance.ComputeDistance(). public struct DistanceOutput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Distance The distance public float Distance Field Value float Iterations Number of GJK iterations used public int Iterations Field Value int PointA Closest point on shapeA public Vector2 PointA Field Value Vector2 PointB Closest point on shapeB public Vector2 PointB Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.DistanceProxy.html": {
    "href": "api/Alis.Core.Physic.Collision.DistanceProxy.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct DistanceProxy Namespace Alis.Core.Physic.Collision Assembly Alis.dll A distance proxy is used by the GJK algorithm. It encapsulates any shape. public struct DistanceProxy Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors DistanceProxy(Shape, int) Initialize the proxy using the given shape. The shape must remain in scope while the proxy is in use. public DistanceProxy(Shape shape, int index) Parameters shape Shape The shape. index int The index. Fields Radius The radius internal float Radius Field Value float Vertices The vertices internal Vertices Vertices Field Value Vertices Methods GetSupport(Vector2) Get the supporting vertex index in the given direction. public int GetSupport(Vector2 direction) Parameters direction Vector2 The direction. Returns int GetSupportVertex(Vector2) Get the supporting vertex in the given direction. public Vector2 GetSupportVertex(Vector2 direction) Parameters direction Vector2 The direction. Returns Vector2"
  },
  "api/Alis.Core.Physic.Collision.DynamicTree-1.html": {
    "href": "api/Alis.Core.Physic.Collision.DynamicTree-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DynamicTree<TNode> Namespace Alis.Core.Physic.Collision Assembly Alis.dll A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor so that the proxy AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update. Nodes are pooled and relocatable, so we use node indices rather than pointers. public class DynamicTree<TNode> Type Parameters TNode Inheritance object DynamicTree<TNode> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors DynamicTree() Constructing the tree initializes the node pool. public DynamicTree() Fields NullNode The null node internal const int NullNode = -1 Field Value int _freeList The free list private int _freeList Field Value int _nodeCapacity The node capacity private int _nodeCapacity Field Value int _nodeCount The node count private int _nodeCount Field Value int _nodes The nodes private TreeNode<TNode>[] _nodes Field Value TreeNode<TNode>[] _queryStack The stack private readonly Stack<int> _queryStack Field Value Stack<int> _raycastStack The stack private readonly Stack<int> _raycastStack Field Value Stack<int> _root The root private int _root Field Value int Properties AreaRatio Get the ratio of the sum of the node areas to the root area. public float AreaRatio { get; } Property Value float Height Compute the height of the binary tree in O(N) time. Should not be called often. public int Height { get; } Property Value int MaxBalance Get the maximum balance of an node in the tree. The balance is the difference in height of the two children of a node. public int MaxBalance { get; } Property Value int Methods AddProxy(ref AABB) Create a proxy in the tree as a leaf node. We return the index of the node instead of a pointer so that we can grow the node pool. /// public int AddProxy(ref AABB aabb) Parameters aabb AABB The aabb. Returns int Index of the created proxy AllocateNode() Allocates the node private int AllocateNode() Returns int The node id Balance(int) Perform a left or right rotation if node N is imbalanced. private int Balance(int iN) Parameters iN int Returns int the new root index. ComputeHeight(int) Compute the height of a sub-tree. public int ComputeHeight(int nodeId) Parameters nodeId int The node id to use as parent. Returns int The height of the tree. ComputeHeight() Compute the height of the entire tree. public int ComputeHeight() Returns int The height of the tree. FreeNode(int) Frees the node using the specified node id private void FreeNode(int nodeId) Parameters nodeId int The node id GetFatAABB(int, out AABB) Get the fat AABB for a proxy. public void GetFatAABB(int proxyId, out AABB fatAABB) Parameters proxyId int The proxy id. fatAABB AABB The fat AABB. GetFatAABB(int) Get the fat AABB for a proxy. public AABB GetFatAABB(int proxyId) Parameters proxyId int The proxy id. Returns AABB The fat AABB. GetUserData(int) Get proxy user data. public TNode GetUserData(int proxyId) Parameters proxyId int The proxy id. Returns TNode the proxy user data or 0 if the id is invalid. InsertLeaf(int) Inserts the leaf using the specified leaf private void InsertLeaf(int leaf) Parameters leaf int The leaf MoveProxy(int, ref AABB, Vector2) Move a proxy with a swepted AABB. If the proxy has moved outside of its fattened AABB, then the proxy is removed from the tree and re-inserted. Otherwise the function returns immediately. public bool MoveProxy(int proxyId, ref AABB aabb, Vector2 displacement) Parameters proxyId int The proxy id. aabb AABB The aabb. displacement Vector2 The displacement. Returns bool true if the proxy was re-inserted. Query(BroadPhaseQueryCallback, ref AABB) Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied AABB. public void Query(BroadPhaseQueryCallback callback, ref AABB aabb) Parameters callback BroadPhaseQueryCallback The callback. aabb AABB The aabb. RayCast(BroadPhaseRayCastCallback, ref RayCastInput) Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case were the proxy contains a Shape. The callback also performs the any collision filtering. This has performance roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree. public void RayCast(BroadPhaseRayCastCallback callback, ref RayCastInput input) Parameters callback BroadPhaseRayCastCallback A callback class that is called for each proxy that is hit by the ray. input RayCastInput The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1). RebuildBottomUp() Build an optimal tree. Very expensive. For testing. public void RebuildBottomUp() RemoveLeaf(int) Removes the leaf using the specified leaf private void RemoveLeaf(int leaf) Parameters leaf int The leaf RemoveProxy(int) Destroy a proxy. This asserts if the id is invalid. public void RemoveProxy(int proxyId) Parameters proxyId int The proxy id. SetUserData(int, TNode) Set proxy user data. public void SetUserData(int proxyId, TNode userData) Parameters proxyId int The proxy id. userData TNode The proxy user data. ShiftOrigin(Vector2) Shift the origin of the nodes public void ShiftOrigin(Vector2 newOrigin) Parameters newOrigin Vector2 The displacement to use. TestFatAABBOverlap(int, int) Test overlap of fat AABBs. public bool TestFatAABBOverlap(int proxyIdA, int proxyIdB) Parameters proxyIdA int The proxy id A. proxyIdB int The proxy id B. Returns bool Validate() Validate this tree. For testing. public void Validate() ValidateMetrics(int) Validates the metrics using the specified index public void ValidateMetrics(int index) Parameters index int The index ValidateStructure(int) Validates the structure using the specified index public void ValidateStructure(int index) Parameters index int The index"
  },
  "api/Alis.Core.Physic.Collision.DynamicTreeBroadPhase-1.html": {
    "href": "api/Alis.Core.Physic.Collision.DynamicTreeBroadPhase-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DynamicTreeBroadPhase<TNode> Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap. public class DynamicTreeBroadPhase<TNode> : IBroadPhase<TNode> where TNode : struct Type Parameters TNode Inheritance object DynamicTreeBroadPhase<TNode> Implements IBroadPhase<TNode> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors DynamicTreeBroadPhase() Constructs a new broad phase based on the dynamic tree implementation public DynamicTreeBroadPhase() Fields NullProxy The null proxy private const int NullProxy = -1 Field Value int _moveBuffer The move buffer private int[] _moveBuffer Field Value int[] _moveCapacity The move capacity private int _moveCapacity Field Value int _moveCount The move count private int _moveCount Field Value int _pairBuffer The pair buffer private Pair[] _pairBuffer Field Value Pair[] _pairCapacity The pair capacity private int _pairCapacity Field Value int _pairCount The pair count private int _pairCount Field Value int _queryCallbackCache The query callback cache private readonly BroadPhaseQueryCallback _queryCallbackCache Field Value BroadPhaseQueryCallback _queryProxyId The query proxy id private int _queryProxyId Field Value int _tree The node private readonly DynamicTree<TNode> _tree Field Value DynamicTree<TNode> Properties ProxyCount Get the number of proxies. public int ProxyCount { get; private set; } Property Value int TreeBalance Gets the balance of the tree. public int TreeBalance { get; } Property Value int TreeHeight Gets the height of the tree. public int TreeHeight { get; } Property Value int TreeQuality Get the tree quality based on the area of the tree. public float TreeQuality { get; } Property Value float Methods AddProxy(ref AABB) Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs is called. public int AddProxy(ref AABB aabb) Parameters aabb AABB Returns int BufferMove(int) Buffers the move using the specified proxy id private void BufferMove(int proxyId) Parameters proxyId int The proxy id GetFatAABB(int, out AABB) Get the AABB for a proxy. public void GetFatAABB(int proxyId, out AABB aabb) Parameters proxyId int The proxy id. aabb AABB The aabb. GetProxy(int) Get user data from a proxy. Returns null if the id is invalid. public TNode GetProxy(int proxyId) Parameters proxyId int The proxy id. Returns TNode MoveProxy(int, ref AABB, Vector2) Moves the proxy using the specified proxy id public void MoveProxy(int proxyId, ref AABB aabb, Vector2 displacement) Parameters proxyId int The proxy id aabb AABB The aabb displacement Vector2 The displacement Query(BroadPhaseQueryCallback, ref AABB) Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied AABB. public void Query(BroadPhaseQueryCallback callback, ref AABB aabb) Parameters callback BroadPhaseQueryCallback The callback. aabb AABB The aabb. QueryCallback(int) This is called from DynamicTree.Query when we are gathering pairs. private bool QueryCallback(int proxyId) Parameters proxyId int Returns bool RayCast(BroadPhaseRayCastCallback, ref RayCastInput) Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case were the proxy contains a shape. The callback also performs the any collision filtering. This has performance roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree. public void RayCast(BroadPhaseRayCastCallback callback, ref RayCastInput input) Parameters callback BroadPhaseRayCastCallback A callback class that is called for each proxy that is hit by the ray. input RayCastInput The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1). RemoveProxy(int) Destroy a proxy. It is up to the client to remove any pairs. public void RemoveProxy(int proxyId) Parameters proxyId int The proxy id. SetProxy(int, ref TNode) Sets the proxy using the specified proxy id public void SetProxy(int proxyId, ref TNode proxy) Parameters proxyId int The proxy id proxy TNode The proxy ShiftOrigin(Vector2) Shifts the origin using the specified new origin public void ShiftOrigin(Vector2 newOrigin) Parameters newOrigin Vector2 The new origin TestOverlap(int, int) Test overlap of fat AABBs. public bool TestOverlap(int proxyIdA, int proxyIdB) Parameters proxyIdA int The proxy id A. proxyIdB int The proxy id B. Returns bool TouchProxy(int) Touches the proxy using the specified proxy id public void TouchProxy(int proxyId) Parameters proxyId int The proxy id UnBufferMove(int) Uns the buffer move using the specified proxy id private void UnBufferMove(int proxyId) Parameters proxyId int The proxy id UpdatePairs(BroadphaseDelegate) Update the pairs. This results in pair callbacks. This can only add pairs. public void UpdatePairs(BroadphaseDelegate callback) Parameters callback BroadphaseDelegate The callback."
  },
  "api/Alis.Core.Physic.Collision.DynamicTreeBroadPhase.html": {
    "href": "api/Alis.Core.Physic.Collision.DynamicTreeBroadPhase.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DynamicTreeBroadPhase Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap. public class DynamicTreeBroadPhase : DynamicTreeBroadPhase<FixtureProxy>, IBroadPhase, IBroadPhase<FixtureProxy> Inheritance object DynamicTreeBroadPhase<FixtureProxy> DynamicTreeBroadPhase Implements IBroadPhase IBroadPhase<FixtureProxy> Inherited Members DynamicTreeBroadPhase<FixtureProxy>.NullProxy DynamicTreeBroadPhase<FixtureProxy>._queryCallbackCache DynamicTreeBroadPhase<FixtureProxy>._tree DynamicTreeBroadPhase<FixtureProxy>._moveBuffer DynamicTreeBroadPhase<FixtureProxy>._moveCapacity DynamicTreeBroadPhase<FixtureProxy>._moveCount DynamicTreeBroadPhase<FixtureProxy>._pairBuffer DynamicTreeBroadPhase<FixtureProxy>._pairCapacity DynamicTreeBroadPhase<FixtureProxy>._pairCount DynamicTreeBroadPhase<FixtureProxy>._queryProxyId DynamicTreeBroadPhase<FixtureProxy>.TreeQuality DynamicTreeBroadPhase<FixtureProxy>.TreeBalance DynamicTreeBroadPhase<FixtureProxy>.TreeHeight DynamicTreeBroadPhase<FixtureProxy>.ProxyCount DynamicTreeBroadPhase<FixtureProxy>.AddProxy(ref AABB) DynamicTreeBroadPhase<FixtureProxy>.RemoveProxy(int) DynamicTreeBroadPhase<FixtureProxy>.MoveProxy(int, ref AABB, Vector2) DynamicTreeBroadPhase<FixtureProxy>.TouchProxy(int) DynamicTreeBroadPhase<FixtureProxy>.GetFatAABB(int, out AABB) DynamicTreeBroadPhase<FixtureProxy>.SetProxy(int, ref FixtureProxy) DynamicTreeBroadPhase<FixtureProxy>.GetProxy(int) DynamicTreeBroadPhase<FixtureProxy>.TestOverlap(int, int) DynamicTreeBroadPhase<FixtureProxy>.UpdatePairs(BroadphaseDelegate) DynamicTreeBroadPhase<FixtureProxy>.Query(BroadPhaseQueryCallback, ref AABB) DynamicTreeBroadPhase<FixtureProxy>.RayCast(BroadPhaseRayCastCallback, ref RayCastInput) DynamicTreeBroadPhase<FixtureProxy>.ShiftOrigin(Vector2) DynamicTreeBroadPhase<FixtureProxy>.BufferMove(int) DynamicTreeBroadPhase<FixtureProxy>.UnBufferMove(int) DynamicTreeBroadPhase<FixtureProxy>.QueryCallback(int) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString()"
  },
  "api/Alis.Core.Physic.Collision.EPAxis.html": {
    "href": "api/Alis.Core.Physic.Collision.EPAxis.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct EPAxis Namespace Alis.Core.Physic.Collision Assembly Alis.dll This structure is used to keep track of the best separating axis. public struct EPAxis Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Index The index public int Index Field Value int Separation The separation public float Separation Field Value float Type The type public EPAxisType Type Field Value EPAxisType"
  },
  "api/Alis.Core.Physic.Collision.EPAxisType.html": {
    "href": "api/Alis.Core.Physic.Collision.EPAxisType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum EPAxisType Namespace Alis.Core.Physic.Collision Assembly Alis.dll The ep axis type enum public enum EPAxisType Fields Unknown = 0 The unknown ep axis type EdgeA = 1 The edge ep axis type EdgeB = 2 The edge ep axis type"
  },
  "api/Alis.Core.Physic.Collision.IBroadPhase-1.html": {
    "href": "api/Alis.Core.Physic.Collision.IBroadPhase-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBroadPhase<TNode> Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad phase interface public interface IBroadPhase<TNode> where TNode : struct Type Parameters TNode Properties ProxyCount Gets the value of the proxy count int ProxyCount { get; } Property Value int Methods AddProxy(ref AABB) Adds the proxy using the specified aabb int AddProxy(ref AABB aabb) Parameters aabb AABB The aabb Returns int The int GetFatAABB(int, out AABB) Gets the fat aabb using the specified proxy id void GetFatAABB(int proxyId, out AABB aabb) Parameters proxyId int The proxy id aabb AABB The aabb GetProxy(int) Gets the proxy using the specified proxy id TNode GetProxy(int proxyId) Parameters proxyId int The proxy id Returns TNode The node MoveProxy(int, ref AABB, Vector2) Moves the proxy using the specified proxy id void MoveProxy(int proxyId, ref AABB aabb, Vector2 displacement) Parameters proxyId int The proxy id aabb AABB The aabb displacement Vector2 The displacement Query(BroadPhaseQueryCallback, ref AABB) Queries the callback void Query(BroadPhaseQueryCallback callback, ref AABB aabb) Parameters callback BroadPhaseQueryCallback The callback aabb AABB The aabb RayCast(BroadPhaseRayCastCallback, ref RayCastInput) Rays the cast using the specified callback void RayCast(BroadPhaseRayCastCallback callback, ref RayCastInput input) Parameters callback BroadPhaseRayCastCallback The callback input RayCastInput The input RemoveProxy(int) Removes the proxy using the specified proxy id void RemoveProxy(int proxyId) Parameters proxyId int The proxy id SetProxy(int, ref TNode) Sets the proxy using the specified proxy id void SetProxy(int proxyId, ref TNode proxy) Parameters proxyId int The proxy id proxy TNode The proxy ShiftOrigin(Vector2) Shifts the origin using the specified new origin void ShiftOrigin(Vector2 newOrigin) Parameters newOrigin Vector2 The new origin TestOverlap(int, int) Describes whether this instance test overlap bool TestOverlap(int proxyIdA, int proxyIdB) Parameters proxyIdA int The proxy id proxyIdB int The proxy id Returns bool The bool TouchProxy(int) Touches the proxy using the specified proxy id void TouchProxy(int proxyId) Parameters proxyId int The proxy id UpdatePairs(BroadphaseDelegate) Updates the pairs using the specified callback void UpdatePairs(BroadphaseDelegate callback) Parameters callback BroadphaseDelegate The callback"
  },
  "api/Alis.Core.Physic.Collision.IBroadPhase.html": {
    "href": "api/Alis.Core.Physic.Collision.IBroadPhase.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface IBroadPhase Namespace Alis.Core.Physic.Collision Assembly Alis.dll The broad phase interface public interface IBroadPhase : IBroadPhase<FixtureProxy> Implements IBroadPhase<FixtureProxy> See Also IBroadPhase<TNode>"
  },
  "api/Alis.Core.Physic.Collision.Manifold.html": {
    "href": "api/Alis.Core.Physic.Collision.Manifold.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Manifold Namespace Alis.Core.Physic.Collision Assembly Alis.dll A manifold for two touching convex Shapes. Box2D supports multiple types of contact: Clip point versus plane with radius Point versus point with radius (circles) The local point usage depends on the manifold type: ShapeType.Circles: the local center of circleA SeparationFunction.FaceA: the center of faceA SeparationFunction.FaceB: the center of faceB Similarly the local normal usage: ShapeType.Circles: not used SeparationFunction.FaceA: the normal on polygonA SeparationFunction.FaceB: the normal on polygonB We store contacts in this way so that position correction can account for movement, which is critical for continuous physics. All contact scenarios must be expressed in one of these types. This structure is stored across time steps, so we keep it small. public struct Manifold Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields LocalNormal Not use for Type.SeparationFunction.Points public Vector2 LocalNormal Field Value Vector2 LocalPoint Usage depends on manifold type public Vector2 LocalPoint Field Value Vector2 PointCount The number of manifold points public int PointCount Field Value int Points The points of contact public FixedArray2<ManifoldPoint> Points Field Value FixedArray2<ManifoldPoint> Type The type public ManifoldType Type Field Value ManifoldType"
  },
  "api/Alis.Core.Physic.Collision.ManifoldPoint.html": {
    "href": "api/Alis.Core.Physic.Collision.ManifoldPoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ManifoldPoint Namespace Alis.Core.Physic.Collision Assembly Alis.dll A manifold point is a contact point belonging to a contact manifold. It holds details related to the geometry and dynamics of the contact points. The local point usage depends on the manifold type: -ShapeType.Circles: the local center of circleB -SeparationFunction.FaceA: the local center of cirlceB or the clip point of polygonB -SeparationFunction.FaceB: the clip point of polygonA This structure is stored across time steps, so we keep it small. Note: the impulses are used for internal caching and may not provide reliable contact forces, especially for high speed collisions. public struct ManifoldPoint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Id Uniquely identifies a contact point between two Shapes public ContactID Id Field Value ContactID LocalPoint Usage depends on manifold type public Vector2 LocalPoint Field Value Vector2 NormalImpulse The non-penetration impulse public float NormalImpulse Field Value float TangentImpulse The friction impulse public float TangentImpulse Field Value float"
  },
  "api/Alis.Core.Physic.Collision.ManifoldType.html": {
    "href": "api/Alis.Core.Physic.Collision.ManifoldType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ManifoldType Namespace Alis.Core.Physic.Collision Assembly Alis.dll The manifold type enum public enum ManifoldType Fields Circles = 0 The circles manifold type FaceA = 1 The face manifold type FaceB = 2 The face manifold type"
  },
  "api/Alis.Core.Physic.Collision.Pair.html": {
    "href": "api/Alis.Core.Physic.Collision.Pair.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Pair Namespace Alis.Core.Physic.Collision Assembly Alis.dll The pair internal struct Pair : IComparable<Pair> Implements IComparable<Pair> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields ProxyIdA The proxy id public int ProxyIdA Field Value int ProxyIdB The proxy id public int ProxyIdB Field Value int Methods CompareTo(Pair) Compares the to using the specified other public int CompareTo(Pair other) Parameters other Pair The other Returns int The int"
  },
  "api/Alis.Core.Physic.Collision.PointState.html": {
    "href": "api/Alis.Core.Physic.Collision.PointState.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PointState Namespace Alis.Core.Physic.Collision Assembly Alis.dll This is used for determining the state of contact points. public enum PointState Fields Null = 0 Point does not exist Add = 1 Point was added in the update Persist = 2 Point persisted across the update Remove = 3 Point was removed in the update"
  },
  "api/Alis.Core.Physic.Collision.RayCastInput.html": {
    "href": "api/Alis.Core.Physic.Collision.RayCastInput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct RayCastInput Namespace Alis.Core.Physic.Collision Assembly Alis.dll Ray-cast input data. public struct RayCastInput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields MaxFraction The ray extends from p1 to p1 + maxFraction * (p2 - p1). If you supply a max fraction of 1, the ray extends from p1 to p2. A max fraction of 0.5 makes the ray go from p1 and half way to p2. public float MaxFraction Field Value float Point1 The starting point of the ray. public Vector2 Point1 Field Value Vector2 Point2 The ending point of the ray. public Vector2 Point2 Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.RayCastOutput.html": {
    "href": "api/Alis.Core.Physic.Collision.RayCastOutput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct RayCastOutput Namespace Alis.Core.Physic.Collision Assembly Alis.dll Ray-cast output data. public struct RayCastOutput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Fraction The ray hits at p1 + fraction * (p2 - p1), where p1 and p2 come from RayCastInput. Contains the actual fraction of the ray where it has the intersection point. public float Fraction Field Value float Normal The normal of the face of the shape the ray has hit. public Vector2 Normal Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.ReferenceFace.html": {
    "href": "api/Alis.Core.Physic.Collision.ReferenceFace.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ReferenceFace Namespace Alis.Core.Physic.Collision Assembly Alis.dll Reference face used for clipping public struct ReferenceFace Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields i1 The public int i1 Field Value int i2 The public int i2 Field Value int normal The normal public Vector2 normal Field Value Vector2 sideNormal1 The side normal public Vector2 sideNormal1 Field Value Vector2 sideNormal2 The side normal public Vector2 sideNormal2 Field Value Vector2 sideOffset1 The side offset public float sideOffset1 Field Value float sideOffset2 The side offset public float sideOffset2 Field Value float v1 The public Vector2 v1 Field Value Vector2 v2 The public Vector2 v2 Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.SeparationFunction.html": {
    "href": "api/Alis.Core.Physic.Collision.SeparationFunction.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SeparationFunction Namespace Alis.Core.Physic.Collision Assembly Alis.dll The separation function class public static class SeparationFunction Inheritance object SeparationFunction Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _axis The axis [ThreadStatic] private static Vector2 _axis Field Value Vector2 _localPoint The local point [ThreadStatic] private static Vector2 _localPoint Field Value Vector2 _proxyA The proxy [ThreadStatic] private static DistanceProxy _proxyA Field Value DistanceProxy _proxyB The proxy [ThreadStatic] private static DistanceProxy _proxyB Field Value DistanceProxy _sweepA The sweep [ThreadStatic] private static Sweep _sweepA Field Value Sweep _sweepB The sweep [ThreadStatic] private static Sweep _sweepB Field Value Sweep _type The type [ThreadStatic] private static SeparationFunctionType _type Field Value SeparationFunctionType Methods Evaluate(int, int, float) Evaluates the index a public static float Evaluate(int indexA, int indexB, float t) Parameters indexA int The index indexB int The index t float The Returns float The float FindMinSeparation(out int, out int, float) Finds the min separation using the specified index a public static float FindMinSeparation(out int indexA, out int indexB, float t) Parameters indexA int The index indexB int The index t float The Returns float The float Set(ref SimplexCache, ref DistanceProxy, ref Sweep, ref DistanceProxy, ref Sweep, float) Sets the cache public static void Set(ref SimplexCache cache, ref DistanceProxy proxyA, ref Sweep sweepA, ref DistanceProxy proxyB, ref Sweep sweepB, float t1) Parameters cache SimplexCache The cache proxyA DistanceProxy The proxy sweepA Sweep The sweep proxyB DistanceProxy The proxy sweepB Sweep The sweep t1 float The"
  },
  "api/Alis.Core.Physic.Collision.SeparationFunctionType.html": {
    "href": "api/Alis.Core.Physic.Collision.SeparationFunctionType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum SeparationFunctionType Namespace Alis.Core.Physic.Collision Assembly Alis.dll The separation function type enum public enum SeparationFunctionType Fields Points = 0 The points separation function type FaceA = 1 The face separation function type FaceB = 2 The face separation function type"
  },
  "api/Alis.Core.Physic.Collision.Shapes.ChainShape.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.ChainShape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ChainShape Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll A chain shape is a free form sequence of line segments. The chain has two-sided collision, so you can use inside and outside collision. Therefore, you may use any winding order. Connectivity information is used to create smooth collisions. WARNING: The chain will not collide properly if there are self-intersections. public class ChainShape : Shape Inheritance object Shape ChainShape Inherited Members Shape._2radius Shape._density Shape._radius Shape.MassData Shape.ShapeType Shape.ChildCount Shape.Density Shape.Radius Shape.Clone() Shape.TestPoint(ref Transform, ref Vector2) Shape.RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Shape.ComputeAABB(out AABB, ref Transform, int) Shape.ComputeProperties() Shape.ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ChainShape() Constructor for ChainShape. By default have 0 in density. public ChainShape() ChainShape(Vertices, bool) Create a new chainshape from the vertices. public ChainShape(Vertices vertices, bool createLoop = false) Parameters vertices Vertices The vertices to use. Must contain 2 or more vertices. createLoop bool Set to true to create a closed loop. It connects the first vertice to the last, and automatically adjusts connectivity to create smooth collisions along the chain. Fields Vertices The vertices. These are not owned/freed by the chain Shape. public Vertices Vertices Field Value Vertices _edgeShape The edge shape private static readonly EdgeShape _edgeShape Field Value EdgeShape _hasNextVertex The has next vertex private bool _hasNextVertex Field Value bool _hasPrevVertex The has next vertex private bool _hasPrevVertex Field Value bool _nextVertex The next vertex private Vector2 _nextVertex Field Value Vector2 _prevVertex The next vertex private Vector2 _prevVertex Field Value Vector2 Properties ChildCount Gets the value of the child count public override int ChildCount { get; } Property Value int NextVertex Establish connectivity to a vertex that follows the last vertex. Don't call this for loops. public Vector2 NextVertex { get; set; } Property Value Vector2 PrevVertex Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops. public Vector2 PrevVertex { get; set; } Property Value Vector2 Methods Clone() Clones this instance public override Shape Clone() Returns Shape The clone CompareTo(ChainShape) Compare the chain to another chain public bool CompareTo(ChainShape shape) Parameters shape ChainShape The other chain Returns bool True if the two chain shapes are the same ComputeAABB(out AABB, ref Transform, int) Computes the aabb using the specified aabb public override void ComputeAABB(out AABB aabb, ref Transform transform, int childIndex) Parameters aabb AABB The aabb transform Transform The transform childIndex int The child index ComputeProperties() Computes the properties protected override void ComputeProperties() ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) Computes the submerged area using the specified normal public override float ComputeSubmergedArea(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc) Parameters normal Vector2 The normal offset float The offset xf Transform The xf sc Vector2 The sc Returns float The float GetChildEdge(EdgeShape, int) This method has been optimized to reduce garbage. internal void GetChildEdge(EdgeShape edge, int index) Parameters edge EdgeShape The cached edge to set properties on. index int The index. GetChildEdge(int) Get a child edge. public EdgeShape GetChildEdge(int index) Parameters index int The index. Returns EdgeShape RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Describes whether this instance ray cast public override bool RayCast(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex) Parameters output RayCastOutput The output input RayCastInput The input transform Transform The transform childIndex int The child index Returns bool The bool TestPoint(ref Transform, ref Vector2) Describes whether this instance test point public override bool TestPoint(ref Transform transform, ref Vector2 point) Parameters transform Transform The transform point Vector2 The point Returns bool The bool"
  },
  "api/Alis.Core.Physic.Collision.Shapes.CircleShape.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.CircleShape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CircleShape Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll A circle shape. public class CircleShape : Shape Inheritance object Shape CircleShape Inherited Members Shape._2radius Shape._density Shape._radius Shape.MassData Shape.ShapeType Shape.ChildCount Shape.Density Shape.Radius Shape.Clone() Shape.TestPoint(ref Transform, ref Vector2) Shape.RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Shape.ComputeAABB(out AABB, ref Transform, int) Shape.ComputeProperties() Shape.ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors CircleShape(float, float) Create a new circle with the desired radius and density. public CircleShape(float radius, float density) Parameters radius float The radius of the circle. density float The density of the circle. CircleShape() Initializes a new instance of the Alis.Core.Physic.Collision.Shapes.CircleShape class internal CircleShape() Fields _position The position internal Vector2 _position Field Value Vector2 Properties ChildCount Gets the value of the child count public override int ChildCount { get; } Property Value int Position Get or set the position of the circle public Vector2 Position { get; set; } Property Value Vector2 Methods Clone() Clones this instance public override Shape Clone() Returns Shape The clone CompareTo(CircleShape) Compare the circle to another circle public bool CompareTo(CircleShape shape) Parameters shape CircleShape The other circle Returns bool True if the two circles are the same size and have the same position ComputeAABB(out AABB, ref Transform, int) Computes the aabb using the specified aabb public override void ComputeAABB(out AABB aabb, ref Transform transform, int childIndex) Parameters aabb AABB The aabb transform Transform The transform childIndex int The child index ComputeProperties() Computes the properties protected override sealed void ComputeProperties() ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) Computes the submerged area using the specified normal public override float ComputeSubmergedArea(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc) Parameters normal Vector2 The normal offset float The offset xf Transform The xf sc Vector2 The sc Returns float The area RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Describes whether this instance ray cast public override bool RayCast(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex) Parameters output RayCastOutput The output input RayCastInput The input transform Transform The transform childIndex int The child index Returns bool The bool TestPoint(ref Transform, ref Vector2) Describes whether this instance test point public override bool TestPoint(ref Transform transform, ref Vector2 point) Parameters transform Transform The transform point Vector2 The point Returns bool The bool"
  },
  "api/Alis.Core.Physic.Collision.Shapes.EdgeShape.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.EdgeShape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class EdgeShape Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. The connectivity information is used to ensure correct contact normals. public class EdgeShape : Shape Inheritance object Shape EdgeShape Inherited Members Shape._2radius Shape._density Shape._radius Shape.MassData Shape.ShapeType Shape.ChildCount Shape.Density Shape.Radius Shape.Clone() Shape.TestPoint(ref Transform, ref Vector2) Shape.RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Shape.ComputeAABB(out AABB, ref Transform, int) Shape.ComputeProperties() Shape.ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors EdgeShape() Initializes a new instance of the Alis.Core.Physic.Collision.Shapes.EdgeShape class internal EdgeShape() EdgeShape(Vector2, Vector2) Create a new EdgeShape with the specified start and end. public EdgeShape(Vector2 start, Vector2 end) Parameters start Vector2 The start of the edge. end Vector2 The end of the edge. Fields _vertex1 Edge start vertex internal Vector2 _vertex1 Field Value Vector2 _vertex2 Edge end vertex internal Vector2 _vertex2 Field Value Vector2 Properties ChildCount Gets the value of the child count public override int ChildCount { get; } Property Value int HasVertex0 Is true if the edge is connected to an adjacent vertex before vertex 1. public bool HasVertex0 { get; set; } Property Value bool HasVertex3 Is true if the edge is connected to an adjacent vertex after vertex2. public bool HasVertex3 { get; set; } Property Value bool Vertex0 Optional adjacent vertices. These are used for smooth collision. public Vector2 Vertex0 { get; set; } Property Value Vector2 Vertex1 These are the edge vertices public Vector2 Vertex1 { get; set; } Property Value Vector2 Vertex2 These are the edge vertices public Vector2 Vertex2 { get; set; } Property Value Vector2 Vertex3 Optional adjacent vertices. These are used for smooth collision. public Vector2 Vertex3 { get; set; } Property Value Vector2 Methods Clone() Clones this instance public override Shape Clone() Returns Shape The clone CompareTo(EdgeShape) Describes whether this instance compare to public bool CompareTo(EdgeShape shape) Parameters shape EdgeShape The shape Returns bool The bool ComputeAABB(out AABB, ref Transform, int) Computes the aabb using the specified aabb public override void ComputeAABB(out AABB aabb, ref Transform transform, int childIndex) Parameters aabb AABB The aabb transform Transform The transform childIndex int The child index ComputeProperties() Computes the properties protected override void ComputeProperties() ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) Computes the submerged area using the specified normal public override float ComputeSubmergedArea(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc) Parameters normal Vector2 The normal offset float The offset xf Transform The xf sc Vector2 The sc Returns float The float RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Describes whether this instance ray cast public override bool RayCast(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex) Parameters output RayCastOutput The output input RayCastInput The input transform Transform The transform childIndex int The child index Returns bool The bool Set(Vector2, Vector2) Set this as an isolated edge. public void Set(Vector2 start, Vector2 end) Parameters start Vector2 The start. end Vector2 The end. TestPoint(ref Transform, ref Vector2) Describes whether this instance test point public override bool TestPoint(ref Transform transform, ref Vector2 point) Parameters transform Transform The transform point Vector2 The point Returns bool The bool"
  },
  "api/Alis.Core.Physic.Collision.Shapes.MassData.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.MassData.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct MassData Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll This holds the mass data computed for a shape. public struct MassData : IEquatable<MassData> Implements IEquatable<MassData> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Area The area of the shape public float Area { readonly get; internal set; } Property Value float Centroid The position of the shape's centroid relative to the shape's origin. public Vector2 Centroid { readonly get; internal set; } Property Value Vector2 Inertia The rotational inertia of the shape about the local origin. public float Inertia { readonly get; internal set; } Property Value float Mass The mass of the shape, usually in kilograms. public float Mass { readonly get; internal set; } Property Value float Methods Equals(MassData) Describes whether this instance equals public bool Equals(MassData other) Parameters other MassData The other Returns bool The bool Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int Operators operator ==(MassData, MassData) The equal operator public static bool operator ==(MassData left, MassData right) Parameters left MassData right MassData Returns bool operator !=(MassData, MassData) The not equal operator public static bool operator !=(MassData left, MassData right) Parameters left MassData right MassData Returns bool"
  },
  "api/Alis.Core.Physic.Collision.Shapes.PolygonShape.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.PolygonShape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PolygonShape Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll Represents a simple non-selfintersecting convex polygon. Create a convex hull from the given array of points. public class PolygonShape : Shape Inheritance object Shape PolygonShape Inherited Members Shape._2radius Shape._density Shape._radius Shape.MassData Shape.ShapeType Shape.ChildCount Shape.Density Shape.Radius Shape.Clone() Shape.TestPoint(ref Transform, ref Vector2) Shape.RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Shape.ComputeAABB(out AABB, ref Transform, int) Shape.ComputeProperties() Shape.ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PolygonShape(Vertices, float) Initializes a new instance of the Alis.Core.Physic.Collision.Shapes.PolygonShape class. public PolygonShape(Vertices vertices, float density) Parameters vertices Vertices The vertices. density float The density. PolygonShape(float) Create a new PolygonShape with the specified density. public PolygonShape(float density) Parameters density float The density. PolygonShape() Initializes a new instance of the Alis.Core.Physic.Collision.Shapes.PolygonShape class internal PolygonShape() Fields _vertices The vertices private Vertices _vertices Field Value Vertices Properties ChildCount Gets the value of the child count public override int ChildCount { get; } Property Value int Normals Gets or sets the value of the normals public Vertices Normals { get; private set; } Property Value Vertices Vertices Create a convex hull from the given array of local points. The number of vertices must be in the range [3, Settings.MaxPolygonVertices]. Warning: the points may be re-ordered, even if they form a convex polygon Warning: collinear points are handled but not removed. Collinear points may lead to poor stacking behavior. public Vertices Vertices { get; set; } Property Value Vertices Methods Clone() Clones this instance public override Shape Clone() Returns Shape The clone CompareTo(PolygonShape) Describes whether this instance compare to public bool CompareTo(PolygonShape shape) Parameters shape PolygonShape The shape Returns bool The bool ComputeAABB(out AABB, ref Transform, int) Given a transform, compute the associated axis aligned bounding box for a child shape. public override void ComputeAABB(out AABB aabb, ref Transform transform, int childIndex) Parameters aabb AABB The aabb results. transform Transform The world transform of the shape. childIndex int The child shape index. ComputeProperties() Computes the properties protected override void ComputeProperties() ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) Computes the submerged area using the specified normal public override float ComputeSubmergedArea(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc) Parameters normal Vector2 The normal offset float The offset xf Transform The xf sc Vector2 The sc Returns float The area RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Describes whether this instance ray cast public override bool RayCast(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex) Parameters output RayCastOutput The output input RayCastInput The input transform Transform The transform childIndex int The child index Returns bool The bool TestPoint(ref Transform, ref Vector2) Describes whether this instance test point public override bool TestPoint(ref Transform transform, ref Vector2 point) Parameters transform Transform The transform point Vector2 The point Returns bool The bool"
  },
  "api/Alis.Core.Physic.Collision.Shapes.Shape.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.Shape.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Shape Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation in World are created automatically when a Fixture is created. Shapes may encapsulate a one or more child shapes. public abstract class Shape Inheritance object Shape Derived ChainShape CircleShape EdgeShape PolygonShape Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Shape(float) Initializes a new instance of the Alis.Core.Physic.Collision.Shapes.Shape class protected Shape(float density) Parameters density float The density Fields MassData Contains the properties of the shape such as: Area of the shape Centroid Inertia Mass public MassData MassData Field Value MassData _2radius The 2radius internal float _2radius Field Value float _density The density internal float _density Field Value float _radius The radius internal float _radius Field Value float Properties ChildCount Get the number of child primitives. public abstract int ChildCount { get; } Property Value int Density Gets or sets the density. Changing the density causes a recalculation of shape properties. public float Density { get; set; } Property Value float Radius Radius of the Shape Changing the radius causes a recalculation of shape properties. public float Radius { get; set; } Property Value float ShapeType Get the type of this shape. public ShapeType ShapeType { get; internal set; } Property Value ShapeType Methods Clone() Clone the concrete shape public abstract Shape Clone() Returns Shape A clone of the shape ComputeAABB(out AABB, ref Transform, int) Given a transform, compute the associated axis aligned bounding box for a child shape. public abstract void ComputeAABB(out AABB aabb, ref Transform transform, int childIndex) Parameters aabb AABB The aabb results. transform Transform The world transform of the shape. childIndex int The child shape index. ComputeProperties() Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed about the local origin, not the centroid. protected abstract void ComputeProperties() ComputeSubmergedArea(ref Vector2, float, ref Transform, out Vector2) Used for the buoyancy controller public abstract float ComputeSubmergedArea(ref Vector2 normal, float offset, ref Transform xf, out Vector2 sc) Parameters normal Vector2 offset float xf Transform sc Vector2 Returns float RayCast(out RayCastOutput, ref RayCastInput, ref Transform, int) Cast a ray against a child shape. public abstract bool RayCast(out RayCastOutput output, ref RayCastInput input, ref Transform transform, int childIndex) Parameters output RayCastOutput The ray-cast results. input RayCastInput The ray-cast input parameters. transform Transform The transform to be applied to the shape. childIndex int The child shape index. Returns bool True if the ray-cast hits the shape TestPoint(ref Transform, ref Vector2) Test a point for containment in this shape. Note: This only works for convex shapes. public abstract bool TestPoint(ref Transform transform, ref Vector2 point) Parameters transform Transform The shape world transform. point Vector2 A point in world coordinates. Returns bool True if the point is inside the shape"
  },
  "api/Alis.Core.Physic.Collision.Shapes.ShapeType.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.ShapeType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ShapeType Namespace Alis.Core.Physic.Collision.Shapes Assembly Alis.dll The shape type enum public enum ShapeType Fields Unknown = -1 The unknown shape type Circle = 0 The circle shape type Edge = 1 The edge shape type Polygon = 2 The polygon shape type Chain = 3 The chain shape type TypeCount = 4 The type count shape type"
  },
  "api/Alis.Core.Physic.Collision.Shapes.html": {
    "href": "api/Alis.Core.Physic.Collision.Shapes.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Collision.Shapes Classes ChainShape A chain shape is a free form sequence of line segments. The chain has two-sided collision, so you can use inside and outside collision. Therefore, you may use any winding order. Connectivity information is used to create smooth collisions. WARNING: The chain will not collide properly if there are self-intersections. CircleShape A circle shape. EdgeShape A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. The connectivity information is used to ensure correct contact normals. PolygonShape Represents a simple non-selfintersecting convex polygon. Create a convex hull from the given array of points. Shape A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation in World are created automatically when a Fixture is created. Shapes may encapsulate a one or more child shapes. Structs MassData This holds the mass data computed for a shape. Enums ShapeType The shape type enum"
  },
  "api/Alis.Core.Physic.Collision.Simplex.html": {
    "href": "api/Alis.Core.Physic.Collision.Simplex.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Simplex Namespace Alis.Core.Physic.Collision Assembly Alis.dll The simplex internal struct Simplex Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Count The count internal int Count Field Value int V The internal FixedArray3<SimplexVertex> V Field Value FixedArray3<SimplexVertex> Methods GetClosestPoint() Gets the closest point internal Vector2 GetClosestPoint() Returns Vector2 The vector GetMetric() Gets the metric internal float GetMetric() Returns float The float GetSearchDirection() Gets the search direction internal Vector2 GetSearchDirection() Returns Vector2 The vector GetWitnessPoints(out Vector2, out Vector2) Gets the witness points using the specified p a internal void GetWitnessPoints(out Vector2 pA, out Vector2 pB) Parameters pA Vector2 The pB Vector2 The Exceptions Exception ReadCache(ref SimplexCache, ref DistanceProxy, ref Transform, ref DistanceProxy, ref Transform) Reads the cache using the specified cache internal void ReadCache(ref SimplexCache cache, ref DistanceProxy proxyA, ref Transform transformA, ref DistanceProxy proxyB, ref Transform transformB) Parameters cache SimplexCache The cache proxyA DistanceProxy The proxy transformA Transform The transform proxyB DistanceProxy The proxy transformB Transform The transform Solve2() Solves the 2 internal void Solve2() Solve3() Solves the 3 internal void Solve3() WriteCache(ref SimplexCache) Writes the cache using the specified cache internal void WriteCache(ref SimplexCache cache) Parameters cache SimplexCache The cache"
  },
  "api/Alis.Core.Physic.Collision.SimplexCache.html": {
    "href": "api/Alis.Core.Physic.Collision.SimplexCache.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SimplexCache Namespace Alis.Core.Physic.Collision Assembly Alis.dll Used to warm start ComputeDistance. Set count to zero on first call. public struct SimplexCache Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Count Length or area public ushort Count Field Value ushort IndexA Vertices on shape A public FixedArray3<byte> IndexA Field Value FixedArray3<byte> IndexB Vertices on shape B public FixedArray3<byte> IndexB Field Value FixedArray3<byte> Metric The metric public float Metric Field Value float"
  },
  "api/Alis.Core.Physic.Collision.SimplexVertex.html": {
    "href": "api/Alis.Core.Physic.Collision.SimplexVertex.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SimplexVertex Namespace Alis.Core.Physic.Collision Assembly Alis.dll The simplex vertex internal struct SimplexVertex Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields A Barycentric coordinate for closest point public float A Field Value float IndexA wA index public int IndexA Field Value int IndexB wB index public int IndexB Field Value int W wB - wA public Vector2 W Field Value Vector2 WA Support point in proxyA public Vector2 WA Field Value Vector2 WB Support point in proxyB public Vector2 WB Field Value Vector2"
  },
  "api/Alis.Core.Physic.Collision.TOIInput.html": {
    "href": "api/Alis.Core.Physic.Collision.TOIInput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TOIInput Namespace Alis.Core.Physic.Collision Assembly Alis.dll Input parameters for CalculateTimeOfImpact public class TOIInput Inheritance object TOIInput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ProxyA The proxy public DistanceProxy ProxyA Field Value DistanceProxy ProxyB The proxy public DistanceProxy ProxyB Field Value DistanceProxy SweepA The sweep public Sweep SweepA Field Value Sweep SweepB The sweep public Sweep SweepB Field Value Sweep TMax The max public float TMax Field Value float"
  },
  "api/Alis.Core.Physic.Collision.TOIOutput.html": {
    "href": "api/Alis.Core.Physic.Collision.TOIOutput.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TOIOutput Namespace Alis.Core.Physic.Collision Assembly Alis.dll The toi output public struct TOIOutput Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields State The state public TOIOutputState State Field Value TOIOutputState T The public float T Field Value float"
  },
  "api/Alis.Core.Physic.Collision.TOIOutputState.html": {
    "href": "api/Alis.Core.Physic.Collision.TOIOutputState.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TOIOutputState Namespace Alis.Core.Physic.Collision Assembly Alis.dll The toi output state enum public enum TOIOutputState Fields Unknown = 0 The unknown toi output state Failed = 1 The failed toi output state Overlapped = 2 The overlapped toi output state Touching = 3 The touching toi output state Seperated = 4 The seperated toi output state"
  },
  "api/Alis.Core.Physic.Collision.TimeOfImpact.html": {
    "href": "api/Alis.Core.Physic.Collision.TimeOfImpact.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TimeOfImpact Namespace Alis.Core.Physic.Collision Assembly Alis.dll The time of impact class public static class TimeOfImpact Inheritance object TimeOfImpact Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields TOICalls The toi max iters [ThreadStatic] public static int TOICalls Field Value int TOIIters The toi max iters [ThreadStatic] public static int TOIIters Field Value int TOIMaxIters The toi max iters [ThreadStatic] public static int TOIMaxIters Field Value int TOIMaxRootIters The toi max root iters [ThreadStatic] public static int TOIMaxRootIters Field Value int TOIRootIters The toi max root iters [ThreadStatic] public static int TOIRootIters Field Value int Methods CalculateTimeOfImpact(out TOIOutput, ref TOIInput) Compute the upper bound on time before two shapes penetrate. Time is represented as a fraction between [0,tMax]. This uses a swept separating axis and may miss some intermediate, non-tunneling collision. If you change the time interval, you should call this function again. Note: use Distance() to compute the contact point and normal at the time of impact. public static void CalculateTimeOfImpact(out TOIOutput output, ref TOIInput input) Parameters output TOIOutput The output. input TOIInput The input."
  },
  "api/Alis.Core.Physic.Collision.TreeNode-1.html": {
    "href": "api/Alis.Core.Physic.Collision.TreeNode-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TreeNode<TNode> Namespace Alis.Core.Physic.Collision Assembly Alis.dll A node in the dynamic tree. The client does not interact with this directly. internal struct TreeNode<TNode> Type Parameters TNode Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields AABB Enlarged AABB internal AABB AABB Field Value AABB Child1 The child internal int Child1 Field Value int Child2 The child internal int Child2 Field Value int Height The height internal int Height Field Value int Parent The parent internal int Parent Field Value int UserData The user data internal TNode UserData Field Value TNode Properties Next Next free node internal int Next { get; set; } Property Value int Methods IsLeaf() Describes whether this instance is leaf internal bool IsLeaf() Returns bool The bool"
  },
  "api/Alis.Core.Physic.Collision.html": {
    "href": "api/Alis.Core.Physic.Collision.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Collision Namespaces Alis.Core.Physic.Collision.Shapes Classes Collision Collision methods Distance The Gilbert‚ÄìJohnson‚ÄìKeerthi distance algorithm that provides the distance between shapes. DynamicTree<TNode> A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts. Leafs are proxies with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor so that the proxy AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a tree update. Nodes are pooled and relocatable, so we use node indices rather than pointers. DynamicTreeBroadPhase The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap. DynamicTreeBroadPhase<TNode> The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and to track subsequent overlap. Collision.EPCollider The ep collider class SeparationFunction The separation function class TOIInput Input parameters for CalculateTimeOfImpact TimeOfImpact The time of impact class Structs AABB An axis aligned bounding box. ClipVertex Used for computing contact manifolds. ContactFeature The features that intersect to form the contact point This must be 4 bytes or less. ContactID Contact ids to facilitate warm starting. DistanceInput Input for Distance.ComputeDistance(). You have to option to use the shape radii in the computation. DistanceOutput Output for Distance.ComputeDistance(). DistanceProxy A distance proxy is used by the GJK algorithm. It encapsulates any shape. EPAxis This structure is used to keep track of the best separating axis. Manifold A manifold for two touching convex Shapes. Box2D supports multiple types of contact: Clip point versus plane with radius Point versus point with radius (circles) The local point usage depends on the manifold type: ShapeType.Circles: the local center of circleA SeparationFunction.FaceA: the center of faceA SeparationFunction.FaceB: the center of faceB Similarly the local normal usage: ShapeType.Circles: not used SeparationFunction.FaceA: the normal on polygonA SeparationFunction.FaceB: the normal on polygonB We store contacts in this way so that position correction can account for movement, which is critical for continuous physics. All contact scenarios must be expressed in one of these types. This structure is stored across time steps, so we keep it small. ManifoldPoint A manifold point is a contact point belonging to a contact manifold. It holds details related to the geometry and dynamics of the contact points. The local point usage depends on the manifold type: -ShapeType.Circles: the local center of circleB -SeparationFunction.FaceA: the local center of cirlceB or the clip point of polygonB -SeparationFunction.FaceB: the clip point of polygonA This structure is stored across time steps, so we keep it small. Note: the impulses are used for internal caching and may not provide reliable contact forces, especially for high speed collisions. Pair The pair RayCastInput Ray-cast input data. RayCastOutput Ray-cast output data. ReferenceFace Reference face used for clipping Simplex The simplex SimplexCache Used to warm start ComputeDistance. Set count to zero on first call. SimplexVertex The simplex vertex TOIOutput The toi output Collision.EPCollider.TempPolygon This holds polygon B expressed in frame A. TreeNode<TNode> A node in the dynamic tree. The client does not interact with this directly. Interfaces IBroadPhase<TNode> The broad phase interface IBroadPhase The broad phase interface Enums ContactFeatureType The contact feature type enum EPAxisType The ep axis type enum ManifoldType The manifold type enum PointState This is used for determining the state of contact points. SeparationFunctionType The separation function type enum TOIOutputState The toi output state enum Delegates BroadPhaseQueryCallback The broad phase query callback BroadPhaseRayCastCallback The broad phase ray cast callback BroadphaseDelegate The broadphase delegate"
  },
  "api/Alis.Core.Physic.Common.Complex.html": {
    "href": "api/Alis.Core.Physic.Common.Complex.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Complex Namespace Alis.Core.Physic.Common Assembly Alis.dll The complex public struct Complex Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Complex(float, float) Initializes a new instance of the Alis.Core.Physic.Common.Complex class public Complex(float real, float imaginary) Parameters real float The real imaginary float The imaginary Fields R The public float R Field Value float i The public float i Field Value float Properties ImaginaryOne Gets the value of the imaginary one public static Complex ImaginaryOne { get; } Property Value Complex Magnitude Gets the value of the magnitude public float Magnitude { get; } Property Value float One Gets the value of the one public static Complex One { get; } Property Value Complex Phase Gets or sets the value of the phase public float Phase { get; set; } Property Value float Methods Conjugate() Conjugates this instance public void Conjugate() Conjugate(ref Complex) Conjugates the value public static Complex Conjugate(ref Complex value) Parameters value Complex The value Returns Complex The complex Divide(ref Complex, ref Complex) Divides the left public static Complex Divide(ref Complex left, ref Complex right) Parameters left Complex The left right Complex The right Returns Complex The complex Divide(ref Complex, ref Complex, out Complex) Divides the left public static void Divide(ref Complex left, ref Complex right, out Complex result) Parameters left Complex The left right Complex The right result Complex The result Divide(ref Vector2, ref Complex) Divides the left public static Vector2 Divide(ref Vector2 left, ref Complex right) Parameters left Vector2 The left right Complex The right Returns Vector2 The vector Divide(Vector2, ref Complex) Divides the left public static Vector2 Divide(Vector2 left, ref Complex right) Parameters left Vector2 The left right Complex The right Returns Vector2 The vector Divide(Vector2, ref Complex, out Vector2) Divides the left public static void Divide(Vector2 left, ref Complex right, out Vector2 result) Parameters left Vector2 The left right Complex The right result Vector2 The result FromAngle(float) Creates the angle using the specified angle public static Complex FromAngle(float angle) Parameters angle float The angle Returns Complex The complex MagnitudeSquared() Magnitudes the squared public float MagnitudeSquared() Returns float The float Multiply(ref Complex, ref Complex) Multiplies the left public static Complex Multiply(ref Complex left, ref Complex right) Parameters left Complex The left right Complex The right Returns Complex The complex Multiply(ref Vector2, ref Complex) Multiplies the left public static Vector2 Multiply(ref Vector2 left, ref Complex right) Parameters left Vector2 The left right Complex The right Returns Vector2 The vector Multiply(ref Vector2, ref Complex, out Vector2) Multiplies the left public static void Multiply(ref Vector2 left, ref Complex right, out Vector2 result) Parameters left Vector2 The left right Complex The right result Vector2 The result Multiply(Vector2, ref Complex) Multiplies the left public static Vector2 Multiply(Vector2 left, ref Complex right) Parameters left Vector2 The left right Complex The right Returns Vector2 The vector Negate() Negates this instance public void Negate() Negate(ref Complex) Negates the value public static Complex Negate(ref Complex value) Parameters value Complex The value Returns Complex The complex Normalize() Normalizes this instance public void Normalize() Normalize(ref Complex) Normalizes the value public static Complex Normalize(ref Complex value) Parameters value Complex The value Returns Complex The complex ToString() Returns the string public override string ToString() Returns string The string ToVector2() Returns the vector 2 public Vector2 ToVector2() Returns Vector2 The vector"
  },
  "api/Alis.Core.Physic.Common.Constant.html": {
    "href": "api/Alis.Core.Physic.Common.Constant.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Constant Namespace Alis.Core.Physic.Common Assembly Alis.dll The constant class internal static class Constant Inheritance object Constant Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields Pi The pi public const float Pi = 3.1415927 Field Value float Tau The pi public const float Tau = 6.2831855 Field Value float"
  },
  "api/Alis.Core.Physic.Common.ConvexHull.ChainHull.PointComparer.html": {
    "href": "api/Alis.Core.Physic.Common.ConvexHull.ChainHull.PointComparer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ChainHull.PointComparer Namespace Alis.Core.Physic.Common.ConvexHull Assembly Alis.dll The point comparer class private class ChainHull.PointComparer : Comparer<Vector2>, IComparer<Vector2>, IComparer Inheritance object Comparer<Vector2> ChainHull.PointComparer Implements IComparer<Vector2> IComparer Inherited Members Comparer<Vector2>.Compare(Vector2, Vector2) Comparer<Vector2>.Create(Comparison<Vector2>) Comparer<Vector2>.IComparer.Compare(object, object) Comparer<Vector2>.Default object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Compare(Vector2, Vector2) Compares the a public override int Compare(Vector2 a, Vector2 b) Parameters a Vector2 The b Vector2 The Returns int The int See Also Comparer<T>"
  },
  "api/Alis.Core.Physic.Common.ConvexHull.ChainHull.html": {
    "href": "api/Alis.Core.Physic.Common.ConvexHull.ChainHull.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ChainHull Namespace Alis.Core.Physic.Common.ConvexHull Assembly Alis.dll Andrew's Monotone Chain Convex Hull algorithm. Used to get the convex hull of a point cloud. Source: http://www.softsurfer.com/Archive/algorithm_0109/algorithm_0109.htm public static class ChainHull Inheritance object ChainHull Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _pointComparer The point comparer private static readonly ChainHull.PointComparer _pointComparer Field Value ChainHull.PointComparer Methods GetConvexHull(Vertices) Returns the convex hull from the given vertices.. public static Vertices GetConvexHull(Vertices vertices) Parameters vertices Vertices Returns Vertices"
  },
  "api/Alis.Core.Physic.Common.ConvexHull.GiftWrap.html": {
    "href": "api/Alis.Core.Physic.Common.ConvexHull.GiftWrap.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GiftWrap Namespace Alis.Core.Physic.Common.ConvexHull Assembly Alis.dll Giftwrap convex hull algorithm. O(nh) time complexity, where n is the number of points and h is the number of points on the convex hull. See http://en.wikipedia.org/wiki/Gift_wrapping_algorithm for more details. public static class GiftWrap Inheritance object GiftWrap Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods GetConvexHull(Vertices) Returns the convex hull from the given vertices. public static Vertices GetConvexHull(Vertices vertices) Parameters vertices Vertices The vertices. Returns Vertices"
  },
  "api/Alis.Core.Physic.Common.ConvexHull.Melkman.html": {
    "href": "api/Alis.Core.Physic.Common.ConvexHull.Melkman.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Melkman Namespace Alis.Core.Physic.Common.ConvexHull Assembly Alis.dll Creates a convex hull. Note: Vertices must be of a simple polygon, i.e. edges do not overlap. Melkman does not work on point clouds public static class Melkman Inheritance object Melkman Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks Implemented using Melkman's Convex Hull Algorithm - O(n) time complexity. Reference: http://www.ams.sunysb.edu/~jsbm/courses/345/melkman.pdf Methods GetConvexHull(Vertices) Returns a convex hull from the given vertices. public static Vertices GetConvexHull(Vertices vertices) Parameters vertices Vertices Returns Vertices A convex hull in counter clockwise winding order."
  },
  "api/Alis.Core.Physic.Common.ConvexHull.html": {
    "href": "api/Alis.Core.Physic.Common.ConvexHull.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.ConvexHull Classes ChainHull Andrew's Monotone Chain Convex Hull algorithm. Used to get the convex hull of a point cloud. Source: http://www.softsurfer.com/Archive/algorithm_0109/algorithm_0109.htm GiftWrap Giftwrap convex hull algorithm. O(nh) time complexity, where n is the number of points and h is the number of points on the convex hull. See http://en.wikipedia.org/wiki/Gift_wrapping_algorithm for more details. Melkman Creates a convex hull. Note: Vertices must be of a simple polygon, i.e. edges do not overlap. Melkman does not work on point clouds ChainHull.PointComparer The point comparer class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.BayazitDecomposer.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.BayazitDecomposer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BayazitDecomposer Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/) Properties: Tries to decompose using polygons instead of triangles. Tends to produce optimal results with low processing time. Running time is O(nr), n = number of vertices, r = reflex vertices. Does not support holes. For more information about this algorithm, see http://mnbayazit.com/406/bayazit internal static class BayazitDecomposer Inheritance object BayazitDecomposer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods At(int, Vertices) Ats the i private static Vector2 At(int i, Vertices vertices) Parameters i int The vertices Vertices The vertices Returns Vector2 The vector CanSee(int, int, Vertices) Describes whether can see private static bool CanSee(int i, int j, Vertices vertices) Parameters i int The j int The vertices Vertices The vertices Returns bool The bool ConvexPartition(Vertices) Decompose the polygon into several smaller non-concave polygon. If the polygon is already convex, it will return the original polygon, unless it is over Settings.MaxPolygonVertices. public static List<Vertices> ConvexPartition(Vertices vertices) Parameters vertices Vertices Returns List<Vertices> Copy(int, int, Vertices) Copies the i private static Vertices Copy(int i, int j, Vertices vertices) Parameters i int The j int The vertices Vertices The vertices Returns Vertices The Left(Vector2, Vector2, Vector2) Describes whether left private static bool Left(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 The b Vector2 The c Vector2 The Returns bool The bool LeftOn(Vector2, Vector2, Vector2) Describes whether left on private static bool LeftOn(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 The b Vector2 The c Vector2 The Returns bool The bool Reflex(int, Vertices) Describes whether reflex private static bool Reflex(int i, Vertices vertices) Parameters i int The vertices Vertices The vertices Returns bool The bool Right(int, Vertices) Describes whether right private static bool Right(int i, Vertices vertices) Parameters i int The vertices Vertices The vertices Returns bool The bool Right(Vector2, Vector2, Vector2) Describes whether right private static bool Right(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 The b Vector2 The c Vector2 The Returns bool The bool RightOn(Vector2, Vector2, Vector2) Describes whether right on private static bool RightOn(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 The b Vector2 The c Vector2 The Returns bool The bool SquareDist(Vector2, Vector2) Squares the dist using the specified a private static float SquareDist(Vector2 a, Vector2 b) Parameters a Vector2 The b Vector2 The Returns float The float TriangulatePolygon(Vertices) Triangulates the polygon using the specified vertices private static List<Vertices> TriangulatePolygon(Vertices vertices) Parameters vertices Vertices The vertices Returns List<Vertices> The list"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.DelaunayTriangle.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DelaunayTriangle Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay Assembly Alis.dll The delaunay triangle class internal class DelaunayTriangle Inheritance object DelaunayTriangle Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors DelaunayTriangle(TriangulationPoint, TriangulationPoint, TriangulationPoint) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.DelaunayTriangle class public DelaunayTriangle(TriangulationPoint p1, TriangulationPoint p2, TriangulationPoint p3) Parameters p1 TriangulationPoint The p2 TriangulationPoint The p3 TriangulationPoint The Fields EdgeIsConstrained The edge is constrained public FixedBitArray3 EdgeIsConstrained Field Value FixedBitArray3 EdgeIsDelaunay The edge is delaunay public FixedBitArray3 EdgeIsDelaunay Field Value FixedBitArray3 Neighbors The neighbors public FixedArray3<DelaunayTriangle> Neighbors Field Value FixedArray3<DelaunayTriangle> Points The points public FixedArray3<TriangulationPoint> Points Field Value FixedArray3<TriangulationPoint> Properties IsInterior Gets or sets the value of the is interior public bool IsInterior { get; set; } Property Value bool Methods Area() Areas this instance public double Area() Returns double The double Centroid() Centroids this instance public TriangulationPoint Centroid() Returns TriangulationPoint The triangulation point Clear() Clears this instance public void Clear() ClearNeighbor(DelaunayTriangle) Clears the neighbor using the specified triangle public void ClearNeighbor(DelaunayTriangle triangle) Parameters triangle DelaunayTriangle The triangle ClearNeighbors() Clears the neighbors public void ClearNeighbors() Contains(TriangulationPoint) Describes whether this instance contains public bool Contains(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool Contains(DtSweepConstraint) Describes whether this instance contains public bool Contains(DtSweepConstraint e) Parameters e DtSweepConstraint The Returns bool The bool Contains(TriangulationPoint, TriangulationPoint) Describes whether this instance contains public bool Contains(TriangulationPoint p, TriangulationPoint q) Parameters p TriangulationPoint The q TriangulationPoint The Returns bool The bool EdgeIndex(TriangulationPoint, TriangulationPoint) Get the index of the neighbor that shares this edge (or -1 if it isn't shared) public int EdgeIndex(TriangulationPoint p1, TriangulationPoint p2) Parameters p1 TriangulationPoint p2 TriangulationPoint Returns int index of the shared edge or -1 if edge isn't shared GetConstrainedEdgeAcross(TriangulationPoint) Describes whether this instance get constrained edge across public bool GetConstrainedEdgeAcross(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool GetConstrainedEdgeCCW(TriangulationPoint) Describes whether this instance get constrained edge ccw public bool GetConstrainedEdgeCCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool GetConstrainedEdgeCW(TriangulationPoint) Describes whether this instance get constrained edge cw public bool GetConstrainedEdgeCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool GetDelaunayEdgeAcross(TriangulationPoint) Describes whether this instance get delaunay edge across public bool GetDelaunayEdgeAcross(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool GetDelaunayEdgeCCW(TriangulationPoint) Describes whether this instance get delaunay edge ccw public bool GetDelaunayEdgeCCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool GetDelaunayEdgeCW(TriangulationPoint) Describes whether this instance get delaunay edge cw public bool GetDelaunayEdgeCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns bool The bool IndexCCW(TriangulationPoint) Indexes the ccw using the specified p public int IndexCCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns int The int IndexCW(TriangulationPoint) Indexes the cw using the specified p public int IndexCW(TriangulationPoint p) Parameters p TriangulationPoint The Returns int The int IndexOf(TriangulationPoint) Indexes the of using the specified p public int IndexOf(TriangulationPoint p) Parameters p TriangulationPoint The Returns int The Exceptions Exception Calling index with a point that doesn't exist in triangle Legalize(TriangulationPoint, TriangulationPoint) Legalize triangle by rotating clockwise around oPoint public void Legalize(TriangulationPoint oPoint, TriangulationPoint nPoint) Parameters oPoint TriangulationPoint The origin point to rotate around nPoint TriangulationPoint ??? MarkConstrainedEdge(int) Marks the constrained edge using the specified index public void MarkConstrainedEdge(int index) Parameters index int The index MarkConstrainedEdge(DtSweepConstraint) Marks the constrained edge using the specified edge public void MarkConstrainedEdge(DtSweepConstraint edge) Parameters edge DtSweepConstraint The edge MarkConstrainedEdge(TriangulationPoint, TriangulationPoint) Mark edge as constrained public void MarkConstrainedEdge(TriangulationPoint p, TriangulationPoint q) Parameters p TriangulationPoint q TriangulationPoint MarkEdge(DelaunayTriangle) Marks the edge using the specified triangle public void MarkEdge(DelaunayTriangle triangle) Parameters triangle DelaunayTriangle The triangle MarkEdge(List<DelaunayTriangle>) Marks the edge using the specified t list public void MarkEdge(List<DelaunayTriangle> tList) Parameters tList List<DelaunayTriangle> The list MarkNeighbor(TriangulationPoint, TriangulationPoint, DelaunayTriangle) Update neighbor pointers private void MarkNeighbor(TriangulationPoint p1, TriangulationPoint p2, DelaunayTriangle t) Parameters p1 TriangulationPoint Point 1 of the shared edge p2 TriangulationPoint Point 2 of the shared edge t DelaunayTriangle This triangle's new neighbor MarkNeighbor(DelaunayTriangle) Exhaustive search to update neighbor pointers public void MarkNeighbor(DelaunayTriangle t) Parameters t DelaunayTriangle MarkNeighborEdges() Finalize edge marking public void MarkNeighborEdges() NeighborAcross(TriangulationPoint) Neighbors the across using the specified point public DelaunayTriangle NeighborAcross(TriangulationPoint point) Parameters point TriangulationPoint The point Returns DelaunayTriangle The delaunay triangle NeighborCCW(TriangulationPoint) Neighbors the ccw using the specified point public DelaunayTriangle NeighborCCW(TriangulationPoint point) Parameters point TriangulationPoint The point Returns DelaunayTriangle The delaunay triangle NeighborCW(TriangulationPoint) Neighbors the cw using the specified point public DelaunayTriangle NeighborCW(TriangulationPoint point) Parameters point TriangulationPoint The point Returns DelaunayTriangle The delaunay triangle OppositePoint(DelaunayTriangle, TriangulationPoint) public TriangulationPoint OppositePoint(DelaunayTriangle t, TriangulationPoint p) Parameters t DelaunayTriangle Opposite triangle p TriangulationPoint The point in t that isn't shared between the triangles Returns TriangulationPoint PointCCW(TriangulationPoint) Points the ccw using the specified point public TriangulationPoint PointCCW(TriangulationPoint point) Parameters point TriangulationPoint The point Returns TriangulationPoint The triangulation point PointCW(TriangulationPoint) Points the cw using the specified point public TriangulationPoint PointCW(TriangulationPoint point) Parameters point TriangulationPoint The point Returns TriangulationPoint The triangulation point RotateCW() Rotates the cw private void RotateCW() SetConstrainedEdgeAcross(TriangulationPoint, bool) Sets the constrained edge across using the specified p public void SetConstrainedEdgeAcross(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce SetConstrainedEdgeCCW(TriangulationPoint, bool) Sets the constrained edge ccw using the specified p public void SetConstrainedEdgeCCW(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce SetConstrainedEdgeCW(TriangulationPoint, bool) Sets the constrained edge cw using the specified p public void SetConstrainedEdgeCW(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce SetDelaunayEdgeAcross(TriangulationPoint, bool) Sets the delaunay edge across using the specified p public void SetDelaunayEdgeAcross(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce SetDelaunayEdgeCCW(TriangulationPoint, bool) Sets the delaunay edge ccw using the specified p public void SetDelaunayEdgeCCW(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce SetDelaunayEdgeCW(TriangulationPoint, bool) Sets the delaunay edge cw using the specified p public void SetDelaunayEdgeCW(TriangulationPoint p, bool ce) Parameters p TriangulationPoint The ce bool The ce ToString() Returns the string public override string ToString() Returns string The string"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AdvancingFront Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The advancing front class internal class AdvancingFront Inheritance object AdvancingFront Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AdvancingFront(AdvancingFrontNode, AdvancingFrontNode) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFront class public AdvancingFront(AdvancingFrontNode head, AdvancingFrontNode tail) Parameters head AdvancingFrontNode The head tail AdvancingFrontNode The tail Fields Head The head public AdvancingFrontNode Head Field Value AdvancingFrontNode Search The search protected AdvancingFrontNode Search Field Value AdvancingFrontNode Tail The tail public AdvancingFrontNode Tail Field Value AdvancingFrontNode Methods AddNode(AdvancingFrontNode) Adds the node using the specified node public void AddNode(AdvancingFrontNode node) Parameters node AdvancingFrontNode The node FindSearchNode(double) MM: This seems to be used by LocateNode to guess a position in the implicit linked list of AdvancingFrontNodes near x Removed an overload that depended on this being exact private AdvancingFrontNode FindSearchNode(double x) Parameters x double Returns AdvancingFrontNode LocateNode(TriangulationPoint) We use a balancing tree to locate a node smaller or equal to given key value public AdvancingFrontNode LocateNode(TriangulationPoint point) Parameters point TriangulationPoint Returns AdvancingFrontNode LocateNode(double) Locates the node using the specified x private AdvancingFrontNode LocateNode(double x) Parameters x double The Returns AdvancingFrontNode The advancing front node LocatePoint(TriangulationPoint) This implementation will use simple node traversal algorithm to find a point on the front public AdvancingFrontNode LocatePoint(TriangulationPoint point) Parameters point TriangulationPoint Returns AdvancingFrontNode RemoveNode(AdvancingFrontNode) Removes the node using the specified node public void RemoveNode(AdvancingFrontNode node) Parameters node AdvancingFrontNode The node ToString() Returns the string public override string ToString() Returns string The string"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AdvancingFrontNode Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The advancing front node class internal class AdvancingFrontNode Inheritance object AdvancingFrontNode Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AdvancingFrontNode(TriangulationPoint) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.AdvancingFrontNode class public AdvancingFrontNode(TriangulationPoint point) Parameters point TriangulationPoint The point Fields Next The next public AdvancingFrontNode Next Field Value AdvancingFrontNode Point The point public TriangulationPoint Point Field Value TriangulationPoint Prev The prev public AdvancingFrontNode Prev Field Value AdvancingFrontNode Triangle The triangle public DelaunayTriangle Triangle Field Value DelaunayTriangle Value The value public double Value Field Value double Properties HasNext Gets the value of the has next public bool HasNext { get; } Property Value bool HasPrev Gets the value of the has prev public bool HasPrev { get; } Property Value bool"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepBasin.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepBasin.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DTSweepContext.DTSweepBasin Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep basin class public class DTSweepContext.DTSweepBasin Inheritance object DTSweepContext.DTSweepBasin Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields bottomNode The bottom node public AdvancingFrontNode bottomNode Field Value AdvancingFrontNode leftHighest The left highest public bool leftHighest Field Value bool leftNode The left node public AdvancingFrontNode leftNode Field Value AdvancingFrontNode rightNode The right node public AdvancingFrontNode rightNode Field Value AdvancingFrontNode width The width public double width Field Value double"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepEdgeEvent.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.DTSweepEdgeEvent.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DTSweepContext.DTSweepEdgeEvent Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep edge event class public class DTSweepContext.DTSweepEdgeEvent Inheritance object DTSweepContext.DTSweepEdgeEvent Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ConstrainedEdge The constrained edge public DtSweepConstraint ConstrainedEdge Field Value DtSweepConstraint Right The right public bool Right Field Value bool"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DTSweepContext Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep context class internal class DTSweepContext : TriangulationContext Inheritance object TriangulationContext DTSweepContext Inherited Members TriangulationContext.Points TriangulationContext.Triangles TriangulationContext.TriangulationMode TriangulationContext.Triangulatable TriangulationContext.WaitUntilNotified TriangulationContext.Terminated TriangulationContext.StepCount TriangulationContext.Done() TriangulationContext.PrepareTriangulation(Triangulatable) TriangulationContext.NewConstraint(TriangulationPoint, TriangulationPoint) TriangulationContext.Clear() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors DTSweepContext() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepContext class public DTSweepContext() Fields ALPHA The alpha private const float ALPHA = 0.3 Field Value float Basin The dt sweep basin public DTSweepContext.DTSweepBasin Basin Field Value DTSweepContext.DTSweepBasin EdgeEvent The dt sweep edge event public DTSweepContext.DTSweepEdgeEvent EdgeEvent Field Value DTSweepContext.DTSweepEdgeEvent _comparator The dt sweep point comparator private readonly DTSweepPointComparator _comparator Field Value DTSweepPointComparator aFront The front public AdvancingFront aFront Field Value AdvancingFront Properties Head Gets or sets the value of the head public TriangulationPoint Head { get; set; } Property Value TriangulationPoint Tail Gets or sets the value of the tail public TriangulationPoint Tail { get; set; } Property Value TriangulationPoint Methods AddNode(AdvancingFrontNode) Adds the node using the specified node public void AddNode(AdvancingFrontNode node) Parameters node AdvancingFrontNode The node Clear() Clears this instance public override void Clear() CreateAdvancingFront() Creates the advancing front public void CreateAdvancingFront() FinalizeTriangulation() Finalizes the triangulation public void FinalizeTriangulation() LocateNode(TriangulationPoint) Locates the node using the specified point public AdvancingFrontNode LocateNode(TriangulationPoint point) Parameters point TriangulationPoint The point Returns AdvancingFrontNode The advancing front node MapTriangleToNodes(DelaunayTriangle) Try to map a node to all sides of this triangle that don't have a neighbor. public void MapTriangleToNodes(DelaunayTriangle t) Parameters t DelaunayTriangle MeshClean(DelaunayTriangle) Meshes the clean using the specified triangle public void MeshClean(DelaunayTriangle triangle) Parameters triangle DelaunayTriangle The triangle MeshCleanReq(DelaunayTriangle) Meshes the clean req using the specified triangle private void MeshCleanReq(DelaunayTriangle triangle) Parameters triangle DelaunayTriangle The triangle NewConstraint(TriangulationPoint, TriangulationPoint) News the constraint using the specified a public override TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b) Parameters a TriangulationPoint The b TriangulationPoint The Returns TriangulationConstraint The triangulation constraint PrepareTriangulation(Triangulatable) Prepares the triangulation using the specified t public override void PrepareTriangulation(Triangulatable t) Parameters t Triangulatable The RemoveFromList(DelaunayTriangle) Removes the from list using the specified triangle public void RemoveFromList(DelaunayTriangle triangle) Parameters triangle DelaunayTriangle The triangle RemoveNode(AdvancingFrontNode) Removes the node using the specified node public void RemoveNode(AdvancingFrontNode node) Parameters node AdvancingFrontNode The node See Also TriangulationContext"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepPointComparator.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DTSweepPointComparator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DTSweepPointComparator Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep point comparator class internal class DTSweepPointComparator : IComparer<TriangulationPoint> Inheritance object DTSweepPointComparator Implements IComparer<TriangulationPoint> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Compare(TriangulationPoint, TriangulationPoint) Compares the p 1 public int Compare(TriangulationPoint p1, TriangulationPoint p2) Parameters p1 TriangulationPoint The p2 TriangulationPoint The Returns int The int See Also IComparer<T>"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweep.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweep.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DtSweep Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep class internal static class DtSweep Inheritance object DtSweep Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields Pi3Div4 The pi private const double Pi3Div4 = 2.356194490192345 Field Value double PiDiv2 The pi private const double PiDiv2 = 1.5707963267948966 Field Value double Methods Angle(TriangulationPoint, TriangulationPoint, TriangulationPoint) Angles the origin private static double Angle(TriangulationPoint origin, TriangulationPoint pa, TriangulationPoint pb) Parameters origin TriangulationPoint The origin pa TriangulationPoint The pa pb TriangulationPoint The pb Returns double The angle AngleExceeds90Degrees(TriangulationPoint, TriangulationPoint, TriangulationPoint) Describes whether angle exceeds 90 degrees private static bool AngleExceeds90Degrees(TriangulationPoint origin, TriangulationPoint pa, TriangulationPoint pb) Parameters origin TriangulationPoint The origin pa TriangulationPoint The pa pb TriangulationPoint The pb Returns bool The exceeds 90 degrees AngleExceedsPlus90DegreesOrIsNegative(TriangulationPoint, TriangulationPoint, TriangulationPoint) Describes whether angle exceeds plus 90 degrees or is negative private static bool AngleExceedsPlus90DegreesOrIsNegative(TriangulationPoint origin, TriangulationPoint pa, TriangulationPoint pb) Parameters origin TriangulationPoint The origin pa TriangulationPoint The pa pb TriangulationPoint The pb Returns bool The exceeds plus 90 degrees or is negative BasinAngle(AdvancingFrontNode) The basin angle is decided against the horizontal line [1,0] private static double BasinAngle(AdvancingFrontNode node) Parameters node AdvancingFrontNode Returns double EdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Edges the event using the specified tcx private static void EdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node EdgeEvent(DTSweepContext, TriangulationPoint, TriangulationPoint, DelaunayTriangle, TriangulationPoint) Edges the event using the specified tcx private static void EdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle triangle, TriangulationPoint point) Parameters tcx DTSweepContext The tcx ep TriangulationPoint The ep eq TriangulationPoint The eq triangle DelaunayTriangle The triangle point TriangulationPoint The point Exceptions PointOnEdgeException EdgeEvent - Point on constrained edge not supported yet PointOnEdgeException EdgeEvent - Point on constrained edge not supported yet Fill(DTSweepContext, AdvancingFrontNode) Adds a triangle to the advancing front to fill a hole. private static void Fill(DTSweepContext tcx, AdvancingFrontNode node) Parameters tcx DTSweepContext node AdvancingFrontNode middle node, that is the bottom of the hole FillAdvancingFront(DTSweepContext, AdvancingFrontNode) Fills holes in the Advancing Front private static void FillAdvancingFront(DTSweepContext tcx, AdvancingFrontNode n) Parameters tcx DTSweepContext n AdvancingFrontNode FillBasin(DTSweepContext, AdvancingFrontNode) Fills a basin that has formed on the Advancing Front to the right of given node. First we decide a left,bottom and right node that forms the boundaries of the basin. Then we do a reqursive fill. private static void FillBasin(DTSweepContext tcx, AdvancingFrontNode node) Parameters tcx DTSweepContext node AdvancingFrontNode starting node, this or next node will be left node FillBasinReq(DTSweepContext, AdvancingFrontNode) Recursive algorithm to fill a Basin with triangles private static void FillBasinReq(DTSweepContext tcx, AdvancingFrontNode node) Parameters tcx DTSweepContext node AdvancingFrontNode FillEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the edge event using the specified tcx private static void FillEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillLeftAboveEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the left above edge event using the specified tcx private static void FillLeftAboveEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillLeftBelowEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the left below edge event using the specified tcx private static void FillLeftBelowEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillLeftConcaveEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the left concave edge event using the specified tcx private static void FillLeftConcaveEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillLeftConvexEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the left convex edge event using the specified tcx private static void FillLeftConvexEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillRightAboveEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the right above edge event using the specified tcx private static void FillRightAboveEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillRightBelowEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the right below edge event using the specified tcx private static void FillRightBelowEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillRightConcaveEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the right concave edge event using the specified tcx private static void FillRightConcaveEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FillRightConvexEdgeEvent(DTSweepContext, DtSweepConstraint, AdvancingFrontNode) Fills the right convex edge event using the specified tcx private static void FillRightConvexEdgeEvent(DTSweepContext tcx, DtSweepConstraint edge, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx edge DtSweepConstraint The edge node AdvancingFrontNode The node FinalizationConvexHull(DTSweepContext) If this is a Delaunay Triangulation of a pointset we need to fill so the triangle mesh gets a ConvexHull private static void FinalizationConvexHull(DTSweepContext tcx) Parameters tcx DTSweepContext FinalizationPolygon(DTSweepContext) Finalizations the polygon using the specified tcx private static void FinalizationPolygon(DTSweepContext tcx) Parameters tcx DTSweepContext The tcx FlipEdgeEvent(DTSweepContext, TriangulationPoint, TriangulationPoint, DelaunayTriangle, TriangulationPoint) Flips the edge event using the specified tcx private static void FlipEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle t, TriangulationPoint p) Parameters tcx DTSweepContext The tcx ep TriangulationPoint The ep eq TriangulationPoint The eq t DelaunayTriangle The p TriangulationPoint The Exceptions Exception Intersecting Constraints InvalidOperationException [BUG:FIXME] FLIP failed due to missing triangle FlipScanEdgeEvent(DTSweepContext, TriangulationPoint, TriangulationPoint, DelaunayTriangle, DelaunayTriangle, TriangulationPoint) Scan part of the FlipScan algorithm When a triangle pair isn't flippable we will scan for the next point that is inside the flip triangle scan area. When found we generate a new flipEdgeEvent private static void FlipScanEdgeEvent(DTSweepContext tcx, TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle flipTriangle, DelaunayTriangle t, TriangulationPoint p) Parameters tcx DTSweepContext ep TriangulationPoint last point on the edge we are traversing eq TriangulationPoint first point on the edge we are traversing flipTriangle DelaunayTriangle the current triangle sharing the point eq with edge t DelaunayTriangle p TriangulationPoint HoleAngle(AdvancingFrontNode) ??? private static double HoleAngle(AdvancingFrontNode node) Parameters node AdvancingFrontNode middle node Returns double the angle between 3 front nodes IsEdgeSideOfTriangle(DelaunayTriangle, TriangulationPoint, TriangulationPoint) Describes whether is edge side of triangle private static bool IsEdgeSideOfTriangle(DelaunayTriangle triangle, TriangulationPoint ep, TriangulationPoint eq) Parameters triangle DelaunayTriangle The triangle ep TriangulationPoint The ep eq TriangulationPoint The eq Returns bool The bool IsShallow(DTSweepContext, AdvancingFrontNode) Describes whether is shallow private static bool IsShallow(DTSweepContext tcx, AdvancingFrontNode node) Parameters tcx DTSweepContext The tcx node AdvancingFrontNode The node Returns bool The bool LargeHole_DontFill(AdvancingFrontNode) Describes whether large hole dont fill private static bool LargeHole_DontFill(AdvancingFrontNode node) Parameters node AdvancingFrontNode The node Returns bool The bool Legalize(DTSweepContext, DelaunayTriangle) Returns true if triangle was legalized private static bool Legalize(DTSweepContext tcx, DelaunayTriangle t) Parameters tcx DTSweepContext t DelaunayTriangle Returns bool NewFrontTriangle(DTSweepContext, TriangulationPoint, AdvancingFrontNode) Creates a new front triangle and legalize it private static AdvancingFrontNode NewFrontTriangle(DTSweepContext tcx, TriangulationPoint point, AdvancingFrontNode node) Parameters tcx DTSweepContext point TriangulationPoint node AdvancingFrontNode Returns AdvancingFrontNode NextFlipPoint(TriangulationPoint, TriangulationPoint, DelaunayTriangle, TriangulationPoint) When we need to traverse from one triangle to the next we need the point in current triangle that is the opposite point to the next triangle. private static TriangulationPoint NextFlipPoint(TriangulationPoint ep, TriangulationPoint eq, DelaunayTriangle ot, TriangulationPoint op) Parameters ep TriangulationPoint eq TriangulationPoint ot DelaunayTriangle op TriangulationPoint Returns TriangulationPoint NextFlipTriangle(DTSweepContext, Orientation, DelaunayTriangle, DelaunayTriangle, TriangulationPoint, TriangulationPoint) After a flip we have two triangles and know that only one will still be intersecting the edge. So decide which to contiune with and legalize the other private static DelaunayTriangle NextFlipTriangle(DTSweepContext tcx, Orientation o, DelaunayTriangle t, DelaunayTriangle ot, TriangulationPoint p, TriangulationPoint op) Parameters tcx DTSweepContext o Orientation should be the result of an TriangulationUtil.orient2d( eq, op, ep ) t DelaunayTriangle triangle 1 ot DelaunayTriangle triangle 2 p TriangulationPoint a point shared by both triangles op TriangulationPoint another point shared by both triangles Returns DelaunayTriangle returns the triangle still intersecting the edge PointEvent(DTSweepContext, TriangulationPoint) Find closes node to the left of the new point and create a new triangle. If needed new holes and basins will be filled to. private static AdvancingFrontNode PointEvent(DTSweepContext tcx, TriangulationPoint point) Parameters tcx DTSweepContext point TriangulationPoint Returns AdvancingFrontNode RotateTrianglePair(DelaunayTriangle, TriangulationPoint, DelaunayTriangle, TriangulationPoint) Rotates a triangle pair one vertex CW n2 n2 P +-----+ P +-----+ | t /| |\\ t | | / | | \\ | n1| / |n3 n1| \\ |n3 | / | after CW | \\ | |/ oT | | oT | +-----+ oP +-----+ n4 n4 private static void RotateTrianglePair(DelaunayTriangle t, TriangulationPoint p, DelaunayTriangle ot, TriangulationPoint op) Parameters t DelaunayTriangle p TriangulationPoint ot DelaunayTriangle op TriangulationPoint Sweep(DTSweepContext) Start sweeping the Y-sorted point set from bottom to top private static void Sweep(DTSweepContext tcx) Parameters tcx DTSweepContext Triangulate(DTSweepContext) Triangulate simple polygon with holes public static void Triangulate(DTSweepContext tcx) Parameters tcx DTSweepContext TurnAdvancingFrontConvex(DTSweepContext, AdvancingFrontNode, AdvancingFrontNode) We will traverse the entire advancing front and fill it to form a convex hull. private static void TurnAdvancingFrontConvex(DTSweepContext tcx, AdvancingFrontNode b, AdvancingFrontNode c) Parameters tcx DTSweepContext b AdvancingFrontNode c AdvancingFrontNode"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.DtSweepConstraint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DtSweepConstraint Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The dt sweep constraint class internal class DtSweepConstraint : TriangulationConstraint Inheritance object TriangulationConstraint DtSweepConstraint Inherited Members TriangulationConstraint.P TriangulationConstraint.Q object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors DtSweepConstraint(TriangulationPoint, TriangulationPoint) Give two points in any order. Will always be ordered so that q.y > p.y and q.x > p.x if same y value public DtSweepConstraint(TriangulationPoint p1, TriangulationPoint p2) Parameters p1 TriangulationPoint p2 TriangulationPoint See Also TriangulationConstraint"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.PointOnEdgeException.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.PointOnEdgeException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PointOnEdgeException Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Assembly Alis.dll The point on edge exception class internal class PointOnEdgeException : NotImplementedException, ISerializable Inheritance object Exception SystemException NotImplementedException PointOnEdgeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PointOnEdgeException(string) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.PointOnEdgeException class public PointOnEdgeException(string message) Parameters message string The message See Also NotImplementedException"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Classes AdvancingFront The advancing front class AdvancingFrontNode The advancing front node class DTSweepContext.DTSweepBasin The dt sweep basin class DTSweepContext The dt sweep context class DTSweepContext.DTSweepEdgeEvent The dt sweep edge event class DTSweepPointComparator The dt sweep point comparator class DtSweep The dt sweep class DtSweepConstraint The dt sweep constraint class PointOnEdgeException The point on edge exception class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT.Delaunay Namespaces Alis.Core.Physic.Common.Decomposition.CDT.Delaunay.Sweep Classes DelaunayTriangle The delaunay triangle class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Orientation.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Orientation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Orientation Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The orientation enum internal enum Orientation Fields CW = 0 The cw orientation CCW = 1 The ccw orientation Collinear = 2 The collinear orientation"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.Polygon.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.Polygon.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Polygon Namespace Alis.Core.Physic.Common.Decomposition.CDT.Polygon Assembly Alis.dll The polygon class internal class Polygon : Triangulatable Inheritance object Polygon Implements Triangulatable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Polygon(IList<PolygonPoint>) Create a polygon from a list of at least 3 points with no duplicates. public Polygon(IList<PolygonPoint> points) Parameters points IList<PolygonPoint> A list of unique points Polygon(IEnumerable<PolygonPoint>) Create a polygon from a list of at least 3 points with no duplicates. public Polygon(IEnumerable<PolygonPoint> points) Parameters points IEnumerable<PolygonPoint> A list of unique points. Polygon() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Polygon.Polygon class public Polygon() Fields _holes The holes protected List<Polygon> _holes Field Value List<Polygon> _last The last protected PolygonPoint _last Field Value PolygonPoint _points The triangulation point protected List<TriangulationPoint> _points Field Value List<TriangulationPoint> _steinerPoints The steiner points protected List<TriangulationPoint> _steinerPoints Field Value List<TriangulationPoint> _triangles The triangles protected List<DelaunayTriangle> _triangles Field Value List<DelaunayTriangle> Properties Holes Gets the value of the holes public IList<Polygon> Holes { get; } Property Value IList<Polygon> Points Gets the value of the points public IList<TriangulationPoint> Points { get; } Property Value IList<TriangulationPoint> Triangles Gets the value of the triangles public IList<DelaunayTriangle> Triangles { get; } Property Value IList<DelaunayTriangle> TriangulationMode Gets the value of the triangulation mode public TriangulationMode TriangulationMode { get; } Property Value TriangulationMode Methods AddHole(Polygon) Add a hole to the polygon. public void AddHole(Polygon poly) Parameters poly Polygon A subtraction polygon fully contained inside this polygon. AddPoint(PolygonPoint) Adds a point after the last in the polygon. public void AddPoint(PolygonPoint p) Parameters p PolygonPoint The point to add AddPoints(IEnumerable<PolygonPoint>) Inserts list (after last point in polygon?) public void AddPoints(IEnumerable<PolygonPoint> list) Parameters list IEnumerable<PolygonPoint> AddSteinerPoint(TriangulationPoint) Adds the steiner point using the specified point public void AddSteinerPoint(TriangulationPoint point) Parameters point TriangulationPoint The point AddSteinerPoints(List<TriangulationPoint>) Adds the steiner points using the specified points public void AddSteinerPoints(List<TriangulationPoint> points) Parameters points List<TriangulationPoint> The points AddTriangle(DelaunayTriangle) Adds the triangle using the specified t public void AddTriangle(DelaunayTriangle t) Parameters t DelaunayTriangle The AddTriangles(IEnumerable<DelaunayTriangle>) Adds the triangles using the specified list public void AddTriangles(IEnumerable<DelaunayTriangle> list) Parameters list IEnumerable<DelaunayTriangle> The list ClearSteinerPoints() Clears the steiner points public void ClearSteinerPoints() ClearTriangles() Clears the triangles public void ClearTriangles() InsertPointAfter(PolygonPoint, PolygonPoint) Inserts newPoint after point. public void InsertPointAfter(PolygonPoint point, PolygonPoint newPoint) Parameters point PolygonPoint The point to insert after in the polygon newPoint PolygonPoint The point to insert into the polygon PrepareTriangulation(TriangulationContext) Creates constraints and populates the context with points public void PrepareTriangulation(TriangulationContext tcx) Parameters tcx TriangulationContext The context RemovePoint(PolygonPoint) Removes a point from the polygon. public void RemovePoint(PolygonPoint p) Parameters p PolygonPoint See Also Triangulatable"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonPoint.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonPoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PolygonPoint Namespace Alis.Core.Physic.Common.Decomposition.CDT.Polygon Assembly Alis.dll The polygon point class internal class PolygonPoint : TriangulationPoint Inheritance object TriangulationPoint PolygonPoint Inherited Members TriangulationPoint.X TriangulationPoint.Y TriangulationPoint.Edges TriangulationPoint.Xf TriangulationPoint.Yf TriangulationPoint.HasEdges TriangulationPoint.ToString() TriangulationPoint.AddEdge(DtSweepConstraint) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PolygonPoint(double, double) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonPoint class public PolygonPoint(double x, double y) Parameters x double The y double The Properties Next Gets or sets the value of the next public PolygonPoint Next { get; set; } Property Value PolygonPoint Previous Gets or sets the value of the previous public PolygonPoint Previous { get; set; } Property Value PolygonPoint See Also TriangulationPoint"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonSet.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonSet.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PolygonSet Namespace Alis.Core.Physic.Common.Decomposition.CDT.Polygon Assembly Alis.dll The polygon set class internal class PolygonSet Inheritance object PolygonSet Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PolygonSet() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonSet class public PolygonSet() PolygonSet(Polygon) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Polygon.PolygonSet class public PolygonSet(Polygon poly) Parameters poly Polygon The poly Fields _polygons The polygon protected List<Polygon> _polygons Field Value List<Polygon> Properties Polygons Gets the value of the polygons public IEnumerable<Polygon> Polygons { get; } Property Value IEnumerable<Polygon> Methods Add(Polygon) Adds the p public void Add(Polygon p) Parameters p Polygon The"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Polygon.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT.Polygon Classes Polygon The polygon class PolygonPoint The polygon point class PolygonSet The polygon set class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.ConstrainedPointSet.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.ConstrainedPointSet.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ConstrainedPointSet Namespace Alis.Core.Physic.Common.Decomposition.CDT.Sets Assembly Alis.dll The constrained point set class internal class ConstrainedPointSet : PointSet, Triangulatable Inheritance object PointSet ConstrainedPointSet Implements Triangulatable Inherited Members PointSet.Points PointSet.Triangles PointSet.TriangulationMode PointSet.AddTriangle(DelaunayTriangle) PointSet.AddTriangles(IEnumerable<DelaunayTriangle>) PointSet.ClearTriangles() PointSet.PrepareTriangulation(TriangulationContext) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ConstrainedPointSet(List<TriangulationPoint>, int[]) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Sets.ConstrainedPointSet class public ConstrainedPointSet(List<TriangulationPoint> points, int[] index) Parameters points List<TriangulationPoint> The points index int[] The index ConstrainedPointSet(List<TriangulationPoint>, IEnumerable<TriangulationPoint>) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Sets.ConstrainedPointSet class public ConstrainedPointSet(List<TriangulationPoint> points, IEnumerable<TriangulationPoint> constraints) Parameters points List<TriangulationPoint> The points constraints IEnumerable<TriangulationPoint> The constraints Fields _constrainedPointList The constrained point list private readonly List<TriangulationPoint> _constrainedPointList Field Value List<TriangulationPoint> Properties EdgeIndex Gets the value of the edge index public int[] EdgeIndex { get; } Property Value int[] TriangulationMode Gets the value of the triangulation mode public override TriangulationMode TriangulationMode { get; } Property Value TriangulationMode Methods PrepareTriangulation(TriangulationContext) Prepares the triangulation using the specified tcx public override void PrepareTriangulation(TriangulationContext tcx) Parameters tcx TriangulationContext The tcx isValid() Describes whether this instance is valid public bool isValid() Returns bool The bool See Also PointSet"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.PointSet.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.PointSet.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PointSet Namespace Alis.Core.Physic.Common.Decomposition.CDT.Sets Assembly Alis.dll The point set class internal class PointSet : Triangulatable Inheritance object PointSet Derived ConstrainedPointSet Implements Triangulatable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PointSet(List<TriangulationPoint>) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.Sets.PointSet class public PointSet(List<TriangulationPoint> points) Parameters points List<TriangulationPoint> The points Properties Points Gets the value of the points public IList<TriangulationPoint> Points { get; } Property Value IList<TriangulationPoint> Triangles Gets or sets the value of the triangles public IList<DelaunayTriangle> Triangles { get; private set; } Property Value IList<DelaunayTriangle> TriangulationMode Gets the value of the triangulation mode public virtual TriangulationMode TriangulationMode { get; } Property Value TriangulationMode Methods AddTriangle(DelaunayTriangle) Adds the triangle using the specified t public void AddTriangle(DelaunayTriangle t) Parameters t DelaunayTriangle The AddTriangles(IEnumerable<DelaunayTriangle>) Adds the triangles using the specified list public void AddTriangles(IEnumerable<DelaunayTriangle> list) Parameters list IEnumerable<DelaunayTriangle> The list ClearTriangles() Clears the triangles public void ClearTriangles() PrepareTriangulation(TriangulationContext) Prepares the triangulation using the specified tcx public virtual void PrepareTriangulation(TriangulationContext tcx) Parameters tcx TriangulationContext The tcx See Also Triangulatable"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Sets.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT.Sets Classes ConstrainedPointSet The constrained point set class PointSet The point set class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Triangulatable.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Triangulatable.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Interface Triangulatable Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulatable interface internal interface Triangulatable Properties Points Gets the value of the points IList<TriangulationPoint> Points { get; } Property Value IList<TriangulationPoint> Triangles Gets the value of the triangles IList<DelaunayTriangle> Triangles { get; } Property Value IList<DelaunayTriangle> TriangulationMode Gets the value of the triangulation mode TriangulationMode TriangulationMode { get; } Property Value TriangulationMode Methods AddTriangle(DelaunayTriangle) Adds the triangle using the specified t void AddTriangle(DelaunayTriangle t) Parameters t DelaunayTriangle The AddTriangles(IEnumerable<DelaunayTriangle>) Adds the triangles using the specified list void AddTriangles(IEnumerable<DelaunayTriangle> list) Parameters list IEnumerable<DelaunayTriangle> The list ClearTriangles() Clears the triangles void ClearTriangles() PrepareTriangulation(TriangulationContext) Prepares the triangulation using the specified tcx void PrepareTriangulation(TriangulationContext tcx) Parameters tcx TriangulationContext The tcx"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationConstraint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TriangulationConstraint Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulation constraint class internal class TriangulationConstraint Inheritance object TriangulationConstraint Derived DtSweepConstraint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields P The public TriangulationPoint P Field Value TriangulationPoint Q The public TriangulationPoint Q Field Value TriangulationPoint"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationContext.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationContext.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TriangulationContext Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulation context class internal abstract class TriangulationContext Inheritance object TriangulationContext Derived DTSweepContext Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors TriangulationContext() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.TriangulationContext class public TriangulationContext() Fields Points The triangulation point public readonly List<TriangulationPoint> Points Field Value List<TriangulationPoint> Triangles The delaunay triangle public readonly List<DelaunayTriangle> Triangles Field Value List<DelaunayTriangle> Properties StepCount Gets or sets the value of the step count public int StepCount { get; private set; } Property Value int Terminated Gets or sets the value of the terminated public bool Terminated { get; set; } Property Value bool Triangulatable Gets or sets the value of the triangulatable public Triangulatable Triangulatable { get; private set; } Property Value Triangulatable TriangulationMode Gets or sets the value of the triangulation mode public TriangulationMode TriangulationMode { get; protected set; } Property Value TriangulationMode WaitUntilNotified Gets the value of the wait until notified public bool WaitUntilNotified { get; } Property Value bool Methods Clear() Clears this instance public virtual void Clear() Done() Dones this instance public void Done() NewConstraint(TriangulationPoint, TriangulationPoint) News the constraint using the specified a public abstract TriangulationConstraint NewConstraint(TriangulationPoint a, TriangulationPoint b) Parameters a TriangulationPoint The b TriangulationPoint The Returns TriangulationConstraint The triangulation constraint PrepareTriangulation(Triangulatable) Prepares the triangulation using the specified t public virtual void PrepareTriangulation(Triangulatable t) Parameters t Triangulatable The"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationMode.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationMode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TriangulationMode Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulation mode enum internal enum TriangulationMode Fields Unconstrained = 0 The unconstrained triangulation mode Constrained = 1 The constrained triangulation mode Polygon = 2 The polygon triangulation mode"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TriangulationPoint Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulation point class internal class TriangulationPoint Inheritance object TriangulationPoint Derived PolygonPoint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors TriangulationPoint(double, double) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.CDT.TriangulationPoint class public TriangulationPoint(double x, double y) Parameters x double The y double The Fields X The public double X Field Value double Y The public double Y Field Value double Properties Edges Gets or sets the value of the edges public List<DtSweepConstraint> Edges { get; private set; } Property Value List<DtSweepConstraint> HasEdges Gets the value of the has edges public bool HasEdges { get; } Property Value bool Xf Gets or sets the value of the xf public float Xf { get; set; } Property Value float Yf Gets or sets the value of the yf public float Yf { get; set; } Property Value float Methods AddEdge(DtSweepConstraint) Adds the edge using the specified e public void AddEdge(DtSweepConstraint e) Parameters e DtSweepConstraint The ToString() Returns the string public override string ToString() Returns string The string"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationUtil.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.TriangulationUtil.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TriangulationUtil Namespace Alis.Core.Physic.Common.Decomposition.CDT Assembly Alis.dll The triangulation util class internal class TriangulationUtil Inheritance object TriangulationUtil Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields EPSILON The epsilon public static double EPSILON Field Value double Methods InScanArea(TriangulationPoint, TriangulationPoint, TriangulationPoint, TriangulationPoint) Describes whether in scan area public static bool InScanArea(TriangulationPoint pa, TriangulationPoint pb, TriangulationPoint pc, TriangulationPoint pd) Parameters pa TriangulationPoint The pa pb TriangulationPoint The pb pc TriangulationPoint The pc pd TriangulationPoint The pd Returns bool The bool Orient2d(TriangulationPoint, TriangulationPoint, TriangulationPoint) public static Orientation Orient2d(TriangulationPoint pa, TriangulationPoint pb, TriangulationPoint pc) Parameters pa TriangulationPoint pb TriangulationPoint pc TriangulationPoint Returns Orientation SmartIncircle(TriangulationPoint, TriangulationPoint, TriangulationPoint, TriangulationPoint) Requirements: a,b and c form a triangle. a and d is know to be on opposite side of bc a + / \\ / \\ b/ \\c +-------+ / B \\ / \\ Facts: d has to be in area B to have a chance to be inside the circle formed by a,b and c d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW This preknowledge gives us a way to optimize the incircle test public static bool SmartIncircle(TriangulationPoint pa, TriangulationPoint pb, TriangulationPoint pc, TriangulationPoint pd) Parameters pa TriangulationPoint triangle point, opposite d pb TriangulationPoint triangle point pc TriangulationPoint triangle point pd TriangulationPoint point opposite a Returns bool true if d is inside circle, false if on circle edge"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.FixedArray3-1.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.FixedArray3-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedArray3<T> Namespace Alis.Core.Physic.Common.Decomposition.CDT.Util Assembly Alis.dll The fixed array internal struct FixedArray3<T> : IEnumerable<T>, IEnumerable where T : class Type Parameters T Implements IEnumerable<T> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _0 The public T _0 Field Value T _1 The public T _1 Field Value T _2 The public T _2 Field Value T Properties this[int] The index out of range exception public T this[int index] { get; set; } Property Value T Methods Clear() Clears this instance public void Clear() Clear(T) Clears the value public void Clear(T value) Parameters value T The value Contains(T) Describes whether this instance contains public bool Contains(T value) Parameters value T The value Returns bool The bool Enumerate() Enumerates this instance private IEnumerable<T> Enumerate() Returns IEnumerable<T> An enumerable of t GetEnumerator() Gets the enumerator public IEnumerator<T> GetEnumerator() Returns IEnumerator<T> An enumerator of t IndexOf(T) Indexes the of using the specified value public int IndexOf(T value) Parameters value T The value Returns int The int IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.FixedBitArray3.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.FixedBitArray3.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedBitArray3 Namespace Alis.Core.Physic.Common.Decomposition.CDT.Util Assembly Alis.dll The fixed bit array internal struct FixedBitArray3 : IEnumerable<bool>, IEnumerable Implements IEnumerable<bool> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _0 The public bool _0 Field Value bool _1 The public bool _1 Field Value bool _2 The public bool _2 Field Value bool Properties this[int] The index out of range exception public bool this[int index] { get; set; } Property Value bool Methods Clear() Clears this instance public void Clear() Clear(bool) Clears the value public void Clear(bool value) Parameters value bool The value Contains(bool) Describes whether this instance contains public bool Contains(bool value) Parameters value bool The value Returns bool The bool Enumerate() Enumerates this instance private IEnumerable<bool> Enumerate() Returns IEnumerable<bool> An enumerable of bool GetEnumerator() Gets the enumerator public IEnumerator<bool> GetEnumerator() Returns IEnumerator<bool> An enumerator of bool IndexOf(bool) Indexes the of using the specified value public int IndexOf(bool value) Parameters value bool The value Returns int The int IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.PointGenerator.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.PointGenerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PointGenerator Namespace Alis.Core.Physic.Common.Decomposition.CDT.Util Assembly Alis.dll The point generator class internal class PointGenerator Inheritance object PointGenerator Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields RNG The random private static readonly Random RNG Field Value Random Methods UniformDistribution(int, double) Uniforms the distribution using the specified n public static List<TriangulationPoint> UniformDistribution(int n, double scale) Parameters n int The scale double The scale Returns List<TriangulationPoint> The points UniformGrid(int, double) Uniforms the grid using the specified n public static List<TriangulationPoint> UniformGrid(int n, double scale) Parameters n int The scale double The scale Returns List<TriangulationPoint> The points"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.PolygonGenerator.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.PolygonGenerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PolygonGenerator Namespace Alis.Core.Physic.Common.Decomposition.CDT.Util Assembly Alis.dll The polygon generator class internal class PolygonGenerator Inheritance object PolygonGenerator Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields PI_2 The pi private static readonly double PI_2 Field Value double RNG The random private static readonly Random RNG Field Value Random Methods RandomCircleSweep(double, int) Randoms the circle sweep using the specified scale public static Polygon RandomCircleSweep(double scale, int vertexCount) Parameters scale double The scale vertexCount int The vertex count Returns Polygon The polygon polygon RandomCircleSweep2(double, int) Randoms the circle sweep 2 using the specified scale public static Polygon RandomCircleSweep2(double scale, int vertexCount) Parameters scale double The scale vertexCount int The vertex count Returns Polygon The polygon polygon"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.Util.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT.Util Classes PointGenerator The point generator class PolygonGenerator The polygon generator class Structs FixedArray3<T> The fixed array FixedBitArray3 The fixed bit array"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDT.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDT.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.CDT Namespaces Alis.Core.Physic.Common.Decomposition.CDT.Delaunay Alis.Core.Physic.Common.Decomposition.CDT.Polygon Alis.Core.Physic.Common.Decomposition.CDT.Sets Alis.Core.Physic.Common.Decomposition.CDT.Util Classes TriangulationConstraint The triangulation constraint class TriangulationContext The triangulation context class TriangulationPoint The triangulation point class TriangulationUtil The triangulation util class Interfaces Triangulatable The triangulatable interface Enums Orientation The orientation enum TriangulationMode The triangulation mode enum"
  },
  "api/Alis.Core.Physic.Common.Decomposition.CDTDecomposer.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.CDTDecomposer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CDTDecomposer Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll 2D constrained Delaunay triangulation algorithm. Based on the paper \"Sweep-line algorithm for constrained Delaunay triangulation\" by V. Domiter and and B. Zalik Properties: Creates triangles with a large interior angle. Supports holes Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n^2), n = number of vertices. Does not care about winding order. Source: http://code.google.com/p/poly2tri/ internal static class CDTDecomposer Inheritance object CDTDecomposer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ConvexPartition(Vertices) Decompose the polygon into several smaller non-concave polygon. public static List<Vertices> ConvexPartition(Vertices vertices) Parameters vertices Vertices Returns List<Vertices>"
  },
  "api/Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.Triangle.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.Triangle.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class EarclipDecomposer.Triangle Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll The triangle class private class EarclipDecomposer.Triangle : Vertices, IList<Vector2>, ICollection<Vector2>, IReadOnlyList<Vector2>, IReadOnlyCollection<Vector2>, IEnumerable<Vector2>, IList, ICollection, IEnumerable Inheritance object List<Vector2> Vertices EarclipDecomposer.Triangle Implements IList<Vector2> ICollection<Vector2> IReadOnlyList<Vector2> IReadOnlyCollection<Vector2> IEnumerable<Vector2> IList ICollection IEnumerable Inherited Members Vertices.AttachedToBody Vertices.Holes Vertices.NextIndex(int) Vertices.NextVertex(int) Vertices.PreviousIndex(int) Vertices.PreviousVertex(int) Vertices.GetSignedArea() Vertices.GetArea() Vertices.GetCentroid() Vertices.GetAABB() Vertices.Translate(Vector2) Vertices.Translate(ref Vector2) Vertices.Scale(Vector2) Vertices.Scale(ref Vector2) Vertices.Rotate(float) Vertices.IsConvex() Vertices.IsCounterClockWise() Vertices.ForceCounterClockWise() Vertices.IsSimple() Vertices.CheckPolygon() Vertices.ProjectToAxis(ref Vector2, out float, out float) Vertices.PointInPolygon(ref Vector2) Vertices.PointInPolygonAngle(ref Vector2) Vertices.ToString() List<Vector2>.IList.get_Item(int) List<Vector2>.IList.set_Item(int, object) List<Vector2>.Add(Vector2) List<Vector2>.AddRange(IEnumerable<Vector2>) List<Vector2>.AsReadOnly() List<Vector2>.BinarySearch(int, int, Vector2, IComparer<Vector2>?) List<Vector2>.BinarySearch(Vector2) List<Vector2>.BinarySearch(Vector2, IComparer<Vector2>?) List<Vector2>.Clear() List<Vector2>.Contains(Vector2) List<Vector2>.ConvertAll<TOutput>(Converter<Vector2, TOutput>) List<Vector2>.CopyTo(int, Vector2[], int, int) List<Vector2>.CopyTo(Vector2[]) List<Vector2>.CopyTo(Vector2[], int) List<Vector2>.Exists(Predicate<Vector2>) List<Vector2>.Find(Predicate<Vector2>) List<Vector2>.FindAll(Predicate<Vector2>) List<Vector2>.FindIndex(int, int, Predicate<Vector2>) List<Vector2>.FindIndex(int, Predicate<Vector2>) List<Vector2>.FindIndex(Predicate<Vector2>) List<Vector2>.FindLast(Predicate<Vector2>) List<Vector2>.FindLastIndex(int, int, Predicate<Vector2>) List<Vector2>.FindLastIndex(int, Predicate<Vector2>) List<Vector2>.FindLastIndex(Predicate<Vector2>) List<Vector2>.ForEach(Action<Vector2>) List<Vector2>.GetEnumerator() List<Vector2>.GetRange(int, int) List<Vector2>.IndexOf(Vector2) List<Vector2>.IndexOf(Vector2, int) List<Vector2>.IndexOf(Vector2, int, int) List<Vector2>.Insert(int, Vector2) List<Vector2>.InsertRange(int, IEnumerable<Vector2>) List<Vector2>.LastIndexOf(Vector2) List<Vector2>.LastIndexOf(Vector2, int) List<Vector2>.LastIndexOf(Vector2, int, int) List<Vector2>.Remove(Vector2) List<Vector2>.RemoveAll(Predicate<Vector2>) List<Vector2>.RemoveAt(int) List<Vector2>.RemoveRange(int, int) List<Vector2>.Reverse() List<Vector2>.Reverse(int, int) List<Vector2>.Sort() List<Vector2>.Sort(IComparer<Vector2>?) List<Vector2>.Sort(Comparison<Vector2>) List<Vector2>.Sort(int, int, IComparer<Vector2>?) List<Vector2>.IEnumerable<Vector2>.GetEnumerator() List<Vector2>.ICollection.CopyTo(Array, int) List<Vector2>.IEnumerable.GetEnumerator() List<Vector2>.IList.Add(object) List<Vector2>.IList.Contains(object) List<Vector2>.IList.IndexOf(object) List<Vector2>.IList.Insert(int, object) List<Vector2>.IList.Remove(object) List<Vector2>.ToArray() List<Vector2>.TrimExcess() List<Vector2>.TrueForAll(Predicate<Vector2>) List<Vector2>.Capacity List<Vector2>.Count List<Vector2>.this[int] List<Vector2>.ICollection<Vector2>.IsReadOnly List<Vector2>.ICollection.IsSynchronized List<Vector2>.ICollection.SyncRoot List<Vector2>.IList.IsFixedSize List<Vector2>.IList.IsReadOnly List<Vector2>.IList.Item[int] object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Triangle(float, float, float, float, float, float) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.Triangle class public Triangle(float x1, float y1, float x2, float y2, float x3, float y3) Parameters x1 float The y1 float The x2 float The y2 float The x3 float The y3 float The Methods IsInside(float, float) Describes whether this instance is inside public bool IsInside(float x, float y) Parameters x float The y float The Returns bool The bool See Also Vertices"
  },
  "api/Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.EarclipDecomposer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class EarclipDecomposer Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll Convex decomposition algorithm using ear clipping Properties: Only works on simple polygons. Does not support holes. Running time is O(n^2), n = number of vertices. Source: http://www.ewjordan.com/earClip/ internal static class EarclipDecomposer Inheritance object EarclipDecomposer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ConvexPartition(Vertices, float) Decompose the polygon into several smaller non-concave polygon. Each resulting polygon will have no more than Settings.MaxPolygonVertices vertices. public static List<Vertices> ConvexPartition(Vertices vertices, float tolerance = 0.001) Parameters vertices Vertices The vertices. tolerance float The tolerance. Returns List<Vertices> IsEar(int, float[], float[], int) Checks if vertex i is the tip of an ear in polygon defined by xv[] and yv[]. private static bool IsEar(int i, float[] xv, float[] yv, int xvLength) Parameters i int The i. xv float[] The xv. yv float[] The yv. xvLength int Length of the xv. Returns bool true if the specified i is ear; otherwise, false. Remarks Assumes clockwise orientation of polygon. Remainder(int, int) Fix for obnoxious behavior for the % operator for negative numbers... private static int Remainder(int x, int modulus) Parameters x int The x. modulus int The modulus. Returns int ResolvePinchPoint(Vertices, out Vertices, out Vertices, float) Finds and fixes \"pinch points,\" points where two polygon vertices are at the same point. If a pinch point is found, pin is broken up into poutA and poutB and true is returned; otherwise, returns false. Mostly for internal use. O(N^2) time, which sucks... private static bool ResolvePinchPoint(Vertices pin, out Vertices poutA, out Vertices poutB, float tolerance) Parameters pin Vertices The pin. poutA Vertices The pout A. poutB Vertices The pout B. tolerance float Returns bool TriangulatePolygon(Vertices, float) Triangulates a polygon using simple ear-clipping algorithm. Returns size of Triangle array unless the polygon can't be triangulated. This should only happen if the polygon self-intersects, though it will not always return null for a bad polygon - it is the caller's responsibility to check for self-intersection, and if it doesn't, it should at least check that the return value is non-null before using. You're warned! Triangles may be degenerate, especially if you have identical points in the input to the algorithm. Check this before you use them. This is totally unoptimized, so for large polygons it should not be part of the simulation loop. private static List<Vertices> TriangulatePolygon(Vertices vertices, float tolerance) Parameters vertices Vertices tolerance float Returns List<Vertices> Remarks Only works on simple polygons."
  },
  "api/Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.FlipcodeDecomposer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FlipcodeDecomposer Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll Convex decomposition algorithm created by unknown Properties: No support for holes Very fast Only works on simple polygons Only works on counter clockwise polygons More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml internal static class FlipcodeDecomposer Inheritance object FlipcodeDecomposer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _tmpA The tmp private static Vector2 _tmpA Field Value Vector2 _tmpB The tmp private static Vector2 _tmpB Field Value Vector2 _tmpC The tmp private static Vector2 _tmpC Field Value Vector2 Methods ConvexPartition(Vertices) Decompose the polygon into triangles. Properties: Only works on counter clockwise polygons public static List<Vertices> ConvexPartition(Vertices vertices) Parameters vertices Vertices The list of points describing the polygon Returns List<Vertices> InsideTriangle(ref Vector2, ref Vector2, ref Vector2, ref Vector2) Check if the point P is inside the triangle defined by the points A, B, C private static bool InsideTriangle(ref Vector2 a, ref Vector2 b, ref Vector2 c, ref Vector2 p) Parameters a Vector2 The A point. b Vector2 The B point. c Vector2 The C point. p Vector2 The point to be tested. Returns bool True if the point is inside the triangle Snip(Vertices, int, int, int, int, int[]) Cut a the contour and add a triangle into V to describe the location of the cut private static bool Snip(Vertices contour, int u, int v, int w, int n, int[] V) Parameters contour Vertices The list of points defining the polygon u int The index of the first point v int The index of the second point w int The index of the third point n int The number of elements in the array. V int[] The array to populate with indicies of triangles. Returns bool True if a triangle was found"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Edge.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Edge.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Edge Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The edge class internal class Edge Inheritance object Edge Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Edge(Point, Point) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Edge class public Edge(Point p, Point q) Parameters p Point The q Point The Fields Above The above public Trapezoid Above Field Value Trapezoid B The public float B Field Value float Below The below public Trapezoid Below Field Value Trapezoid MPoints The points public HashSet<Point> MPoints Field Value HashSet<Point> P The public Point P Field Value Point Q The public Point Q Field Value Point Slope The slope public float Slope Field Value float Methods AddMpoint(Point) Adds the mpoint using the specified point public void AddMpoint(Point point) Parameters point Point The point IsAbove(Point) Describes whether this instance is above public bool IsAbove(Point point) Parameters point Point The point Returns bool The bool IsBelow(Point) Describes whether this instance is below public bool IsBelow(Point point) Parameters point Point The point Returns bool The bool"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.MonotoneMountain.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.MonotoneMountain.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MonotoneMountain Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The monotone mountain class internal class MonotoneMountain Inheritance object MonotoneMountain Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors MonotoneMountain() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.MonotoneMountain class public MonotoneMountain() Fields PiSlop The pi slop private const float PiSlop = 3.1 Field Value float Triangles The triangles public List<List<Point>> Triangles Field Value List<List<Point>> _convexPoints The convex points private readonly HashSet<Point> _convexPoints Field Value HashSet<Point> _head The head private Point _head Field Value Point _monoPoly The mono poly private readonly List<Point> _monoPoly Field Value List<Point> _positive The positive private bool _positive Field Value bool _size The size private int _size Field Value int _tail The tail private Point _tail Field Value Point Methods Add(Point) Adds the point public void Add(Point point) Parameters point Point The point Angle(Point) Angles the p private float Angle(Point p) Parameters p Point The Returns float The float AngleSign() Describes whether this instance angle sign private bool AngleSign() Returns bool The bool GenMonoPoly() Gens the mono poly private void GenMonoPoly() IsConvex(Point) Describes whether this instance is convex private bool IsConvex(Point p) Parameters p Point The Returns bool The bool Process() Processes this instance public void Process() Remove(Point) Removes the point public void Remove(Point point) Parameters point Point The point Triangulate() Triangulates this instance private void Triangulate() Valid(Point) Describes whether this instance valid private bool Valid(Point p) Parameters p Point The Returns bool The bool"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Node.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Node.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Node Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The node class internal abstract class Node Inheritance object Node Derived Sink XNode YNode Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Node(Node, Node) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Node class protected Node(Node left, Node right) Parameters left Node The left right Node The right Fields LeftChild The left child protected Node LeftChild Field Value Node ParentList The parent list public List<Node> ParentList Field Value List<Node> RightChild The right child protected Node RightChild Field Value Node Methods Locate(Edge) Locates the s public abstract Sink Locate(Edge s) Parameters s Edge The Returns Sink The sink Replace(Node) Replaces the node public void Replace(Node node) Parameters node Node The node"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Point.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Point.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Point Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The point class internal class Point Inheritance object Point Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Point(float, float) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Point class public Point(float x, float y) Parameters x float The y float The Fields Next The prev public Point Next Field Value Point Prev The prev public Point Prev Field Value Point X The public float X Field Value float Y The public float Y Field Value float Methods Cross(Point) Crosses the p public float Cross(Point p) Parameters p Point The Returns float The float Dot(Point) Dots the p public float Dot(Point p) Parameters p Point The Returns float The float Neq(Point) Describes whether this instance neq public bool Neq(Point p) Parameters p Point The Returns bool The bool Orient2D(Point, Point) Orients the 2 d using the specified pb public float Orient2D(Point pb, Point pc) Parameters pb Point The pb pc Point The pc Returns float The float Operators operator +(Point, Point) public static Point operator +(Point p1, Point p2) Parameters p1 Point p2 Point Returns Point operator +(Point, float) public static Point operator +(Point p1, float f) Parameters p1 Point f float Returns Point operator -(Point, Point) public static Point operator -(Point p1, Point p2) Parameters p1 Point p2 Point Returns Point operator -(Point, float) public static Point operator -(Point p1, float f) Parameters p1 Point f float Returns Point"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.QueryGraph.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.QueryGraph.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class QueryGraph Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The query graph class internal class QueryGraph Inheritance object QueryGraph Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors QueryGraph(Node) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.QueryGraph class public QueryGraph(Node head) Parameters head Node The head Fields _head The head private Node _head Field Value Node Methods Case1(Sink, Edge, Trapezoid[]) Cases the 1 using the specified sink public void Case1(Sink sink, Edge edge, Trapezoid[] tList) Parameters sink Sink The sink edge Edge The edge tList Trapezoid[] The list Case2(Sink, Edge, Trapezoid[]) Cases the 2 using the specified sink public void Case2(Sink sink, Edge edge, Trapezoid[] tList) Parameters sink Sink The sink edge Edge The edge tList Trapezoid[] The list Case3(Sink, Edge, Trapezoid[]) Cases the 3 using the specified sink public void Case3(Sink sink, Edge edge, Trapezoid[] tList) Parameters sink Sink The sink edge Edge The edge tList Trapezoid[] The list Case4(Sink, Edge, Trapezoid[]) Cases the 4 using the specified sink public void Case4(Sink sink, Edge edge, Trapezoid[] tList) Parameters sink Sink The sink edge Edge The edge tList Trapezoid[] The list FollowEdge(Edge) Follows the edge using the specified edge public List<Trapezoid> FollowEdge(Edge edge) Parameters edge Edge The edge Returns List<Trapezoid> The trapezoids Locate(Edge) Locates the edge private Trapezoid Locate(Edge edge) Parameters edge Edge The edge Returns Trapezoid The trapezoid Replace(Sink, Node) Replaces the sink private void Replace(Sink sink, Node node) Parameters sink Sink The sink node Node The node"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Sink.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Sink.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Sink Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The sink class internal class Sink : Node Inheritance object Node Sink Inherited Members Node.LeftChild Node.ParentList Node.RightChild Node.Locate(Edge) Node.Replace(Node) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Sink(Trapezoid) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Sink class private Sink(Trapezoid trapezoid) Parameters trapezoid Trapezoid The trapezoid Fields Trapezoid The trapezoid public Trapezoid Trapezoid Field Value Trapezoid Methods Isink(Trapezoid) Isinks the trapezoid public static Sink Isink(Trapezoid trapezoid) Parameters trapezoid Trapezoid The trapezoid Returns Sink The sink Locate(Edge) Locates the edge public override Sink Locate(Edge edge) Parameters edge Edge The edge Returns Sink The sink See Also Node"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Trapezoid.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Trapezoid.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Trapezoid Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The trapezoid class internal class Trapezoid Inheritance object Trapezoid Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Trapezoid(Point, Point, Edge, Edge) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Trapezoid class public Trapezoid(Point leftPoint, Point rightPoint, Edge top, Edge bottom) Parameters leftPoint Point The left point rightPoint Point The right point top Edge The top bottom Edge The bottom Fields Bottom The bottom public Edge Bottom Field Value Edge Inside The inside public bool Inside Field Value bool LeftPoint The left point public Point LeftPoint Field Value Point LowerLeft The lower left public Trapezoid LowerLeft Field Value Trapezoid LowerRight The lower right public Trapezoid LowerRight Field Value Trapezoid RightPoint The right point public Point RightPoint Field Value Point Sink The sink public Sink Sink Field Value Sink Top The top public Edge Top Field Value Edge UpperLeft The upper left public Trapezoid UpperLeft Field Value Trapezoid UpperRight The upper right public Trapezoid UpperRight Field Value Trapezoid Methods AddPoints() Adds the points public void AddPoints() Contains(Point) Describes whether this instance contains public bool Contains(Point point) Parameters point Point The point Returns bool The bool GetVertices() Gets the vertices public List<Point> GetVertices() Returns List<Point> The verts LineIntersect(Edge, float) Lines the intersect using the specified edge private Point LineIntersect(Edge edge, float x) Parameters edge Edge The edge x float The Returns Point The point TrimNeighbors() Trims the neighbors public void TrimNeighbors() UpdateLeft(Trapezoid, Trapezoid) Updates the left using the specified ul public void UpdateLeft(Trapezoid ul, Trapezoid ll) Parameters ul Trapezoid The ul ll Trapezoid The ll UpdateLeftRight(Trapezoid, Trapezoid, Trapezoid, Trapezoid) Updates the left right using the specified ul public void UpdateLeftRight(Trapezoid ul, Trapezoid ll, Trapezoid ur, Trapezoid lr) Parameters ul Trapezoid The ul ll Trapezoid The ll ur Trapezoid The ur lr Trapezoid The lr UpdateRight(Trapezoid, Trapezoid) Updates the right using the specified ur public void UpdateRight(Trapezoid ur, Trapezoid lr) Parameters ur Trapezoid The ur lr Trapezoid The lr"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.TrapezoidalMap.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.TrapezoidalMap.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class TrapezoidalMap Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The trapezoidal map class internal class TrapezoidalMap Inheritance object TrapezoidalMap Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors TrapezoidalMap() Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.TrapezoidalMap class public TrapezoidalMap() Fields Map The map public HashSet<Trapezoid> Map Field Value HashSet<Trapezoid> _bCross The cross private Edge _bCross Field Value Edge _cross The cross private Edge _cross Field Value Edge _margin The margin private readonly float _margin Field Value float Methods BoundingBox(List<Edge>) Boundings the box using the specified edges public Trapezoid BoundingBox(List<Edge> edges) Parameters edges List<Edge> The edges Returns Trapezoid The trapezoid Case1(Trapezoid, Edge) Cases the 1 using the specified t public Trapezoid[] Case1(Trapezoid t, Edge e) Parameters t Trapezoid The e Edge The Returns Trapezoid[] The trapezoids Case2(Trapezoid, Edge) Cases the 2 using the specified t public Trapezoid[] Case2(Trapezoid t, Edge e) Parameters t Trapezoid The e Edge The Returns Trapezoid[] The trapezoids Case3(Trapezoid, Edge) Cases the 3 using the specified t public Trapezoid[] Case3(Trapezoid t, Edge e) Parameters t Trapezoid The e Edge The Returns Trapezoid[] The trapezoids Case4(Trapezoid, Edge) Cases the 4 using the specified t public Trapezoid[] Case4(Trapezoid t, Edge e) Parameters t Trapezoid The e Edge The Returns Trapezoid[] The trapezoids Clear() Clears this instance public void Clear()"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.Triangulator.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.Triangulator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Triangulator Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The triangulator class internal class Triangulator Inheritance object Triangulator Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Triangulator(List<Point>, float) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.Triangulator class public Triangulator(List<Point> polyLine, float sheer) Parameters polyLine List<Point> The poly line sheer float The sheer Fields Trapezoids The trapezoids public List<Trapezoid> Trapezoids Field Value List<Trapezoid> Triangles The triangles public List<List<Point>> Triangles Field Value List<List<Point>> _boundingBox The bounding box private readonly Trapezoid _boundingBox Field Value Trapezoid _edgeList The edge list private readonly List<Edge> _edgeList Field Value List<Edge> _queryGraph The query graph private readonly QueryGraph _queryGraph Field Value QueryGraph _sheer The sheer private readonly float _sheer Field Value float _trapezoidalMap The trapezoidal map private readonly TrapezoidalMap _trapezoidalMap Field Value TrapezoidalMap _xMonoPoly The mono poly private readonly List<MonotoneMountain> _xMonoPoly Field Value List<MonotoneMountain> Methods CreateMountains() Creates the mountains private void CreateMountains() InitEdges(List<Point>) Inits the edges using the specified points private List<Edge> InitEdges(List<Point> points) Parameters points List<Point> The points Returns List<Edge> A list of edge MarkOutside(Trapezoid) Marks the outside using the specified t private void MarkOutside(Trapezoid t) Parameters t Trapezoid The OrderSegments(List<Edge>) Orders the segments using the specified edge input private List<Edge> OrderSegments(List<Edge> edgeInput) Parameters edgeInput List<Edge> The edge input Returns List<Edge> The edges Process() Processes this instance private void Process() ShearTransform(Point) Shears the transform using the specified point private Point ShearTransform(Point point) Parameters point Point The point Returns Point The point Shuffle<T>(IList<T>) Shuffles the list private static void Shuffle<T>(IList<T> list) Parameters list IList<T> The list Type Parameters T The"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.XNode.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.XNode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class XNode Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The node class internal class XNode : Node Inheritance object Node XNode Inherited Members Node.LeftChild Node.ParentList Node.RightChild Node.Locate(Edge) Node.Replace(Node) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors XNode(Point, Node, Node) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.XNode class public XNode(Point point, Node lChild, Node rChild) Parameters point Point The point lChild Node The child rChild Node The child Fields _point The point private readonly Point _point Field Value Point Methods Locate(Edge) Locates the edge public override Sink Locate(Edge edge) Parameters edge Edge The edge Returns Sink The sink See Also Node"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.YNode.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.YNode.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class YNode Namespace Alis.Core.Physic.Common.Decomposition.Seidel Assembly Alis.dll The node class internal class YNode : Node Inheritance object Node YNode Inherited Members Node.LeftChild Node.ParentList Node.RightChild Node.Locate(Edge) Node.Replace(Node) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors YNode(Edge, Node, Node) Initializes a new instance of the Alis.Core.Physic.Common.Decomposition.Seidel.YNode class public YNode(Edge edge, Node lChild, Node rChild) Parameters edge Edge The edge lChild Node The child rChild Node The child Fields _edge The edge private readonly Edge _edge Field Value Edge Methods Locate(Edge) Locates the edge public override Sink Locate(Edge edge) Parameters edge Edge The edge Returns Sink The sink See Also Node"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Seidel.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Seidel.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition.Seidel Classes Edge The edge class MonotoneMountain The monotone mountain class Node The node class Point The point class QueryGraph The query graph class Sink The sink class Trapezoid The trapezoid class TrapezoidalMap The trapezoidal map class Triangulator The triangulator class XNode The node class YNode The node class"
  },
  "api/Alis.Core.Physic.Common.Decomposition.SeidelDecomposer.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.SeidelDecomposer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SeidelDecomposer Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll Convex decomposition algorithm created by Raimund Seidel Properties: Decompose the polygon into trapezoids, then triangulate. To use the trapezoid data, use ConvexPartitionTrapezoid() Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n log n), n = number of vertices. Running time is almost linear for most simple polygons. Does not care about winding order. For more information, see Raimund Seidel's paper \"A simple and fast incremental randomized algorithm for computing trapezoidal decompositions and for triangulating polygons\" See also: \"Computational Geometry\", 3rd edition, by Mark de Berg et al, Chapter 6.2 \"Computational Geometry in C\", 2nd edition, by Joseph O'Rourke Original code from the Poly2Tri project by Mason Green. http://code.google.com/p/poly2tri/source/browse?repo=archive#hg/scala/src/org/poly2tri/seidel This implementation is from Dec 14, 2010 internal static class SeidelDecomposer Inheritance object SeidelDecomposer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ConvexPartition(Vertices, float) Decompose the polygon into several smaller non-concave polygons. public static List<Vertices> ConvexPartition(Vertices vertices, float sheer = 0.001) Parameters vertices Vertices The polygon to decompose. sheer float The sheer to use if you get bad results, try using a higher value. Returns List<Vertices> A list of triangles ConvexPartitionTrapezoid(Vertices, float) Decompose the polygon into several smaller non-concave polygons. public static List<Vertices> ConvexPartitionTrapezoid(Vertices vertices, float sheer = 0.001) Parameters vertices Vertices The polygon to decompose. sheer float The sheer to use if you get bad results, try using a higher value. Returns List<Vertices> A list of trapezoids"
  },
  "api/Alis.Core.Physic.Common.Decomposition.Triangulate.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.Triangulate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Triangulate Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll The triangulate class public static class Triangulate Inheritance object Triangulate Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods ConvexPartition(Vertices, TriangulationAlgorithm, bool, float, bool) public static List<Vertices> ConvexPartition(Vertices vertices, TriangulationAlgorithm algorithm, bool discardAndFixInvalid = true, float tolerance = 0.001, bool skipSanityChecks = false) Parameters vertices Vertices algorithm TriangulationAlgorithm discardAndFixInvalid bool tolerance float skipSanityChecks bool Set this to true to skip sanity checks in the engine. This will speed up the tools by removing the overhead of the checks, but you will need to handle checks yourself where it is needed. Returns List<Vertices> ValidatePolygon(Vertices) Describes whether validate polygon private static bool ValidatePolygon(Vertices polygon) Parameters polygon Vertices The polygon Returns bool The bool"
  },
  "api/Alis.Core.Physic.Common.Decomposition.TriangulationAlgorithm.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.TriangulationAlgorithm.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum TriangulationAlgorithm Namespace Alis.Core.Physic.Common.Decomposition Assembly Alis.dll The triangulation algorithm enum public enum TriangulationAlgorithm Fields Earclip = 0 Convex decomposition algorithm using ear clipping Properties: Only works on simple polygons. Does not support holes. Running time is O(n^2), n = number of vertices. Bayazit = 1 Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/) Properties: Tries to decompose using polygons instead of triangles. Tends to produce optimal results with low processing time. Running time is O(nr), n = number of vertices, r = reflex vertices. Does not support holes. Flipcode = 2 Convex decomposition algorithm created by unknown Properties: No support for holes Very fast Only works on simple polygons Only works on counter clockwise polygons Seidel = 3 Convex decomposition algorithm created by Raimund Seidel Properties: Decompose the polygon into trapezoids, then triangulate. To use the trapezoid data, use ConvexPartitionTrapezoid() Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n log n), n = number of vertices. Running time is almost linear for most simple polygons. Does not care about winding order. SeidelTrapezoids = 4 The seidel trapezoids triangulation algorithm Delauny = 5 2D constrained Delaunay triangulation algorithm. Based on the paper \"Sweep-line algorithm for constrained Delaunay triangulation\" by V. Domiter and and B. Zalik Properties: Creates triangles with a large interior angle. Supports holes Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n^2), n = number of vertices. Does not care about winding order."
  },
  "api/Alis.Core.Physic.Common.Decomposition.html": {
    "href": "api/Alis.Core.Physic.Common.Decomposition.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.Decomposition Namespaces Alis.Core.Physic.Common.Decomposition.CDT Alis.Core.Physic.Common.Decomposition.Seidel Classes BayazitDecomposer Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/) Properties: Tries to decompose using polygons instead of triangles. Tends to produce optimal results with low processing time. Running time is O(nr), n = number of vertices, r = reflex vertices. Does not support holes. For more information about this algorithm, see http://mnbayazit.com/406/bayazit CDTDecomposer 2D constrained Delaunay triangulation algorithm. Based on the paper \"Sweep-line algorithm for constrained Delaunay triangulation\" by V. Domiter and and B. Zalik Properties: Creates triangles with a large interior angle. Supports holes Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n^2), n = number of vertices. Does not care about winding order. Source: http://code.google.com/p/poly2tri/ EarclipDecomposer Convex decomposition algorithm using ear clipping Properties: Only works on simple polygons. Does not support holes. Running time is O(n^2), n = number of vertices. Source: http://www.ewjordan.com/earClip/ FlipcodeDecomposer Convex decomposition algorithm created by unknown Properties: No support for holes Very fast Only works on simple polygons Only works on counter clockwise polygons More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml SeidelDecomposer Convex decomposition algorithm created by Raimund Seidel Properties: Decompose the polygon into trapezoids, then triangulate. To use the trapezoid data, use ConvexPartitionTrapezoid() Generate a lot of garbage due to incapsulation of the Poly2Tri library. Running time is O(n log n), n = number of vertices. Running time is almost linear for most simple polygons. Does not care about winding order. For more information, see Raimund Seidel's paper \"A simple and fast incremental randomized algorithm for computing trapezoidal decompositions and for triangulating polygons\" See also: \"Computational Geometry\", 3rd edition, by Mark de Berg et al, Chapter 6.2 \"Computational Geometry in C\", 2nd edition, by Joseph O'Rourke Original code from the Poly2Tri project by Mason Green. http://code.google.com/p/poly2tri/source/browse?repo=archive#hg/scala/src/org/poly2tri/seidel This implementation is from Dec 14, 2010 EarclipDecomposer.Triangle The triangle class Triangulate The triangulate class Enums TriangulationAlgorithm The triangulation algorithm enum"
  },
  "api/Alis.Core.Physic.Common.FileBuffer.html": {
    "href": "api/Alis.Core.Physic.Common.FileBuffer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FileBuffer Namespace Alis.Core.Physic.Common Assembly Alis.dll The file buffer class internal class FileBuffer Inheritance object FileBuffer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors FileBuffer(Stream) Initializes a new instance of the Alis.Core.Physic.Common.FileBuffer class public FileBuffer(Stream stream) Parameters stream Stream The stream Properties Buffer Gets or sets the value of the buffer public string Buffer { get; set; } Property Value string EndOfBuffer Gets the value of the end of buffer public bool EndOfBuffer { get; } Property Value bool Length Gets the value of the length private int Length { get; } Property Value int Next Gets the value of the next public char Next { get; } Property Value char Position Gets or sets the value of the position public int Position { get; set; } Property Value int"
  },
  "api/Alis.Core.Physic.Common.FixedArray2-1.html": {
    "href": "api/Alis.Core.Physic.Common.FixedArray2-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedArray2<T> Namespace Alis.Core.Physic.Common Assembly Alis.dll The fixed array public struct FixedArray2<T> Type Parameters T Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _value0 The value private T _value0 Field Value T _value1 The value private T _value1 Field Value T Properties this[int] The index out of range exception public T this[int index] { get; set; } Property Value T"
  },
  "api/Alis.Core.Physic.Common.FixedArray3-1.html": {
    "href": "api/Alis.Core.Physic.Common.FixedArray3-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedArray3<T> Namespace Alis.Core.Physic.Common Assembly Alis.dll The fixed array public struct FixedArray3<T> Type Parameters T Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _value0 The value private T _value0 Field Value T _value1 The value private T _value1 Field Value T _value2 The value private T _value2 Field Value T Properties this[int] The index out of range exception public T this[int index] { get; set; } Property Value T"
  },
  "api/Alis.Core.Physic.Common.FixedArray4-1.html": {
    "href": "api/Alis.Core.Physic.Common.FixedArray4-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedArray4<T> Namespace Alis.Core.Physic.Common Assembly Alis.dll The fixed array public struct FixedArray4<T> Type Parameters T Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _value0 The value private T _value0 Field Value T _value1 The value private T _value1 Field Value T _value2 The value private T _value2 Field Value T _value3 The value private T _value3 Field Value T Properties this[int] The index out of range exception public T this[int index] { get; set; } Property Value T"
  },
  "api/Alis.Core.Physic.Common.FixedArray8-1.html": {
    "href": "api/Alis.Core.Physic.Common.FixedArray8-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixedArray8<T> Namespace Alis.Core.Physic.Common Assembly Alis.dll The fixed array public struct FixedArray8<T> Type Parameters T Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields _value0 The value private T _value0 Field Value T _value1 The value private T _value1 Field Value T _value2 The value private T _value2 Field Value T _value3 The value private T _value3 Field Value T _value4 The value private T _value4 Field Value T _value5 The value private T _value5 Field Value T _value6 The value private T _value6 Field Value T _value7 The value private T _value7 Field Value T Properties this[int] The index out of range exception public T this[int index] { get; set; } Property Value T"
  },
  "api/Alis.Core.Physic.Common.LineTools.html": {
    "href": "api/Alis.Core.Physic.Common.LineTools.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class LineTools Namespace Alis.Core.Physic.Common Assembly Alis.dll Collection of helper methods for misc collisions. Does float tolerance and line collisions with lines and AABBs. public static class LineTools Inheritance object LineTools Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods DistanceBetweenPointAndLineSegment(ref Vector2, ref Vector2, ref Vector2) Distances the between point and line segment using the specified point public static float DistanceBetweenPointAndLineSegment(ref Vector2 point, ref Vector2 start, ref Vector2 end) Parameters point Vector2 The point start Vector2 The start end Vector2 The end Returns float The float LineIntersect(Vector2, Vector2, Vector2, Vector2) Lines the intersect using the specified p 1 public static Vector2 LineIntersect(Vector2 p1, Vector2 p2, Vector2 q1, Vector2 q2) Parameters p1 Vector2 The p2 Vector2 The q1 Vector2 The q2 Vector2 The Returns Vector2 The LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, bool, bool, out Vector2) This method detects if two line segments (or lines) intersect, and, if so, the point of intersection. Use the firstIsSegment and secondIsSegment parameters to set whether the intersection point must be on the first and second line segments. Setting these both to true means you are doing a line-segment to line-segment intersection. Setting one of them to true means you are doing a line to line-segment intersection test, and so on. Note: If two line segments are coincident, then no intersection is detected (there are actually infinite intersection points). Author: Jeremy Bell public static bool LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 point) Parameters point1 Vector2 The first point of the first line segment. point2 Vector2 The second point of the first line segment. point3 Vector2 The first point of the second line segment. point4 Vector2 The second point of the second line segment. firstIsSegment bool Set this to true to require that the intersection point be on the first line segment. secondIsSegment bool Set this to true to require that the intersection point be on the second line segment. point Vector2 This is set to the intersection point if an intersection is detected. Returns bool True if an intersection is detected, false otherwise. LineIntersect(Vector2, Vector2, Vector2, Vector2, bool, bool, out Vector2) This method detects if two line segments (or lines) intersect, and, if so, the point of intersection. Use the firstIsSegment and secondIsSegment parameters to set whether the intersection point must be on the first and second line segments. Setting these both to true means you are doing a line-segment to line-segment intersection. Setting one of them to true means you are doing a line to line-segment intersection test, and so on. Note: If two line segments are coincident, then no intersection is detected (there are actually infinite intersection points). Author: Jeremy Bell public static bool LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 intersectionPoint) Parameters point1 Vector2 The first point of the first line segment. point2 Vector2 The second point of the first line segment. point3 Vector2 The first point of the second line segment. point4 Vector2 The second point of the second line segment. firstIsSegment bool Set this to true to require that the intersection point be on the first line segment. secondIsSegment bool Set this to true to require that the intersection point be on the second line segment. intersectionPoint Vector2 This is set to the intersection point if an intersection is detected. Returns bool True if an intersection is detected, false otherwise. LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2) This method detects if two line segments intersect, and, if so, the point of intersection. Note: If two line segments are coincident, then no intersection is detected (there are actually infinite intersection points). public static bool LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, out Vector2 intersectionPoint) Parameters point1 Vector2 The first point of the first line segment. point2 Vector2 The second point of the first line segment. point3 Vector2 The first point of the second line segment. point4 Vector2 The second point of the second line segment. intersectionPoint Vector2 This is set to the intersection point if an intersection is detected. Returns bool True if an intersection is detected, false otherwise. LineIntersect(Vector2, Vector2, Vector2, Vector2, out Vector2) This method detects if two line segments intersect, and, if so, the point of intersection. Note: If two line segments are coincident, then no intersection is detected (there are actually infinite intersection points). public static bool LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, out Vector2 intersectionPoint) Parameters point1 Vector2 The first point of the first line segment. point2 Vector2 The second point of the first line segment. point3 Vector2 The first point of the second line segment. point4 Vector2 The second point of the second line segment. intersectionPoint Vector2 This is set to the intersection point if an intersection is detected. Returns bool True if an intersection is detected, false otherwise. LineIntersect2(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2) Check if the lines a0->a1 and b0->b1 cross. If they do, intersectionPoint will be filled with the point of crossing. Grazing lines should not return true. public static bool LineIntersect2(ref Vector2 a0, ref Vector2 a1, ref Vector2 b0, ref Vector2 b1, out Vector2 intersectionPoint) Parameters a0 Vector2 a1 Vector2 b0 Vector2 b1 Vector2 intersectionPoint Vector2 Returns bool LineSegmentAabbIntersect(ref Vector2, ref Vector2, AABB) Get all intersections between a line segment and an AABB. public static Vertices LineSegmentAabbIntersect(ref Vector2 point1, ref Vector2 point2, AABB aabb) Parameters point1 Vector2 The first point of the line segment to test point2 Vector2 The second point of the line segment to test. aabb AABB The AABB that is used for testing intersection. Returns Vertices LineSegmentVerticesIntersect(ref Vector2, ref Vector2, Vertices) Get all intersections between a line segment and a list of vertices representing a polygon. The vertices reuse adjacent points, so for example edges one and two are between the first and second vertices and between the second and third vertices. The last edge is between vertex vertices.Count - 1 and verts0. (ie, vertices from a Geometry or AABB) public static Vertices LineSegmentVerticesIntersect(ref Vector2 point1, ref Vector2 point2, Vertices vertices) Parameters point1 Vector2 The first point of the line segment to test point2 Vector2 The second point of the line segment to test. vertices Vertices The vertices, as described above Returns Vertices"
  },
  "api/Alis.Core.Physic.Common.Mat22.html": {
    "href": "api/Alis.Core.Physic.Common.Mat22.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Mat22 Namespace Alis.Core.Physic.Common Assembly Alis.dll A 2-by-2 matrix. Stored in column-major order. public struct Mat22 Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Mat22(Vector2, Vector2) Construct this matrix using columns. public Mat22(Vector2 c1, Vector2 c2) Parameters c1 Vector2 The c1. c2 Vector2 The c2. Mat22(float, float, float, float) Construct this matrix using scalars. public Mat22(float a11, float a12, float a21, float a22) Parameters a11 float The a11. a12 float The a12. a21 float The a21. a22 float The a22. Fields Ex The ey public Vector2 Ex Field Value Vector2 Ey The ey public Vector2 Ey Field Value Vector2 Properties Inverse Gets the value of the inverse public Mat22 Inverse { get; } Property Value Mat22 Methods Add(ref Mat22, ref Mat22, out Mat22) Adds the a public static void Add(ref Mat22 a, ref Mat22 b, out Mat22 r) Parameters a Mat22 The b Mat22 The r Mat22 The Set(Vector2, Vector2) Initialize this matrix using columns. public void Set(Vector2 c1, Vector2 c2) Parameters c1 Vector2 The c1. c2 Vector2 The c2. SetIdentity() Set this to the identity matrix. public void SetIdentity() SetZero() Set this matrix to all zeros. public void SetZero() Solve(Vector2) Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases. public Vector2 Solve(Vector2 b) Parameters b Vector2 The b. Returns Vector2"
  },
  "api/Alis.Core.Physic.Common.Mat33.html": {
    "href": "api/Alis.Core.Physic.Common.Mat33.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Mat33 Namespace Alis.Core.Physic.Common Assembly Alis.dll A 3-by-3 matrix. Stored in column-major order. public struct Mat33 Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Mat33(Vector3, Vector3, Vector3) Construct this matrix using columns. public Mat33(Vector3 c1, Vector3 c2, Vector3 c3) Parameters c1 Vector3 The c1. c2 Vector3 The c2. c3 Vector3 The c3. Fields Ex The ez public Vector3 Ex Field Value Vector3 Ey The ez public Vector3 Ey Field Value Vector3 Ez The ez public Vector3 Ez Field Value Vector3 Methods GetInverse22(ref Mat33) public void GetInverse22(ref Mat33 m) Parameters m Mat33 GetSymInverse33(ref Mat33) public void GetSymInverse33(ref Mat33 m) Parameters m Mat33 SetZero() Set this matrix to all zeros. public void SetZero() Solve22(Vector2) Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases. Solve only the upper 2-by-2 matrix equation. public Vector2 Solve22(Vector2 b) Parameters b Vector2 The b. Returns Vector2 Solve33(Vector3) Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot cases. public Vector3 Solve33(Vector3 b) Parameters b Vector3 The b. Returns Vector3"
  },
  "api/Alis.Core.Physic.Common.Path.html": {
    "href": "api/Alis.Core.Physic.Common.Path.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Path Namespace Alis.Core.Physic.Common Assembly Alis.dll Path: Very similar to Vertices, but this class contains vectors describing control points on a Catmull-Rom curve. public class Path Inheritance object Path Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Path() Initializes a new instance of the Alis.Core.Physic.Common.Path class. public Path() Path(Vector2[]) Initializes a new instance of the Alis.Core.Physic.Common.Path class. public Path(Vector2[] vertices) Parameters vertices Vector2[] The vertices to created the path from. Path(IList<Vector2>) Initializes a new instance of the Alis.Core.Physic.Common.Path class. public Path(IList<Vector2> vertices) Parameters vertices IList<Vector2> The vertices to created the path from. Fields ControlPoints All the points that makes up the curve public List<Vector2> ControlPoints Field Value List<Vector2> _deltaT The delta private float _deltaT Field Value float Properties Closed True if the curve is closed. public bool Closed { get; set; } Property Value bool Methods Add(Vector2) Adds the point public void Add(Vector2 point) Parameters point Vector2 The point CalcCatmullRom(Vector2, Vector2, Vector2, Vector2, float, out Vector2) Calcs the catmull rom using the specified p 0 private void CalcCatmullRom(Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3, float amount, out Vector2 result) Parameters p0 Vector2 The p1 Vector2 The p2 Vector2 The p3 Vector2 The amount float The amount result Vector2 The result GetLength() Gets the length public float GetLength() Returns float The length GetPosition(float) Gets the position using the specified time public Vector2 GetPosition(float time) Parameters time float The time Returns Vector2 The temp Exceptions Exception You need at least 2 control points to calculate a position. GetPositionNormal(float) Gets the normal for the given time. public Vector2 GetPositionNormal(float time) Parameters time float The time Returns Vector2 The normal. GetVertices(int) Returns a set of points defining the curve with the specifed number of divisions between each control point. public Vertices GetVertices(int divisions) Parameters divisions int Number of divisions between each control point. Returns Vertices NextIndex(int) Gets the next index of a controlpoint public int NextIndex(int index) Parameters index int The index. Returns int PreviousIndex(int) Gets the previous index of a controlpoint public int PreviousIndex(int index) Parameters index int The index. Returns int Remove(Vector2) Removes the point public void Remove(Vector2 point) Parameters point Vector2 The point RemoveAt(int) Removes the at using the specified index public void RemoveAt(int index) Parameters index int The index Rotate(float) Rotate the control points by the defined value in radians. public void Rotate(float value) Parameters value float The amount to rotate by in radians. Scale(ref Vector2) Scales the control points by the specified vector. public void Scale(ref Vector2 value) Parameters value Vector2 The Value. SubdivideEvenly(int) Subdivides the evenly using the specified divisions public List<Vector3> SubdivideEvenly(int divisions) Parameters divisions int The divisions Returns List<Vector3> The verts ToString() Returns the string public override string ToString() Returns string The string Translate(ref Vector2) Translates the control points by the specified vector. public void Translate(ref Vector2 vector) Parameters vector Vector2 The vector."
  },
  "api/Alis.Core.Physic.Common.PathManager.LinkType.html": {
    "href": "api/Alis.Core.Physic.Common.PathManager.LinkType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PathManager.LinkType Namespace Alis.Core.Physic.Common Assembly Alis.dll The link type enum public enum PathManager.LinkType Fields Revolute = 0 The revolute link type Slider = 1 The slider link type"
  },
  "api/Alis.Core.Physic.Common.PathManager.html": {
    "href": "api/Alis.Core.Physic.Common.PathManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PathManager Namespace Alis.Core.Physic.Common Assembly Alis.dll An easy to use manager for creating paths. public static class PathManager Inheritance object PathManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods AttachBodiesWithRevoluteJoint(World, List<Body>, Vector2, Vector2, bool, bool) Attaches the bodies with revolute joints. public static List<RevoluteJoint> AttachBodiesWithRevoluteJoint(World world, List<Body> bodies, Vector2 localAnchorA, Vector2 localAnchorB, bool connectFirstAndLast, bool collideConnected) Parameters world World The world. bodies List<Body> The bodies. localAnchorA Vector2 The local anchor A. localAnchorB Vector2 The local anchor B. connectFirstAndLast bool if set to true [connect first and last]. collideConnected bool if set to true [collide connected]. Returns List<RevoluteJoint> ConvertPathToEdges(Path, Body, int) Convert a path into a set of edges and attaches them to the specified body. Note: use only for static edges. public static void ConvertPathToEdges(Path path, Body body, int subdivisions) Parameters path Path The path. body Body The body. subdivisions int The subdivisions. ConvertPathToPolygon(Path, Body, float, int) Convert a closed path into a polygon. Convex decomposition is automatically performed. public static void ConvertPathToPolygon(Path path, Body body, float density, int subdivisions) Parameters path Path The path. body Body The body. density float The density. subdivisions int The subdivisions. EvenlyDistributeShapesAlongPath(World, Path, IEnumerable<Shape>, BodyType, int, object) Duplicates the given Body along the given path for approximatly the given copies. public static List<Body> EvenlyDistributeShapesAlongPath(World world, Path path, IEnumerable<Shape> shapes, BodyType type, int copies, object userData = null) Parameters world World The world. path Path The path. shapes IEnumerable<Shape> The shapes. type BodyType The type. copies int The copies. userData object Returns List<Body> EvenlyDistributeShapesAlongPath(World, Path, Shape, BodyType, int, object) Duplicates the given Body along the given path for approximatly the given copies. public static List<Body> EvenlyDistributeShapesAlongPath(World world, Path path, Shape shape, BodyType type, int copies, object userData = null) Parameters world World The world. path Path The path. shape Shape The shape. type BodyType The type. copies int The copies. userData object The user data. Returns List<Body> MoveBodyOnPath(Path, Body, float, float, float) Moves the given body along the defined path. public static void MoveBodyOnPath(Path path, Body body, float time, float strength, float timeStep) Parameters path Path The path. body Body The body. time float The time. strength float The strength. timeStep float The time step."
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.BreakableBody.BreakableBodyState.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.BreakableBody.BreakableBodyState.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BreakableBody.BreakableBodyState Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll The breakable body state enum public enum BreakableBody.BreakableBodyState Fields Unbroken = 0 The unbroken breakable body state ShouldBreak = 1 The should break breakable body state Broken = 2 The broken breakable body state"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.BreakableBody.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.BreakableBody.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BreakableBody Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll A type of body that supports multiple fixtures that can break apart. public class BreakableBody Inheritance object BreakableBody Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors BreakableBody(World) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.BreakableBody class private BreakableBody(World world) Parameters world World The world BreakableBody(World, IEnumerable<Vertices>, float, Vector2, float) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.BreakableBody class public BreakableBody(World world, IEnumerable<Vertices> vertices, float density, Vector2 position = default, float rotation = 0) Parameters world World The world vertices IEnumerable<Vertices> The vertices density float The density position Vector2 The position rotation float The rotation BreakableBody(World, IEnumerable<Shape>, Vector2, float) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.BreakableBody class public BreakableBody(World world, IEnumerable<Shape> shapes, Vector2 position = default, float rotation = 0) Parameters world World The world shapes IEnumerable<Shape> The shapes position Vector2 The position rotation float The rotation BreakableBody(World, Vertices, float, Vector2, float) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.BreakableBody class public BreakableBody(World world, Vertices vertices, float density, Vector2 position = default, float rotation = 0) Parameters world World The world vertices Vertices The vertices density float The density position Vector2 The position rotation float The rotation Fields Parts The fixture public List<Fixture> Parts Field Value List<Fixture> Strength The force needed to break the body apart. Default: 500 public float Strength Field Value float _angularVelocitiesCache The angular velocities cache private float[] _angularVelocitiesCache Field Value float[] _velocitiesCache The vector private Vector2[] _velocitiesCache Field Value Vector2[] Properties MainBody Gets the value of the main body public Body MainBody { get; } Property Value Body State Gets or sets the value of the state public BreakableBody.BreakableBodyState State { get; private set; } Property Value BreakableBody.BreakableBodyState World Gets the value of the world public World World { get; } Property Value World Methods CacheVelocities() Caches the velocities private void CacheVelocities() Decompose() Decomposes this instance private void Decompose() Exceptions InvalidOperationException BreakableBody is allready broken PostSolve(Contact, ContactVelocityConstraint) Posts the solve using the specified contact private void PostSolve(Contact contact, ContactVelocityConstraint impulse) Parameters contact Contact The contact impulse ContactVelocityConstraint The impulse Update() Updates this instance public void Update()"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.ControllerCategory.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.ControllerCategory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum ControllerCategory Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll The controller category enum [Flags] public enum ControllerCategory Fields None = 0 The none controller category Cat01 = 1 The cat 01 controller category Cat02 = 2 The cat 02 controller category Cat03 = 4 The cat 03 controller category Cat04 = 8 The cat 04 controller category Cat05 = 16 The cat 05 controller category Cat06 = 32 The cat 06 controller category Cat07 = 64 The cat 07 controller category Cat08 = 128 The cat 08 controller category Cat09 = 256 The cat 09 controller category Cat10 = 512 The cat 10 controller category Cat11 = 1024 The cat 11 controller category Cat12 = 2048 The cat 12 controller category Cat13 = 4096 The cat 13 controller category Cat14 = 8192 The cat 14 controller category Cat15 = 16384 The cat 15 controller category Cat16 = 32768 The cat 16 controller category Cat17 = 65536 The cat 17 controller category Cat18 = 131072 The cat 18 controller category Cat19 = 262144 The cat 19 controller category Cat20 = 524288 The cat 20 controller category Cat21 = 1048576 The cat 21 controller category Cat22 = 2097152 The cat 22 controller category Cat23 = 4194304 The cat 23 controller category Cat24 = 8388608 The cat 24 controller category Cat25 = 16777216 The cat 25 controller category Cat26 = 33554432 The cat 26 controller category Cat27 = 67108864 The cat 27 controller category Cat28 = 134217728 The cat 28 controller category Cat29 = 268435456 The cat 29 controller category Cat30 = 536870912 The cat 30 controller category Cat31 = 1073741824 The cat 31 controller category All = 2147483647 The all controller category"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.ControllerFilter.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.ControllerFilter.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerFilter Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll The controller filter public struct ControllerFilter Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors ControllerFilter(ControllerCategory) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.ControllerFilter class public ControllerFilter(ControllerCategory controllerCategory) Parameters controllerCategory ControllerCategory The controller category Fields ControllerCategories The controller categories public ControllerCategory ControllerCategories Field Value ControllerCategory Methods IgnoreController(ControllerCategory) Ignores the controller. The controller has no effect on this body. public void IgnoreController(ControllerCategory category) Parameters category ControllerCategory IsControllerIgnored(ControllerCategory) Determines whether this body ignores the the specified controller. public bool IsControllerIgnored(ControllerCategory category) Parameters category ControllerCategory The logic type. Returns bool true if the body has the specified flag; otherwise, false. RestoreController(ControllerCategory) Restore the controller. The controller affects this body. public void RestoreController(ControllerCategory category) Parameters category ControllerCategory The logic type."
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.FilterData.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.FilterData.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FilterData Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll Contains filter data that can determine whether an object should be processed or not. public abstract class FilterData Inheritance object FilterData Derived Controller PhysicsLogic Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields DisabledOnCategories Disable the logic on specific categories. Category.None by default. public Category DisabledOnCategories Field Value Category DisabledOnGroup Disable the logic on specific groups public int DisabledOnGroup Field Value int EnabledOnCategories Enable the logic on specific categories Category.All by default. public Category EnabledOnCategories Field Value Category EnabledOnGroup Enable the logic on specific groups. public int EnabledOnGroup Field Value int Methods AddDisabledCategory(Category) Adds the category. public void AddDisabledCategory(Category category) Parameters category Category The category. AddEnabledCategory(Category) Adds the category. public void AddEnabledCategory(Category category) Parameters category Category The category. IsActiveOn(Body) public virtual bool IsActiveOn(Body body) Parameters body Body Returns bool IsInDisabledCategory(Category) Determines whether this body ignores the the specified controller. public bool IsInDisabledCategory(Category category) Parameters category Category The category. Returns bool true if the object has the specified category; otherwise, false. IsInEnabledInCategory(Category) Determines whether this body ignores the the specified controller. public bool IsInEnabledInCategory(Category category) Parameters category Category The category. Returns bool true if the object has the specified category; otherwise, false. RemoveDisabledCategory(Category) Removes the category. public void RemoveDisabledCategory(Category category) Parameters category Category The category. RemoveEnabledCategory(Category) Removes the category. public void RemoveEnabledCategory(Category category) Parameters category Category The category."
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PhysicsLogic Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll The physics logic class public abstract class PhysicsLogic : FilterData Inheritance object FilterData PhysicsLogic Derived RealExplosion SimpleExplosion Inherited Members FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PhysicsLogic(World) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.PhysicsLogic class public PhysicsLogic(World world) Parameters world World The world Fields ControllerCategory The cat 01 public ControllerCategory ControllerCategory Field Value ControllerCategory Properties World Gets or sets the value of the world public World World { get; internal set; } Property Value World Methods IsActiveOn(Body) Describes whether this instance is active on public override bool IsActiveOn(Body body) Parameters body Body The body Returns bool The bool See Also FilterData"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.RayDataComparer.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.RayDataComparer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RayDataComparer Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll This is a comprarer used for detecting angle difference between rays internal class RayDataComparer : IComparer<float> Inheritance object RayDataComparer Implements IComparer<float> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods IComparer<float>.Compare(float, float) Compares the a int IComparer<float>.Compare(float a, float b) Parameters a float The b float The Returns int The int"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.RealExplosion.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.RealExplosion.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RealExplosion Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll Creates a realistic explosion based on raycasting. Objects in the open will be affected, but objects behind static bodies will not. A body that is half in cover, half in the open will get half the force applied to the end in the open. public sealed class RealExplosion : PhysicsLogic Inheritance object FilterData PhysicsLogic RealExplosion Inherited Members PhysicsLogic.ControllerCategory PhysicsLogic.World PhysicsLogic.IsActiveOn(Body) FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors RealExplosion(World) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.RealExplosion class public RealExplosion(World world) Parameters world World The world Fields EdgeRatio Ratio of arc length to angle from edges to first ray tested. Defaults to 1/40. public float EdgeRatio Field Value float IgnoreWhenInsideShape Ignore Explosion if it happens inside a shape. Default value is false. public bool IgnoreWhenInsideShape Field Value bool MaxAngle Max angle between rays (used when segment is large). Defaults to 15 degrees public float MaxAngle Field Value float MaxEdgeOffset Two degrees: maximum angle from edges to first ray tested private const float MaxEdgeOffset = 0.034906585 Field Value float MaxShapes Maximum number of shapes involved in the explosion. Defaults to 100 public int MaxShapes Field Value int MinRays How many rays per shape/body/segment. Defaults to 5 public int MinRays Field Value int _data The shape data private readonly List<ShapeData> _data Field Value List<ShapeData> _rdc The rdc private readonly RayDataComparer _rdc Field Value RayDataComparer Methods Activate(Vector2, float, float) Activate the explosion at the specified position. public Dictionary<Fixture, Vector2> Activate(Vector2 pos, float radius, float maxForce) Parameters pos Vector2 The position where the explosion happens radius float The explosion radius maxForce float The explosion force at the explosion point (then is inversely proportional to the square of the distance) Returns Dictionary<Fixture, Vector2> A list of bodies and the amount of force that was applied to them."
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.ShapeData.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.ShapeData.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ShapeData Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll The shape data internal struct ShapeData Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Body The body public Body Body Field Value Body Max The max public float Max Field Value float Min The min public float Min Field Value float"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SimpleExplosion Namespace Alis.Core.Physic.Common.PhysicsLogic Assembly Alis.dll Creates a simple explosion that ignores other bodies hiding behind static bodies. public sealed class SimpleExplosion : PhysicsLogic Inheritance object FilterData PhysicsLogic SimpleExplosion Inherited Members PhysicsLogic.ControllerCategory PhysicsLogic.World PhysicsLogic.IsActiveOn(Body) FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors SimpleExplosion(World) Initializes a new instance of the Alis.Core.Physic.Common.PhysicsLogic.SimpleExplosion class public SimpleExplosion(World world) Parameters world World The world Properties Power This is the power used in the power function. A value of 1 means the force applied to bodies in the explosion is linear. A value of 2 means it is exponential. public float Power { get; set; } Property Value float Methods Activate(Vector2, float, float, float) Activate the explosion at the specified position. public Dictionary<Body, Vector2> Activate(Vector2 pos, float radius, float force, float maxForce = 3.4028235E+38) Parameters pos Vector2 The position (center) of the explosion. radius float The radius of the explosion. force float The force applied maxForce float A maximum amount of force. When force gets over this value, it will be equal to maxForce Returns Dictionary<Body, Vector2> A list of bodies and the amount of force that was applied to them. ApplyImpulse(Vector2, float, float, float, HashSet<Body>) Applies the impulse using the specified pos private Dictionary<Body, Vector2> ApplyImpulse(Vector2 pos, float radius, float force, float maxForce, HashSet<Body> overlappingBodies) Parameters pos Vector2 The pos radius float The radius force float The force maxForce float The max force overlappingBodies HashSet<Body> The overlapping bodies Returns Dictionary<Body, Vector2> The forces GetPercent(float, float) Gets the percent using the specified distance private float GetPercent(float distance, float radius) Parameters distance float The distance radius float The radius Returns float The float"
  },
  "api/Alis.Core.Physic.Common.PhysicsLogic.html": {
    "href": "api/Alis.Core.Physic.Common.PhysicsLogic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.PhysicsLogic Classes BreakableBody A type of body that supports multiple fixtures that can break apart. FilterData Contains filter data that can determine whether an object should be processed or not. PhysicsLogic The physics logic class RayDataComparer This is a comprarer used for detecting angle difference between rays RealExplosion Creates a realistic explosion based on raycasting. Objects in the open will be affected, but objects behind static bodies will not. A body that is half in cover, half in the open will get half the force applied to the end in the open. SimpleExplosion Creates a simple explosion that ignores other bodies hiding behind static bodies. Structs ControllerFilter The controller filter ShapeData The shape data Enums BreakableBody.BreakableBodyState The breakable body state enum ControllerCategory The controller category enum"
  },
  "api/Alis.Core.Physic.Common.PolygonError.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonError.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PolygonError Namespace Alis.Core.Physic.Common Assembly Alis.dll The polygon error enum public enum PolygonError Fields NoError = 0 There were no errors in the polygon InvalidAmountOfVertices = 1 Polygon must have between 3 and Settings.MaxPolygonVertices vertices. NotSimple = 2 Polygon must be simple. This means no overlapping edges. NotCounterClockWise = 3 Polygon must have a counter clockwise winding. NotConvex = 4 The polygon is concave, it needs to be convex. AreaTooSmall = 5 Polygon area is too small. SideTooSmall = 6 The polygon has a side that is too short."
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.CuttingTools.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.CuttingTools.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CuttingTools Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll The cutting tools class public static class CuttingTools Inheritance object CuttingTools Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Cut(World, Vector2, Vector2) This is a high-level function to cuts fixtures inside the given world, using the start and end points. Note: We don't support cutting when the start or end is inside a shape. public static bool Cut(World world, Vector2 start, Vector2 end) Parameters world World The world. start Vector2 The startpoint. end Vector2 The endpoint. Returns bool True if the cut was performed. SplitShape(Fixture, Vector2, Vector2, out Vertices, out Vertices) Split a fixture into 2 vertice collections using the given entry and exit-point. public static void SplitShape(Fixture fixture, Vector2 entryPoint, Vector2 exitPoint, out Vertices first, out Vertices second) Parameters fixture Fixture The Fixture to split entryPoint Vector2 The entry point - The start point exitPoint Vector2 The exit point - The end point first Vertices The first collection of vertexes second Vertices The second collection of vertexes"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.PolyClipError.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.PolyClipError.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PolyClipError Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll The poly clip error enum public enum PolyClipError Fields None = 0 The none poly clip error DegeneratedOutput = 1 The degenerated output poly clip error NonSimpleInput = 2 The non simple input poly clip error BrokenResult = 3 The broken result poly clip error"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.PolyClipType.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.PolyClipType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum PolyClipType Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll The poly clip type enum internal enum PolyClipType Fields Intersect = 0 The intersect poly clip type Union = 1 The union poly clip type Difference = 2 The difference poly clip type"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.SimpleCombiner.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.SimpleCombiner.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SimpleCombiner Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll Combines a list of triangles into a list of convex polygons. Starts with a seed triangle, keep adding triangles to it until you can't add any more without making the polygon non-convex. public static class SimpleCombiner Inheritance object SimpleCombiner Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods AddTriangle(Vertices, Vertices) Adds the triangle using the specified t private static Vertices AddTriangle(Vertices t, Vertices vertices) Parameters t Vertices The vertices Vertices The vertices Returns Vertices The result PolygonizeTriangles(List<Vertices>, int, float) Combine a list of triangles into a list of convex polygons. Note: This only works on triangles. public static List<Vertices> PolygonizeTriangles(List<Vertices> triangles, int maxPolys = 2147483647, float tolerance = 0.001) Parameters triangles List<Vertices> The triangles. maxPolys int The maximun number of polygons to return. tolerance float The tolerance Returns List<Vertices>"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.SimplifyTools.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.SimplifyTools.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class SimplifyTools Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll Provides a set of tools to simplify polygons in various ways. public static class SimplifyTools Inheritance object SimplifyTools Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods CollinearSimplify(Vertices, float) Removes all collinear points on the polygon. public static Vertices CollinearSimplify(Vertices vertices, float collinearityTolerance = 0) Parameters vertices Vertices The polygon that needs simplification. collinearityTolerance float The collinearity tolerance. Returns Vertices A simplified polygon. DouglasPeuckerSimplify(Vertices, float) Ramer-Douglas-Peucker polygon simplification algorithm. This is the general recursive version that does not use the speed-up technique by using the Melkman convex hull. If you pass in 0, it will remove all collinear points. public static Vertices DouglasPeuckerSimplify(Vertices vertices, float distanceTolerance) Parameters vertices Vertices distanceTolerance float Returns Vertices The simplified polygon MergeIdenticalPoints(Vertices) Merges the identical points in the polygon. public static Vertices MergeIdenticalPoints(Vertices vertices) Parameters vertices Vertices The vertices. Returns Vertices MergeParallelEdges(Vertices, float) Merges all parallel edges in the list of vertices public static Vertices MergeParallelEdges(Vertices vertices, float tolerance) Parameters vertices Vertices The vertices. tolerance float The tolerance. Returns Vertices ReduceByArea(Vertices, float) Simplify the polygon by removing all points that in pairs of 3 have an area less than the tolerance. Pass in 0 as tolerance, and it will only remove collinear points. public static Vertices ReduceByArea(Vertices vertices, float areaTolerance) Parameters vertices Vertices areaTolerance float Returns Vertices ReduceByDistance(Vertices, float) Reduces the polygon by distance. public static Vertices ReduceByDistance(Vertices vertices, float distance) Parameters vertices Vertices The vertices. distance float The distance between points. Points closer than this will be removed. Returns Vertices ReduceByNth(Vertices, int) Reduces the polygon by removing the Nth vertex in the vertices list. public static Vertices ReduceByNth(Vertices vertices, int nth) Parameters vertices Vertices The vertices. nth int The Nth point to remove. Example: 5. Returns Vertices SimplifySection(Vertices, int, int, bool[], float) Simplifies the section using the specified vertices private static void SimplifySection(Vertices vertices, int i, int j, bool[] usePoint, float distanceTolerance) Parameters vertices Vertices The vertices i int The j int The usePoint bool[] The use point distanceTolerance float The distance tolerance"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.YuPengClipper.Edge.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.YuPengClipper.Edge.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class YuPengClipper.Edge Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll Specifies an Edge. Edges are used to represent simplicies in simplical chains private sealed class YuPengClipper.Edge Inheritance object YuPengClipper.Edge Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Edge(Vector2, Vector2) Initializes a new instance of the Alis.Core.Physic.Common.PolygonManipulation.YuPengClipper.Edge class public Edge(Vector2 edgeStart, Vector2 edgeEnd) Parameters edgeStart Vector2 The edge start edgeEnd Vector2 The edge end Properties EdgeEnd Gets the value of the edge end public Vector2 EdgeEnd { get; } Property Value Vector2 EdgeStart Gets the value of the edge start public Vector2 EdgeStart { get; } Property Value Vector2 Methods Equals(object) Describes whether this instance equals public override bool Equals(object obj) Parameters obj object The obj Returns bool The bool Equals(Edge) Describes whether this instance equals public bool Equals(YuPengClipper.Edge e) Parameters e YuPengClipper.Edge The Returns bool The bool GetCenter() Gets the center public Vector2 GetCenter() Returns Vector2 The vector GetHashCode() Gets the hash code public override int GetHashCode() Returns int The int Operators operator -(Edge) public static YuPengClipper.Edge operator -(YuPengClipper.Edge e) Parameters e YuPengClipper.Edge Returns YuPengClipper.Edge"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.YuPengClipper.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.YuPengClipper.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class YuPengClipper Namespace Alis.Core.Physic.Common.PolygonManipulation Assembly Alis.dll The yu peng clipper class public static class YuPengClipper Inheritance object YuPengClipper Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ClipperEpsilonSquared The clipper epsilon squared private const float ClipperEpsilonSquared = 1.1920929E-07 Field Value float Methods BuildPolygonsFromChain(List<Edge>, out List<Vertices>) Calculates the polygon(s) from the result simplical chain. private static PolyClipError BuildPolygonsFromChain(List<YuPengClipper.Edge> simplicies, out List<Vertices> result) Parameters simplicies List<YuPengClipper.Edge> result List<Vertices> Returns PolyClipError Remarks Used by method Execute(). CalculateBeta(Vector2, Edge, float) Needed to calculate the characteristics function of a simplex. private static float CalculateBeta(Vector2 point, YuPengClipper.Edge e, float coefficient) Parameters point Vector2 e YuPengClipper.Edge coefficient float Returns float Remarks Used by method CalculateEdgeCharacter(). CalculateIntersections(Vertices, Vertices, out Vertices, out Vertices) Calculates all intersections between two polygons. private static void CalculateIntersections(Vertices polygon1, Vertices polygon2, out Vertices slicedPoly1, out Vertices slicedPoly2) Parameters polygon1 Vertices The first polygon. polygon2 Vertices The second polygon. slicedPoly1 Vertices Returns the first polygon with added intersection points. slicedPoly2 Vertices Returns the second polygon with added intersection points. CalculateResultChain(List<float>, List<Edge>, List<float>, List<Edge>, PolyClipType, out List<Edge>) Calculates the characteristics function for all edges of the given simplical chains and builds the result chain. private static void CalculateResultChain(List<float> poly1Coeff, List<YuPengClipper.Edge> poly1Simplicies, List<float> poly2Coeff, List<YuPengClipper.Edge> poly2Simplicies, PolyClipType clipType, out List<YuPengClipper.Edge> resultSimplices) Parameters poly1Coeff List<float> poly1Simplicies List<YuPengClipper.Edge> poly2Coeff List<float> poly2Simplicies List<YuPengClipper.Edge> clipType PolyClipType resultSimplices List<YuPengClipper.Edge> Remarks Used by method Execute(). CalculateSimplexCoefficient(Vector2, Vector2, Vector2) Returns the coefficient of a simplex. private static float CalculateSimplexCoefficient(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 b Vector2 c Vector2 Returns float Remarks Used by method CalculateSimplicalChain(). CalculateSimplicalChain(Vertices, out List<float>, out List<Edge>) Calculates the simplical chain corresponding to the input polygon. private static void CalculateSimplicalChain(Vertices poly, out List<float> coeff, out List<YuPengClipper.Edge> simplicies) Parameters poly Vertices coeff List<float> simplicies List<YuPengClipper.Edge> Remarks Used by method Execute(). Difference(Vertices, Vertices, out PolyClipError) Differences the polygon 1 public static List<Vertices> Difference(Vertices polygon1, Vertices polygon2, out PolyClipError error) Parameters polygon1 Vertices The polygon polygon2 Vertices The polygon error PolyClipError The error Returns List<Vertices> A list of vertices Execute(Vertices, Vertices, PolyClipType, out PolyClipError) Implements \"A new algorithm for Boolean operations on general polygons\" available here: http://liama.ia.ac.cn/wiki/_media/user:dong:dong_cg_05.pdf Merges two polygons, a subject and a clip with the specified operation. Polygons may not be self-intersecting. Warning: May yield incorrect results or even crash if polygons contain collinear points. private static List<Vertices> Execute(Vertices subject, Vertices clip, PolyClipType clipType, out PolyClipError error) Parameters subject Vertices The subject polygon. clip Vertices The clip polygon, which is added, substracted or intersected with the subject clipType PolyClipType The operation to be performed. Either Union, Difference or Intersection. error PolyClipError The error generated (if any) Returns List<Vertices> A list of closed polygons, which make up the result of the clipping operation. Outer contours are ordered counter clockwise, holes are ordered clockwise. GetAlpha(Vector2, Vector2, Vector2) Needed for sorting multiple intersections points on the same edge. private static float GetAlpha(Vector2 start, Vector2 end, Vector2 point) Parameters start Vector2 end Vector2 point Vector2 Returns float Remarks Used by method CalculateIntersections(). Intersect(Vertices, Vertices, out PolyClipError) Intersects the polygon 1 public static List<Vertices> Intersect(Vertices polygon1, Vertices polygon2, out PolyClipError error) Parameters polygon1 Vertices The polygon polygon2 Vertices The polygon error PolyClipError The error Returns List<Vertices> A list of vertices PointInSimplex(Vector2, Edge) Winding number test for a point in a simplex. private static bool PointInSimplex(Vector2 point, YuPengClipper.Edge edge) Parameters point Vector2 The point to be tested. edge YuPengClipper.Edge The edge that the point is tested against. Returns bool False if the winding number is even and the point is outside the simplex and True otherwise. PointOnLineSegment(Vector2, Vector2, Vector2) Tests if a point lies on a line segment. private static bool PointOnLineSegment(Vector2 start, Vector2 end, Vector2 point) Parameters start Vector2 end Vector2 point Vector2 Returns bool Remarks Used by method CalculateBeta(). Union(Vertices, Vertices, out PolyClipError) Unions the polygon 1 public static List<Vertices> Union(Vertices polygon1, Vertices polygon2, out PolyClipError error) Parameters polygon1 Vertices The polygon polygon2 Vertices The polygon error PolyClipError The error Returns List<Vertices> A list of vertices VectorEqual(Vector2, Vector2) Describes whether vector equal private static bool VectorEqual(Vector2 vec1, Vector2 vec2) Parameters vec1 Vector2 The vec vec2 Vector2 The vec Returns bool The bool"
  },
  "api/Alis.Core.Physic.Common.PolygonManipulation.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonManipulation.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.PolygonManipulation Classes CuttingTools The cutting tools class YuPengClipper.Edge Specifies an Edge. Edges are used to represent simplicies in simplical chains SimpleCombiner Combines a list of triangles into a list of convex polygons. Starts with a seed triangle, keep adding triangles to it until you can't add any more without making the polygon non-convex. SimplifyTools Provides a set of tools to simplify polygons in various ways. YuPengClipper The yu peng clipper class Enums PolyClipError The poly clip error enum PolyClipType The poly clip type enum"
  },
  "api/Alis.Core.Physic.Common.PolygonTools.html": {
    "href": "api/Alis.Core.Physic.Common.PolygonTools.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PolygonTools Namespace Alis.Core.Physic.Common Assembly Alis.dll The polygon tools class public static class PolygonTools Inheritance object PolygonTools Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods CreateArc(float, int, float) Creates the arc using the specified radians public static Vertices CreateArc(float radians, int sides, float radius) Parameters radians float The radians sides int The sides radius float The radius Returns Vertices The vertices CreateCapsule(float, float, int) Creates an capsule with the specified height, radius and number of edges. A capsule has the same form as a pill capsule. public static Vertices CreateCapsule(float height, float endRadius, int edges) Parameters height float Height (inner height + 2 * radius) of the capsule. endRadius float Radius of the capsule ends. edges int The number of edges of the capsule ends. The more edges, the more it resembles an capsule Returns Vertices CreateCapsule(float, float, int, float, int) Creates an capsule with the specified height, radius and number of edges. A capsule has the same form as a pill capsule. public static Vertices CreateCapsule(float height, float topRadius, int topEdges, float bottomRadius, int bottomEdges) Parameters height float Height (inner height + radii) of the capsule. topRadius float Radius of the top. topEdges int The number of edges of the top. The more edges, the more it resembles an capsule bottomRadius float Radius of bottom. bottomEdges int The number of edges of the bottom. The more edges, the more it resembles an capsule Returns Vertices CreateCircle(float, int) Creates a circle with the specified radius and number of edges. public static Vertices CreateCircle(float radius, int numberOfEdges) Parameters radius float The radius. numberOfEdges int The number of edges. The more edges, the more it resembles a circle Returns Vertices CreateEllipse(float, float, int) Creates a ellipse with the specified width, height and number of edges. public static Vertices CreateEllipse(float xRadius, float yRadius, int numberOfEdges) Parameters xRadius float Width of the ellipse. yRadius float Height of the ellipse. numberOfEdges int The number of edges. The more edges, the more it resembles an ellipse Returns Vertices CreateGear(float, int, float, float) Creates a gear shape with the specified radius and number of teeth. public static Vertices CreateGear(float radius, int numberOfTeeth, float tipPercentage, float toothHeight) Parameters radius float The radius. numberOfTeeth int The number of teeth. tipPercentage float The tip percentage. toothHeight float Height of the tooth. Returns Vertices CreateLine(Vector2, Vector2) Set this as a single edge. public static Vertices CreateLine(Vector2 start, Vector2 end) Parameters start Vector2 The first point. end Vector2 The second point. Returns Vertices CreateRectangle(float, float) Build vertices to represent an axis-aligned box. public static Vertices CreateRectangle(float hx, float hy) Parameters hx float the half-width. hy float the half-height. Returns Vertices CreateRectangle(float, float, Vector2, float) Build vertices to represent an oriented box. public static Vertices CreateRectangle(float hx, float hy, Vector2 center, float angle) Parameters hx float the half-width. hy float the half-height. center Vector2 the center of the box in local coordinates. angle float the rotation of the box in local coordinates. Returns Vertices CreateRoundedRectangle(float, float, float, float, int) Creates a rounded rectangle with the specified width and height. public static Vertices CreateRoundedRectangle(float width, float height, float xRadius, float yRadius, int segments) Parameters width float The width. height float The height. xRadius float The rounding X radius. yRadius float The rounding Y radius. segments int The number of segments to subdivide the edges. Returns Vertices"
  },
  "api/Alis.Core.Physic.Common.Sweep.html": {
    "href": "api/Alis.Core.Physic.Common.Sweep.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Sweep Namespace Alis.Core.Physic.Common Assembly Alis.dll This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center of mass position. public struct Sweep Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields A World angles public float A Field Value float A0 The public float A0 Field Value float Alpha0 Fraction of the current time step in the range [0,1] c0 and a0 are the positions at alpha0. public float Alpha0 Field Value float C Center world positions public Vector2 C Field Value Vector2 C0 The public Vector2 C0 Field Value Vector2 LocalCenter Local center of mass position public Vector2 LocalCenter Field Value Vector2 Methods Advance(float) Advance the sweep forward, yielding a new initial state. public void Advance(float alpha) Parameters alpha float new initial time.. GetTransform(out Transform, float) Get the interpolated transform at a specific time. public void GetTransform(out Transform xfb, float beta) Parameters xfb Transform The transform. beta float beta is a factor in [0,1], where 0 indicates alpha0. Normalize() Normalize the angles. public void Normalize()"
  },
  "api/Alis.Core.Physic.Common.TextureTools.CxFastListNode-1.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.CxFastListNode-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class CxFastListNode<T> Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll The cx fast list node class internal class CxFastListNode<T> Type Parameters T Inheritance object CxFastListNode<T> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors CxFastListNode(T) Initializes a new instance of the class public CxFastListNode(T obj) Parameters obj T The obj Fields _elt The elt internal T _elt Field Value T _next The next internal CxFastListNode<T> _next Field Value CxFastListNode<T> Methods Elem() Elems this instance public T Elem() Returns T The Next() Nexts this instance public CxFastListNode<T> Next() Returns CxFastListNode<T> A cx fast list node of t"
  },
  "api/Alis.Core.Physic.Common.TextureTools.GeomPolyVal.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.GeomPolyVal.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GeomPolyVal Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll The geom poly val class internal class GeomPolyVal Inheritance object GeomPolyVal Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GeomPolyVal(GeomPoly, int) Initializes a new instance of the Alis.Core.Physic.Common.TextureTools.GeomPolyVal class public GeomPolyVal(MarchingSquares.GeomPoly geomP, int K) Parameters geomP MarchingSquares.GeomPoly The geom K int The Fields GeomP The geom public MarchingSquares.GeomPoly GeomP Field Value MarchingSquares.GeomPoly Key public readonly int Key Field Value int"
  },
  "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.CxFastList-1.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.CxFastList-1.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MarchingSquares.CxFastList<T> Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll Designed as a complete port of CxFastList from CxStd. internal class MarchingSquares.CxFastList<T> Type Parameters T Inheritance object MarchingSquares.CxFastList<T> Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _count The count private int _count Field Value int _head The head private CxFastListNode<T> _head Field Value CxFastListNode<T> Methods Add(T) add object to list (O(1)) public CxFastListNode<T> Add(T value) Parameters value T Returns CxFastListNode<T> Begin() Iterator to start of list (O(1)) public CxFastListNode<T> Begin() Returns CxFastListNode<T> Clear() empty the list (O(1) if CxMixList, O(n) otherwise) public void Clear() Empty() whether the list is empty (O(1)) public bool Empty() Returns bool End() Iterator to end of list (O(1)) public CxFastListNode<T> End() Returns CxFastListNode<T> Erase(CxFastListNode<T>, CxFastListNode<T>) removes the element pointed to by 'node' with 'prev' being the previous iterator, returning an iterator to the element following that of 'node' (O(1)) public CxFastListNode<T> Erase(CxFastListNode<T> prev, CxFastListNode<T> node) Parameters prev CxFastListNode<T> node CxFastListNode<T> Returns CxFastListNode<T> Find(T) Finds the value public CxFastListNode<T> Find(T value) Parameters value T The value Returns CxFastListNode<T> A cx fast list node of t Front() Returns first element of list (O(1)) public T Front() Returns T GetListOfElements() Gets the list of elements public List<T> GetListOfElements() Returns List<T> The list Has(T) returns true if 'value' is an element of the list (O(n)) public bool Has(T value) Parameters value T Returns bool Insert(CxFastListNode<T>, T) insert object after 'node' returning an iterator to the inserted object. public CxFastListNode<T> Insert(CxFastListNode<T> node, T value) Parameters node CxFastListNode<T> value T Returns CxFastListNode<T> Pop() pop element from head of list (O(1)) Note: this does not return the object popped! There is good reason to this, and it regards the Alloc list variants which guarantee objects are released to the object pool. You do not want to retrieve an element through pop or else that object may suddenly be used by another piece of code which retrieves it from the object pool. public CxFastListNode<T> Pop() Returns CxFastListNode<T> Remove(T) remove object from list, returns true if an element was removed (O(n)) public bool Remove(T value) Parameters value T Returns bool Size() computes size of list (O(n)) public int Size() Returns int"
  },
  "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.GeomPoly.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.GeomPoly.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MarchingSquares.GeomPoly Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll The geom poly class internal class MarchingSquares.GeomPoly Inheritance object MarchingSquares.GeomPoly Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GeomPoly() Initializes a new instance of the Alis.Core.Physic.Common.TextureTools.MarchingSquares.GeomPoly class public GeomPoly() Fields Length The length public int Length Field Value int Points The points public MarchingSquares.CxFastList<Vector2> Points Field Value MarchingSquares.CxFastList<Vector2>"
  },
  "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.MarchingSquares.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MarchingSquares Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll The marching squares class public static class MarchingSquares Inheritance object MarchingSquares Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _lookMarch The look march private static readonly int[] _lookMarch Field Value int[] Methods DetectSquares(AABB, float, float, sbyte[,], int, bool) Marching squares over the given domain using the mesh defined via the dimensions (wid,hei) to build a set of polygons such that f(x,y) less than 0, using the given number 'bin' for recursive linear inteprolation along cell boundaries. if 'comb' is true, then the polygons will also be composited into larger possible concave polygons. public static List<Vertices> DetectSquares(AABB domain, float cellWidth, float cellHeight, sbyte[,] f, int lerpCount, bool combine) Parameters domain AABB cellWidth float cellHeight float f sbyte[,] lerpCount int combine bool Returns List<Vertices> Lerp(float, float, float, float) Lerps the x 0 private static float Lerp(float x0, float x1, float v0, float v1) Parameters x0 float The x1 float The v0 float The v1 float The Returns float The float MarchSquare(sbyte[,], sbyte[,], ref GeomPoly, int, int, float, float, float, float, int) Marches the square using the specified f private static int MarchSquare(sbyte[,] f, sbyte[,] fs, ref MarchingSquares.GeomPoly poly, int ax, int ay, float x0, float y0, float x1, float y1, int bin) Parameters f sbyte[,] The fs sbyte[,] The fs poly MarchingSquares.GeomPoly The poly ax int The ax ay int The ay x0 float The y0 float The x1 float The y1 float The bin int The bin Returns int The key Square(float) private static float Square(float x) Parameters x float Returns float VecCross(Vector2, Vector2) Vecs the cross using the specified a private static float VecCross(Vector2 a, Vector2 b) Parameters a Vector2 The b Vector2 The Returns float The float VecDsq(Vector2, Vector2) Vecs the dsq using the specified a private static float VecDsq(Vector2 a, Vector2 b) Parameters a Vector2 The b Vector2 The Returns float The float Xlerp(float, float, float, float, float, sbyte[,], int) private static float Xlerp(float x0, float x1, float y, float v0, float v1, sbyte[,] f, int c) Parameters x0 float x1 float y float v0 float v1 float f sbyte[,] c int Returns float Ylerp(float, float, float, float, float, sbyte[,], int) private static float Ylerp(float y0, float y1, float x, float v0, float v1, sbyte[,] f, int c) Parameters y0 float y1 float x float v0 float v1 float f sbyte[,] c int Returns float combLeft(ref GeomPoly, ref GeomPoly) Combs the left using the specified polya private static void combLeft(ref MarchingSquares.GeomPoly polya, ref MarchingSquares.GeomPoly polyb) Parameters polya MarchingSquares.GeomPoly The polya polyb MarchingSquares.GeomPoly The polyb"
  },
  "api/Alis.Core.Physic.Common.TextureTools.Terrain.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.Terrain.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Terrain Namespace Alis.Core.Physic.Common.TextureTools Assembly Alis.dll Simple class to maintain a terrain. It can keep track public class Terrain Inheritance object Terrain Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Terrain(World, AABB) Creates a new terrain. public Terrain(World world, AABB area) Parameters world World The World area AABB The area of the terrain. Terrain(World, Vector2, float, float) Creates a new terrain public Terrain(World world, Vector2 position, float width, float height) Parameters world World The World position Vector2 The position (center) of the terrain. width float The width of the terrain. height float The height of the terrain. Fields CellSize Points per cell. public int CellSize Field Value int Center Center of terrain in world units. public Vector2 Center Field Value Vector2 Decomposer Decomposer to use when regenerating terrain. Can be changed on the fly without consequence. Note: Some decomposerers are unstable. public TriangulationAlgorithm Decomposer Field Value TriangulationAlgorithm Height Height of terrain in world units. public float Height Field Value float Iterations Number of iterations to perform in the Marching Squares algorithm. Note: More then 3 has almost no effect on quality. public int Iterations Field Value int PointsPerUnit Points per each world unit used to define the terrain in the point cloud. public int PointsPerUnit Field Value int SubCellSize Points per sub cell. public int SubCellSize Field Value int Width Width of terrain in world units. public float Width Field Value float World World to manage terrain in. public World World Field Value World _bodyMap Generated bodies. private List<Body>[,] _bodyMap Field Value List<Body>[,] _dirtyArea The dirty area private AABB _dirtyArea Field Value AABB _localHeight The local height private float _localHeight Field Value float _localWidth The local width private float _localWidth Field Value float _terrainMap Point cloud defining the terrain. private sbyte[,] _terrainMap Field Value sbyte[,] _topLeft The top left private Vector2 _topLeft Field Value Vector2 _xnum The xnum private int _xnum Field Value int _ynum The ynum private int _ynum Field Value int Methods ApplyData(sbyte[,], Vector2) Apply the specified texture data to the terrain. public void ApplyData(sbyte[,] data, Vector2 offset = default) Parameters data sbyte[,] offset Vector2 GenerateTerrain(int, int) Generates the terrain using the specified gx private void GenerateTerrain(int gx, int gy) Parameters gx int The gx gy int The gy Initialize() Initialize the terrain for use. public void Initialize() ModifyTerrain(Vector2, sbyte) Modify a single point in the terrain. public void ModifyTerrain(Vector2 location, sbyte value) Parameters location Vector2 World location to modify. Automatically clipped. value sbyte -1 = inside terrain, 1 = outside terrain RegenerateTerrain() Regenerate the terrain. public void RegenerateTerrain() RemoveOldData(int, int, int, int) Removes the old data using the specified x start private void RemoveOldData(int xStart, int xEnd, int yStart, int yEnd) Parameters xStart int The start xEnd int The end yStart int The start yEnd int The end"
  },
  "api/Alis.Core.Physic.Common.TextureTools.html": {
    "href": "api/Alis.Core.Physic.Common.TextureTools.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common.TextureTools Classes MarchingSquares.CxFastList<T> Designed as a complete port of CxFastList from CxStd. CxFastListNode<T> The cx fast list node class MarchingSquares.GeomPoly The geom poly class GeomPolyVal The geom poly val class MarchingSquares The marching squares class Terrain Simple class to maintain a terrain. It can keep track"
  },
  "api/Alis.Core.Physic.Common.Transform.html": {
    "href": "api/Alis.Core.Physic.Common.Transform.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct Transform Namespace Alis.Core.Physic.Common Assembly Alis.dll A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames. public struct Transform Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors Transform(Vector2, Complex) Initialize using a position vector and a Complex rotation. public Transform(Vector2 position, Complex rotation) Parameters position Vector2 The position. rotation Complex The rotation Transform(Vector2, float) Initialize using a position vector and a rotation. public Transform(Vector2 position, float angle) Parameters position Vector2 The position. angle float The rotation angle Fields p The public Vector2 p Field Value Vector2 q The public Complex q Field Value Complex Properties Identity Gets the value of the identity public static Transform Identity { get; } Property Value Transform Methods Divide(Vector2, ref Transform) Divides the left public static Vector2 Divide(Vector2 left, ref Transform right) Parameters left Vector2 The left right Transform The right Returns Vector2 The vector Divide(ref Vector2, ref Transform) Divides the left public static Vector2 Divide(ref Vector2 left, ref Transform right) Parameters left Vector2 The left right Transform The right Returns Vector2 The vector Divide(Vector2, ref Transform, out Vector2) Divides the left public static void Divide(Vector2 left, ref Transform right, out Vector2 result) Parameters left Vector2 The left right Transform The right result Vector2 The result Divide(ref Transform, ref Transform) Divides the left public static Transform Divide(ref Transform left, ref Transform right) Parameters left Transform The left right Transform The right Returns Transform The transform Divide(ref Transform, ref Transform, out Transform) Divides the left public static void Divide(ref Transform left, ref Transform right, out Transform result) Parameters left Transform The left right Transform The right result Transform The result Divide(ref Transform, Complex, out Transform) Divides the left public static void Divide(ref Transform left, Complex right, out Transform result) Parameters left Transform The left right Complex The right result Transform The result Multiply(Vector2, ref Transform) Multiplies the left public static Vector2 Multiply(Vector2 left, ref Transform right) Parameters left Vector2 The left right Transform The right Returns Vector2 The vector Multiply(ref Vector2, ref Transform) Multiplies the left public static Vector2 Multiply(ref Vector2 left, ref Transform right) Parameters left Vector2 The left right Transform The right Returns Vector2 The vector Multiply(ref Transform, ref Transform) Multiplies the left public static Transform Multiply(ref Transform left, ref Transform right) Parameters left Transform The left right Transform The right Returns Transform The transform Multiply(ref Transform, Complex, out Transform) Multiplies the left public static void Multiply(ref Transform left, Complex right, out Transform result) Parameters left Transform The left right Complex The right result Transform The result"
  },
  "api/Alis.Core.Physic.Common.Vertices.html": {
    "href": "api/Alis.Core.Physic.Common.Vertices.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Vertices Namespace Alis.Core.Physic.Common Assembly Alis.dll The vertices class public class Vertices : List<Vector2>, IList<Vector2>, ICollection<Vector2>, IReadOnlyList<Vector2>, IReadOnlyCollection<Vector2>, IEnumerable<Vector2>, IList, ICollection, IEnumerable Inheritance object List<Vector2> Vertices Derived EarclipDecomposer.Triangle Implements IList<Vector2> ICollection<Vector2> IReadOnlyList<Vector2> IReadOnlyCollection<Vector2> IEnumerable<Vector2> IList ICollection IEnumerable Inherited Members List<Vector2>.IList.get_Item(int) List<Vector2>.IList.set_Item(int, object) List<Vector2>.Add(Vector2) List<Vector2>.AddRange(IEnumerable<Vector2>) List<Vector2>.AsReadOnly() List<Vector2>.BinarySearch(int, int, Vector2, IComparer<Vector2>?) List<Vector2>.BinarySearch(Vector2) List<Vector2>.BinarySearch(Vector2, IComparer<Vector2>?) List<Vector2>.Clear() List<Vector2>.Contains(Vector2) List<Vector2>.ConvertAll<TOutput>(Converter<Vector2, TOutput>) List<Vector2>.CopyTo(int, Vector2[], int, int) List<Vector2>.CopyTo(Vector2[]) List<Vector2>.CopyTo(Vector2[], int) List<Vector2>.Exists(Predicate<Vector2>) List<Vector2>.Find(Predicate<Vector2>) List<Vector2>.FindAll(Predicate<Vector2>) List<Vector2>.FindIndex(int, int, Predicate<Vector2>) List<Vector2>.FindIndex(int, Predicate<Vector2>) List<Vector2>.FindIndex(Predicate<Vector2>) List<Vector2>.FindLast(Predicate<Vector2>) List<Vector2>.FindLastIndex(int, int, Predicate<Vector2>) List<Vector2>.FindLastIndex(int, Predicate<Vector2>) List<Vector2>.FindLastIndex(Predicate<Vector2>) List<Vector2>.ForEach(Action<Vector2>) List<Vector2>.GetEnumerator() List<Vector2>.GetRange(int, int) List<Vector2>.IndexOf(Vector2) List<Vector2>.IndexOf(Vector2, int) List<Vector2>.IndexOf(Vector2, int, int) List<Vector2>.Insert(int, Vector2) List<Vector2>.InsertRange(int, IEnumerable<Vector2>) List<Vector2>.LastIndexOf(Vector2) List<Vector2>.LastIndexOf(Vector2, int) List<Vector2>.LastIndexOf(Vector2, int, int) List<Vector2>.Remove(Vector2) List<Vector2>.RemoveAll(Predicate<Vector2>) List<Vector2>.RemoveAt(int) List<Vector2>.RemoveRange(int, int) List<Vector2>.Reverse() List<Vector2>.Reverse(int, int) List<Vector2>.Sort() List<Vector2>.Sort(IComparer<Vector2>?) List<Vector2>.Sort(Comparison<Vector2>) List<Vector2>.Sort(int, int, IComparer<Vector2>?) List<Vector2>.IEnumerable<Vector2>.GetEnumerator() List<Vector2>.ICollection.CopyTo(Array, int) List<Vector2>.IEnumerable.GetEnumerator() List<Vector2>.IList.Add(object) List<Vector2>.IList.Contains(object) List<Vector2>.IList.IndexOf(object) List<Vector2>.IList.Insert(int, object) List<Vector2>.IList.Remove(object) List<Vector2>.ToArray() List<Vector2>.TrimExcess() List<Vector2>.TrueForAll(Predicate<Vector2>) List<Vector2>.Capacity List<Vector2>.Count List<Vector2>.this[int] List<Vector2>.ICollection<Vector2>.IsReadOnly List<Vector2>.ICollection.IsSynchronized List<Vector2>.ICollection.SyncRoot List<Vector2>.IList.IsFixedSize List<Vector2>.IList.IsReadOnly List<Vector2>.IList.Item[int] object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Vertices() Initializes a new instance of the Alis.Core.Physic.Common.Vertices class public Vertices() Vertices(int) Initializes a new instance of the Alis.Core.Physic.Common.Vertices class public Vertices(int capacity) Parameters capacity int The capacity Vertices(IEnumerable<Vector2>) Initializes a new instance of the Alis.Core.Physic.Common.Vertices class public Vertices(IEnumerable<Vector2> vertices) Parameters vertices IEnumerable<Vector2> The vertices Properties AttachedToBody Gets or sets the value of the attached to body internal bool AttachedToBody { get; set; } Property Value bool Holes You can add holes to this collection. It will get respected by some of the triangulation algoithms, but otherwise not used. public List<Vertices> Holes { get; set; } Property Value List<Vertices> Methods CheckPolygon() Checks if the polygon is valid for use in the engine. Performs a full check, for simplicity, convexity, orientation, minimum angle, and volume. From Eric Jordan's convex decomposition library public PolygonError CheckPolygon() Returns PolygonError PolygonError.NoError if there were no error. ForceCounterClockWise() Forces the vertices to be counter clock wise order. public void ForceCounterClockWise() GetAABB() Returns an AABB that fully contains this polygon. public AABB GetAABB() Returns AABB GetArea() Gets the area. public float GetArea() Returns float GetCentroid() Gets the centroid. public Vector2 GetCentroid() Returns Vector2 GetSignedArea() Gets the signed area. If the area is less than 0, it indicates that the polygon is clockwise winded. public float GetSignedArea() Returns float The signed area IsConvex() Determines whether the polygon is convex. O(n^2) running time. Assumptions: The polygon is in counter clockwise order The polygon has no overlapping edges public bool IsConvex() Returns bool true if it is convex; otherwise, false. IsCounterClockWise() Indicates if the vertices are in counter clockwise order. Warning: If the area of the polygon is 0, it is unable to determine the winding. public bool IsCounterClockWise() Returns bool IsSimple() Checks if the vertices forms an simple polygon by checking for edge crossings. public bool IsSimple() Returns bool NextIndex(int) Gets the next index. Used for iterating all the edges with wrap-around. public int NextIndex(int index) Parameters index int The current index Returns int NextVertex(int) Gets the next vertex. Used for iterating all the edges with wrap-around. public Vector2 NextVertex(int index) Parameters index int The current index Returns Vector2 PointInPolygon(ref Vector2) Winding number test for a point in a polygon. public int PointInPolygon(ref Vector2 point) Parameters point Vector2 The point to be tested. Returns int -1 if the winding number is zero and the point is outside the polygon, 1 if the point is inside the polygon, and 0 if the point is on the polygons edge. PointInPolygonAngle(ref Vector2) Compute the sum of the angles made between the test point and each pair of points making up the polygon. If this sum is 2pi then the point is an interior point, if 0 then the point is an exterior point. ref: http://ozviz.wasp.uwa.edu.au/~pbourke/geometry/insidepoly/ - Solution 2 public bool PointInPolygonAngle(ref Vector2 point) Parameters point Vector2 Returns bool PreviousIndex(int) Gets the previous index. Used for iterating all the edges with wrap-around. public int PreviousIndex(int index) Parameters index int The current index Returns int PreviousVertex(int) Gets the previous vertex. Used for iterating all the edges with wrap-around. public Vector2 PreviousVertex(int index) Parameters index int The current index Returns Vector2 ProjectToAxis(ref Vector2, out float, out float) Projects to axis. public void ProjectToAxis(ref Vector2 axis, out float min, out float max) Parameters axis Vector2 The axis. min float The min. max float The max. Rotate(float) Rotate the vertices with the defined value in radians. Warning: Using this method on an active set of vertices of a Body, will cause problems with collisions. Use Body.Rotation instead. public void Rotate(float value) Parameters value float The amount to rotate by in radians. Scale(Vector2) Scales the vertices with the specified vector. public void Scale(Vector2 value) Parameters value Vector2 The Value. Scale(ref Vector2) Scales the vertices with the specified vector. public void Scale(ref Vector2 value) Parameters value Vector2 The Value. ToString() Returns the string public override string ToString() Returns string The string Translate(Vector2) Translates the vertices with the specified vector. public void Translate(Vector2 value) Parameters value Vector2 The value. Translate(ref Vector2) Translates the vertices with the specified vector. public void Translate(ref Vector2 value) Parameters value Vector2 The vector. See Also List<T>"
  },
  "api/Alis.Core.Physic.Common.WorldSerializer.html": {
    "href": "api/Alis.Core.Physic.Common.WorldSerializer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WorldSerializer Namespace Alis.Core.Physic.Common Assembly Alis.dll Serialize the world into an XML file public static class WorldSerializer Inheritance object WorldSerializer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Deserialize(Stream) Deserialize the world from a stream XML public static World Deserialize(Stream stream) Parameters stream Stream Returns World Serialize(World, Stream) Serialize the world to a stream in XML format public static void Serialize(World world, Stream stream) Parameters world World stream Stream"
  },
  "api/Alis.Core.Physic.Common.WorldXmlDeserializer.html": {
    "href": "api/Alis.Core.Physic.Common.WorldXmlDeserializer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WorldXmlDeserializer Namespace Alis.Core.Physic.Common Assembly Alis.dll The world xml deserializer class internal static class WorldXmlDeserializer Inheritance object WorldXmlDeserializer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Deserialize(Stream) Deserializes the stream internal static World Deserialize(Stream stream) Parameters stream Stream The stream Returns World The world Deserialize(World, Stream) Deserializes the world private static void Deserialize(World world, Stream stream) Parameters world World The world stream Stream The stream Exceptions Exception Exception Exception Exception Exception Exception Exception Exception Exception Gear joint is unsupported Exception GearJoint is not supported. Exception Invalid or unsupported joint. ParseFloat(string) Parses the float using the specified value private static float ParseFloat(string value) Parameters value string The value Returns float The float ReadSimpleType(XMLFragmentElement, Type, bool) Reads the simple type using the specified node private static object ReadSimpleType(XMLFragmentElement node, Type type, bool outer) Parameters node XMLFragmentElement The node type Type The type outer bool The outer Returns object The object ReadVector(XMLFragmentElement) Reads the vector using the specified node private static Vector2 ReadVector(XMLFragmentElement node) Parameters node XMLFragmentElement The node Returns Vector2 The vector"
  },
  "api/Alis.Core.Physic.Common.WorldXmlSerializer.html": {
    "href": "api/Alis.Core.Physic.Common.WorldXmlSerializer.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WorldXmlSerializer Namespace Alis.Core.Physic.Common Assembly Alis.dll The world xml serializer class internal static class WorldXmlSerializer Inheritance object WorldXmlSerializer Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _writer The writer private static XmlWriter _writer Field Value XmlWriter Methods FloatToString(float) Floats the to string using the specified value private static string FloatToString(float value) Parameters value float The value Returns string The string Serialize(World, Stream) Serializes the world internal static void Serialize(World world, Stream stream) Parameters world World The world stream Stream The stream SerializeBody(List<Fixture>, List<Shape>, Body) Serializes the body using the specified fixtures private static void SerializeBody(List<Fixture> fixtures, List<Shape> shapes, Body body) Parameters fixtures List<Fixture> The fixtures shapes List<Shape> The shapes body Body The body SerializeFixture(List<Fixture>, Fixture) Serializes the fixture using the specified fixtures private static void SerializeFixture(List<Fixture> fixtures, Fixture fixture) Parameters fixtures List<Fixture> The fixtures fixture Fixture The fixture SerializeJoint(List<Body>, Joint) Serializes the joint using the specified bodies private static void SerializeJoint(List<Body> bodies, Joint joint) Parameters bodies List<Body> The bodies joint Joint The joint Exceptions Exception Gear joint not supported by serialization Exception Joint not supported SerializeShape(Shape) Serializes the shape using the specified shape private static void SerializeShape(Shape shape) Parameters shape Shape The shape Exceptions Exception WriteDynamicType(Type, object) Writes the dynamic type using the specified type private static void WriteDynamicType(Type type, object val) Parameters type Type The type val object The val WriteElement(string, Vector2) Writes the element using the specified name private static void WriteElement(string name, Vector2 vec) Parameters name string The name vec Vector2 The vec WriteElement(string, int) Writes the element using the specified name private static void WriteElement(string name, int val) Parameters name string The name val int The val WriteElement(string, bool) Writes the element using the specified name private static void WriteElement(string name, bool val) Parameters name string The name val bool The val WriteElement(string, float) Writes the element using the specified name private static void WriteElement(string name, float val) Parameters name string The name val float The val"
  },
  "api/Alis.Core.Physic.Common.XMLFragmentAttribute.html": {
    "href": "api/Alis.Core.Physic.Common.XMLFragmentAttribute.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class XMLFragmentAttribute Namespace Alis.Core.Physic.Common Assembly Alis.dll The xml fragment attribute class internal class XMLFragmentAttribute Inheritance object XMLFragmentAttribute Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Name Gets or sets the value of the name public string Name { get; set; } Property Value string Value Gets or sets the value of the value public string Value { get; set; } Property Value string"
  },
  "api/Alis.Core.Physic.Common.XMLFragmentElement.html": {
    "href": "api/Alis.Core.Physic.Common.XMLFragmentElement.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class XMLFragmentElement Namespace Alis.Core.Physic.Common Assembly Alis.dll The xml fragment element class internal class XMLFragmentElement Inheritance object XMLFragmentElement Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _attributes The xml fragment attribute private readonly List<XMLFragmentAttribute> _attributes Field Value List<XMLFragmentAttribute> _elements The xml fragment element private readonly List<XMLFragmentElement> _elements Field Value List<XMLFragmentElement> Properties Attributes Gets the value of the attributes public IList<XMLFragmentAttribute> Attributes { get; } Property Value IList<XMLFragmentAttribute> Elements Gets the value of the elements public IList<XMLFragmentElement> Elements { get; } Property Value IList<XMLFragmentElement> InnerXml Gets or sets the value of the inner xml public string InnerXml { get; set; } Property Value string Name Gets or sets the value of the name public string Name { get; set; } Property Value string OuterXml Gets or sets the value of the outer xml public string OuterXml { get; set; } Property Value string Value Gets or sets the value of the value public string Value { get; set; } Property Value string"
  },
  "api/Alis.Core.Physic.Common.XMLFragmentException.html": {
    "href": "api/Alis.Core.Physic.Common.XMLFragmentException.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class XMLFragmentException Namespace Alis.Core.Physic.Common Assembly Alis.dll The xml fragment exception class internal class XMLFragmentException : Exception, ISerializable Inheritance object Exception XMLFragmentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors XMLFragmentException(string) Initializes a new instance of the Alis.Core.Physic.Common.XMLFragmentException class public XMLFragmentException(string message) Parameters message string The message See Also Exception"
  },
  "api/Alis.Core.Physic.Common.XMLFragmentParser.html": {
    "href": "api/Alis.Core.Physic.Common.XMLFragmentParser.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class XMLFragmentParser Namespace Alis.Core.Physic.Common Assembly Alis.dll The xml fragment parser class internal class XMLFragmentParser Inheritance object XMLFragmentParser Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors XMLFragmentParser(Stream) Initializes a new instance of the Alis.Core.Physic.Common.XMLFragmentParser class public XMLFragmentParser(Stream stream) Parameters stream Stream The stream Fields _buffer The buffer private FileBuffer _buffer Field Value FileBuffer _punctuation The list private static readonly List<char> _punctuation Field Value List<char> Properties RootNode Gets or sets the value of the root node public XMLFragmentElement RootNode { get; private set; } Property Value XMLFragmentElement Methods Load(Stream) Loads the stream public void Load(Stream stream) Parameters stream Stream The stream LoadFromStream(Stream) Loads the from stream using the specified stream public static XMLFragmentElement LoadFromStream(Stream stream) Parameters stream Stream The stream Returns XMLFragmentElement The xml fragment element NextToken() Nexts the token private string NextToken() Returns string The str Parse() Parses this instance private void Parse() Exceptions XMLFragmentException Unable to load root node PeekToken() Peeks the token private string PeekToken() Returns string The str ReadUntil(char) Reads the until using the specified c private string ReadUntil(char c) Parameters c char The Returns string The str TrimControl(string) Trims the control using the specified str private string TrimControl(string str) Parameters str string The str Returns string The new str TrimTags(string) Trims the tags using the specified outer private string TrimTags(string outer) Parameters outer string The outer Returns string The string TryParseNode() Tries the parse node public XMLFragmentElement TryParseNode() Returns XMLFragmentElement The element Exceptions XMLFragmentException XMLFragmentException XMLFragmentException"
  },
  "api/Alis.Core.Physic.Common.html": {
    "href": "api/Alis.Core.Physic.Common.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Common Namespaces Alis.Core.Physic.Common.ConvexHull Alis.Core.Physic.Common.Decomposition Alis.Core.Physic.Common.PhysicsLogic Alis.Core.Physic.Common.PolygonManipulation Alis.Core.Physic.Common.TextureTools Classes Constant The constant class FileBuffer The file buffer class LineTools Collection of helper methods for misc collisions. Does float tolerance and line collisions with lines and AABBs. Path Path: Very similar to Vertices, but this class contains vectors describing control points on a Catmull-Rom curve. PathManager An easy to use manager for creating paths. PolygonTools The polygon tools class Vertices The vertices class WorldSerializer Serialize the world into an XML file WorldXmlDeserializer The world xml deserializer class WorldXmlSerializer The world xml serializer class XMLFragmentAttribute The xml fragment attribute class XMLFragmentElement The xml fragment element class XMLFragmentException The xml fragment exception class XMLFragmentParser The xml fragment parser class Structs Complex The complex FixedArray2<T> The fixed array FixedArray3<T> The fixed array FixedArray4<T> The fixed array FixedArray8<T> The fixed array Mat22 A 2-by-2 matrix. Stored in column-major order. Mat33 A 3-by-3 matrix. Stored in column-major order. Sweep This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center of mass position. Transform A transform contains translation and rotation. It is used to represent the position and orientation of rigid frames. Enums PathManager.LinkType The link type enum PolygonError The polygon error enum"
  },
  "api/Alis.Core.Physic.Controllers.BuoyancyController.html": {
    "href": "api/Alis.Core.Physic.Controllers.BuoyancyController.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BuoyancyController Namespace Alis.Core.Physic.Controllers Assembly Alis.dll The buoyancy controller class public sealed class BuoyancyController : Controller Inheritance object FilterData Controller BuoyancyController Inherited Members Controller.ControllerCategory Controller.Enabled Controller.World Controller.IsActiveOn(Body) Controller.Update(float) FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors BuoyancyController(AABB, float, float, float, Vector2) Initializes a new instance of the Alis.Core.Physic.Controllers.BuoyancyController class. public BuoyancyController(AABB container, float density, float linearDragCoefficient, float rotationalDragCoefficient, Vector2 gravity) Parameters container AABB Only bodies inside this AABB will be influenced by the controller density float Density of the fluid linearDragCoefficient float Linear drag coefficient of the fluid rotationalDragCoefficient float Rotational drag coefficient of the fluid gravity Vector2 The direction gravity acts. Buoyancy force will act in opposite direction of gravity. Fields AngularDragCoefficient Controls the rotational drag that the fluid exerts on the bodies within it. Use higher values will simulate thick fluid, like honey, lower values to simulate water-like fluids. public float AngularDragCoefficient Field Value float Density Density of the fluid. Higher values will make things more buoyant, lower values will cause things to sink. public float Density Field Value float LinearDragCoefficient Controls the linear drag that the fluid exerts on the bodies within it. Use higher values will simulate thick fluid, like honey, lower values to simulate water-like fluids. public float LinearDragCoefficient Field Value float Velocity Acts like waterflow. Defaults to 0,0. public Vector2 Velocity Field Value Vector2 _container The container private AABB _container Field Value AABB _gravity The gravity private readonly Vector2 _gravity Field Value Vector2 _normal The normal private Vector2 _normal Field Value Vector2 _offset The offset private float _offset Field Value float _uniqueBodies The body private readonly ICollection<Body> _uniqueBodies Field Value ICollection<Body> Properties Container Gets or sets the value of the container public AABB Container { get; set; } Property Value AABB Methods Update(float) Updates the dt public override void Update(float dt) Parameters dt float The dt See Also Controller"
  },
  "api/Alis.Core.Physic.Controllers.Controller.html": {
    "href": "api/Alis.Core.Physic.Controllers.Controller.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Controller Namespace Alis.Core.Physic.Controllers Assembly Alis.dll The controller class public abstract class Controller : FilterData Inheritance object FilterData Controller Derived BuoyancyController GravityController VelocityLimitController Inherited Members FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields ControllerCategory The cat 01 public ControllerCategory ControllerCategory Field Value ControllerCategory Enabled The enabled public bool Enabled Field Value bool Properties World Gets or sets the value of the world public World World { get; internal set; } Property Value World Methods IsActiveOn(Body) Describes whether this instance is active on public override bool IsActiveOn(Body body) Parameters body Body The body Returns bool The bool Update(float) Updates the dt public abstract void Update(float dt) Parameters dt float The dt See Also FilterData"
  },
  "api/Alis.Core.Physic.Controllers.GravityController.html": {
    "href": "api/Alis.Core.Physic.Controllers.GravityController.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GravityController Namespace Alis.Core.Physic.Controllers Assembly Alis.dll The gravity controller class public class GravityController : Controller Inheritance object FilterData Controller GravityController Inherited Members Controller.ControllerCategory Controller.Enabled Controller.World Controller.IsActiveOn(Body) Controller.Update(float) FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GravityController(float) Initializes a new instance of the Alis.Core.Physic.Controllers.GravityController class public GravityController(float strength) Parameters strength float The strength GravityController(float, float, float) Initializes a new instance of the Alis.Core.Physic.Controllers.GravityController class public GravityController(float strength, float maxRadius, float minRadius) Parameters strength float The strength maxRadius float The max radius minRadius float The min radius Properties Bodies Gets or sets the value of the bodies public List<Body> Bodies { get; set; } Property Value List<Body> GravityType Gets or sets the value of the gravity type public GravityType GravityType { get; set; } Property Value GravityType MaxRadius Gets or sets the value of the max radius public float MaxRadius { get; set; } Property Value float MinRadius Gets or sets the value of the min radius public float MinRadius { get; set; } Property Value float Points Gets or sets the value of the points public List<Vector2> Points { get; set; } Property Value List<Vector2> Strength Gets or sets the value of the strength public float Strength { get; set; } Property Value float Methods AddBody(Body) Adds the body using the specified body public void AddBody(Body body) Parameters body Body The body AddPoint(Vector2) Adds the point using the specified point public void AddPoint(Vector2 point) Parameters point Vector2 The point Update(float) Updates the dt public override void Update(float dt) Parameters dt float The dt See Also Controller"
  },
  "api/Alis.Core.Physic.Controllers.GravityType.html": {
    "href": "api/Alis.Core.Physic.Controllers.GravityType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum GravityType Namespace Alis.Core.Physic.Controllers Assembly Alis.dll The gravity type enum public enum GravityType Fields Linear = 0 The linear gravity type DistanceSquared = 1 The distance squared gravity type"
  },
  "api/Alis.Core.Physic.Controllers.VelocityLimitController.html": {
    "href": "api/Alis.Core.Physic.Controllers.VelocityLimitController.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class VelocityLimitController Namespace Alis.Core.Physic.Controllers Assembly Alis.dll Put a limit on the linear (translation - the movespeed) and angular (rotation) velocity of bodies added to this controller. public class VelocityLimitController : Controller Inheritance object FilterData Controller VelocityLimitController Inherited Members Controller.ControllerCategory Controller.Enabled Controller.World Controller.IsActiveOn(Body) Controller.Update(float) FilterData.DisabledOnCategories FilterData.DisabledOnGroup FilterData.EnabledOnCategories FilterData.EnabledOnGroup FilterData.IsActiveOn(Body) FilterData.AddDisabledCategory(Category) FilterData.RemoveDisabledCategory(Category) FilterData.IsInDisabledCategory(Category) FilterData.AddEnabledCategory(Category) FilterData.RemoveEnabledCategory(Category) FilterData.IsInEnabledInCategory(Category) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors VelocityLimitController() Initializes a new instance of the Alis.Core.Physic.Controllers.VelocityLimitController class. Sets the max linear velocity to Settings.MaxTranslation Sets the max angular velocity to Settings.MaxRotation public VelocityLimitController() VelocityLimitController(float, float) Initializes a new instance of the Alis.Core.Physic.Controllers.VelocityLimitController class. Pass in 0 or float.MaxValue to disable the limit. maxAngularVelocity = 0 will disable the angular velocity limit. public VelocityLimitController(float maxLinearVelocity, float maxAngularVelocity) Parameters maxLinearVelocity float The max linear velocity. maxAngularVelocity float The max angular velocity. Fields LimitAngularVelocity The limit angular velocity public bool LimitAngularVelocity Field Value bool LimitLinearVelocity The limit linear velocity public bool LimitLinearVelocity Field Value bool _bodies The body private readonly List<Body> _bodies Field Value List<Body> _maxAngularSqared The max angular sqared private float _maxAngularSqared Field Value float _maxAngularVelocity The max angular velocity private float _maxAngularVelocity Field Value float _maxLinearSqared The max linear sqared private float _maxLinearSqared Field Value float _maxLinearVelocity The max linear velocity private float _maxLinearVelocity Field Value float Properties MaxAngularVelocity Gets or sets the max angular velocity. public float MaxAngularVelocity { get; set; } Property Value float MaxLinearVelocity Gets or sets the max linear velocity. public float MaxLinearVelocity { get; set; } Property Value float Methods AddBody(Body) Adds the body using the specified body public void AddBody(Body body) Parameters body Body The body RemoveBody(Body) Removes the body using the specified body public void RemoveBody(Body body) Parameters body Body The body Update(float) Updates the dt public override void Update(float dt) Parameters dt float The dt"
  },
  "api/Alis.Core.Physic.Controllers.html": {
    "href": "api/Alis.Core.Physic.Controllers.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Controllers Classes BuoyancyController The buoyancy controller class Controller The controller class GravityController The gravity controller class VelocityLimitController Put a limit on the linear (translation - the movespeed) and angular (rotation) velocity of bodies added to this controller. Enums GravityType The gravity type enum"
  },
  "api/Alis.Core.Physic.Dynamics.AfterCollisionEventHandler.html": {
    "href": "api/Alis.Core.Physic.Dynamics.AfterCollisionEventHandler.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate AfterCollisionEventHandler Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The after collision event handler public delegate void AfterCollisionEventHandler(Fixture sender, Fixture other, Contact contact, ContactVelocityConstraint impulse) Parameters sender Fixture other Fixture contact Contact impulse ContactVelocityConstraint"
  },
  "api/Alis.Core.Physic.Dynamics.BeforeCollisionEventHandler.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BeforeCollisionEventHandler.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BeforeCollisionEventHandler Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The before collision event handler public delegate bool BeforeCollisionEventHandler(Fixture sender, Fixture other) Parameters sender Fixture other Fixture Returns bool"
  },
  "api/Alis.Core.Physic.Dynamics.BeginContactDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BeginContactDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BeginContactDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll This delegate is called when a contact is created public delegate bool BeginContactDelegate(Contact contact) Parameters contact Contact Returns bool"
  },
  "api/Alis.Core.Physic.Dynamics.Body.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Body.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Body Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The body class public class Body Inheritance object Body Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Body() Initializes a new instance of the Alis.Core.Physic.Dynamics.Body class public Body() Fields ControllerFilter The all public ControllerFilter ControllerFilter Field Value ControllerFilter FixtureList Gets all the fixtures attached to this body. internal readonly FixtureCollection FixtureList Field Value FixtureCollection Tag Set the user data. Use this to store your application specific data. public object Tag Field Value object _angularDamping The angular damping private float _angularDamping Field Value float _angularVelocity The angular velocity internal float _angularVelocity Field Value float _awake The awake private bool _awake Field Value bool _bodyType The body type private BodyType _bodyType Field Value BodyType _enabled The enabled internal bool _enabled Field Value bool _fixedRotation The fixed rotation private bool _fixedRotation Field Value bool _force The force internal Vector2 _force Field Value Vector2 _inertia The inertia private float _inertia Field Value float _invI The inv internal float _invI Field Value float _invMass The inv mass internal float _invMass Field Value float _island The island internal bool _island Field Value bool _linearDamping The linear damping private float _linearDamping Field Value float _linearVelocity The linear velocity internal Vector2 _linearVelocity Field Value Vector2 _lock The lock internal int _lock Field Value int _lockOrder The lock order internal int _lockOrder Field Value int _mass The mass private float _mass Field Value float _sleepTime The sleep time internal float _sleepTime Field Value float _sleepingAllowed The sleeping allowed private bool _sleepingAllowed Field Value bool _sweep The sweep internal Sweep _sweep Field Value Sweep _torque The torque internal float _torque Field Value float _world The world internal World _world Field Value World _xf The xf internal Transform _xf Field Value Transform onCollisionEventHandler The on collision event handler internal OnCollisionEventHandler onCollisionEventHandler Field Value OnCollisionEventHandler onSeparationEventHandler The on separation event handler internal OnSeparationEventHandler onSeparationEventHandler Field Value OnSeparationEventHandler Properties AngularDamping Gets or sets the angular damping. public float AngularDamping { get; set; } Property Value float AngularVelocity Gets or sets the angular velocity. Radians/second. public float AngularVelocity { get; set; } Property Value float Awake Set the sleep state of the body. A sleeping body has very low CPU cost. public bool Awake { get; set; } Property Value bool BodyType Gets or sets the body type. Warning: This property is readonly during callbacks. public BodyType BodyType { get; set; } Property Value BodyType Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. ContactList Get the list of all contacts attached to this body. Warning: this list changes during the time step and you may miss some collisions if you don't use callback events. public ContactEdge ContactList { get; internal set; } Property Value ContactEdge Enabled Set the active state of the body. An inactive body is not simulated and cannot be collided with or woken up. If you pass a flag of true, all fixtures will be added to the broad-phase. If you pass a flag of false, all fixtures will be removed from the broad-phase and all contacts will be destroyed. Fixtures and joints are otherwise unaffected. You may continue to create/destroy fixtures and joints on inactive bodies. Fixtures on an inactive body are implicitly inactive and will not participate in collisions, ray-casts, or queries. Joints connected to an inactive body are implicitly inactive. An inactive body is still owned by a b2World object and remains in the body list. Warning: This property is readonly during callbacks. public bool Enabled { get; set; } Property Value bool Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. FixedRotation Set this body to have fixed rotation. This causes the mass to be reset. public bool FixedRotation { get; set; } Property Value bool IgnoreCCD Gets or sets the value of the ignore ccd public bool IgnoreCCD { get; set; } Property Value bool IgnoreGravity Gets or sets a value indicating whether this body ignores gravity. public bool IgnoreGravity { get; set; } Property Value bool Inertia Get or set the rotational inertia of the body about the local origin. usually in kg-m^2. Warning: This property is readonly during callbacks. public float Inertia { get; set; } Property Value float Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. IsBullet Gets or sets a value indicating whether this body should be included in the CCD solver. public bool IsBullet { get; set; } Property Value bool IslandIndex public int IslandIndex { get; internal set; } Property Value int Remarks Deprecated in version 1.6 JointList Get the list of all joints attached to this body. public JointEdge JointList { get; internal set; } Property Value JointEdge LinearDamping Gets or sets the linear damping. public float LinearDamping { get; set; } Property Value float LinearVelocity Get or sets the linear velocity of the center of mass. Property has no effect on Alis.Core.Physic.Dynamics.BodyType.Static bodies. public Vector2 LinearVelocity { get; set; } Property Value Vector2 LocalCenter Get the local position of the center of mass. Warning: This property is readonly during callbacks. public Vector2 LocalCenter { get; set; } Property Value Vector2 Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Mass Gets or sets the mass. Usually in kilograms (kg). Warning: This property is readonly during callbacks. public float Mass { get; set; } Property Value float Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Position Get the world body origin position. public Vector2 Position { get; set; } Property Value Vector2 Revolutions Gets the total number revolutions the body has made. public float Revolutions { get; } Property Value float Rotation Get the angle in radians. public float Rotation { get; set; } Property Value float SleepingAllowed You can disable sleeping on this body. If you disable sleeping, the body will be woken. public bool SleepingAllowed { get; set; } Property Value bool World Get the parent World of this body. This is null if the body is not attached. public World World { get; } Property Value World WorldCenter Get the world position of the center of mass. public Vector2 WorldCenter { get; } Property Value Vector2 Methods Add(Fixture) Warning: This method is locked during callbacks. public void Add(Fixture fixture) Parameters fixture Fixture Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Advance(float) Advances the alpha internal void Advance(float alpha) Parameters alpha float The alpha ApplyAngularImpulse(float) Apply an angular impulse. public void ApplyAngularImpulse(float impulse) Parameters impulse float The angular impulse in units of kgmm/s. ApplyForce(Vector2, Vector2) Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body. public void ApplyForce(Vector2 force, Vector2 point) Parameters force Vector2 The world force vector, usually in Newtons (N). point Vector2 The world position of the point of application. ApplyForce(ref Vector2) Applies a force at the center of mass. public void ApplyForce(ref Vector2 force) Parameters force Vector2 The force. ApplyForce(Vector2) Applies a force at the center of mass. public void ApplyForce(Vector2 force) Parameters force Vector2 The force. ApplyForce(ref Vector2, ref Vector2) Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque and affect the angular velocity. This wakes up the body. public void ApplyForce(ref Vector2 force, ref Vector2 point) Parameters force Vector2 The world force vector, usually in Newtons (N). point Vector2 The world position of the point of application. ApplyLinearImpulse(Vector2) Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body. public void ApplyLinearImpulse(Vector2 impulse) Parameters impulse Vector2 The world impulse vector, usually in N-seconds or kg-m/s. ApplyLinearImpulse(Vector2, Vector2) Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body. public void ApplyLinearImpulse(Vector2 impulse, Vector2 point) Parameters impulse Vector2 The world impulse vector, usually in N-seconds or kg-m/s. point Vector2 The world position of the point of application. ApplyLinearImpulse(ref Vector2) Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body. public void ApplyLinearImpulse(ref Vector2 impulse) Parameters impulse Vector2 The world impulse vector, usually in N-seconds or kg-m/s. ApplyLinearImpulse(ref Vector2, ref Vector2) Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if the point of application is not at the center of mass. This wakes up the body. public void ApplyLinearImpulse(ref Vector2 impulse, ref Vector2 point) Parameters impulse Vector2 The world impulse vector, usually in N-seconds or kg-m/s. point Vector2 The world position of the point of application. ApplyTorque(float) Apply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass. This wakes up the body. public void ApplyTorque(float torque) Parameters torque float The torque about the z-axis (out of the screen), usually in N-m. Clone(World) Makes a clone of the body. Fixtures and therefore shapes are not included. Use DeepClone() to clone the body, as well as fixtures and shapes. public Body Clone(World world = null) Parameters world World Returns Body CreateChainShape(Vertices) Creates the chain shape using the specified vertices public Fixture CreateChainShape(Vertices vertices) Parameters vertices Vertices The vertices Returns Fixture The fixture CreateCircle(float, float) Creates the circle using the specified radius public Fixture CreateCircle(float radius, float density) Parameters radius float The radius density float The density Returns Fixture The fixture Exceptions ArgumentOutOfRangeException radius Radius must be more than 0 meters CreateCircle(float, float, Vector2) Creates the circle using the specified radius public Fixture CreateCircle(float radius, float density, Vector2 offset) Parameters radius float The radius density float The density offset Vector2 The offset Returns Fixture The fixture Exceptions ArgumentOutOfRangeException radius Radius must be more than 0 meters CreateCompoundPolygon(List<Vertices>, float) Creates the compound polygon using the specified list public List<Fixture> CreateCompoundPolygon(List<Vertices> list, float density) Parameters list List<Vertices> The list density float The density Returns List<Fixture> The res CreateEdge(Vector2, Vector2) Creates the edge using the specified start public Fixture CreateEdge(Vector2 start, Vector2 end) Parameters start Vector2 The start end Vector2 The end Returns Fixture The fixture CreateEllipse(float, float, int, float) Creates the ellipse using the specified x radius public Fixture CreateEllipse(float xRadius, float yRadius, int edges, float density) Parameters xRadius float The radius yRadius float The radius edges int The edges density float The density Returns Fixture The fixture Exceptions ArgumentOutOfRangeException xRadius X-radius must be more than 0 ArgumentOutOfRangeException yRadius Y-radius must be more than 0 CreateFixture(Shape) Creates a fixture and attach it to this body. If the density is non-zero, this function automatically updates the mass of the body. Contacts are not created until the next time step. Warning: This method is locked during callbacks. public virtual Fixture CreateFixture(Shape shape) Parameters shape Shape The shape. Returns Fixture CreateLineArc(float, int, float, bool) Creates the line arc using the specified radians public Fixture CreateLineArc(float radians, int sides, float radius, bool closed) Parameters radians float The radians sides int The sides radius float The radius closed bool The closed Returns Fixture The fixture CreateLoopShape(Vertices) Creates the loop shape using the specified vertices public Fixture CreateLoopShape(Vertices vertices) Parameters vertices Vertices The vertices Returns Fixture The fixture CreatePolygon(Vertices, float) Creates the polygon using the specified vertices public Fixture CreatePolygon(Vertices vertices, float density) Parameters vertices Vertices The vertices density float The density Returns Fixture The fixture Exceptions ArgumentOutOfRangeException vertices Too few points to be a polygon CreateProxies() Create all proxies. internal void CreateProxies() CreateRectangle(float, float, float, Vector2) Creates the rectangle using the specified width public Fixture CreateRectangle(float width, float height, float density, Vector2 offset) Parameters width float The width height float The height density float The density offset Vector2 The offset Returns Fixture The fixture CreateSolidArc(float, float, int, float) Creates the solid arc using the specified density public List<Fixture> CreateSolidArc(float density, float radians, int sides, float radius) Parameters density float The density radians float The radians sides int The sides radius float The radius Returns List<Fixture> A list of fixture DeepClone(World) Clones the body and all attached fixtures and shapes. Simply said, it makes a complete copy of the body. public Body DeepClone(World world = null) Parameters world World Returns Body DestroyContacts() Destroy the attached contacts. private void DestroyContacts() DestroyProxies() Destroy all proxies. internal void DestroyProxies() GetLinearVelocityFromLocalPoint(Vector2) Get the world velocity of a local point. public Vector2 GetLinearVelocityFromLocalPoint(Vector2 localPoint) Parameters localPoint Vector2 A point in local coordinates. Returns Vector2 The world velocity of a point. GetLinearVelocityFromLocalPoint(ref Vector2) Get the world velocity of a local point. public Vector2 GetLinearVelocityFromLocalPoint(ref Vector2 localPoint) Parameters localPoint Vector2 A point in local coordinates. Returns Vector2 The world velocity of a point. GetLinearVelocityFromWorldPoint(Vector2) Get the world linear velocity of a world point attached to this body. public Vector2 GetLinearVelocityFromWorldPoint(Vector2 worldPoint) Parameters worldPoint Vector2 A point in world coordinates. Returns Vector2 The world velocity of a point. GetLinearVelocityFromWorldPoint(ref Vector2) Get the world linear velocity of a world point attached to this body. public Vector2 GetLinearVelocityFromWorldPoint(ref Vector2 worldPoint) Parameters worldPoint Vector2 A point in world coordinates. Returns Vector2 The world velocity of a point. GetLocalPoint(ref Vector2) Gets a local point relative to the body's origin given a world point. Note that the vector only takes the rotation into account, not the position. public Vector2 GetLocalPoint(ref Vector2 worldPoint) Parameters worldPoint Vector2 A point in world coordinates. Returns Vector2 The corresponding local point relative to the body's origin. GetLocalPoint(Vector2) Gets a local point relative to the body's origin given a world point. public Vector2 GetLocalPoint(Vector2 worldPoint) Parameters worldPoint Vector2 A point in world coordinates. Returns Vector2 The corresponding local point relative to the body's origin. GetLocalVector(ref Vector2) Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the position. public Vector2 GetLocalVector(ref Vector2 worldVector) Parameters worldVector Vector2 A vector in world coordinates. Returns Vector2 The corresponding local vector. GetLocalVector(Vector2) Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the position. public Vector2 GetLocalVector(Vector2 worldVector) Parameters worldVector Vector2 A vector in world coordinates. Returns Vector2 The corresponding local vector. GetTransform() Get the body transform for the body's origin. public Transform GetTransform() Returns Transform GetTransform(out Transform) Get the body transform for the body's origin. public void GetTransform(out Transform transform) Parameters transform Transform The transform of the body's origin. GetWorldPoint(ref Vector2) Get the world coordinates of a point given the local coordinates. public Vector2 GetWorldPoint(ref Vector2 localPoint) Parameters localPoint Vector2 A point on the body measured relative the the body's origin. Returns Vector2 The same point expressed in world coordinates. GetWorldPoint(Vector2) Get the world coordinates of a point given the local coordinates. public Vector2 GetWorldPoint(Vector2 localPoint) Parameters localPoint Vector2 A point on the body measured relative the the body's origin. Returns Vector2 The same point expressed in world coordinates. GetWorldVector(ref Vector2) Get the world coordinates of a vector given the local coordinates. Note that the vector only takes the rotation into account, not the position. public Vector2 GetWorldVector(ref Vector2 localVector) Parameters localVector Vector2 A vector fixed in the body. Returns Vector2 The same vector expressed in world coordinates. GetWorldVector(Vector2) Get the world coordinates of a vector given the local coordinates. public Vector2 GetWorldVector(Vector2 localVector) Parameters localVector Vector2 A vector fixed in the body. Returns Vector2 The same vector expressed in world coordinates. Remove(Fixture) Destroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with this fixture. This will automatically adjust the mass of the body if the body is dynamic and the fixture has positive density. All fixtures attached to a body are implicitly destroyed when the body is destroyed. Warning: This method is locked during callbacks. public virtual void Remove(Fixture fixture) Parameters fixture Fixture The fixture to be removed. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. ResetDynamics() Resets the dynamics of this body. Sets torque, force and linear/angular velocity to 0 public void ResetDynamics() ResetMassData() This resets the mass properties to the sum of the mass properties of the fixtures. This normally does not need to be called unless you called SetMassData to override the mass and you later want to reset the mass. public void ResetMassData() SetCollidesWith(Category) Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetCollidesWith(Category category) Parameters category Category Remarks Deprecated in version 1.6 SetCollisionCategories(Category) Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetCollisionCategories(Category category) Parameters category Category Remarks Deprecated in version 1.6 SetCollisionGroup(short) Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetCollisionGroup(short collisionGroup) Parameters collisionGroup short Remarks Deprecated in version 1.6 SetFriction(float) Set friction on all fixtures. Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetFriction(float friction) Parameters friction float Remarks Deprecated in version 1.6 SetIsSensor(bool) Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetIsSensor(bool isSensor) Parameters isSensor bool Remarks Deprecated in version 1.6 SetRestitution(float) Set restitution on all fixtures. Warning: This method applies the value on existing Fixtures. It's not a property of Body. public void SetRestitution(float restitution) Parameters restitution float Remarks Deprecated in version 1.6 SetTransform(ref Vector2, float) Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body's transform may cause non-physical behavior. Warning: This method is locked during callbacks. public void SetTransform(ref Vector2 position, float rotation) Parameters position Vector2 The world position of the body's local origin. rotation float The world rotation in radians. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. SetTransform(Vector2, float) Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies. Manipulating a body's transform may cause non-physical behavior. Warning: This method is locked during callbacks. public void SetTransform(Vector2 position, float rotation) Parameters position Vector2 The world position of the body's local origin. rotation float The world rotation in radians. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. SetTransformIgnoreContacts(ref Vector2, float) For teleporting a body without considering new contacts immediately. Warning: This method is locked during callbacks. public void SetTransformIgnoreContacts(ref Vector2 position, float angle) Parameters position Vector2 The position. angle float The angle. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. ShouldCollide(Body) This is used to prevent connected bodies from colliding. It may lie, depending on the collideConnected flag. internal bool ShouldCollide(Body other) Parameters other Body The other body. Returns bool SynchronizeFixtures() Synchronizes the fixtures internal void SynchronizeFixtures() SynchronizeTransform() Synchronizes the transform internal void SynchronizeTransform() OnCollision The on collision public event OnCollisionEventHandler OnCollision Event Type OnCollisionEventHandler OnSeparation The on separation public event OnSeparationEventHandler OnSeparation Event Type OnSeparationEventHandler"
  },
  "api/Alis.Core.Physic.Dynamics.BodyCollection.BodyEnumerator.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BodyCollection.BodyEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct BodyCollection.BodyEnumerator Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The body enumerator public struct BodyCollection.BodyEnumerator : IEnumerator<Body>, IEnumerator, IDisposable Implements IEnumerator<Body> IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors BodyEnumerator(BodyCollection, List<Body>) Initializes a new instance of the Alis.Core.Physic.Dynamics.BodyCollection.BodyEnumerator class public BodyEnumerator(BodyCollection collection, List<Body> list) Parameters collection BodyCollection The collection list List<Body> The list Fields _collection The collection private BodyCollection _collection Field Value BodyCollection _generationStamp The generation stamp private readonly int _generationStamp Field Value int _list The list private List<Body> _list Field Value List<Body> i The private int i Field Value int Properties Current Gets the value of the current public Body Current { get; } Property Value Body IEnumerator<Body>.Current Gets the value of the current Body IEnumerator<Body>.Current { get; } Property Value Body IEnumerator.Current Gets the value of the current object IEnumerator.Current { get; } Property Value object Methods MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Exceptions InvalidOperationException Collection was modified. IEnumerator.Reset() Resets this instance void IEnumerator.Reset() IDisposable.Dispose() Disposes this instance void IDisposable.Dispose()"
  },
  "api/Alis.Core.Physic.Dynamics.BodyCollection.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BodyCollection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class BodyCollection Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The body collection class public class BodyCollection : IList<Body>, ICollection<Body>, IEnumerable<Body>, IEnumerable Inheritance object BodyCollection Implements IList<Body> ICollection<Body> IEnumerable<Body> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors BodyCollection(World) Initializes a new instance of the Alis.Core.Physic.Dynamics.BodyCollection class public BodyCollection(World world) Parameters world World The world Fields _generationStamp The generation stamp internal int _generationStamp Field Value int _list The body internal readonly List<Body> _list Field Value List<Body> _world The world private readonly World _world Field Value World Properties Count Gets the value of the count public int Count { get; } Property Value int IsReadOnly Gets the value of the is read only public bool IsReadOnly { get; } Property Value bool this[int] The not supported exception public Body this[int index] { get; set; } Property Value Body Methods Contains(Body) Describes whether this instance contains public bool Contains(Body item) Parameters item Body The item Returns bool The bool CopyTo(Body[], int) Copies the to using the specified array public void CopyTo(Body[] array, int arrayIndex) Parameters array Body[] The array arrayIndex int The array index GetEnumerator() Gets the enumerator public BodyCollection.BodyEnumerator GetEnumerator() Returns BodyCollection.BodyEnumerator The body enumerator IndexOf(Body) Indexes the of using the specified item public int IndexOf(Body item) Parameters item Body The item Returns int The int ICollection<Body>.Add(Body) Adds the item void ICollection<Body>.Add(Body item) Parameters item Body The item Exceptions NotSupportedException ICollection<Body>.Clear() Clears this instance void ICollection<Body>.Clear() Exceptions NotSupportedException ICollection<Body>.Remove(Body) Describes whether this instance remove bool ICollection<Body>.Remove(Body item) Parameters item Body The item Returns bool The bool IEnumerable<Body>.GetEnumerator() Gets the enumerator IEnumerator<Body> IEnumerable<Body>.GetEnumerator() Returns IEnumerator<Body> An enumerator of body IList<Body>.Insert(int, Body) Inserts the index void IList<Body>.Insert(int index, Body item) Parameters index int The index item Body The item Exceptions NotSupportedException IList<Body>.RemoveAt(int) Removes the at using the specified index void IList<Body>.RemoveAt(int index) Parameters index int The index Exceptions NotSupportedException IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator See Also IEnumerable<T> ICollection<T> IList<T>"
  },
  "api/Alis.Core.Physic.Dynamics.BodyDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BodyDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate BodyDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The body delegate public delegate void BodyDelegate(World sender, Body body) Parameters sender World body Body"
  },
  "api/Alis.Core.Physic.Dynamics.BodyType.html": {
    "href": "api/Alis.Core.Physic.Dynamics.BodyType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum BodyType Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The body type. public enum BodyType Fields Static = 0 Zero velocity, may be manually moved. Note: even static bodies have mass. Kinematic = 1 Zero mass, non-zero velocity set by user, moved by solver Dynamic = 2 Positive mass, non-zero velocity determined by forces, moved by solver"
  },
  "api/Alis.Core.Physic.Dynamics.Category.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Category.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Category Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The category enum [Flags] public enum Category Fields None = 0 The none category Cat1 = 1 The cat category Cat2 = 2 The cat category Cat3 = 4 The cat category Cat4 = 8 The cat category Cat5 = 16 The cat category Cat6 = 32 The cat category Cat7 = 64 The cat category Cat8 = 128 The cat category Cat9 = 256 The cat category Cat10 = 512 The cat 10 category Cat11 = 1024 The cat 11 category Cat12 = 2048 The cat 12 category Cat13 = 4096 The cat 13 category Cat14 = 8192 The cat 14 category Cat15 = 16384 The cat 15 category Cat16 = 32768 The cat 16 category Cat17 = 65536 The cat 17 category Cat18 = 131072 The cat 18 category Cat19 = 262144 The cat 19 category Cat20 = 524288 The cat 20 category Cat21 = 1048576 The cat 21 category Cat22 = 2097152 The cat 22 category Cat23 = 4194304 The cat 23 category Cat24 = 8388608 The cat 24 category Cat25 = 16777216 The cat 25 category Cat26 = 33554432 The cat 26 category Cat27 = 67108864 The cat 27 category Cat28 = 134217728 The cat 28 category Cat29 = 268435456 The cat 29 category Cat30 = 536870912 The cat 30 category Cat31 = 1073741824 The cat 31 category All = 2147483647 The all category"
  },
  "api/Alis.Core.Physic.Dynamics.CollisionFilterDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.CollisionFilterDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate CollisionFilterDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The collision filter delegate public delegate bool CollisionFilterDelegate(Fixture fixtureA, Fixture fixtureB) Parameters fixtureA Fixture fixtureB Fixture Returns bool"
  },
  "api/Alis.Core.Physic.Dynamics.ContactManager.html": {
    "href": "api/Alis.Core.Physic.Dynamics.ContactManager.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactManager Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The contact manager class public class ContactManager Inheritance object ContactManager Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ContactManager(IBroadPhase) Initializes a new instance of the Alis.Core.Physic.Dynamics.ContactManager class internal ContactManager(IBroadPhase broadPhase) Parameters broadPhase IBroadPhase The broad phase Fields BeginContact Fires when a contact is created public BeginContactDelegate BeginContact Field Value BeginContactDelegate BroadPhase The broad phase public readonly IBroadPhase BroadPhase Field Value IBroadPhase CollideMultithreadThreshold A threshold for activating multiple cores to solve Collide. An World with a contact count above this threshold will use multiple threads to solve Collide. A value of 0 will always use multithreading. A value of (int.MaxValue) will never use multithreading. Typical values are {128 or 256}. public int CollideMultithreadThreshold Field Value int ContactFilter The filter used by the contact manager. public CollisionFilterDelegate ContactFilter Field Value CollisionFilterDelegate ContactList The contact list public readonly ContactListHead ContactList Field Value ContactListHead EndContact Fires when a contact is deleted public EndContactDelegate EndContact Field Value EndContactDelegate OnBroadphaseCollision Fires when the broadphase detects that two Fixtures are close to each other. public BroadphaseDelegate OnBroadphaseCollision Field Value BroadphaseDelegate PositionConstraintsMultithreadThreshold A threshold for activating multiple cores to solve PositionConstraints. An Island with a contact count above this threshold will use multiple threads to solve PositionConstraints. A value of 0 will always use multithreading. A value of (int.MaxValue) will never use multithreading. Typical values are {128 or 256}. public int PositionConstraintsMultithreadThreshold Field Value int PostSolve Fires after the solver has run public PostSolveDelegate PostSolve Field Value PostSolveDelegate PreSolve Fires before the solver runs public PreSolveDelegate PreSolve Field Value PreSolveDelegate VelocityConstraintsMultithreadThreshold A threshold for activating multiple cores to solve VelocityConstraints. An Island with a contact count above this threshold will use multiple threads to solve VelocityConstraints. A value of 0 will always use multithreading. A value of (int.MaxValue) will never use multithreading. Typical values are {128 or 256}. public int VelocityConstraintsMultithreadThreshold Field Value int _contactPoolList The contact pool list internal readonly ContactListHead _contactPoolList Field Value ContactListHead updateList A temporary list of contacts to be updated during Collide(). private readonly List<Contact> updateList Field Value List<Contact> Properties ContactCount Gets or sets the value of the contact count public int ContactCount { get; private set; } Property Value int Methods AddPair(int, int) Adds the pair using the specified proxy id a private void AddPair(int proxyIdA, int proxyIdB) Parameters proxyIdA int The proxy id proxyIdB int The proxy id Collide() Collides this instance internal void Collide() Destroy(Contact) Destroys the contact internal void Destroy(Contact contact) Parameters contact Contact The contact FindNewContacts() Finds the new contacts internal void FindNewContacts() ShouldCollide(Fixture, Fixture) Describes whether should collide private static bool ShouldCollide(Fixture fixtureA, Fixture fixtureB) Parameters fixtureA Fixture The fixture fixtureB Fixture The fixture Returns bool The collide"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.Contact.ContactType.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.Contact.ContactType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum Contact.ContactType Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The contact type enum private enum Contact.ContactType Fields NotSupported = 0 The not supported contact type Polygon = 1 The polygon contact type PolygonAndCircle = 2 The polygon and circle contact type Circle = 3 The circle contact type EdgeAndPolygon = 4 The edge and polygon contact type EdgeAndCircle = 5 The edge and circle contact type ChainAndPolygon = 6 The chain and polygon contact type ChainAndCircle = 7 The chain and circle contact type"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.Contact.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.Contact.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Contact Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The class manages contact between two shapes. A contact exists for each overlapping AABB in the broad-phase (except if filtered). Therefore a contact object may exist that has no contact points. public class Contact Inheritance object Contact Derived ContactListHead Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Contact(Fixture, int, Fixture, int) Initializes a new instance of the Alis.Core.Physic.Dynamics.Contacts.Contact class protected Contact(Fixture fA, int indexA, Fixture fB, int indexB) Parameters fA Fixture The indexA int The index fB Fixture The indexB int The index Fields Manifold Get the contact manifold. Do not modify the manifold unless you understand the internals of Box2D. public Manifold Manifold Field Value Manifold _edge The edge shape private static readonly EdgeShape _edge Field Value EdgeShape _nodeA The contact edge internal ContactEdge _nodeA Field Value ContactEdge _nodeB The contact edge internal ContactEdge _nodeB Field Value ContactEdge _registers The not supported private static readonly Contact.ContactType[,] _registers Field Value Contact.ContactType[,] _toi The toi internal float _toi Field Value float _toiCount The toi count internal int _toiCount Field Value int _type The type private Contact.ContactType _type Field Value Contact.ContactType Properties ChildIndexA Get the child primitive index for fixture A. public int ChildIndexA { get; internal set; } Property Value int ChildIndexB Get the child primitive index for fixture B. public int ChildIndexB { get; internal set; } Property Value int Enabled public bool Enabled { get; set; } Property Value bool FilterFlag Gets or sets the value of the filter flag internal bool FilterFlag { get; set; } Property Value bool FixtureA Gets or sets the value of the fixture a public Fixture FixtureA { get; internal set; } Property Value Fixture FixtureB Gets or sets the value of the fixture b public Fixture FixtureB { get; internal set; } Property Value Fixture Friction Gets or sets the value of the friction public float Friction { get; set; } Property Value float IsTouching Determines whether this contact is touching. public bool IsTouching { get; set; } Property Value bool IslandFlag Gets or sets the value of the island flag internal bool IslandFlag { get; set; } Property Value bool Next Get the next contact in the world's contact list. public Contact Next { get; internal set; } Property Value Contact Prev Get the previous contact in the world's contact list. public Contact Prev { get; internal set; } Property Value Contact Restitution Gets or sets the value of the restitution public float Restitution { get; set; } Property Value float TOIFlag Gets or sets the value of the toi flag internal bool TOIFlag { get; set; } Property Value bool TangentSpeed public float TangentSpeed { get; set; } Property Value float Methods Create(ContactManager, Fixture, int, Fixture, int) Creates the contact manager internal static Contact Create(ContactManager contactManager, Fixture fixtureA, int indexA, Fixture fixtureB, int indexB) Parameters contactManager ContactManager The contact manager fixtureA Fixture The fixture indexA int The index fixtureB Fixture The fixture indexB int The index Returns Contact The Destroy() Destroys this instance internal void Destroy() Evaluate(ref Manifold, ref Transform, ref Transform) Evaluate this contact with your own manifold and transforms. private void Evaluate(ref Manifold manifold, ref Transform transformA, ref Transform transformB) Parameters manifold Manifold The manifold. transformA Transform The first transform. transformB Transform The second transform. GetWorldManifold(out Vector2, out FixedArray2<Vector2>) Gets the world manifold. public void GetWorldManifold(out Vector2 normal, out FixedArray2<Vector2> points) Parameters normal Vector2 points FixedArray2<Vector2> Reset(Fixture, int, Fixture, int) Resets the f a private void Reset(Fixture fA, int indexA, Fixture fB, int indexB) Parameters fA Fixture The indexA int The index fB Fixture The indexB int The index ResetFriction() Resets the friction public void ResetFriction() ResetRestitution() Resets the restitution public void ResetRestitution() Update(ContactManager) Update the contact manifold and touching status. Note: do not assume the fixture AABBs are overlapping or are valid. internal void Update(ContactManager contactManager) Parameters contactManager ContactManager The contact manager."
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactEdge.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactEdge.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactEdge Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll A contact edge is used to connect bodies and contacts together in a contact graph where each body is a node and each contact is an edge. A contact edge belongs to a doubly linked list maintained in each attached body. Each contact has two contact nodes, one for each attached body. public sealed class ContactEdge Inheritance object ContactEdge Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Properties Contact The contact public Contact Contact { get; internal set; } Property Value Contact Next The next contact edge in the body's contact list public ContactEdge Next { get; internal set; } Property Value ContactEdge Other Provides quick access to the other body attached. public Body Other { get; internal set; } Property Value Body Prev The previous contact edge in the body's contact list public ContactEdge Prev { get; internal set; } Property Value ContactEdge"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactListHead.ContactEnumerator.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactListHead.ContactEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ContactListHead.ContactEnumerator Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The contact enumerator private struct ContactListHead.ContactEnumerator : IEnumerator<Contact>, IEnumerator, IDisposable Implements IEnumerator<Contact> IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors ContactEnumerator(ContactListHead) Initializes a new instance of the Alis.Core.Physic.Dynamics.Contacts.ContactListHead.ContactEnumerator class public ContactEnumerator(ContactListHead contact) Parameters contact ContactListHead The contact Fields _head The head private ContactListHead _head Field Value ContactListHead Properties Current Gets or sets the value of the current public Contact Current { readonly get; private set; } Property Value Contact IEnumerator.Current Gets the value of the current object IEnumerator.Current { get; } Property Value object Methods Dispose() Disposes this instance public void Dispose() MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Reset() Resets this instance public void Reset()"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactListHead.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactListHead.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactListHead Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll Head of a circular doubly linked list. public class ContactListHead : Contact, IEnumerable<Contact>, IEnumerable Inheritance object Contact ContactListHead Implements IEnumerable<Contact> IEnumerable Inherited Members Contact._edge Contact._registers Contact._nodeA Contact._nodeB Contact._toi Contact._toiCount Contact._type Contact.Manifold Contact.FixtureA Contact.FixtureB Contact.Friction Contact.Restitution Contact.TangentSpeed Contact.Enabled Contact.ChildIndexA Contact.ChildIndexB Contact.Next Contact.Prev Contact.IsTouching Contact.IslandFlag Contact.TOIFlag Contact.FilterFlag Contact.ResetRestitution() Contact.ResetFriction() Contact.GetWorldManifold(out Vector2, out FixedArray2<Vector2>) Contact.Reset(Fixture, int, Fixture, int) Contact.Update(ContactManager) Contact.Evaluate(ref Manifold, ref Transform, ref Transform) Contact.Create(ContactManager, Fixture, int, Fixture, int) Contact.Destroy() object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ContactListHead() Initializes a new instance of the Alis.Core.Physic.Dynamics.Contacts.ContactListHead class internal ContactListHead() Methods IEnumerable<Contact>.GetEnumerator() Gets the enumerator IEnumerator<Contact> IEnumerable<Contact>.GetEnumerator() Returns IEnumerator<Contact> An enumerator of contact IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactPositionConstraint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactPositionConstraint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactPositionConstraint Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The contact position constraint class public sealed class ContactPositionConstraint Inheritance object ContactPositionConstraint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields indexA The index public int indexA Field Value int indexB The index public int indexB Field Value int invIA The inv ib public float invIA Field Value float invIB The inv ib public float invIB Field Value float invMassA The inv mass public float invMassA Field Value float invMassB The inv mass public float invMassB Field Value float localCenterA The local center public Vector2 localCenterA Field Value Vector2 localCenterB The local center public Vector2 localCenterB Field Value Vector2 localNormal The local normal public Vector2 localNormal Field Value Vector2 localPoint The local point public Vector2 localPoint Field Value Vector2 localPoints The max manifold points public Vector2[] localPoints Field Value Vector2[] pointCount The point count public int pointCount Field Value int radiusA The radius public float radiusA Field Value float radiusB The radius public float radiusB Field Value float type The type public ManifoldType type Field Value ManifoldType"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.PositionSolverManifold.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.PositionSolverManifold.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactSolver.PositionSolverManifold Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The position solver manifold class private static class ContactSolver.PositionSolverManifold Inheritance object ContactSolver.PositionSolverManifold Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Initialize(ContactPositionConstraint, ref Transform, ref Transform, int, out Vector2, out Vector2, out float) Initializes the pc public static void Initialize(ContactPositionConstraint pc, ref Transform xfA, ref Transform xfB, int index, out Vector2 normal, out Vector2 point, out float separation) Parameters pc ContactPositionConstraint The pc xfA Transform The xf xfB Transform The xf index int The index normal Vector2 The normal point Vector2 The point separation float The separation"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.WorldManifold.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.WorldManifold.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactSolver.WorldManifold Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The world manifold class public static class ContactSolver.WorldManifold Inheritance object ContactSolver.WorldManifold Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods Initialize(ref Manifold, ref Transform, float, ref Transform, float, out Vector2, out FixedArray2<Vector2>) Evaluate the manifold with supplied transforms. This assumes modest motion from the original state. This does not change the point count, impulses, etc. The radii must come from the Shapes that generated the manifold. public static void Initialize(ref Manifold manifold, ref Transform xfA, float radiusA, ref Transform xfB, float radiusB, out Vector2 normal, out FixedArray2<Vector2> points) Parameters manifold Manifold The manifold. xfA Transform The transform for A. radiusA float The radius for A. xfB Transform The transform for B. radiusB float The radius for B. normal Vector2 World vector pointing from A to B points FixedArray2<Vector2> Torld contact point (point of intersection)."
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactSolver.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactSolver Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The contact solver class public class ContactSolver Inheritance object ContactSolver Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields _contacts The contacts public Contact[] _contacts Field Value Contact[] _count The count public int _count Field Value int _locks The locks internal int[] _locks Field Value int[] _positionConstraints The position constraints public ContactPositionConstraint[] _positionConstraints Field Value ContactPositionConstraint[] _positionConstraintsMultithreadThreshold The position constraints multithread threshold private int _positionConstraintsMultithreadThreshold Field Value int _positions The positions internal SolverPosition[] _positions Field Value SolverPosition[] _velocities The velocities internal SolverVelocity[] _velocities Field Value SolverVelocity[] _velocityConstraints The velocity constraints public ContactVelocityConstraint[] _velocityConstraints Field Value ContactVelocityConstraint[] _velocityConstraintsMultithreadThreshold The velocity constraints multithread threshold private int _velocityConstraintsMultithreadThreshold Field Value int Methods InitializeVelocityConstraints() Initializes the velocity constraints public void InitializeVelocityConstraints() Reset(ref TimeStep, int, Contact[], SolverPosition[], SolverVelocity[], int[], int, int) Resets the step internal void Reset(ref TimeStep step, int count, Contact[] contacts, SolverPosition[] positions, SolverVelocity[] velocities, int[] locks, int velocityConstraintsMultithreadThreshold, int positionConstraintsMultithreadThreshold) Parameters step TimeStep The step count int The count contacts Contact[] The contacts positions SolverPosition[] The positions velocities SolverVelocity[] The velocities locks int[] The locks velocityConstraintsMultithreadThreshold int The velocity constraints multithread threshold positionConstraintsMultithreadThreshold int The position constraints multithread threshold SolvePositionConstraints() Describes whether this instance solve position constraints public bool SolvePositionConstraints() Returns bool The contacts okay SolvePositionConstraints(int, int) Describes whether this instance solve position constraints private bool SolvePositionConstraints(int start, int end) Parameters start int The start end int The end Returns bool The bool SolveTOIPositionConstraints(int, int) Describes whether this instance solve toi position constraints public bool SolveTOIPositionConstraints(int toiIndexA, int toiIndexB) Parameters toiIndexA int The toi index toiIndexB int The toi index Returns bool The bool SolveVelocityConstraints() Solves the velocity constraints public void SolveVelocityConstraints() SolveVelocityConstraints(int, int) Solves the velocity constraints using the specified start private void SolveVelocityConstraints(int start, int end) Parameters start int The start end int The end StoreImpulses() Stores the impulses public void StoreImpulses() WarmStart() Warms the start public void WarmStart()"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.ContactVelocityConstraint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.ContactVelocityConstraint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ContactVelocityConstraint Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The contact velocity constraint class public sealed class ContactVelocityConstraint Inheritance object ContactVelocityConstraint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors ContactVelocityConstraint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Contacts.ContactVelocityConstraint class public ContactVelocityConstraint() Fields K The public Mat22 K Field Value Mat22 contactIndex The contact index public int contactIndex Field Value int friction The friction public float friction Field Value float indexA The index public int indexA Field Value int indexB The index public int indexB Field Value int invIA The inv ib public float invIA Field Value float invIB The inv ib public float invIB Field Value float invMassA The inv mass public float invMassA Field Value float invMassB The inv mass public float invMassB Field Value float normal The normal public Vector2 normal Field Value Vector2 normalMass The normal mass public Mat22 normalMass Field Value Mat22 pointCount The point count public int pointCount Field Value int points The max manifold points public VelocityConstraintPoint[] points Field Value VelocityConstraintPoint[] restitution The restitution public float restitution Field Value float tangentSpeed The tangent speed public float tangentSpeed Field Value float"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.VelocityConstraintPoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.VelocityConstraintPoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class VelocityConstraintPoint Namespace Alis.Core.Physic.Dynamics.Contacts Assembly Alis.dll The velocity constraint point class public sealed class VelocityConstraintPoint Inheritance object VelocityConstraintPoint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields normalImpulse The normal impulse public float normalImpulse Field Value float normalMass The normal mass public float normalMass Field Value float rA The public Vector2 rA Field Value Vector2 rB The public Vector2 rB Field Value Vector2 tangentImpulse The tangent impulse public float tangentImpulse Field Value float tangentMass The tangent mass public float tangentMass Field Value float velocityBias The velocity bias public float velocityBias Field Value float"
  },
  "api/Alis.Core.Physic.Dynamics.Contacts.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Contacts.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Dynamics.Contacts Classes Contact The class manages contact between two shapes. A contact exists for each overlapping AABB in the broad-phase (except if filtered). Therefore a contact object may exist that has no contact points. ContactEdge A contact edge is used to connect bodies and contacts together in a contact graph where each body is a node and each contact is an edge. A contact edge belongs to a doubly linked list maintained in each attached body. Each contact has two contact nodes, one for each attached body. ContactListHead Head of a circular doubly linked list. ContactPositionConstraint The contact position constraint class ContactSolver The contact solver class ContactVelocityConstraint The contact velocity constraint class ContactSolver.PositionSolverManifold The position solver manifold class VelocityConstraintPoint The velocity constraint point class ContactSolver.WorldManifold The world manifold class Structs ContactListHead.ContactEnumerator The contact enumerator Enums Contact.ContactType The contact type enum"
  },
  "api/Alis.Core.Physic.Dynamics.ControllerCollection.ControllerEnumerator.html": {
    "href": "api/Alis.Core.Physic.Dynamics.ControllerCollection.ControllerEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct ControllerCollection.ControllerEnumerator Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The controller enumerator public struct ControllerCollection.ControllerEnumerator : IEnumerator<Controller>, IEnumerator, IDisposable Implements IEnumerator<Controller> IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors ControllerEnumerator(ControllerCollection, List<Controller>) Initializes a new instance of the Alis.Core.Physic.Dynamics.ControllerCollection.ControllerEnumerator class public ControllerEnumerator(ControllerCollection collection, List<Controller> list) Parameters collection ControllerCollection The collection list List<Controller> The list Fields _collection The collection private ControllerCollection _collection Field Value ControllerCollection _generationStamp The generation stamp private readonly int _generationStamp Field Value int _list The list private List<Controller> _list Field Value List<Controller> i The private int i Field Value int Properties Current Gets the value of the current public Controller Current { get; } Property Value Controller IEnumerator<Controller>.Current Gets the value of the current Controller IEnumerator<Controller>.Current { get; } Property Value Controller IEnumerator.Current Gets the value of the current object IEnumerator.Current { get; } Property Value object Methods MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Exceptions InvalidOperationException Collection was modified. IEnumerator.Reset() Resets this instance void IEnumerator.Reset() IDisposable.Dispose() Disposes this instance void IDisposable.Dispose()"
  },
  "api/Alis.Core.Physic.Dynamics.ControllerCollection.html": {
    "href": "api/Alis.Core.Physic.Dynamics.ControllerCollection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class ControllerCollection Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The controller collection class public class ControllerCollection : IList<Controller>, ICollection<Controller>, IEnumerable<Controller>, IEnumerable Inheritance object ControllerCollection Implements IList<Controller> ICollection<Controller> IEnumerable<Controller> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors ControllerCollection(World) Initializes a new instance of the Alis.Core.Physic.Dynamics.ControllerCollection class public ControllerCollection(World world) Parameters world World The world Fields _generationStamp The generation stamp internal int _generationStamp Field Value int _list The controller internal readonly List<Controller> _list Field Value List<Controller> _world The world private readonly World _world Field Value World Properties Count Gets the value of the count public int Count { get; } Property Value int IsReadOnly Gets the value of the is read only public bool IsReadOnly { get; } Property Value bool this[int] The not supported exception public Controller this[int index] { get; set; } Property Value Controller Methods Contains(Controller) Describes whether this instance contains public bool Contains(Controller item) Parameters item Controller The item Returns bool The bool CopyTo(Controller[], int) Copies the to using the specified array public void CopyTo(Controller[] array, int arrayIndex) Parameters array Controller[] The array arrayIndex int The array index GetEnumerator() Gets the enumerator public ControllerCollection.ControllerEnumerator GetEnumerator() Returns ControllerCollection.ControllerEnumerator The controller enumerator IndexOf(Controller) Indexes the of using the specified item public int IndexOf(Controller item) Parameters item Controller The item Returns int The int ICollection<Controller>.Add(Controller) Adds the item void ICollection<Controller>.Add(Controller item) Parameters item Controller The item Exceptions NotSupportedException ICollection<Controller>.Clear() Clears this instance void ICollection<Controller>.Clear() Exceptions NotSupportedException ICollection<Controller>.Remove(Controller) Describes whether this instance remove bool ICollection<Controller>.Remove(Controller item) Parameters item Controller The item Returns bool The bool IEnumerable<Controller>.GetEnumerator() Gets the enumerator IEnumerator<Controller> IEnumerable<Controller>.GetEnumerator() Returns IEnumerator<Controller> An enumerator of controller IList<Controller>.Insert(int, Controller) Inserts the index void IList<Controller>.Insert(int index, Controller item) Parameters index int The index item Controller The item Exceptions NotSupportedException IList<Controller>.RemoveAt(int) Removes the at using the specified index void IList<Controller>.RemoveAt(int index) Parameters index int The index Exceptions NotSupportedException IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator See Also IEnumerable<T> ICollection<T> IList<T>"
  },
  "api/Alis.Core.Physic.Dynamics.ControllerDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.ControllerDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate ControllerDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The controller delegate public delegate void ControllerDelegate(World sender, Controller controller) Parameters sender World controller Controller"
  },
  "api/Alis.Core.Physic.Dynamics.EndContactDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.EndContactDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate EndContactDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll This delegate is called when a contact is deleted public delegate void EndContactDelegate(Contact contact) Parameters contact Contact"
  },
  "api/Alis.Core.Physic.Dynamics.Fixture.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Fixture.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Fixture Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll A fixture is used to attach a Shape to a body for collision detection. A fixture inherits its transform from its parent. Fixtures hold additional non-geometric data such as friction, collision filters, etc. public class Fixture Inheritance object Fixture Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Fixture() Initializes a new instance of the Alis.Core.Physic.Dynamics.Fixture class internal Fixture() Fixture(Shape) Initializes a new instance of the Alis.Core.Physic.Dynamics.Fixture class public Fixture(Shape shape) Parameters shape Shape The shape Fields AfterCollision Fires after two shapes has collided and are solved. This gives you a chance to get the impact force. public AfterCollisionEventHandler AfterCollision Field Value AfterCollisionEventHandler BeforeCollision Fires when two fixtures are close to each other. Due to how the broadphase works, this can be quite inaccurate as shapes are approximated using AABBs. public BeforeCollisionEventHandler BeforeCollision Field Value BeforeCollisionEventHandler OnCollision Fires when two shapes collide and a contact is created between them. Note that the first fixture argument is always the fixture that the delegate is subscribed to. public OnCollisionEventHandler OnCollision Field Value OnCollisionEventHandler OnSeparation Fires when two shapes separate and a contact is removed between them. Note: This can in some cases be called multiple times, as a fixture can have multiple contacts. Note The first fixture argument is always the fixture that the delegate is subscribed to. public OnSeparationEventHandler OnSeparation Field Value OnSeparationEventHandler Tag Set the user data. Use this to store your application specific data. public object Tag Field Value object _collidesWith The collides with internal Category _collidesWith Field Value Category _collisionCategories The collision categories internal Category _collisionCategories Field Value Category _collisionGroup The collision group internal short _collisionGroup Field Value short _friction The friction private float _friction Field Value float _isSensor The is sensor private bool _isSensor Field Value bool _restitution The restitution private float _restitution Field Value float Properties Body Get the parent body of this fixture. This is null if the fixture is not attached. public Body Body { get; internal set; } Property Value Body CollidesWith Defaults to Category.All The collision mask bits. This states the categories that this fixture would accept for collision. public Category CollidesWith { get; set; } Property Value Category CollisionCategories The collision categories this fixture is a part of. Defaults to Category.Cat1 public Category CollisionCategories { get; set; } Property Value Category CollisionGroup Defaults to 0 Collision groups allow a certain group of objects to never collide (negative) or always collide (positive). Zero means no collision group. Non-zero group filtering always wins against the mask bits. public short CollisionGroup { get; set; } Property Value short Friction Set the coefficient of friction. This will not change the friction of existing contacts. public float Friction { get; set; } Property Value float IsSensor Gets or sets a value indicating whether this fixture is a sensor. public bool IsSensor { get; set; } Property Value bool Proxies Gets the value of the proxies public FixtureProxy[] Proxies { get; } Property Value FixtureProxy[] ProxyCount Gets or sets the value of the proxy count public int ProxyCount { get; private set; } Property Value int Restitution Set the coefficient of restitution. This will not change the restitution of existing contacts. public float Restitution { get; set; } Property Value float Shape Get the child Shape. public Shape Shape { get; } Property Value Shape Methods CloneOnto(Body) Clones the fixture onto the specified body. public Fixture CloneOnto(Body body) Parameters body Body The body you wish to clone the fixture onto. Returns Fixture The cloned fixture. CloneOnto(Body, Shape) Clones the fixture and attached shape onto the specified body. Note: This is used only by Deserialization. internal Fixture CloneOnto(Body body, Shape shape) Parameters body Body The body you wish to clone the fixture onto. shape Shape Returns Fixture The cloned fixture. CreateProxies(IBroadPhase, ref Transform) Creates the proxies using the specified broad phase internal void CreateProxies(IBroadPhase broadPhase, ref Transform xf) Parameters broadPhase IBroadPhase The broad phase xf Transform The xf Exceptions InvalidOperationException Proxies allready created for this Fixture. DestroyProxies(IBroadPhase) Destroys the proxies using the specified broad phase internal void DestroyProxies(IBroadPhase broadPhase) Parameters broadPhase IBroadPhase The broad phase GetAABB(out AABB, int) Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a more accurate AABB, compute it using the Shape and the body transform. public void GetAABB(out AABB aabb, int childIndex) Parameters aabb AABB The aabb. childIndex int Index of the child. RayCast(out RayCastOutput, ref RayCastInput, int) Cast a ray against this Shape. public bool RayCast(out RayCastOutput output, ref RayCastInput input, int childIndex) Parameters output RayCastOutput The ray-cast results. input RayCastInput The ray-cast input parameters. childIndex int Index of the child. Returns bool Refilter() Contacts are persistant and will keep being persistant unless they are flagged for filtering. This methods flags all contacts associated with the body for filtering. private void Refilter() Synchronize(IBroadPhase, ref Transform, ref Transform) Synchronizes the broad phase internal void Synchronize(IBroadPhase broadPhase, ref Transform transform1, ref Transform transform2) Parameters broadPhase IBroadPhase The broad phase transform1 Transform The transform transform2 Transform The transform TestPoint(ref Vector2) Test a point for containment in this fixture. public bool TestPoint(ref Vector2 point) Parameters point Vector2 A point in world coordinates. Returns bool TouchProxies(IBroadPhase) Touch each proxy so that new pairs may be created internal void TouchProxies(IBroadPhase broadPhase) Parameters broadPhase IBroadPhase"
  },
  "api/Alis.Core.Physic.Dynamics.FixtureCollection.FixtureEnumerator.html": {
    "href": "api/Alis.Core.Physic.Dynamics.FixtureCollection.FixtureEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixtureCollection.FixtureEnumerator Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The fixture enumerator public struct FixtureCollection.FixtureEnumerator : IEnumerator<Fixture>, IEnumerator, IDisposable Implements IEnumerator<Fixture> IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors FixtureEnumerator(FixtureCollection, List<Fixture>) Initializes a new instance of the Alis.Core.Physic.Dynamics.FixtureCollection.FixtureEnumerator class public FixtureEnumerator(FixtureCollection collection, List<Fixture> list) Parameters collection FixtureCollection The collection list List<Fixture> The list Fields _collection The collection private FixtureCollection _collection Field Value FixtureCollection _generationStamp The generation stamp private readonly int _generationStamp Field Value int _list The list private List<Fixture> _list Field Value List<Fixture> i The private int i Field Value int Properties Current Gets the value of the current public Fixture Current { get; } Property Value Fixture IEnumerator<Fixture>.Current Gets the value of the current Fixture IEnumerator<Fixture>.Current { get; } Property Value Fixture IEnumerator.Current Gets the value of the current object IEnumerator.Current { get; } Property Value object Methods MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Exceptions InvalidOperationException Collection was modified. IEnumerator.Reset() Resets this instance void IEnumerator.Reset() IDisposable.Dispose() Disposes this instance void IDisposable.Dispose()"
  },
  "api/Alis.Core.Physic.Dynamics.FixtureCollection.html": {
    "href": "api/Alis.Core.Physic.Dynamics.FixtureCollection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FixtureCollection Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The fixture collection class public class FixtureCollection : IList<Fixture>, ICollection<Fixture>, IEnumerable<Fixture>, IEnumerable Inheritance object FixtureCollection Implements IList<Fixture> ICollection<Fixture> IEnumerable<Fixture> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors FixtureCollection(Body) Initializes a new instance of the Alis.Core.Physic.Dynamics.FixtureCollection class public FixtureCollection(Body body) Parameters body Body The body Fields _body The body private readonly Body _body Field Value Body _generationStamp The generation stamp internal int _generationStamp Field Value int _list The fixture internal readonly List<Fixture> _list Field Value List<Fixture> Properties Count Gets the value of the count public int Count { get; } Property Value int IsReadOnly Gets the value of the is read only public bool IsReadOnly { get; } Property Value bool this[int] The not supported exception public Fixture this[int index] { get; set; } Property Value Fixture Methods Contains(Fixture) Describes whether this instance contains public bool Contains(Fixture item) Parameters item Fixture The item Returns bool The bool CopyTo(Fixture[], int) Copies the to using the specified array public void CopyTo(Fixture[] array, int arrayIndex) Parameters array Fixture[] The array arrayIndex int The array index GetEnumerator() Gets the enumerator public FixtureCollection.FixtureEnumerator GetEnumerator() Returns FixtureCollection.FixtureEnumerator The fixture enumerator IndexOf(Fixture) Indexes the of using the specified item public int IndexOf(Fixture item) Parameters item Fixture The item Returns int The int ICollection<Fixture>.Add(Fixture) Adds the item void ICollection<Fixture>.Add(Fixture item) Parameters item Fixture The item Exceptions NotSupportedException ICollection<Fixture>.Clear() Clears this instance void ICollection<Fixture>.Clear() Exceptions NotSupportedException ICollection<Fixture>.Remove(Fixture) Describes whether this instance remove bool ICollection<Fixture>.Remove(Fixture item) Parameters item Fixture The item Returns bool The bool IEnumerable<Fixture>.GetEnumerator() Gets the enumerator IEnumerator<Fixture> IEnumerable<Fixture>.GetEnumerator() Returns IEnumerator<Fixture> An enumerator of fixture IList<Fixture>.Insert(int, Fixture) Inserts the index void IList<Fixture>.Insert(int index, Fixture item) Parameters index int The index item Fixture The item Exceptions NotSupportedException IList<Fixture>.RemoveAt(int) Removes the at using the specified index void IList<Fixture>.RemoveAt(int index) Parameters index int The index Exceptions NotSupportedException IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator See Also IEnumerable<T> ICollection<T> IList<T>"
  },
  "api/Alis.Core.Physic.Dynamics.FixtureDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.FixtureDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate FixtureDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The fixture delegate public delegate void FixtureDelegate(World sender, Body body, Fixture fixture) Parameters sender World body Body fixture Fixture"
  },
  "api/Alis.Core.Physic.Dynamics.FixtureProxy.html": {
    "href": "api/Alis.Core.Physic.Dynamics.FixtureProxy.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct FixtureProxy Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll This proxy is used internally to connect fixtures to the broad-phase. public struct FixtureProxy Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields AABB The aabb public AABB AABB Field Value AABB ChildIndex The child index public int ChildIndex Field Value int Fixture The fixture public Fixture Fixture Field Value Fixture ProxyId The proxy id public int ProxyId Field Value int"
  },
  "api/Alis.Core.Physic.Dynamics.Island.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Island.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Island Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll This is an internal class. public class Island Inheritance object Island Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields AngTolSqr The angular sleep tolerance private const float AngTolSqr = 0.0012184699 Field Value float Bodies The bodies public Body[] Bodies Field Value Body[] BodyCapacity The body capacity public int BodyCapacity Field Value int BodyCount The body count public int BodyCount Field Value int ContactCapacity The contact capacity public int ContactCapacity Field Value int ContactCount The contact count public int ContactCount Field Value int JointCapacity The joint capacity public int JointCapacity Field Value int JointCount The joint count public int JointCount Field Value int JointUpdateTime The joint update time public TimeSpan JointUpdateTime Field Value TimeSpan LinTolSqr The linear sleep tolerance private const float LinTolSqr = 0.0001 Field Value float _contactManager The contact manager private ContactManager _contactManager Field Value ContactManager _contactSolver The contact solver private readonly ContactSolver _contactSolver Field Value ContactSolver _contacts The contacts private Contact[] _contacts Field Value Contact[] _joints The joints private Joint[] _joints Field Value Joint[] _locks The locks internal int[] _locks Field Value int[] _positions The positions internal SolverPosition[] _positions Field Value SolverPosition[] _velocities The velocities internal SolverVelocity[] _velocities Field Value SolverVelocity[] _watch The stopwatch private readonly Stopwatch _watch Field Value Stopwatch Methods Add(Body) Adds the body public void Add(Body body) Parameters body Body The body Add(Contact) Adds the contact public void Add(Contact contact) Parameters contact Contact The contact Add(Joint) Adds the joint public void Add(Joint joint) Parameters joint Joint The joint Clear() Clears this instance public void Clear() Report(ContactVelocityConstraint[]) Reports the constraints private void Report(ContactVelocityConstraint[] constraints) Parameters constraints ContactVelocityConstraint[] The constraints Reset(int, int, int, ContactManager) Resets the body capacity public void Reset(int bodyCapacity, int contactCapacity, int jointCapacity, ContactManager contactManager) Parameters bodyCapacity int The body capacity contactCapacity int The contact capacity jointCapacity int The joint capacity contactManager ContactManager The contact manager Solve(ref TimeStep, ref Vector2) Solves the step internal void Solve(ref TimeStep step, ref Vector2 gravity) Parameters step TimeStep The step gravity Vector2 The gravity SolveTOI(ref TimeStep, int, int) Solves the toi using the specified sub step internal void SolveTOI(ref TimeStep subStep, int toiIndexA, int toiIndexB) Parameters subStep TimeStep The sub step toiIndexA int The toi index toiIndexB int The toi index"
  },
  "api/Alis.Core.Physic.Dynamics.JointCollection.JointEnumerator.html": {
    "href": "api/Alis.Core.Physic.Dynamics.JointCollection.JointEnumerator.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct JointCollection.JointEnumerator Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The joint enumerator public struct JointCollection.JointEnumerator : IEnumerator<Joint>, IEnumerator, IDisposable Implements IEnumerator<Joint> IEnumerator IDisposable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Constructors JointEnumerator(JointCollection, List<Joint>) Initializes a new instance of the Alis.Core.Physic.Dynamics.JointCollection.JointEnumerator class public JointEnumerator(JointCollection collection, List<Joint> list) Parameters collection JointCollection The collection list List<Joint> The list Fields _collection The collection private JointCollection _collection Field Value JointCollection _generationStamp The generation stamp private readonly int _generationStamp Field Value int _list The list private List<Joint> _list Field Value List<Joint> i The private int i Field Value int Properties Current Gets the value of the current public Joint Current { get; } Property Value Joint IEnumerator<Joint>.Current Gets the value of the current Joint IEnumerator<Joint>.Current { get; } Property Value Joint IEnumerator.Current Gets the value of the current object IEnumerator.Current { get; } Property Value object Methods MoveNext() Describes whether this instance move next public bool MoveNext() Returns bool The bool Exceptions InvalidOperationException Collection was modified. IEnumerator.Reset() Resets this instance void IEnumerator.Reset() IDisposable.Dispose() Disposes this instance void IDisposable.Dispose()"
  },
  "api/Alis.Core.Physic.Dynamics.JointCollection.html": {
    "href": "api/Alis.Core.Physic.Dynamics.JointCollection.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JointCollection Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The joint collection class public class JointCollection : IList<Joint>, ICollection<Joint>, IEnumerable<Joint>, IEnumerable Inheritance object JointCollection Implements IList<Joint> ICollection<Joint> IEnumerable<Joint> IEnumerable Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors JointCollection(World) Initializes a new instance of the Alis.Core.Physic.Dynamics.JointCollection class public JointCollection(World world) Parameters world World The world Fields _generationStamp The generation stamp internal int _generationStamp Field Value int _list The joint internal readonly List<Joint> _list Field Value List<Joint> _world The world private readonly World _world Field Value World Properties Count Gets the value of the count public int Count { get; } Property Value int IsReadOnly Gets the value of the is read only public bool IsReadOnly { get; } Property Value bool this[int] The not supported exception public Joint this[int index] { get; set; } Property Value Joint Methods Contains(Joint) Describes whether this instance contains public bool Contains(Joint item) Parameters item Joint The item Returns bool The bool CopyTo(Joint[], int) Copies the to using the specified array public void CopyTo(Joint[] array, int arrayIndex) Parameters array Joint[] The array arrayIndex int The array index GetEnumerator() Gets the enumerator public JointCollection.JointEnumerator GetEnumerator() Returns JointCollection.JointEnumerator The joint enumerator IndexOf(Joint) Indexes the of using the specified item public int IndexOf(Joint item) Parameters item Joint The item Returns int The int ICollection<Joint>.Add(Joint) Adds the item void ICollection<Joint>.Add(Joint item) Parameters item Joint The item Exceptions NotSupportedException ICollection<Joint>.Clear() Clears this instance void ICollection<Joint>.Clear() Exceptions NotSupportedException ICollection<Joint>.Remove(Joint) Describes whether this instance remove bool ICollection<Joint>.Remove(Joint item) Parameters item Joint The item Returns bool The bool IEnumerable<Joint>.GetEnumerator() Gets the enumerator IEnumerator<Joint> IEnumerable<Joint>.GetEnumerator() Returns IEnumerator<Joint> An enumerator of joint IList<Joint>.Insert(int, Joint) Inserts the index void IList<Joint>.Insert(int index, Joint item) Parameters index int The index item Joint The item Exceptions NotSupportedException IList<Joint>.RemoveAt(int) Removes the at using the specified index void IList<Joint>.RemoveAt(int index) Parameters index int The index Exceptions NotSupportedException IEnumerable.GetEnumerator() Gets the enumerator IEnumerator IEnumerable.GetEnumerator() Returns IEnumerator The enumerator See Also IEnumerable<T> ICollection<T> IList<T>"
  },
  "api/Alis.Core.Physic.Dynamics.JointDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.JointDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate JointDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The joint delegate public delegate void JointDelegate(World sender, Joint joint) Parameters sender World joint Joint"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.AngleJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.AngleJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class AngleJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll Maintains a fixed angle between two bodies public class AngleJoint : Joint Inheritance object Joint AngleJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors AngleJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.AngleJoint class internal AngleJoint() AngleJoint(Body, Body) Constructor for AngleJoint public AngleJoint(Body bodyA, Body bodyB) Parameters bodyA Body The first body bodyB Body The second body Fields _bias The bias private float _bias Field Value float _jointError The joint error private float _jointError Field Value float _massFactor The mass factor private float _massFactor Field Value float _targetAngle The target angle private float _targetAngle Field Value float Properties BiasFactor Gets or sets the bias factor. Defaults to 0.2 public float BiasFactor { get; set; } Property Value float MaxImpulse Gets or sets the maximum impulse Defaults to float.MaxValue public float MaxImpulse { get; set; } Property Value float Softness Gets or sets the softness of the joint Defaults to 0 public float Softness { get; set; } Property Value float TargetAngle The desired angle between BodyA and BodyB public float TargetAngle { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.DistanceJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.DistanceJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class DistanceJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A distance joint rains two points on two bodies to remain at a fixed distance from each other. You can view this as a massless, rigid rod. public class DistanceJoint : Joint Inheritance object Joint DistanceJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks 1-D rained system m (v2 - v1) = lambda v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass. x2 = x1 + h * v2 1-D mass-damper-spring system m (v2 - v1) + h * d * v2 + h * k * C = norm(p2 - p1) - L u = (p2 - p1) / norm(p2 - p1) Cdot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1)) J = [-u -cross(r1, u) u cross(r2, u)] K = J * invM * JT = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2 Constructors DistanceJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.DistanceJoint class internal DistanceJoint() DistanceJoint(Body, Body, Vector2, Vector2, bool) This requires defining an anchor point on both bodies and the non-zero length of the distance joint. If you don't supply a length, the local anchor points is used so that the initial configuration can violate the constraint slightly. This helps when saving and loading a game. Warning Do not use a zero or short length. public DistanceJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters bodyA Body The first body bodyB Body The second body anchorA Vector2 The first body anchor anchorB Vector2 The second body anchor useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _bias The bias private float _bias Field Value float _gamma The gamma private float _gamma Field Value float _impulse The impulse private float _impulse Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _mass The mass private float _mass Field Value float _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 _u The private Vector2 _u Field Value Vector2 invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties DampingRatio The damping ratio. 0 = no damping, 1 = critical damping. public float DampingRatio { get; set; } Property Value float Frequency The mass-spring-damper frequency in Hertz. A value of 0 disables softness. public float Frequency { get; set; } Property Value float Length The natural length between the anchor points. Manipulating the length can lead to non-physical behavior when the frequency is zero. public float Length { get; set; } Property Value float LocalAnchorA The local anchor point relative to bodyA's origin. public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point relative to bodyB's origin. public Vector2 LocalAnchorB { get; set; } Property Value Vector2 WorldAnchorA Gets or sets the value of the world anchor a public override sealed Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override sealed Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Get the reaction force given the inverse time step. Unit is N. public override Vector2 GetReactionForce(float invDt) Parameters invDt float Returns Vector2 GetReactionTorque(float) Get the reaction torque given the inverse time step. Unit is N*m. This is always zero for a distance joint. public override float GetReactionTorque(float invDt) Parameters invDt float Returns float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FixedMouseJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A mouse joint is used to make a point on a body track a specified world point. This a soft constraint with a maximum force. This allows the constraint to stretch and without applying huge forces. NOTE: this joint is not documented in the manual because it was developed to be used in the testbed. If you want to learn how to use the mouse joint, look at the testbed. public class FixedMouseJoint : Joint Inheritance object Joint FixedMouseJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks p = attached point, m = mouse point C = p - m Cdot = v = v + cross(w, r) J = [I r_skew] Identity used: w k % (rx i + ry j) = w * (-ry i + rx j) Constructors FixedMouseJoint(Body, Vector2) This requires a world target point, tuning parameters, and the time step. public FixedMouseJoint(Body body, Vector2 worldAnchor) Parameters body Body The body. worldAnchor Vector2 The target. Fields _C The private Vector2 _C Field Value Vector2 _beta The beta private float _beta Field Value float _dampingRatio The damping ratio private float _dampingRatio Field Value float _frequency The frequency private float _frequency Field Value float _gamma The gamma private float _gamma Field Value float _impulse The impulse private Vector2 _impulse Field Value Vector2 _indexA The index private int _indexA Field Value int _invIA The inv ia private float _invIA Field Value float _invMassA The inv mass private float _invMassA Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _mass The mass private Mat22 _mass Field Value Mat22 _maxForce The max force private float _maxForce Field Value float _rA The private Vector2 _rA Field Value Vector2 _worldAnchor The world anchor private Vector2 _worldAnchor Field Value Vector2 Properties DampingRatio The damping ratio. 0 = no damping, 1 = critical damping. public float DampingRatio { get; set; } Property Value float Frequency The response speed. public float Frequency { get; set; } Property Value float LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 MaxForce The maximum constraint force that can be exerted to move the candidate body. Usually you will express as some multiple of the weight (multiplier * mass * gravity). public float MaxForce { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.FrictionJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.FrictionJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class FrictionJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll Friction joint. This is used for top-down friction. It provides 2D translational friction and angular friction. public class FrictionJoint : Joint Inheritance object Joint FrictionJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors FrictionJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.FrictionJoint class internal FrictionJoint() FrictionJoint(Body, Body, Vector2, bool) Constructor for FrictionJoint. public FrictionJoint(Body bodyA, Body bodyB, Vector2 anchor, bool useWorldCoordinates = false) Parameters bodyA Body bodyB Body anchor Vector2 useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _angularImpulse The angular impulse private float _angularImpulse Field Value float _angularMass The angular mass private float _angularMass Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invIA The inv ia private float _invIA Field Value float _invIB The inv ib private float _invIB Field Value float _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _linearImpulse The linear impulse private Vector2 _linearImpulse Field Value Vector2 _linearMass The linear mass private Mat22 _linearMass Field Value Mat22 _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 Properties LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 MaxForce The maximum friction force in N. public float MaxForce { get; set; } Property Value float MaxTorque The maximum friction torque in N-m. public float MaxTorque { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.GearJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.GearJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class GearJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A gear joint is used to connect two joints together. Either joint can be a revolute or prismatic joint. You specify a gear ratio to bind the motions together: coordinate1 + ratio * coordinate2 = ant The ratio can be negative or positive. If one joint is a revolute joint and the other joint is a prismatic joint, then the ratio will have units of length or units of 1/length. Warning: You have to manually destroy the gear joint if jointA or jointB is destroyed. public class GearJoint : Joint Inheritance object Joint GearJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors GearJoint(Body, Body, Joint, Joint, float) Requires two existing revolute or prismatic joints (any combination will work). The provided joints must attach a dynamic body to a static body. public GearJoint(Body bodyA, Body bodyB, Joint jointA, Joint jointB, float ratio = 1) Parameters bodyA Body The first body bodyB Body The second body jointA Joint The first joint. jointB Joint The second joint. ratio float The ratio. Fields _JvAC The jv bd private Vector2 _JvAC Field Value Vector2 _JvBD The jv bd private Vector2 _JvBD Field Value Vector2 _JwA The jw private float _JwA Field Value float _JwB The jw private float _JwB Field Value float _JwC The jw private float _JwC Field Value float _JwD The jw private float _JwD Field Value float _bodyA The body private readonly Body _bodyA Field Value Body _bodyB The body private readonly Body _bodyB Field Value Body _bodyC The body private readonly Body _bodyC Field Value Body _bodyD The body private readonly Body _bodyD Field Value Body _constant The constant private readonly float _constant Field Value float _iA The private float _iA Field Value float _iB The private float _iB Field Value float _iC The private float _iC Field Value float _iD The private float _iD Field Value float _impulse The impulse private float _impulse Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _indexC The index private int _indexC Field Value int _indexD The index private int _indexD Field Value int _lcA The lc private Vector2 _lcA Field Value Vector2 _lcB The lc private Vector2 _lcB Field Value Vector2 _lcC The lc private Vector2 _lcC Field Value Vector2 _lcD The lc private Vector2 _lcD Field Value Vector2 _localAnchorA The local anchor private readonly Vector2 _localAnchorA Field Value Vector2 _localAnchorB The local anchor private readonly Vector2 _localAnchorB Field Value Vector2 _localAnchorC The local anchor private readonly Vector2 _localAnchorC Field Value Vector2 _localAnchorD The local anchor private readonly Vector2 _localAnchorD Field Value Vector2 _localAxisC The local axis private Vector2 _localAxisC Field Value Vector2 _localAxisD The local axis private Vector2 _localAxisD Field Value Vector2 _mA The private float _mA Field Value float _mB The private float _mB Field Value float _mC The private float _mC Field Value float _mD The private float _mD Field Value float _mass The mass private float _mass Field Value float _ratio The ratio private float _ratio Field Value float _referenceAngleA The reference angle private readonly float _referenceAngleA Field Value float _referenceAngleB The reference angle private readonly float _referenceAngleB Field Value float _typeA The type private readonly JointType _typeA Field Value JointType _typeB The type private readonly JointType _typeB Field Value JointType Properties JointA The first revolute/prismatic joint attached to the gear joint. public Joint JointA { get; } Property Value Joint JointB The second revolute/prismatic joint attached to the gear joint. public Joint JointB { get; } Property Value Joint Ratio The gear ratio. public float Ratio { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.Joint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.Joint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Joint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll The joint class public abstract class Joint Inheritance object Joint Derived AngleJoint DistanceJoint FixedMouseJoint FrictionJoint GearJoint MotorJoint PrismaticJoint PulleyJoint RevoluteJoint RopeJoint WeldJoint WheelJoint Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors Joint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.Joint class protected Joint() Joint(Body, Body) Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.Joint class protected Joint(Body bodyA, Body bodyB) Parameters bodyA Body The body bodyB Body The body Joint(Body) Constructor for fixed joint protected Joint(Body body) Parameters body Body Fields EdgeA The joint edge internal JointEdge EdgeA Field Value JointEdge EdgeB The joint edge internal JointEdge EdgeB Field Value JointEdge Enabled Indicate if this join is enabled or not. Disabling a joint means it is still in the simulation, but inactive. public bool Enabled Field Value bool IslandFlag The island flag internal bool IslandFlag Field Value bool Tag Set the user data pointer. public object Tag Field Value object _breakpoint The breakpoint private float _breakpoint Field Value float _breakpointSquared The breakpoint squared private double _breakpointSquared Field Value double _world The world internal World _world Field Value World Properties BodyA Get the first body attached to this joint. public Body BodyA { get; internal set; } Property Value Body BodyB Get the second body attached to this joint. public Body BodyB { get; internal set; } Property Value Body Breakpoint The Breakpoint simply indicates the maximum Value the JointError can be before it breaks. The default value is float.MaxValue, which means it never breaks. public float Breakpoint { get; set; } Property Value float CollideConnected Set this flag to true if the attached bodies should collide. public bool CollideConnected { get; set; } Property Value bool JointType Gets or sets the type of the joint. public JointType JointType { get; protected set; } Property Value JointType World Get the parent World of this joint. This is null if the joint is not attached. public World World { get; } Property Value World WorldAnchorA Get the anchor point on bodyA in world coordinates. On some joints, this value indicate the anchor point within the world. public abstract Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Get the anchor point on bodyB in world coordinates. On some joints, this value indicate the anchor point within the world. public abstract Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Get the reaction force on body at the joint anchor in Newtons. public abstract Vector2 GetReactionForce(float invDt) Parameters invDt float The inverse delta time. Returns Vector2 GetReactionTorque(float) Get the reaction torque on the body at the joint anchor in N*m. public abstract float GetReactionTorque(float invDt) Parameters invDt float The inverse delta time. Returns float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal abstract void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data IsFixedType() Return true if the joint is a fixed type. public bool IsFixedType() Returns bool SolvePositionConstraints(ref SolverData) Solves the position constraints. internal abstract bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData Returns bool returns true if the position errors are within tolerance. SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal abstract void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data Validate(float) Validates the inv dt internal void Validate(float invDt) Parameters invDt float The inv dt WakeBodies() Wakes the bodies protected void WakeBodies() Broke Fires when the joint is broken. public event Action<Joint, float> Broke Event Type Action<Joint, float>"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.JointEdge.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.JointEdge.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JointEdge Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A joint edge is used to connect bodies and joints together in a joint graph where each body is a node and each joint is an edge. A joint edge belongs to a doubly linked list maintained in each attached body. Each joint has two joint nodes, one for each attached body. public sealed class JointEdge Inheritance object JointEdge Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields Joint The joint. public Joint Joint Field Value Joint Next The next joint edge in the body's joint list. public JointEdge Next Field Value JointEdge Other Provides quick access to the other body attached. public Body Other Field Value Body Prev The previous joint edge in the body's joint list. public JointEdge Prev Field Value JointEdge"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.JointFactory.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.JointFactory.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class JointFactory Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll An easy to use factory for using joints. public static class JointFactory Inheritance object JointFactory Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Methods CreateAngleJoint(World, Body, Body) Creates the angle joint using the specified world public static AngleJoint CreateAngleJoint(World world, Body bodyA, Body bodyB) Parameters world World The world bodyA Body The body bodyB Body The body Returns AngleJoint The angle joint CreateDistanceJoint(World, Body, Body, Vector2, Vector2, bool) Creates the distance joint using the specified world public static DistanceJoint CreateDistanceJoint(World world, Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchorA Vector2 The anchor anchorB Vector2 The anchor useWorldCoordinates bool The use world coordinates Returns DistanceJoint The distance joint CreateDistanceJoint(World, Body, Body) Creates the distance joint using the specified world public static DistanceJoint CreateDistanceJoint(World world, Body bodyA, Body bodyB) Parameters world World The world bodyA Body The body bodyB Body The body Returns DistanceJoint The distance joint CreateFixedMouseJoint(World, Body, Vector2) Creates the fixed mouse joint using the specified world public static FixedMouseJoint CreateFixedMouseJoint(World world, Body body, Vector2 worldAnchor) Parameters world World The world body Body The body worldAnchor Vector2 The world anchor Returns FixedMouseJoint The joint CreateFrictionJoint(World, Body, Body, Vector2, bool) Creates the friction joint using the specified world public static FrictionJoint CreateFrictionJoint(World world, Body bodyA, Body bodyB, Vector2 anchor, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchor Vector2 The anchor useWorldCoordinates bool The use world coordinates Returns FrictionJoint The friction joint CreateFrictionJoint(World, Body, Body) Creates the friction joint using the specified world public static FrictionJoint CreateFrictionJoint(World world, Body bodyA, Body bodyB) Parameters world World The world bodyA Body The body bodyB Body The body Returns FrictionJoint The friction joint CreateGearJoint(World, Body, Body, Joint, Joint, float) Creates the gear joint using the specified world public static GearJoint CreateGearJoint(World world, Body bodyA, Body bodyB, Joint jointA, Joint jointB, float ratio) Parameters world World The world bodyA Body The body bodyB Body The body jointA Joint The joint jointB Joint The joint ratio float The ratio Returns GearJoint The gear joint CreateMotorJoint(World, Body, Body, bool) Creates the motor joint using the specified world public static MotorJoint CreateMotorJoint(World world, Body bodyA, Body bodyB, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body useWorldCoordinates bool The use world coordinates Returns MotorJoint The joint CreatePrismaticJoint(World, Body, Body, Vector2, Vector2, bool) Creates the prismatic joint using the specified world public static PrismaticJoint CreatePrismaticJoint(World world, Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchor Vector2 The anchor axis Vector2 The axis useWorldCoordinates bool The use world coordinates Returns PrismaticJoint The joint CreatePulleyJoint(World, Body, Body, Vector2, Vector2, Vector2, Vector2, float, bool) Creates the pulley joint using the specified world public static PulleyJoint CreatePulleyJoint(World world, Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, Vector2 worldAnchorA, Vector2 worldAnchorB, float ratio, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchorA Vector2 The anchor anchorB Vector2 The anchor worldAnchorA Vector2 The world anchor worldAnchorB Vector2 The world anchor ratio float The ratio useWorldCoordinates bool The use world coordinates Returns PulleyJoint The pulley joint CreateRevoluteJoint(World, Body, Body, Vector2, Vector2, bool) Creates the revolute joint using the specified world public static RevoluteJoint CreateRevoluteJoint(World world, Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchorA Vector2 The anchor anchorB Vector2 The anchor useWorldCoordinates bool The use world coordinates Returns RevoluteJoint The joint CreateRevoluteJoint(World, Body, Body, Vector2) Creates the revolute joint using the specified world public static RevoluteJoint CreateRevoluteJoint(World world, Body bodyA, Body bodyB, Vector2 anchor) Parameters world World The world bodyA Body The body bodyB Body The body anchor Vector2 The anchor Returns RevoluteJoint The joint CreateRopeJoint(World, Body, Body, Vector2, Vector2, bool) Creates the rope joint using the specified world public static RopeJoint CreateRopeJoint(World world, Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchorA Vector2 The anchor anchorB Vector2 The anchor useWorldCoordinates bool The use world coordinates Returns RopeJoint The rope joint CreateWeldJoint(World, Body, Body, Vector2, Vector2, bool) Creates the weld joint using the specified world public static WeldJoint CreateWeldJoint(World world, Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchorA Vector2 The anchor anchorB Vector2 The anchor useWorldCoordinates bool The use world coordinates Returns WeldJoint The weld joint CreateWheelJoint(World, Body, Body, Vector2, Vector2, bool) Creates the wheel joint using the specified world public static WheelJoint CreateWheelJoint(World world, Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis, bool useWorldCoordinates = false) Parameters world World The world bodyA Body The body bodyB Body The body anchor Vector2 The anchor axis Vector2 The axis useWorldCoordinates bool The use world coordinates Returns WheelJoint The joint CreateWheelJoint(World, Body, Body, Vector2) Creates the wheel joint using the specified world public static WheelJoint CreateWheelJoint(World world, Body bodyA, Body bodyB, Vector2 axis) Parameters world World The world bodyA Body The body bodyB Body The body axis Vector2 The axis Returns WheelJoint The wheel joint"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.JointType.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.JointType.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum JointType Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll The joint type enum public enum JointType Fields Unknown = 0 The unknown joint type Revolute = 1 The revolute joint type Prismatic = 2 The prismatic joint type Distance = 3 The distance joint type Pulley = 4 The pulley joint type Gear = 5 The gear joint type Wheel = 6 The wheel joint type Weld = 7 The weld joint type Friction = 8 The friction joint type Rope = 9 The rope joint type Motor = 10 The motor joint type Angle = 11 The angle joint type FixedMouse = 12 The fixed mouse joint type FixedRevolute = 13 The fixed revolute joint type FixedDistance = 14 The fixed distance joint type FixedLine = 15 The fixed line joint type FixedPrismatic = 16 The fixed prismatic joint type FixedAngle = 17 The fixed angle joint type FixedFriction = 18 The fixed friction joint type"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.LimitState.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.LimitState.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Enum LimitState Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll The limit state enum public enum LimitState Fields Inactive = 0 The inactive limit state AtLower = 1 The at lower limit state AtUpper = 2 The at upper limit state Equal = 3 The equal limit state"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.MotorJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.MotorJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MotorJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A motor joint is used to control the relative motion between two bodies. A typical usage is to control the movement of a dynamic body with respect to the ground. public class MotorJoint : Joint Inheritance object Joint MotorJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors MotorJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.MotorJoint class internal MotorJoint() MotorJoint(Body, Body, bool) Constructor for MotorJoint. public MotorJoint(Body bodyA, Body bodyB, bool useWorldCoordinates = false) Parameters bodyA Body The first body bodyB Body The second body useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _angularError The angular error private float _angularError Field Value float _angularImpulse The angular impulse private float _angularImpulse Field Value float _angularMass The angular mass private float _angularMass Field Value float _angularOffset The angular offset private float _angularOffset Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _linearError The linear error private Vector2 _linearError Field Value Vector2 _linearImpulse The linear impulse private Vector2 _linearImpulse Field Value Vector2 _linearMass The linear mass private Mat22 _linearMass Field Value Mat22 _linearOffset The linear offset private Vector2 _linearOffset Field Value Vector2 _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _maxForce The max force private float _maxForce Field Value float _maxTorque The max torque private float _maxTorque Field Value float _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties AngularOffset Get or set the angular offset. public float AngularOffset { get; set; } Property Value float CorrectionFactor Gets or sets the value of the correction factor internal float CorrectionFactor { get; set; } Property Value float LinearOffset The linear (translation) offset. public Vector2 LinearOffset { get; set; } Property Value Vector2 MaxForce The maximum amount of force that can be applied to BodyA public float MaxForce { get; set; } Property Value float MaxTorque The maximum amount of torque that can be applied to BodyA public float MaxTorque { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PrismaticJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A prismatic joint. This joint provides one degree of freedom: translation along an axis fixed in bodyA. Relative rotation is prevented. You can use a joint limit to restrict the range of motion and a joint motor to drive the motion or to model joint friction. public class PrismaticJoint : Joint Inheritance object Joint PrismaticJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks Linear constraint (point-to-line) d = p2 - p1 = x2 + r2 - x1 - r1 C = dot(perp, d) Cdot = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 - cross(w1, r1)) = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) + dot(cross(r2, perp), v2) J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)] Angular constraint C = a2 - a1 + a_initial Cdot = w2 - w1 J = [0 0 -1 0 0 1] K = J * invM * JT J = [-a -s1 a s2] [0 -1 0 1] a = perp s1 = cross(d + r1, a) = cross(p2 - x1, a) s2 = cross(r2, a) = cross(p2 - x2, a) Motor/Limit linear constraint C = dot(ax1, d) Cdot = = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) + dot(cross(r2, ax1), v2) J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)] Block Solver We develop a block solver that includes the joint limit. This makes the limit stiff (inelastic) even when the mass has poor distribution (leading to large torques about the joint anchor points). The Jacobian has 3 rows: J = [-uT -s1 uT s2] // linear [0 -1 0 1] // angular [-vT -a1 vT a2] // limit u = perp v = axis s1 = cross(d + r1, u), s2 = cross(r2, u) a1 = cross(d + r1, v), a2 = cross(r2, v) M * (v2 - v1) = JT * df J * v2 = bias v2 = v1 + invM * JT * df J * (v1 + invM * JT * df) = bias K * df = bias - J * v1 = -Cdot K = J * invM * JT Cdot = J * v1 - bias Now solve for f2. df = f2 - f1 K * (f2 - f1) = -Cdot f2 = invK * (-Cdot) + f1 Clamp accumulated limit impulse. lower: f2(3) = max(f2(3), 0) upper: f2(3) = min(f2(3), 0) Solve for correct f2(1:2) K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:3) * f1 = -Cdot(1:2) - K(1:2,3) * f2(3) + K(1:2,1:2) * f1(1:2) + K(1:2,3) * f1(3) K(1:2, 1:2) * f2(1:2) = -Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3)) + K(1:2,1:2) * f1(1:2) f2(1:2) = invK(1:2,1:2) * (-Cdot(1:2) - K(1:2,3) * (f2(3) - f1(3))) + f1(1:2) Now compute impulse to be applied: df = f2 - f1 Constructors PrismaticJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.PrismaticJoint class internal PrismaticJoint() PrismaticJoint(Body, Body, Vector2, Vector2, Vector2, bool) This requires defining a line of motion using an axis and an anchor point. The definition uses local anchor points and a local axis so that the initial configuration can violate the constraint slightly. The joint translation is zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when saving and loading a game. public PrismaticJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, Vector2 axis, bool useWorldCoordinates = false) Parameters bodyA Body The first body. bodyB Body The second body. anchorA Vector2 The first body anchor. anchorB Vector2 The second body anchor. axis Vector2 The axis. useWorldCoordinates bool Set to true if you are using world coordinates as anchors. PrismaticJoint(Body, Body, Vector2, Vector2, bool) Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.PrismaticJoint class public PrismaticJoint(Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis, bool useWorldCoordinates = false) Parameters bodyA Body The body bodyB Body The body anchor Vector2 The anchor axis Vector2 The axis useWorldCoordinates bool The use world coordinates Fields _a1 The private float _a1 Field Value float _a2 The private float _a2 Field Value float _axis The perp private Vector2 _axis Field Value Vector2 _axis1 The axis private Vector2 _axis1 Field Value Vector2 _enableLimit The enable limit private bool _enableLimit Field Value bool _enableMotor The enable motor private bool _enableMotor Field Value bool _impulse The impulse private Vector3 _impulse Field Value Vector3 _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _limitState The limit state private LimitState _limitState Field Value LimitState _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _localXAxis The local axis private Vector2 _localXAxis Field Value Vector2 _localYAxisA The local axis private Vector2 _localYAxisA Field Value Vector2 _lowerTranslation The lower translation private float _lowerTranslation Field Value float _maxMotorForce The max motor force private float _maxMotorForce Field Value float _motorMass The motor mass private float _motorMass Field Value float _motorSpeed The motor speed private float _motorSpeed Field Value float _perp The perp private Vector2 _perp Field Value Vector2 _s1 The private float _s1 Field Value float _s2 The private float _s2 Field Value float _upperTranslation The upper translation private float _upperTranslation Field Value float invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float k The private Mat33 k Field Value Mat33 Properties Axis1 The axis at which the joint moves. public Vector2 Axis1 { get; set; } Property Value Vector2 JointSpeed Get the current joint translation speed, usually in meters per second. public float JointSpeed { get; } Property Value float JointTranslation Get the current joint translation, usually in meters. public float JointTranslation { get; } Property Value float LimitEnabled Is the joint limit enabled? public bool LimitEnabled { get; set; } Property Value bool LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 LocalXAxis The axis in local coordinates relative to BodyA public Vector2 LocalXAxis { get; } Property Value Vector2 LowerLimit Get the lower joint limit, usually in meters. public float LowerLimit { get; set; } Property Value float MaxMotorForce Set the maximum motor force, usually in N. public float MaxMotorForce { get; set; } Property Value float MotorEnabled Is the joint motor enabled? public bool MotorEnabled { get; set; } Property Value bool MotorImpulse Get the current motor impulse, usually in N. public float MotorImpulse { get; set; } Property Value float MotorSpeed Set the motor speed, usually in meters per second. public float MotorSpeed { get; set; } Property Value float ReferenceAngle The reference angle. public float ReferenceAngle { get; set; } Property Value float UpperLimit Get the upper joint limit, usually in meters. public float UpperLimit { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetMotorForce(float) Gets the motor force. public float GetMotorForce(float invDt) Parameters invDt float The inverse delta time Returns float GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data Initialize(Vector2, Vector2, Vector2, bool) Initializes the local anchor a private void Initialize(Vector2 localAnchorA, Vector2 localAnchorB, Vector2 axis, bool useWorldCoordinates) Parameters localAnchorA Vector2 The local anchor localAnchorB Vector2 The local anchor axis Vector2 The axis useWorldCoordinates bool The use world coordinates SetLimits(float, float) Set the joint limits, usually in meters. public void SetLimits(float lower, float upper) Parameters lower float The lower limit upper float The upper limit SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.PulleyJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.PulleyJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class PulleyJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll The pulley joint is connected to two bodies and two fixed world points. The pulley supports a ratio such that: length1 + ratio * length2 <= constant Yes, the force transmitted is scaled by the ratio. Warning: the pulley joint can get a bit squirrelly by itself. They often work better when combined with prismatic joints. You should also cover the the anchor points with static shapes to prevent one side from going to zero length. public class PulleyJoint : Joint Inheritance object Joint PulleyJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors PulleyJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.PulleyJoint class internal PulleyJoint() PulleyJoint(Body, Body, Vector2, Vector2, Vector2, Vector2, float, bool) Constructor for PulleyJoint. public PulleyJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, Vector2 worldAnchorA, Vector2 worldAnchorB, float ratio, bool useWorldCoordinates = false) Parameters bodyA Body The first body. bodyB Body The second body. anchorA Vector2 The anchor on the first body. anchorB Vector2 The anchor on the second body. worldAnchorA Vector2 The world anchor for the first body. worldAnchorB Vector2 The world anchor for the second body. ratio float The ratio. useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _impulse The impulse private float _impulse Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _mass The mass private float _mass Field Value float _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 _uA The private Vector2 _uA Field Value Vector2 _uB The private Vector2 _uB Field Value Vector2 invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties Constant Gets or sets the value of the constant internal float Constant { get; set; } Property Value float CurrentLengthA The current length between the anchor point on BodyA and WorldAnchorA public float CurrentLengthA { get; } Property Value float CurrentLengthB The current length between the anchor point on BodyB and WorldAnchorB public float CurrentLengthB { get; } Property Value float LengthA Get the current length of the segment attached to body1. public float LengthA { get; set; } Property Value float LengthB Get the current length of the segment attached to body2. public float LengthB { get; set; } Property Value float LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 Ratio Get the pulley ratio. public float Ratio { get; set; } Property Value float WorldAnchorA Get the first world anchor. public override sealed Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Get the second world anchor. public override sealed Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RevoluteJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A revolute joint constrains to bodies to share a common point while they are free to rotate about the point. The relative rotation about the shared point is the joint angle. You can limit the relative rotation with a joint limit that specifies a lower and upper angle. You can use a motor to drive the relative rotation about the shared point. A maximum motor torque is provided so that infinite forces are not generated. public class RevoluteJoint : Joint Inheritance object Joint RevoluteJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors RevoluteJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.RevoluteJoint class internal RevoluteJoint() RevoluteJoint(Body, Body, Vector2, Vector2, bool) Constructor of RevoluteJoint. public RevoluteJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters bodyA Body The first body. bodyB Body The second body. anchorA Vector2 The first body anchor. anchorB Vector2 The second anchor. useWorldCoordinates bool Set to true if you are using world coordinates as anchors. RevoluteJoint(Body, Body, Vector2, bool) Constructor of RevoluteJoint. public RevoluteJoint(Body bodyA, Body bodyB, Vector2 anchor, bool useWorldCoordinates = false) Parameters bodyA Body The first body. bodyB Body The second body. anchor Vector2 The shared anchor. useWorldCoordinates bool Fields _enableLimit The enable limit private bool _enableLimit Field Value bool _enableMotor The enable motor private bool _enableMotor Field Value bool _impulse The impulse private Vector3 _impulse Field Value Vector3 _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _limitState The limit state private LimitState _limitState Field Value LimitState _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _lowerAngle The lower angle private float _lowerAngle Field Value float _mass The mass private Mat33 _mass Field Value Mat33 _maxMotorTorque The max motor torque private float _maxMotorTorque Field Value float _motorImpulse The motor impulse private float _motorImpulse Field Value float _motorMass The motor mass private float _motorMass Field Value float _motorSpeed The motor speed private float _motorSpeed Field Value float _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 _referenceAngle The reference angle private float _referenceAngle Field Value float _upperAngle The upper angle private float _upperAngle Field Value float invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties JointAngle Get the current joint angle in radians. public float JointAngle { get; } Property Value float JointSpeed Get the current joint angle speed in radians per second. public float JointSpeed { get; } Property Value float LimitEnabled Is the joint limit enabled? public bool LimitEnabled { get; set; } Property Value bool LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 LowerLimit Get the lower joint limit in radians. public float LowerLimit { get; set; } Property Value float MaxMotorTorque Get or set the maximum motor torque, usually in N-m. public float MaxMotorTorque { get; set; } Property Value float MotorEnabled Is the joint motor enabled? public bool MotorEnabled { get; set; } Property Value bool MotorImpulse Get or set the current motor impulse, usually in N-m. public float MotorImpulse { get; set; } Property Value float MotorSpeed Get or set the motor speed in radians per second. public float MotorSpeed { get; set; } Property Value float ReferenceAngle The referance angle computed as BodyB angle minus BodyA angle. public float ReferenceAngle { get; set; } Property Value float UpperLimit Get the upper joint limit in radians. public float UpperLimit { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetMotorTorque(float) Gets the motor torque in N-m. public float GetMotorTorque(float invDt) Parameters invDt float The inverse delta time Returns float GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SetLimits(float, float) Set the joint limits, usually in meters. public void SetLimits(float lower, float upper) Parameters lower float The lower limit upper float The upper limit SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.RopeJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.RopeJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class RopeJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A rope joint enforces a maximum distance between two points on two bodies. It has no other effect. It can be used on ropes that are made up of several connected bodies, and if there is a need to support a heavy body. This joint is used for stabiliation of heavy objects on soft constraint joints. Warning: if you attempt to change the maximum length during the simulation you will get some non-physical behavior. Use the DistanceJoint instead if you want to dynamically control the length. public class RopeJoint : Joint Inheritance object Joint RopeJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks Limit: C = norm(pB - pA) - L u = (pB - pA) / norm(pB - pA) Cdot = dot(u, vB + cross(wB, rB) - vA - cross(wA, rA)) J = [-u -cross(rA, u) u cross(rB, u)] K = J * invM * JT = invMassA + invIA * cross(rA, u)^2 + invMassB + invIB * cross(rB, u)^2 Constructors RopeJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.RopeJoint class internal RopeJoint() RopeJoint(Body, Body, Vector2, Vector2, bool) Constructor for RopeJoint. public RopeJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters bodyA Body The first body bodyB Body The second body anchorA Vector2 The anchor on the first body anchorB Vector2 The anchor on the second body useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _impulse The impulse private float _impulse Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _length The length private float _length Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _mass The mass private float _mass Field Value float _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 _u The private Vector2 _u Field Value Vector2 invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 MaxLength Get or set the maximum length of the rope. By default, it is the distance between the two anchor points. public float MaxLength { get; set; } Property Value float State Gets the state of the joint. public LimitState State { get; private set; } Property Value LimitState WorldAnchorA Gets or sets the value of the world anchor a public override sealed Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override sealed Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.WeldJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.WeldJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WeldJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A weld joint essentially glues two bodies together. A weld joint may distort somewhat because the island constraint solver is approximate. The joint is soft constraint based, which means the two bodies will move relative to each other, when a force is applied. To combine two bodies in a rigid fashion, combine the fixtures to a single body instead. public class WeldJoint : Joint Inheritance object Joint WeldJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks Point-to-point constraint C = p2 - p1 Cdot = v2 - v1 = v2 + cross(w2, r2) - v1 - cross(w1, r1) J = [-I -r1_skew I r2_skew ] Identity used: w k % (rx i + ry j) = w * (-ry i + rx j) Angle constraint C = angle2 - angle1 - referenceAngle Cdot = w2 - w1 J = [0 0 -1 0 0 1] K = invI1 + invI2 Constructors WeldJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.WeldJoint class internal WeldJoint() WeldJoint(Body, Body, Vector2, Vector2, bool) You need to specify an anchor point where they are attached. The position of the anchor point is important for computing the reaction torque. public WeldJoint(Body bodyA, Body bodyB, Vector2 anchorA, Vector2 anchorB, bool useWorldCoordinates = false) Parameters bodyA Body The first body bodyB Body The second body anchorA Vector2 The first body anchor. anchorB Vector2 The second body anchor. useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _bias The bias private float _bias Field Value float _gamma The gamma private float _gamma Field Value float _impulse The impulse private Vector3 _impulse Field Value Vector3 _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invIA The inv ia private float _invIA Field Value float _invIB The inv ib private float _invIB Field Value float _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _mass The mass private Mat33 _mass Field Value Mat33 _rA The private Vector2 _rA Field Value Vector2 _rB The private Vector2 _rB Field Value Vector2 Properties DampingRatio The damping on the joint. The damping is only used when the joint has a frequency (> 0). A higher value means more damping. public float DampingRatio { get; set; } Property Value float FrequencyHz The frequency of the joint. A higher frequency means a stiffer joint, but a too high value can cause the joint to oscillate. Default is 0, which means the joint does no spring calculations. public float FrequencyHz { get; set; } Property Value float LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 ReferenceAngle The bodyB angle minus bodyA angle in the reference state (radians). public float ReferenceAngle { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.WheelJoint.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.WheelJoint.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class WheelJoint Namespace Alis.Core.Physic.Dynamics.Joints Assembly Alis.dll A wheel joint. This joint provides two degrees of freedom: translation along an axis fixed in bodyA and rotation in the plane. You can use a joint limit to restrict the range of motion and a joint motor to drive the rotation or to model rotational friction. This joint is designed for vehicle suspensions. public class WheelJoint : Joint Inheritance object Joint WheelJoint Inherited Members Joint._breakpoint Joint._breakpointSquared Joint._world Joint.EdgeA Joint.EdgeB Joint.Enabled Joint.IslandFlag Joint.Tag Joint.World Joint.JointType Joint.BodyA Joint.BodyB Joint.WorldAnchorA Joint.WorldAnchorB Joint.CollideConnected Joint.Breakpoint Joint.Broke Joint.GetReactionForce(float) Joint.GetReactionTorque(float) Joint.WakeBodies() Joint.IsFixedType() Joint.InitVelocityConstraints(ref SolverData) Joint.Validate(float) Joint.SolveVelocityConstraints(ref SolverData) Joint.SolvePositionConstraints(ref SolverData) object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Remarks Linear constraint (point-to-line) d = pB - pA = xB + rB - xA - rA C = dot(ay, d) Cdot = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA, rA)) = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB, ay), vB) J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)] Spring linear constraint C = dot(ax, d) Cdot = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) + dot(cross(rB, ax), vB) J = [-ax -cross(d+rA, ax) ax cross(rB, ax)] Motor rotational constraint Cdot = wB - wA J = [0 0 -1 0 0 1] Constructors WheelJoint() Initializes a new instance of the Alis.Core.Physic.Dynamics.Joints.WheelJoint class internal WheelJoint() WheelJoint(Body, Body, Vector2, Vector2, bool) Constructor for WheelJoint public WheelJoint(Body bodyA, Body bodyB, Vector2 anchor, Vector2 axis, bool useWorldCoordinates = false) Parameters bodyA Body The first body bodyB Body The second body anchor Vector2 The anchor point axis Vector2 The axis useWorldCoordinates bool Set to true if you are using world coordinates as anchors. Fields _ax The ay private Vector2 _ax Field Value Vector2 _axis The axis private Vector2 _axis Field Value Vector2 _ay The ay private Vector2 _ay Field Value Vector2 _bias The bias private float _bias Field Value float _enableMotor The enable motor private bool _enableMotor Field Value bool _gamma The gamma private float _gamma Field Value float _impulse The impulse private float _impulse Field Value float _indexA The index private int _indexA Field Value int _indexB The index private int _indexB Field Value int _invMassA The inv mass private float _invMassA Field Value float _invMassB The inv mass private float _invMassB Field Value float _localCenterA The local center private Vector2 _localCenterA Field Value Vector2 _localCenterB The local center private Vector2 _localCenterB Field Value Vector2 _localXAxis The local axis private Vector2 _localXAxis Field Value Vector2 _localYAxis The local axis private Vector2 _localYAxis Field Value Vector2 _mass The mass private float _mass Field Value float _maxMotorTorque The max motor torque private float _maxMotorTorque Field Value float _motorImpulse The motor impulse private float _motorImpulse Field Value float _motorMass The motor mass private float _motorMass Field Value float _motorSpeed The motor speed private float _motorSpeed Field Value float _sAx The bx private float _sAx Field Value float _sAy The by private float _sAy Field Value float _sBx The bx private float _sBx Field Value float _sBy The by private float _sBy Field Value float _springImpulse The spring impulse private float _springImpulse Field Value float _springMass The spring mass private float _springMass Field Value float invIa The inv ia private float invIa Field Value float invIb The inv ib private float invIb Field Value float Properties Axis The axis at which the suspension moves. public Vector2 Axis { get; set; } Property Value Vector2 DampingRatio Suspension damping ratio, one indicates critical damping public float DampingRatio { get; set; } Property Value float Frequency Suspension frequency, zero indicates no suspension public float Frequency { get; set; } Property Value float JointSpeed Gets the angular velocity of the joint public float JointSpeed { get; } Property Value float JointTranslation Gets the translation along the axis public float JointTranslation { get; } Property Value float LocalAnchorA The local anchor point on BodyA public Vector2 LocalAnchorA { get; set; } Property Value Vector2 LocalAnchorB The local anchor point on BodyB public Vector2 LocalAnchorB { get; set; } Property Value Vector2 LocalXAxis The axis in local coordinates relative to BodyA public Vector2 LocalXAxis { get; } Property Value Vector2 MaxMotorTorque The maximum motor torque, usually in N-m. public float MaxMotorTorque { get; set; } Property Value float MotorEnabled Enable/disable the joint motor. public bool MotorEnabled { get; set; } Property Value bool MotorSpeed The desired motor speed in radians per second. public float MotorSpeed { get; set; } Property Value float WorldAnchorA Gets or sets the value of the world anchor a public override Vector2 WorldAnchorA { get; set; } Property Value Vector2 WorldAnchorB Gets or sets the value of the world anchor b public override Vector2 WorldAnchorB { get; set; } Property Value Vector2 Methods GetMotorTorque(float) Gets the torque of the motor public float GetMotorTorque(float invDt) Parameters invDt float inverse delta time Returns float GetReactionForce(float) Gets the reaction force using the specified inv dt public override Vector2 GetReactionForce(float invDt) Parameters invDt float The inv dt Returns Vector2 The vector GetReactionTorque(float) Gets the reaction torque using the specified inv dt public override float GetReactionTorque(float invDt) Parameters invDt float The inv dt Returns float The float InitVelocityConstraints(ref SolverData) Inits the velocity constraints using the specified data internal override void InitVelocityConstraints(ref SolverData data) Parameters data SolverData The data SolvePositionConstraints(ref SolverData) Describes whether this instance solve position constraints internal override bool SolvePositionConstraints(ref SolverData data) Parameters data SolverData The data Returns bool The bool SolveVelocityConstraints(ref SolverData) Solves the velocity constraints using the specified data internal override void SolveVelocityConstraints(ref SolverData data) Parameters data SolverData The data"
  },
  "api/Alis.Core.Physic.Dynamics.Joints.html": {
    "href": "api/Alis.Core.Physic.Dynamics.Joints.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Dynamics.Joints Classes AngleJoint Maintains a fixed angle between two bodies DistanceJoint A distance joint rains two points on two bodies to remain at a fixed distance from each other. You can view this as a massless, rigid rod. FixedMouseJoint A mouse joint is used to make a point on a body track a specified world point. This a soft constraint with a maximum force. This allows the constraint to stretch and without applying huge forces. NOTE: this joint is not documented in the manual because it was developed to be used in the testbed. If you want to learn how to use the mouse joint, look at the testbed. FrictionJoint Friction joint. This is used for top-down friction. It provides 2D translational friction and angular friction. GearJoint A gear joint is used to connect two joints together. Either joint can be a revolute or prismatic joint. You specify a gear ratio to bind the motions together: coordinate1 + ratio * coordinate2 = ant The ratio can be negative or positive. If one joint is a revolute joint and the other joint is a prismatic joint, then the ratio will have units of length or units of 1/length. Warning: You have to manually destroy the gear joint if jointA or jointB is destroyed. Joint The joint class JointEdge A joint edge is used to connect bodies and joints together in a joint graph where each body is a node and each joint is an edge. A joint edge belongs to a doubly linked list maintained in each attached body. Each joint has two joint nodes, one for each attached body. JointFactory An easy to use factory for using joints. MotorJoint A motor joint is used to control the relative motion between two bodies. A typical usage is to control the movement of a dynamic body with respect to the ground. PrismaticJoint A prismatic joint. This joint provides one degree of freedom: translation along an axis fixed in bodyA. Relative rotation is prevented. You can use a joint limit to restrict the range of motion and a joint motor to drive the motion or to model joint friction. PulleyJoint The pulley joint is connected to two bodies and two fixed world points. The pulley supports a ratio such that: length1 + ratio * length2 <= constant Yes, the force transmitted is scaled by the ratio. Warning: the pulley joint can get a bit squirrelly by itself. They often work better when combined with prismatic joints. You should also cover the the anchor points with static shapes to prevent one side from going to zero length. RevoluteJoint A revolute joint constrains to bodies to share a common point while they are free to rotate about the point. The relative rotation about the shared point is the joint angle. You can limit the relative rotation with a joint limit that specifies a lower and upper angle. You can use a motor to drive the relative rotation about the shared point. A maximum motor torque is provided so that infinite forces are not generated. RopeJoint A rope joint enforces a maximum distance between two points on two bodies. It has no other effect. It can be used on ropes that are made up of several connected bodies, and if there is a need to support a heavy body. This joint is used for stabiliation of heavy objects on soft constraint joints. Warning: if you attempt to change the maximum length during the simulation you will get some non-physical behavior. Use the DistanceJoint instead if you want to dynamically control the length. WeldJoint A weld joint essentially glues two bodies together. A weld joint may distort somewhat because the island constraint solver is approximate. The joint is soft constraint based, which means the two bodies will move relative to each other, when a force is applied. To combine two bodies in a rigid fashion, combine the fixtures to a single body instead. WheelJoint A wheel joint. This joint provides two degrees of freedom: translation along an axis fixed in bodyA and rotation in the plane. You can use a joint limit to restrict the range of motion and a joint motor to drive the rotation or to model rotational friction. This joint is designed for vehicle suspensions. Enums JointType The joint type enum LimitState The limit state enum"
  },
  "api/Alis.Core.Physic.Dynamics.MathUtils.html": {
    "href": "api/Alis.Core.Physic.Dynamics.MathUtils.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class MathUtils Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The math utils class public static class MathUtils Inheritance object MathUtils Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Properties Epsilon Gets or sets the value of the epsilon public static float Epsilon { get; set; } Property Value float Methods Abs(Vector2) Abses the v public static Vector2 Abs(Vector2 v) Parameters v Vector2 The Returns Vector2 The vector Area(Vector2, Vector2, Vector2) Returns a positive number if c is to the left of the line going from a to b. public static float Area(Vector2 a, Vector2 b, Vector2 c) Parameters a Vector2 b Vector2 c Vector2 Returns float Positive number if point is left, negative if point is right, and 0 if points are collinear. Area(ref Vector2, ref Vector2, ref Vector2) Returns a positive number if c is to the left of the line going from a to b. public static float Area(ref Vector2 a, ref Vector2 b, ref Vector2 c) Parameters a Vector2 b Vector2 c Vector2 Returns float Positive number if point is left, negative if point is right, and 0 if points are collinear. Clamp(int, int, int) Clamps the a public static int Clamp(int a, int low, int high) Parameters a int The low int The low high int The high Returns int The int Clamp(float, float, float) Clamps the a public static float Clamp(float a, float low, float high) Parameters a float The low float The low high float The high Returns float The float Clamp(Vector2, Vector2, Vector2) Clamps the a public static Vector2 Clamp(Vector2 a, Vector2 low, Vector2 high) Parameters a Vector2 The low Vector2 The low high Vector2 The high Returns Vector2 The Cross(ref Vector2, ref Vector2) Crosses the a public static float Cross(ref Vector2 a, ref Vector2 b) Parameters a Vector2 The b Vector2 The Returns float The float Cross(Vector2, Vector2) Crosses the a public static float Cross(Vector2 a, Vector2 b) Parameters a Vector2 The b Vector2 The Returns float The float Cross(ref Vector3, ref Vector3) public static Vector3 Cross(ref Vector3 a, ref Vector3 b) Parameters a Vector3 b Vector3 Returns Vector3 Cross(Vector2, float) Crosses the a public static Vector2 Cross(Vector2 a, float s) Parameters a Vector2 The s float The Returns Vector2 The vector Cross(float, ref Vector2) Crosses the s public static Vector2 Cross(float s, ref Vector2 a) Parameters s float The a Vector2 The Returns Vector2 The vector Cross(ref Vector2, ref Vector2, out float) Crosses the a public static void Cross(ref Vector2 a, ref Vector2 b, out float c) Parameters a Vector2 The b Vector2 The c float The Dot(Vector3, Vector3) public static float Dot(Vector3 a, Vector3 b) Parameters a Vector3 b Vector3 Returns float Dot(Vector2, ref Vector2) public static float Dot(Vector2 a, ref Vector2 b) Parameters a Vector2 b Vector2 Returns float FloatEquals(float, float) Describes whether float equals public static bool FloatEquals(float value1, float value2) Parameters value1 float The value value2 float The value Returns bool The bool FloatEquals(float, float, float) Checks if a floating point Value is equal to another, within a certain tolerance. public static bool FloatEquals(float value1, float value2, float delta) Parameters value1 float The first floating point Value. value2 float The second floating point Value. delta float The floating point tolerance. Returns bool True if the values are \"equal\", false otherwise. FloatInRange(float, float, float) Checks if a floating point Value is within a specified range of values (inclusive). public static bool FloatInRange(float value, float min, float max) Parameters value float The Value to check. min float The minimum Value. max float The maximum Value. Returns bool True if the Value is within the range specified, false otherwise. IsCollinear(ref Vector2, ref Vector2, ref Vector2, float) Determines if three vertices are collinear (ie. on a straight line) public static bool IsCollinear(ref Vector2 a, ref Vector2 b, ref Vector2 c, float tolerance = 0) Parameters a Vector2 First vertex b Vector2 Second vertex c Vector2 Third vertex tolerance float The tolerance Returns bool IsValid(float) This function is used to ensure that a floating point number is not a NaN or infinity. public static bool IsValid(float x) Parameters x float The x. Returns bool true if the specified x is valid; otherwise, false. IsValid(Vector2) Describes whether is valid public static bool IsValid(this Vector2 x) Parameters x Vector2 The Returns bool The bool Mul(ref Mat22, Vector2) Muls the a public static Vector2 Mul(ref Mat22 A, Vector2 v) Parameters A Mat22 The v Vector2 The Returns Vector2 The vector Mul(ref Mat22, ref Vector2) Muls the a public static Vector2 Mul(ref Mat22 A, ref Vector2 v) Parameters A Mat22 The v Vector2 The Returns Vector2 The vector Mul(Mat33, Vector3) public static Vector3 Mul(Mat33 A, Vector3 v) Parameters A Mat33 v Vector3 Returns Vector3 Mul22(Mat33, Vector2) public static Vector2 Mul22(Mat33 A, Vector2 v) Parameters A Mat33 v Vector2 Returns Vector2 MulT(ref Mat22, Vector2) Muls the t using the specified a public static Vector2 MulT(ref Mat22 A, Vector2 v) Parameters A Mat22 The v Vector2 The Returns Vector2 The vector MulT(ref Mat22, ref Vector2) Muls the t using the specified a public static Vector2 MulT(ref Mat22 A, ref Vector2 v) Parameters A Mat22 The v Vector2 The Returns Vector2 The vector Rot270(ref Vector2) Rots the 270 using the specified a public static Vector2 Rot270(ref Vector2 a) Parameters a Vector2 The Returns Vector2 The vector Rot90(ref Vector2) Rots the 90 using the specified a public static Vector2 Rot90(ref Vector2 a) Parameters a Vector2 The Returns Vector2 The vector Skew(Vector2) public static Vector2 Skew(Vector2 input) Parameters input Vector2 Returns Vector2 Swap<T>(ref T, ref T) Swaps the a public static void Swap<T>(ref T a, ref T b) Parameters a T The b T The Type Parameters T The VectorAngle(ref Vector2, ref Vector2) Return the angle between two vectors on a plane The angle is from vector 1 to vector 2, positive anticlockwise The result is between -pi -> pi public static double VectorAngle(ref Vector2 p1, ref Vector2 p2) Parameters p1 Vector2 p2 Vector2 Returns double VectorAngle(Vector2, Vector2) Vectors the angle using the specified p 1 public static double VectorAngle(Vector2 p1, Vector2 p2) Parameters p1 Vector2 The p2 Vector2 The Returns double The double"
  },
  "api/Alis.Core.Physic.Dynamics.OnCollisionEventHandler.html": {
    "href": "api/Alis.Core.Physic.Dynamics.OnCollisionEventHandler.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate OnCollisionEventHandler Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The on collision event handler public delegate bool OnCollisionEventHandler(Fixture sender, Fixture other, Contact contact) Parameters sender Fixture other Fixture contact Contact Returns bool"
  },
  "api/Alis.Core.Physic.Dynamics.OnSeparationEventHandler.html": {
    "href": "api/Alis.Core.Physic.Dynamics.OnSeparationEventHandler.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate OnSeparationEventHandler Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The on separation event handler public delegate void OnSeparationEventHandler(Fixture sender, Fixture other, Contact contact) Parameters sender Fixture other Fixture contact Contact"
  },
  "api/Alis.Core.Physic.Dynamics.PostSolveDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.PostSolveDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate PostSolveDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The post solve delegate public delegate void PostSolveDelegate(Contact contact, ContactVelocityConstraint impulse) Parameters contact Contact impulse ContactVelocityConstraint"
  },
  "api/Alis.Core.Physic.Dynamics.PreSolveDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.PreSolveDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate PreSolveDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The pre solve delegate public delegate void PreSolveDelegate(Contact contact, ref Manifold oldManifold) Parameters contact Contact oldManifold Manifold"
  },
  "api/Alis.Core.Physic.Dynamics.QueryReportFixtureDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.QueryReportFixtureDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate QueryReportFixtureDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll Called for each fixture found in the query. true: Continues the query, false: Terminate the query public delegate bool QueryReportFixtureDelegate(Fixture fixture) Parameters fixture Fixture Returns bool"
  },
  "api/Alis.Core.Physic.Dynamics.RayCastReportFixtureDelegate.html": {
    "href": "api/Alis.Core.Physic.Dynamics.RayCastReportFixtureDelegate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Delegate RayCastReportFixtureDelegate Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll Called for each fixture found in the query. You control how the ray cast proceeds by returning a float: return -1: ignore this fixture and continue return 0: terminate the ray cast return fraction: clip the ray to this point return 1: don't clip the ray and continue @param fixture the fixture hit by the ray @param point the point of initial intersection @param normal the normal vector at the point of intersection @return 0 to terminate, fraction to clip the ray for closest hit, 1 to continue public delegate float RayCastReportFixtureDelegate(Fixture fixture, Vector2 point, Vector2 normal, float fraction) Parameters fixture Fixture point Vector2 normal Vector2 fraction float Returns float"
  },
  "api/Alis.Core.Physic.Dynamics.SolverData.html": {
    "href": "api/Alis.Core.Physic.Dynamics.SolverData.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SolverData Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll internal struct SolverData Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields locks The locks internal int[] locks Field Value int[] positions The positions internal SolverPosition[] positions Field Value SolverPosition[] step The step internal TimeStep step Field Value TimeStep velocities The velocities internal SolverVelocity[] velocities Field Value SolverVelocity[]"
  },
  "api/Alis.Core.Physic.Dynamics.SolverIterations.html": {
    "href": "api/Alis.Core.Physic.Dynamics.SolverIterations.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SolverIterations Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The solver iterations public struct SolverIterations Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields PositionIterations The number of position iterations used in the solver. public int PositionIterations Field Value int TOIPositionIterations The number of position iterations in the TOI solver public int TOIPositionIterations Field Value int TOIVelocityIterations The number of velocity iterations in the TOI solver public int TOIVelocityIterations Field Value int VelocityIterations The number of velocity iterations used in the solver. public int VelocityIterations Field Value int"
  },
  "api/Alis.Core.Physic.Dynamics.SolverPosition.html": {
    "href": "api/Alis.Core.Physic.Dynamics.SolverPosition.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SolverPosition Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll internal struct SolverPosition Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields a The public float a Field Value float c The public Vector2 c Field Value Vector2"
  },
  "api/Alis.Core.Physic.Dynamics.SolverVelocity.html": {
    "href": "api/Alis.Core.Physic.Dynamics.SolverVelocity.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct SolverVelocity Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll internal struct SolverVelocity Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields v The public Vector2 v Field Value Vector2 w The public float w Field Value float"
  },
  "api/Alis.Core.Physic.Dynamics.TimeStep.html": {
    "href": "api/Alis.Core.Physic.Dynamics.TimeStep.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Struct TimeStep Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll This is an internal structure. internal struct TimeStep Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.ReferenceEquals(object?, object?) object.ToString() Fields dt Time step (Delta time) public float dt Field Value float dtRatio dt * inv_dt0 public float dtRatio Field Value float inv_dt Inverse time step (0 if dt == 0). public float inv_dt Field Value float positionIterations The position iterations public int positionIterations Field Value int velocityIterations The velocity iterations public int velocityIterations Field Value int warmStarting The warm starting public bool warmStarting Field Value bool"
  },
  "api/Alis.Core.Physic.Dynamics.World.html": {
    "href": "api/Alis.Core.Physic.Dynamics.World.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class World Namespace Alis.Core.Physic.Dynamics Assembly Alis.dll The world class manages all physics entities, dynamic simulation, and asynchronous queries. public class World Inheritance object World Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Constructors World() Initializes a new instance of the Alis.Core.Physic.Dynamics.World class. public World() World(Vector2) Initializes a new instance of the Alis.Core.Physic.Dynamics.World class. public World(Vector2 gravity) Parameters gravity Vector2 The gravity. World(IBroadPhase) Initializes a new instance of the Alis.Core.Physic.Dynamics.World class. public World(IBroadPhase broadPhase) Parameters broadPhase IBroadPhase Fields BodyAdded Fires whenever a body has been added public BodyDelegate BodyAdded Field Value BodyDelegate BodyList Get the world body list. internal readonly BodyCollection BodyList Field Value BodyCollection BodyRemoved Fires whenever a body has been removed public BodyDelegate BodyRemoved Field Value BodyDelegate ContactManager Get the contact manager for testing. internal readonly ContactManager ContactManager Field Value ContactManager ControllerAdded Fires every time a controller is added to the World. public ControllerDelegate ControllerAdded Field Value ControllerDelegate ControllerList The controller list internal readonly ControllerCollection ControllerList Field Value ControllerCollection ControllerRemoved Fires every time a controlelr is removed form the World. public ControllerDelegate ControllerRemoved Field Value ControllerDelegate FixtureAdded Fires whenever a fixture has been added public FixtureDelegate FixtureAdded Field Value FixtureDelegate FixtureRemoved Fires whenever a fixture has been removed public FixtureDelegate FixtureRemoved Field Value FixtureDelegate JointAdded Fires whenever a joint has been added public JointDelegate JointAdded Field Value JointDelegate JointList Get the world joint list. internal readonly JointCollection JointList Field Value JointCollection JointRemoved Fires whenever a joint has been removed public JointDelegate JointRemoved Field Value JointDelegate Tag Set the user data. Use this to store your application specific data. public object Tag Field Value object _gravity The gravity private Vector2 _gravity Field Value Vector2 _input The toi input private TOIInput _input Field Value TOIInput _invDt0 The inv dt private float _invDt0 Field Value float _queryCallbackCache The query callback cache private readonly BroadPhaseQueryCallback _queryCallbackCache Field Value BroadPhaseQueryCallback _queryDelegateTmp The query delegate tmp private QueryReportFixtureDelegate _queryDelegateTmp Field Value QueryReportFixtureDelegate _rayCastCallbackCache The ray cast callback cache private readonly BroadPhaseRayCastCallback _rayCastCallbackCache Field Value BroadPhaseRayCastCallback _rayCastDelegateTmp The ray cast delegate tmp private RayCastReportFixtureDelegate _rayCastDelegateTmp Field Value RayCastReportFixtureDelegate _stack The body private Body[] _stack Field Value Body[] _stepComplete The step complete private bool _stepComplete Field Value bool _subStepping This is only for debugging the solver private const bool _subStepping = false Field Value bool _testPointDelegateCache The test point delegate cache private readonly QueryReportFixtureDelegate _testPointDelegateCache Field Value QueryReportFixtureDelegate _testPointFixtureTmp The test point fixture tmp private Fixture _testPointFixtureTmp Field Value Fixture _testPointPointTmp The test point point tmp private Vector2 _testPointPointTmp Field Value Vector2 _warmStarting This is only for debugging the solver private const bool _warmStarting = true Field Value bool _watch The stopwatch private readonly Stopwatch _watch Field Value Stopwatch _worldHasNewFixture The world has new fixture internal bool _worldHasNewFixture Field Value bool Properties AddRemoveTime Gets the value of the add remove time public TimeSpan AddRemoveTime { get; } Property Value TimeSpan ContactCount Get the number of contacts (each may have 0 or more contact points). public int ContactCount { get; } Property Value int ContactList Get the world contact list. ContactList is the head of a circular linked list. Use Contact.Next to get the next contact in the world list. A contact equal to ContactList indicates the end of the list. public ContactListHead ContactList { get; } Property Value ContactListHead Examples for (Contact c = World.ContactList.Next; c != World..ContactList; c = c.Next) ContactsUpdateTime Gets or sets the value of the contacts update time public TimeSpan ContactsUpdateTime { get; private set; } Property Value TimeSpan ContinuousPhysicsTime Gets or sets the value of the continuous physics time public TimeSpan ContinuousPhysicsTime { get; private set; } Property Value TimeSpan ControllersUpdateTime Gets or sets the value of the controllers update time public TimeSpan ControllersUpdateTime { get; private set; } Property Value TimeSpan Enabled If false, the whole simulation stops. It still processes added and removed geometries. public bool Enabled { get; set; } Property Value bool Gravity Change the global gravity vector. public Vector2 Gravity { get; set; } Property Value Vector2 IsLocked Is the world locked (in the middle of a time step). public bool IsLocked { get; private set; } Property Value bool Island Gets the value of the island public Island Island { get; } Property Value Island NewContactsTime Gets or sets the value of the new contacts time public TimeSpan NewContactsTime { get; private set; } Property Value TimeSpan ProxyCount Get the number of broad-phase proxies. public int ProxyCount { get; } Property Value int SolveUpdateTime Gets or sets the value of the solve update time public TimeSpan SolveUpdateTime { get; private set; } Property Value TimeSpan UpdateTime Gets or sets the value of the update time public TimeSpan UpdateTime { get; private set; } Property Value TimeSpan Methods Add(Body) Add a rigid body. Warning: This method is locked during callbacks. public virtual void Add(Body body) Parameters body Body Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Add(Joint) Create a joint to constrain bodies together. This may cause the connected bodies to cease colliding. Warning: This method is locked during callbacks. public void Add(Joint joint) Parameters joint Joint The joint. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Add(Controller) Warning: This method is locked during callbacks. public void Add(Controller controller) Parameters controller Controller Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Clear() Warning: This method is locked during callbacks. public void Clear() Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. ClearForces() Call this after you are done with time steps to clear the forces. You normally call this after each call to Step, unless you are performing sub-steps. By default, forces will be automatically cleared, so you don't need to call this function. public void ClearForces() CreateBody(Vector2, float, BodyType) Creates the body using the specified position public virtual Body CreateBody(Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateCapsule(float, float, int, float, int, float, Vector2, float, BodyType) Creates the capsule using the specified height public Body CreateCapsule(float height, float topRadius, int topEdges, float bottomRadius, int bottomEdges, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters height float The height topRadius float The top radius topEdges int The top edges bottomRadius float The bottom radius bottomEdges int The bottom edges density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateCapsule(float, float, float, Vector2, float, BodyType) Creates the capsule using the specified height public Body CreateCapsule(float height, float endRadius, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters height float The height endRadius float The end radius density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateChain(Vector2, Vector2, float, float, int, float, bool) Creates a chain. public Path CreateChain(Vector2 start, Vector2 end, float linkWidth, float linkHeight, int numberOfLinks, float linkDensity, bool attachRopeJoint) Parameters start Vector2 The start. end Vector2 The end. linkWidth float The width. linkHeight float The height. numberOfLinks int The number of links. linkDensity float The link density. attachRopeJoint bool Creates a rope joint between start and end. This enforces the length of the rope. Said in another way: it makes the rope less bouncy. Returns Path CreateChainShape(Vertices, Vector2) Creates the chain shape using the specified vertices public Body CreateChainShape(Vertices vertices, Vector2 position = default) Parameters vertices Vertices The vertices position Vector2 The position Returns Body The body CreateCircle(float, float, Vector2, BodyType) Creates the circle using the specified radius public Body CreateCircle(float radius, float density, Vector2 position = default, BodyType bodyType = BodyType.Static) Parameters radius float The radius density float The density position Vector2 The position bodyType BodyType The body type Returns Body The body CreateCompoundPolygon(List<Vertices>, float, Vector2, float, BodyType) Creates the compound polygon using the specified list public Body CreateCompoundPolygon(List<Vertices> list, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters list List<Vertices> The list density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateEdge(Vector2, Vector2) Creates the edge using the specified start public Body CreateEdge(Vector2 start, Vector2 end) Parameters start Vector2 The start end Vector2 The end Returns Body The body CreateEllipse(float, float, int, float, Vector2, float, BodyType) Creates the ellipse using the specified x radius public Body CreateEllipse(float xRadius, float yRadius, int edges, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters xRadius float The radius yRadius float The radius edges int The edges density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateGear(float, int, float, float, float, Vector2, float, BodyType) Creates the gear using the specified radius public Body CreateGear(float radius, int numberOfTeeth, float tipPercentage, float toothHeight, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters radius float The radius numberOfTeeth int The number of teeth tipPercentage float The tip percentage toothHeight float The tooth height density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateLineArc(float, int, float, bool, Vector2, float, BodyType) Creates the line arc using the specified radians public Body CreateLineArc(float radians, int sides, float radius, bool closed = false, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters radians float The radians sides int The sides radius float The radius closed bool The closed position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateLoopShape(Vertices, Vector2) Creates the loop shape using the specified vertices public Body CreateLoopShape(Vertices vertices, Vector2 position = default) Parameters vertices Vertices The vertices position Vector2 The position Returns Body The body CreatePolygon(Vertices, float, Vector2, float, BodyType) Creates the polygon using the specified vertices public Body CreatePolygon(Vertices vertices, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters vertices Vertices The vertices density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateRectangle(float, float, float, Vector2, float, BodyType) Creates the rectangle using the specified width public Body CreateRectangle(float width, float height, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters width float The width height float The height density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body Exceptions ArgumentOutOfRangeException height Height must be more than 0 meters ArgumentOutOfRangeException width Width must be more than 0 meters CreateRoundedRectangle(float, float, float, float, int, float, Vector2, float, BodyType) Creates the rounded rectangle using the specified width public Body CreateRoundedRectangle(float width, float height, float xRadius, float yRadius, int segments, float density, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters width float The width height float The height xRadius float The radius yRadius float The radius segments int The segments density float The density position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body CreateSolidArc(float, float, int, float, Vector2, float, BodyType) Creates the solid arc using the specified density public Body CreateSolidArc(float density, float radians, int sides, float radius, Vector2 position = default, float rotation = 0, BodyType bodyType = BodyType.Static) Parameters density float The density radians float The radians sides int The sides radius float The radius position Vector2 The position rotation float The rotation bodyType BodyType The body type Returns Body The body QueryAABB(QueryReportFixtureDelegate, AABB) Query the world for all fixtures that potentially overlap the provided AABB. Inside the callback: Return true: Continues the query Return false: Terminate the query public void QueryAABB(QueryReportFixtureDelegate callback, AABB aabb) Parameters callback QueryReportFixtureDelegate A user implemented callback class. aabb AABB The aabb query box. QueryAABB(QueryReportFixtureDelegate, ref AABB) Query the world for all fixtures that potentially overlap the provided AABB. Inside the callback: Return true: Continues the query Return false: Terminate the query public void QueryAABB(QueryReportFixtureDelegate callback, ref AABB aabb) Parameters callback QueryReportFixtureDelegate A user implemented callback class. aabb AABB The aabb query box. QueryAABBCallback(int) Describes whether this instance query aabb callback private bool QueryAABBCallback(int proxyId) Parameters proxyId int The proxy id Returns bool The bool RayCast(RayCastReportFixtureDelegate, Vector2, Vector2) Ray-cast the world for all fixtures in the path of the ray. Your callback controls whether you get the closest point, any point, or n-points. The ray-cast ignores shapes that contain the starting point. Inside the callback: return -1: ignore this fixture and continue return 0: terminate the ray cast return fraction: clip the ray to this point return 1: don't clip the ray and continue public void RayCast(RayCastReportFixtureDelegate callback, Vector2 point1, Vector2 point2) Parameters callback RayCastReportFixtureDelegate A user implemented callback class. point1 Vector2 The ray starting point. point2 Vector2 The ray ending point. RayCastCallback(ref RayCastInput, int) Rays the cast callback using the specified ray cast input private float RayCastCallback(ref RayCastInput rayCastInput, int proxyId) Parameters rayCastInput RayCastInput The ray cast input proxyId int The proxy id Returns float The float Remove(Body) Destroy a rigid body. Warning: This automatically deletes all associated shapes and joints. Warning: This method is locked during callbacks. public virtual void Remove(Body body) Parameters body Body The body. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Remove(Joint) Destroy a joint. This may cause the connected bodies to begin colliding. Warning: This method is locked during callbacks. public void Remove(Joint joint) Parameters joint Joint The joint. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Remove(Controller) Warning: This method is locked during callbacks. public void Remove(Controller controller) Parameters controller Controller Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. ShiftOrigin(Vector2) public void ShiftOrigin(Vector2 newOrigin) Parameters newOrigin Vector2 Solve(ref TimeStep) Solves the step private void Solve(ref TimeStep step) Parameters step TimeStep The step SolveTOI(ref TimeStep, ref SolverIterations) Solves the toi using the specified step private void SolveTOI(ref TimeStep step, ref SolverIterations iterations) Parameters step TimeStep The step iterations SolverIterations The iterations Step(TimeSpan) Take a time step. This performs collision detection, integration, and consraint solution. public void Step(TimeSpan dt) Parameters dt TimeSpan The amount of time to simulate, this should not vary. Step(TimeSpan, ref SolverIterations) Take a time step. This performs collision detection, integration, and consraint solution. public void Step(TimeSpan dt, ref SolverIterations iterations) Parameters dt TimeSpan The amount of time to simulate, this should not vary. iterations SolverIterations Step(float) Take a time step. This performs collision detection, integration, and consraint solution. Warning: This method is locked during callbacks. public void Step(float dt) Parameters dt float The amount of time to simulate in seconds, this should not vary. Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. Step(float, ref SolverIterations) Take a time step. This performs collision detection, integration, and consraint solution. Warning: This method is locked during callbacks. public void Step(float dt, ref SolverIterations iterations) Parameters dt float The amount of time to simulate in seconds, this should not vary. iterations SolverIterations Exceptions InvalidOperationException Thrown when the world is Locked/Stepping. TestPoint(Vector2) Tests the point using the specified point public Fixture TestPoint(Vector2 point) Parameters point Vector2 The point Returns Fixture The test point fixture tmp TestPointCallback(Fixture) Describes whether this instance test point callback private bool TestPointCallback(Fixture fixture) Parameters fixture Fixture The fixture Returns bool The bool"
  },
  "api/Alis.Core.Physic.Dynamics.html": {
    "href": "api/Alis.Core.Physic.Dynamics.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic.Dynamics Namespaces Alis.Core.Physic.Dynamics.Contacts Alis.Core.Physic.Dynamics.Joints Classes Body The body class BodyCollection The body collection class ContactManager The contact manager class ControllerCollection The controller collection class Fixture A fixture is used to attach a Shape to a body for collision detection. A fixture inherits its transform from its parent. Fixtures hold additional non-geometric data such as friction, collision filters, etc. FixtureCollection The fixture collection class Island This is an internal class. JointCollection The joint collection class MathUtils The math utils class World The world class manages all physics entities, dynamic simulation, and asynchronous queries. Structs BodyCollection.BodyEnumerator The body enumerator ControllerCollection.ControllerEnumerator The controller enumerator FixtureCollection.FixtureEnumerator The fixture enumerator FixtureProxy This proxy is used internally to connect fixtures to the broad-phase. JointCollection.JointEnumerator The joint enumerator SolverData SolverIterations The solver iterations SolverPosition SolverVelocity TimeStep This is an internal structure. Enums BodyType The body type. Category The category enum Delegates AfterCollisionEventHandler The after collision event handler BeforeCollisionEventHandler The before collision event handler BeginContactDelegate This delegate is called when a contact is created BodyDelegate The body delegate CollisionFilterDelegate The collision filter delegate ControllerDelegate The controller delegate EndContactDelegate This delegate is called when a contact is deleted FixtureDelegate The fixture delegate JointDelegate The joint delegate OnCollisionEventHandler The on collision event handler OnSeparationEventHandler The on separation event handler PostSolveDelegate The post solve delegate PreSolveDelegate The pre solve delegate QueryReportFixtureDelegate Called for each fixture found in the query. true: Continues the query, false: Terminate the query RayCastReportFixtureDelegate Called for each fixture found in the query. You control how the ray cast proceeds by returning a float: return -1: ignore this fixture and continue return 0: terminate the ray cast return fraction: clip the ray to this point return 1: don't clip the ray and continue @param fixture the fixture hit by the ray @param point the point of initial intersection @param normal the normal vector at the point of intersection @return 0 to terminate, fraction to clip the ray for closest hit, 1 to continue"
  },
  "api/Alis.Core.Physic.Settings.html": {
    "href": "api/Alis.Core.Physic.Settings.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Class Settings Namespace Alis.Core.Physic Assembly Alis.dll The settings class public static class Settings Inheritance object Settings Inherited Members object.Equals(object?) object.Equals(object?, object?) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object?, object?) object.ToString() Fields AABBExtension This is used to fatten AABBs in the dynamic tree. This allows proxies to move by a small amount without triggering a tree adjustment. This is in meters. public const float AABBExtension = 0.1 Field Value float AABBMultiplier This is used to fatten AABBs in the dynamic tree. This is used to predict the future position based on the current displacement. This is a dimensionless multiplier. public const float AABBMultiplier = 2 Field Value float AllowSleep Enable/Disable sleeping public static bool AllowSleep Field Value bool AngularSleepTolerance A body cannot sleep if its angular velocity is above this tolerance. public const float AngularSleepTolerance = 0.03490659 Field Value float AngularSlop A small angle used as a collision and constraint tolerance. Usually it is chosen to be numerically significant, but visually insignificant. public const float AngularSlop = 0.03490659 Field Value float AutoClearForces By default, forces are cleared automatically after each call to Step. The default behavior is modified with this setting. The purpose of this setting is to support sub-stepping. Sub-stepping is often used to maintain a fixed sized time step under a variable frame-rate. When you perform sub-stepping you should disable auto clearing of forces and instead call ClearForces after all sub-steps are complete in one pass of your game loop. public const bool AutoClearForces = true Field Value bool Baumgarte This scale factor controls how fast overlap is resolved. Ideally this would be 1 so that overlap is removed in one time step. However using values close to 1 often lead to overshoot. public const float Baumgarte = 0.2 Field Value float ContinuousPhysics Enable/Disable Continuous Collision Detection (CCD) public static bool ContinuousPhysics Field Value bool EnableDiagnostics Enabling diagnistics causes the engine to gather timing information. You can see how much time it took to solve the contacts, solve CCD and update the controllers. NOTE: If you are using a debug view that shows performance counters, you might want to enable this. public const bool EnableDiagnostics = true Field Value bool Epsilon The epsilon public const float Epsilon = 1.1920929E-07 Field Value float LinearSleepTolerance A body cannot sleep if its linear velocity is above this tolerance. public const float LinearSleepTolerance = 0.01 Field Value float LinearSlop A small length used as a collision and constraint tolerance. Usually it is chosen to be numerically significant, but visually insignificant. public const float LinearSlop = 0.005 Field Value float MaxAngularCorrection The maximum angular position correction used when solving constraints. This helps to prevent overshoot. public const float MaxAngularCorrection = 0.13962635 Field Value float MaxFloat The max float public const float MaxFloat = 3.4028235E+38 Field Value float MaxGJKIterations Defines the maximum number of iterations made by the GJK algorithm. public const int MaxGJKIterations = 20 Field Value int MaxLinearCorrection The maximum linear position correction used when solving constraints. This helps to prevent overshoot. public const float MaxLinearCorrection = 0.2 Field Value float MaxManifoldPoints The maximum number of contact points between two convex shapes. DO NOT CHANGE THIS VALUE! public const int MaxManifoldPoints = 2 Field Value int MaxPolygonVertices The maximum number of vertices on a convex polygon. public static int MaxPolygonVertices Field Value int MaxRotation The maximum angular velocity of a body. This limit is very large and is used to prevent numerical problems. You shouldn't need to adjust this. public const float MaxRotation = 1.5707964 Field Value float MaxRotationSquared The max rotation public const float MaxRotationSquared = 2.4674013 Field Value float MaxSubSteps Maximum number of sub-steps per contact in continuous physics simulation. public const int MaxSubSteps = 8 Field Value int MaxTOIContacts Maximum number of contacts to be handled to solve a TOI impact. public const int MaxTOIContacts = 32 Field Value int MaxTranslation The maximum linear velocity of a body. This limit is very large and is used to prevent numerical problems. You shouldn't need to adjust this. public const float MaxTranslation = 2 Field Value float MaxTranslationSquared The max translation public const float MaxTranslationSquared = 4 Field Value float PolygonRadius The radius of the polygon/edge shape skin. This should not be modified. Making this smaller means polygons will have an insufficient buffer for continuous collision. Making it larger may create artifacts for vertex collision. public const float PolygonRadius = 0.01 Field Value float PositionIterations The number of position iterations used in the solver. public static int PositionIterations Field Value int TOIPositionIterations The number of position iterations in the TOI solver public static int TOIPositionIterations Field Value int TOIVelocityIterations The number of velocity iterations in the TOI solver public static int TOIVelocityIterations Field Value int TimeToSleep The time that a body must be still before it will go to sleep. public const float TimeToSleep = 0.5 Field Value float UseConvexHullPolygons If true, it will run a GiftWrap convex hull on all polygon inputs. This makes for a more stable engine when given random input, but if speed of the creation of polygons are more important, you might want to set this to false. public static bool UseConvexHullPolygons Field Value bool VelocityIterations The number of velocity iterations used in the solver. public static int VelocityIterations Field Value int VelocityThreshold A velocity threshold for elastic collisions. Any collision with a relative linear velocity below this threshold will be treated as inelastic. public const float VelocityThreshold = 1 Field Value float Methods MixFriction(float, float) Friction mixing law. Feel free to customize this. public static float MixFriction(float friction1, float friction2) Parameters friction1 float The friction1. friction2 float The friction2. Returns float MixRestitution(float, float) Restitution mixing law. Feel free to customize this. public static float MixRestitution(float restitution1, float restitution2) Parameters restitution1 float The restitution1. restitution2 float The restitution2. Returns float"
  },
  "api/Alis.Core.Physic.html": {
    "href": "api/Alis.Core.Physic.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core.Physic Namespaces Alis.Core.Physic.Collision Alis.Core.Physic.Common Alis.Core.Physic.Controllers Alis.Core.Physic.Dynamics Classes Settings The settings class"
  },
  "api/Alis.Core.html": {
    "href": "api/Alis.Core.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis.Core Namespaces Alis.Core.Aspect Alis.Core.Audio Alis.Core.Ecs Alis.Core.Graphic Alis.Core.Network Alis.Core.Physic"
  },
  "api/Alis.html": {
    "href": "api/Alis.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Namespace Alis Namespaces Alis.Builder Alis.Core"
  },
  "community/Showcases.html": {
    "href": "community/Showcases.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Success Stories At Alis, we take pride in the achievements and successes of our community members who have used our framework to create innovative and exciting projects. Below, we highlight some success stories that demonstrate the potential and versatility of Alis in cross-platform game development. üèÜ Featured Projects 1. Game A - The Dragon's Challenge Description: An epic adventure game set in a world filled with dragons and challenging quests. The game has been praised for its stunning graphics and immersive gameplay. Platforms: Windows, macOS Achievements: Winner of the Best Independent Game award at the Video Game Event 2024. Testimonials: ‚ÄúAlis made cross-platform development seamless. The support and flexibility of the framework were key to our success.‚Äù ‚Äî Developer 2. Space Adventure - Journey to the Unknown Description: A sci-fi game that allows players to explore distant galaxies and engage in thrilling space battles. With detailed graphics and an engaging story, it has captured the imagination of players worldwide. Platforms: Windows, Linux, Android (coming soon) Achievements: Secured first place in the Best Design category at the Space Game Festival 2024. Testimonials: ‚ÄúAlis's ability to handle different platforms allowed us to launch our game on multiple devices with ease.‚Äù ‚Äî Development Team 3. Platform Challenge - Incredible Jumps Description: A platformer game with challenging levels and addictive gameplay. It has received praise for its creative design and quality controls. Platforms: macOS, iOS (coming soon) Achievements: Selected for the Platform Game Contest 2024 and won several awards for innovation. Testimonials: ‚ÄúAlis‚Äôs support for graphics and physics was essential in creating a smooth and engaging gaming experience.‚Äù ‚Äî Developer üéØ How to Be Featured If you have developed a successful project using Alis and would like it to be included in our Success Stories section, please contact us via email: **support@alis.org**: Include details about your project, links to your game, and any relevant testimonials. We are excited to hear about your achievements and share your success with the community. üåü Acknowledgements We thank all the developers and teams who have trusted Alis for their projects. Your success is our greatest reward and a testament to our framework‚Äôs ability to support high-quality game development."
  },
  "community/code_of_conduct.html": {
    "href": "community/code_of_conduct.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Code of Conduct ü§ù Our Commitment In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to make participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sexual characteristics, gender identity and expression, level of experience, education, socioeconomic status, nationality, personal appearance, race, religion, or sexual identity and orientation. üí¨ üìú Our Standards Examples of behavior that contributes to creating a positive environment include: Using welcoming and inclusive language üí¨ü§ùüåà Respecting different viewpoints and experiences üí≠ü§îüëÄ Gracefully accepting constructive criticism üí¨üôèüí° Focusing on what is best for the community ü§ùüë•üåç Showing empathy towards other community members ‚ù§Ô∏èüë•ü§ù Examples of unacceptable behavior by participants include: The use of sexualized language or imagery and unwelcome sexual attention or advances üö´üîûüö´ Trolling, insulting/derogatory comments, and personal or political attacks üö´ü§¨üëé Public or private harassment üö´ü§ê‚ùå Publishing others‚Äô private information, such as a physical or electronic address, without their explicit permission üö´üë§üì© Any other conduct that could reasonably be considered inappropriate in a professional setting üö´ü§îüíº üåü Our Responsibilities Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior. Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned with this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful. üö´‚ùåüõ°Ô∏è üåé Scope This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project email address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers. üìßüì±ü§ù üö® Enforcement Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately. üîçüö® Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership. ‚ö†Ô∏èüëÄüîí"
  },
  "community/contributing.html": {
    "href": "community/contributing.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Contributing to Alis Thank you for your interest in contributing to Alis! Your contributions help make this project better for everyone. Whether you're fixing bugs, adding new features, improving documentation, or helping out in any other way, we're excited to have you on board. Table of Contents Code of Conduct How to Contribute Reporting Bugs Suggesting Features Submitting Changes Development Process Setting Up the Environment Building the Project Running Tests Style Guides Coding Standards Commit Messages Acknowledgments Code of Conduct By participating in this project, you agree to abide by the Code of Conduct. Please read it to understand the expectations we have for all contributors. How to Contribute Reporting Bugs If you find a bug in the project, please open an issue on our GitHub Issues page. When reporting a bug, include: A clear and descriptive title. Steps to reproduce the issue. Expected and actual results. Any relevant screenshots, logs, or other information. Suggesting Features We welcome feature requests! To suggest a new feature, please open an issue on our GitHub Issues page. Provide a detailed explanation of the feature, its potential benefits, and any examples or mockups that might help illustrate your idea. Submitting Changes Fork the repository. Create a new branch from main (e.g., feature/awesome-feature). Make your changes in the new branch. Ensure your code follows our Coding Standards and includes tests if applicable. Commit your changes with a descriptive commit message. Push your changes to your fork. Open a pull request to the main branch of the original repository. Please ensure that your pull request: Describes the change you are making. References any related issues. Includes relevant tests and documentation updates. Development Process Setting Up the Environment To set up your development environment, follow these steps: Clone the repository: git clone https://github.com/pabllopf/Alis.git Navigate to the project directory: cd alis Install dependencies: dotnet restore Building the Project Instructions for building the project will vary depending on the technology stack. Ensure you have the necessary tools installed, such as Node.js, Python, etc. dotnet build alis.sln Running Tests Run the project‚Äôs tests to ensure your changes don‚Äôt break anything: dotnet test alis.sln Style Guides Coding Standards Adhere to the following coding standards to maintain code quality and readability: Follow the language-specific style guides (e.g., PEP 8 for Python, ESLint for JavaScript). Write clear, concise, and well-documented code. Include comments where necessary to explain complex logic. Commit Messages Write meaningful commit messages to make the history easier to understand: Use the present tense (\"Add feature\" not \"Added feature\"). Use the imperative mood (\"Move cursor to...\" not \"Moves cursor to...\"). Include a brief summary of the changes made. Reference issues and pull requests when applicable (e.g., Fixes #123). Acknowledgments We appreciate your contributions! If your pull request is merged, you will be listed as a contributor in the project's Contributors section. Thank you for helping make Alis better for everyone!"
  },
  "community/donate.html": {
    "href": "community/donate.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Support Alis is an open-source game development framework created to offer a powerful and accessible tool to the developer community. Our goal is to continue providing this tool completely free of charge, with no plans to make it a paid product at any time. However, to maintain the project and ensure its ongoing improvement and sustainability, we need your support. Why Donate? Although Alis is an open-source and free project, maintaining and developing a project of this scale requires time, effort, and resources. Donations allow us to: Cover Infrastructure Costs: Expenses related to servers, storage, and development tools. Fund Development: Support developers and contribute to the ongoing improvement of the framework. Provide Support and Resources: Offer technical support and update documentation to ensure that all users have an optimal experience. How You Can Contribute Your support, whether large or small, is valuable to us. Here‚Äôs how you can make a donation: Online Donations: Make a donation through our secure donation platform. We accept various payment methods for your convenience. Corporate Sponsorship: If you represent a company that wishes to collaborate in a more significant way, please contact us at sponsorship@alis.org to discuss sponsorship options. Cryptocurrency Donations: We accept donations in cryptocurrencies. Check the instructions here for more details. Commitment to Gratitude We want to assure our community that Alis will always be 100% free. We have no intentions of turning it into a paid product. Your donation simply helps cover the necessary costs to maintain and improve the project, ensuring that we can continue providing a high-quality, accessible framework for everyone. Thanks We deeply appreciate everyone who has supported Alis so far. Your contribution is essential to the success and continuity of the project. Together, we can continue building a vibrant community and a framework that drives creativity and innovation in game development. For any additional questions about donations or how you can help, feel free to contact us at support@alis.org. Thank you for your support and for being part of the Alis community!"
  },
  "community/introduction.html": {
    "href": "community/introduction.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Welcome to the Alis Community Welcome to the Alis community! We‚Äôre excited to have you join us in developing and growing this innovative cross-platform game development framework. Here you'll find all the information you need to get started and become an active and valuable member of our community. üéâ Introduction Alis is an open-source framework designed to facilitate game development across multiple platforms. Our community consists of developers, designers, and enthusiasts who collaborate to enhance the framework and support others in their projects. üìö How to Get Started To get started with Alis, we recommend following these steps: Read the Documentation: The official documentation provides a comprehensive overview of the framework, installation guides, and tutorials to help you get started. Set Up Your Environment: Be sure to follow the installation instructions to set up your development environment. Specific guides for each platform can be found in the installation section of the documentation. Explore the Examples: Check out the examples and sample projects to understand how Alis is used in different scenarios. Examples are available in the examples repository. üîó Connect with the Community Join our communication platforms to stay updated and connect with other members: Community Forum: Participate in discussions and find answers to your questions on our forum. Discord Channel: Join our Discord server for real-time conversations and community support. Mailing List: Subscribe to our mailing list to receive updates and important announcements. üí° Contribute to the Project We‚Äôd love to have your help in improving Alis. Here‚Äôs how you can contribute: Report Issues: If you find bugs or problems, please report them in our issue tracker on GitHub. Pull Requests: If you‚Äôve made improvements or fixes, open a pull request so we can review and integrate them. Documentation: Help us improve the documentation. You can contribute through pull requests on our GitHub repository. üìú Code of Conduct To maintain a respectful and productive environment, please read and follow our Code of Conduct. It is important that all members adhere to these guidelines to ensure a positive experience for everyone. üôã‚Äç‚ôÇÔ∏è Questions and Help If you have any questions or need assistance, don‚Äôt hesitate to reach out to us. You can do so through: Community Forum: Post your question on the forum. Discord Channel: Ask in the support channel. Email: Send an email to support@alis.org for more specific inquiries. üöÄ Next Steps Explore, experiment, and start creating with Alis. We‚Äôre thrilled to have you on board and look forward to seeing you contribute to the growth of our community and the development of the framework. Thank you for joining us and welcome to the Alis community!"
  },
  "contact/Contact.html": {
    "href": "contact/Contact.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Contact Us At Alis, we value your participation and are here to help. If you have questions, suggestions, feedback, or need support, feel free to reach out to us through any of the following means. We are committed to providing you with the best experience possible and to responding to your needs in a timely manner. üì® Email For general inquiries, technical support, or project-related matters, you can email us at: **support@alis.org**: For technical support and general questions about the framework. üí¨ Forums and Community Join the discussions and seek answers in our community forum. Here you can interact with other community members and get help from experienced developers and users. Community Forum üí¨ Discord Channel For real-time conversations and immediate support, join our Discord server. Here you can chat with other developers, share your ideas, and get quick answers to your questions. Join the Discord Channel üì± Social Media Follow us on our social media channels to stay updated with the latest news, updates, and events related to the Alis project: Twitter: @AlisFramework Facebook: Alis Framework LinkedIn: Alis on LinkedIn üìú Documentation For detailed information and guides on how to use Alis, check out our official documentation. If you encounter any issues or have suggestions for improvements, please let us know. Official Documentation üõ†Ô∏è Reporting Issues If you find a bug or have a suggestion for improving the framework, please report it on our GitHub issue tracker: GitHub Issue Tracker ü§ù Contribute If you are interested in contributing to the development of Alis, whether through code, documentation, or any other way, check out our contribution page for more details on how you can get involved. No matter how you prefer to contact us, we are here to listen and assist you. Your participation and feedback are essential to the success and continuous evolution of Alis. Thank you for being a part of our community!"
  },
  "index.html": {
    "href": "index.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Alis is a completely free, cross-platform video game development framework. With Alis, you can create stunning video games for Windows, macOS, Linux, and soon for Android and iOS. We are committed to keeping the project accessible to everyone, at no cost. üöÄ Getting Started To start developing with Alis, follow these steps: Read the Documentation: Here you will find installation guides, tutorials, and examples to help you get started. Explore the Samples: Check out sample projects to see Alis in action. Join the Community: Participate in our forum, Discord channel, and social media to connect with other developers and receive support. üìà Project Metrics We are proud of the quality and progress of Alis! Here are some recent project statistics: üìú General Public License v3.0 Alis is available under the General Public License v3.0, ensuring that the project and any modifications remain free and accessible to everyone. You can read more about this license here. ü§ù Contribution Guide Thank you for your interest in contributing to our project! Your participation is valuable and appreciated. Please review our Contribution Guide to ensure that our work environment remains respectful and welcoming. üõ°Ô∏è Code of Conduct At Alis, we are committed to maintaining an open and welcoming environment for everyone. We ask that you read our Code of Conduct to ensure a harassment-free experience for all participants. üí¨ Contact For any inquiries, comments, or support requests, please don't hesitate to contact us through the following channels: Email: pabloperdomofalcon@gmail.com Community Forum: Join here Discord Channel: Join the chat (coming soon) Social Media: Follow us on LinkedIn Thank you for visiting the Alis documentation! We hope you enjoy working with our framework and find the information you need for your projects."
  },
  "learn/architecture.html": {
    "href": "learn/architecture.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Architecture The Alis framework is designed to facilitate the development of 2D video games by providing a modular and scalable architecture. Below, the different modules and components of the framework are detailed, organized into various layers according to their purpose within the development cycle. 1. Presentation Module: Engine The Engine provides the necessary foundations to build and run video games, including basic tools for scene creation, handling graphic resources, and managing the main game loop. This module includes two projects that offer: Scene management. Game lifecycle control (initialization, update, and rendering). Module: Extension The Extension module offers a range of additional features to expand the engine's core capabilities. It consists of 39 projects that include: Rendering extensions. Compatibility with various platforms. Integration with external libraries. Module: Installer This module enables the installation and configuration of the framework in different development environments. It contains two projects responsible for the automatic installation of dependencies and necessary configurations. 2. Application Module: Alis The core module of the framework. It consists of 12 projects that include: Engine configuration and customization. Developer interface that provides access to the framework's various functionalities. Project management and folder structure for optimal organization of game resources. 3. Structuring Module: Core The core of the framework is contained in this module, which includes 3 projects. This is where the foundations of the system are defined, including: Design patterns that structure game logic. Reusable component systems. Management of the engine's base configuration. 4. Operation Module: Audio This module contains 3 projects dedicated to audio management within video games. It allows for: Loading and playing sound effects and music. Volume control and 2D audio configuration. Module: ECS (Entity Component System) This module is essential for video game architecture within the ECS system framework. It offers 3 projects that enable: Organization of entities and components. Management of systems that operate on entities, improving the game's scalability and flexibility. Module: Graphic The graphics module contains 3 projects focused on rendering 2D elements, which includes: Loading and manipulating sprites. Animation systems for characters and environments. Graphics performance optimization. Module: Network With 3 projects, this module provides the infrastructure to integrate networking features into the game, including: Multiplayer support. Real-time data synchronization. Client-server communication. Module: Physic The physics module provides the necessary tools to implement 2D physics simulation. The 3 included projects allow for: Collision detection and contact resolution. Application of forces. Rigid body simulation. 5. Declaration Module: Aspect The Aspect module offers 3 projects dedicated to creating and managing various aspects of game development, such as: State management within the game. Modular behavior modification of entities. 6. Ideation This layer focuses on the abstraction of data and game logic. Several modules are included in this layer to control the flow of information and logic within the development process. Module: Data This module contains 3 projects dedicated to data management and manipulation, including: Storage of game information. Database management. Resource optimization. Module: Fluent This module provides a fluent API that facilitates writing and chaining operations in the game. With 3 projects, it focuses on: Improving code readability and maintainability. Simplifying the development flow. Module: Logging The Logging module includes 3 projects that provide tools for: Monitoring and debugging game behavior. Logging errors and key events for analysis. Module: Math It contains 3 projects focused on offering specialized mathematical solutions for video games. These include: Vector and matrix operations. Geometry for collision calculations. Module: Memory This module handles memory management and resource optimization, allowing for: Efficient management of game memory. Automatic release of unused resources. Module: Security The security module offers 3 projects dedicated to: Protecting game data. Encryption of communications and sensitive resources. Module: Thread This module facilitates thread management in the game, allowing for the simultaneous execution of multiple tasks. It contains 3 projects dedicated to: Multithreading management. Optimization of parallel tasks. Module: Time The time module handles the synchronization of events within the game. The 3 included projects allow for: Game time management. Handling timers for specific events."
  },
  "learn/basic_concepts.html": {
    "href": "learn/basic_concepts.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Basic Concepts Before you start developing a video game with Alis, it is essential to understand some key concepts that form the foundation of this framework. These concepts will help you structure and develop your game effectively. Scene A video game in Alis is composed of one or more environments called Scenes. A scene is the setting where all the actions and events of the game occur. Each Scene can contain multiple objects called GameObjects. Example: In a platformer game, you might have a Scene for each level of the game. GameObject A GameObject is any entity within a Scene. These are the fundamental elements of your game, such as characters, enemies, platforms, etc. GameObjects do not have inherent behavior until you add Components to them, which grant specific characteristics and functionalities. Example: A main character, a coin, or a platform would be considered GameObjects. Transform The Transform is an essential property of GameObjects that defines their position, rotation, and scale within the Scene. In other words, the Transform determines where an object is located, how it is oriented, and its size. Position: The X, Y, Z coordinates where the GameObject is located in the Scene. Rotation: The orientation of the GameObject in the Scene. Scale: The size of the GameObject compared to its original size. Example: If a character is located at coordinates (5, 2, 0), that is its position as defined by the Transform. Component A Component is a special feature added to a GameObject to provide specific functionality. Alis includes several predefined components that speed up development, but it is also possible to create custom components according to project needs. Predefined Components in Alis Sprite: This component allows you to assign an image to a GameObject. For example, you can use a Sprite to give a visual appearance to a character or object in the game. Camera: This component assigns a camera to a GameObject. The camera defines what the player can see in the Scene. You can set up multiple cameras for different angles or effects. AudioSource: Allows you to assign sounds to GameObjects. This component is useful for adding sound effects, background music, or character voices. Animator: This component allows you to create animation trees that can be used to add movement and actions to GameObjects. For example, you might use an Animator to control the walking, jumping, or attacking animation of a character. Collision: Enables collisions, meaning that GameObjects can physically interact with each other. This component is essential for detecting when a character hits a wall or collects an object. Summary Understanding these basic concepts is crucial for working effectively with Alis. Scenes, GameObjects, Transforms, and Components form the backbone of any project in Alis. Familiarize yourself with them to fully leverage the framework's capabilities and start creating your own games."
  },
  "learn/features.html": {
    "href": "learn/features.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "Features"
  },
  "learn/getting_started.html": {
    "href": "learn/getting_started.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "üöÄ Getting Started Alis is a cross-platform game development framework that you can easily integrate into your projects. Follow the steps below to start using Alis in your .NET development environment. Installation .NET CLI If you are using the .NET CLI, you can add the Alis package to your project with the following command: dotnet add package Alis Package Manager If you prefer to use the Package Manager, you can run the following command in the Package Manager Console: Install-Package Alis PackageReference To include Alis in your .csproj project file, add the following line within the <ItemGroup> node: <PackageReference Include=\"Alis\" Version=\"*\" /> Paket CLI If you are using Paket as your package manager, you can add Alis with this command: paket add Alis Script & Interactive In an interactive environment, such as a script or a C# interactive application, you can reference the Alis package as follows: #r \"nuget: Alis\" Cake For projects using Cake as a build automation system, you can include the Alis package in the following way: #addin nuget:?package=Alis&version #tool nuget:?package=Alis&version üé® GitHub Template for Alis To help you get started even faster, we offer a GitHub template specifically designed for desktop applications using Alis. This template includes all the necessary setup and configurations, so you can jump straight into development without worrying about initial project structure. Using the Template Visit the Alis.Template.Desktop GitHub repository. Click on the \"Use this template\" button located at the top right of the repository page. Follow the prompts to create a new repository in your GitHub account based on this template. Clone your new repository and start developing your desktop game using Alis! This template provides a solid foundation for creating cross-platform desktop games with Alis, including pre-configured project files, example code, and basic settings."
  },
  "learn/samples.html": {
    "href": "learn/samples.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "üéÆ Examples To help you better understand how to use Alis in real-world projects, we‚Äôve prepared some examples that show the framework in action. These examples include fully functional code that you can study, modify, and run to accelerate your learning process."
  },
  "learn/samples/flappy_bird.html": {
    "href": "learn/samples/flappy_bird.html",
    "title": "Alis - Develop the video games of your dreams üíØ free",
    "keywords": "FlappyBird One of the most popular examples is the FlappyBird project, a simple yet fun game that will show you how to create a complete game using Alis's basic features. Game Description In FlappyBird, you control a bird that must fly while avoiding obstacles in the form of pipes. The goal is to navigate between the pipes and score as many points as possible without colliding with them. The player controls the bird with a single button that allows the bird to \"jump\" or gain altitude, while gravity pushes it toward the ground. The game has a simple cycle of start, play, game over, and the ability to restart after each session. Key Features Simple Physics: The flight behavior is determined by a basic gravity and impulse control system. Collision System: Accurate collision detection between the bird and the pipes. Minimalist UI: Simple and clear menus with an on-screen display of the current score. Development Mode: Ability to activate development mode to debug collisions and game behavior in real-time. Multiplatform Optimization: The game can run on different operating systems thanks to Alis. Game Screenshots Here are some images showing the game in action: Figure 1: Main screen with the start menu. Figure 2: Gameplay view with development mode enabled, showing the collision areas. How to Access the Example The source code for the FlappyBird example is available in the following GitHub repository: Alis.Sample.Flappy.Bird This repository contains the entire project structure and resources needed for you to download and run the game in your local environment. Example Features The FlappyBird example includes: Sprite Handling: Learn how to load and display images efficiently on the screen. Collision Detection: Implementation of collisions between the character (bird) and obstacles (pipes). Input Control: Managing player input through keyboard or controller. Basic Game Cycle: Handling the logic for game start, end, and restart with well-defined states. Optimization and Scalability: Best practices to ensure the game runs smoothly even on devices with limited hardware. Clone and Run the Example To try this example in your local environment, follow these steps: Clone the example repository: git clone https://github.com/pabllopf/Alis.Sample.Flappy.Bird.git Navigate to the project directory: cd Alis.Sample.Flappy.Bird Compile and run the project using the .NET CLI: dotnet run Project Structure The FlappyBird project follows the typical organization of a game developed with Alis: /Alis.Sample.Flappy.Bird ‚îÇ ‚îú‚îÄ‚îÄ .Config/ ‚îÇ ‚îú‚îÄ‚îÄ .editorconfig ‚îÇ ‚îú‚îÄ‚îÄ .gitignore ‚îÇ ‚îú‚îÄ‚îÄ code_of_conduct.md ‚îÇ ‚îú‚îÄ‚îÄ Directory.Build.props ‚îÇ ‚îú‚îÄ‚îÄ funding.yml ‚îÇ ‚îú‚îÄ‚îÄ licence.md ‚îÇ ‚îî‚îÄ‚îÄ readme.md ‚îÇ ‚îú‚îÄ‚îÄ /Assets/ ‚îÇ ‚îú‚îÄ‚îÄ /audio/ # Contains the audio files used in the game. ‚îÇ ‚îú‚îÄ‚îÄ /font/ # Fonts used for the game interface. ‚îÇ ‚îú‚îÄ‚îÄ /icon/ # Icons displayed in the window or other elements. ‚îÇ ‚îî‚îÄ‚îÄ /sprite/ # Game images, including the bird and pipe sprites. ‚îÇ ‚îú‚îÄ‚îÄ BirdController.cs # Controller that handles the bird's movement and physics. ‚îú‚îÄ‚îÄ BirdIdle.cs # Controller for the bird's idle state (when not flying). ‚îú‚îÄ‚îÄ CounterController.cs # Controller that manages the score counter. ‚îú‚îÄ‚îÄ DeathZone.cs # Logic for the collision zones that cause the player‚Äôs death. ‚îú‚îÄ‚îÄ FloorAnimation.cs # Animation for the ground in the background of the game. ‚îú‚îÄ‚îÄ MainMenuController.cs# Controller for the main menu. ‚îú‚îÄ‚îÄ PipelineController.cs# Generates and controls the movement of the pipes. ‚îú‚îÄ‚îÄ Program.cs # Main entry point of the game. ‚îú‚îÄ‚îÄ WindowSetting.cs # Window settings, such as size and visual properties. ‚îî‚îÄ‚îÄ Alis.Sample.Flappy.Bird.csproj # Project file for .NET configuration. Additional Notes Extensibility: You can easily modify this project to add new mechanics, change graphic assets, or improve gameplay. Use of Alis: This project leverages Alis's multiplatform capabilities, meaning you can compile and run the game on various operating systems like Windows, macOS, and Linux. Optimization: The game has been optimized to provide smooth and stable performance regardless of the hardware. Exploring examples like FlappyBird is an excellent way to learn about Alis's capabilities and apply these concepts to your own projects. Plus, you can modify the code to experiment with new ideas and game mechanics."
  }
}