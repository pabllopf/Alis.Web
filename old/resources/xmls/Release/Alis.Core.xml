<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alis.Core</name>
    </assembly>
    <members>
        <member name="T:Alis.Core.GameBase">
            <summary>
                Define a game.
            </summary>
        </member>
        <member name="P:Alis.Core.GameBase.IsRunning">
            <summary>
                Active game
            </summary>
        </member>
        <member name="F:Alis.Core.GameBase.Managers">
            <summary>
                The manager base
            </summary>
        </member>
        <member name="P:Alis.Core.GameBase.TimeManager">
            <summary>
                The time manager base
            </summary>
        </member>
        <member name="M:Alis.Core.GameBase.Run">
            <summary>
                Run program
            </summary>
        </member>
        <member name="M:Alis.Core.GameBase.FindManager``1">
            <summary>
                Gets the manager using the specified type
            </summary>
            <typeparam name="T">The </typeparam>
            <returns>The manager base</returns>
        </member>
        <member name="M:Alis.Core.GameBase.SetManager``1(``0)">
            <summary>
                Sets the manager using the specified manager
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="manager">The manager</param>
        </member>
        <member name="T:Alis.Core.Manager.Audio.AudioManagerBase">
            <summary>
                The audio manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Audio.AudioManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.Graphic.GraphicManagerBase">
            <summary>
                The graphic manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Graphic.GraphicManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.Input.InputManagerBase">
            <summary>
                The input manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Input.InputManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.ManagerBase">
            <summary>
                Manager base
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.ManagerBase.IsExitRequested">
            <summary>
                Gets or sets the value of the is exit requested
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Awake">
            <summary>Awakes this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Start">
            <summary>Starts this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.BeforeUpdate">
            <summary>Before the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.AfterUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.FixedUpdate">
            <summary>Fix the update.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.DispatchEvents">
            <summary>Dispatches the events.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Reset">
            <summary>Resets this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Stop">
            <summary>Stops this instance.</summary>
        </member>
        <member name="M:Alis.Core.Manager.ManagerBase.Exit">
            <summary>Exits this instance.</summary>
        </member>
        <member name="T:Alis.Core.Manager.Physic.PhysicManagerBase">
            <summary>
                The physic manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Physic.PhysicManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.Scene.SceneManagerBase">
            <summary>
                The scene manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Scene.SceneManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.Setting.SettingManagerBase">
            <summary>
                The setting manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Setting.SettingManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Manager.Time.TimeManagerBase">
            <summary>
                The time manager base class
            </summary>
            <seealso cref="T:Alis.Core.Manager.ManagerBase" />
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Manager.Time.TimeManagerBase" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.Timer">
            <summary>
                Gets the value of the timer
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.FixedTime">
            <summary>
                Gets or sets the value of the fixed time
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.TimeScale">
            <summary>
                Gets or sets the value of the time scale
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.FrameCount">
            <summary>
                Gets or sets the value of the frame count
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.CurrentFrame">
            <summary>
                Gets or sets the value of the current frame
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.FixedDeltaTime">
            <summary>
                Gets or sets the value of the fixed delta time
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.MaximumFramesPerSecond">
            <summary>
                Gets or sets the value of the maximum frames per second
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.TimeStep">
            <summary>
                Gets or sets the value of the time step
            </summary>
        </member>
        <member name="P:Alis.Core.Manager.Time.TimeManagerBase.MaxAllowedTimeStep">
            <summary>
                Gets or sets the value of the max allowed time step
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.SyncFixedDeltaTime">
            <summary>
                Syncs the fixed delta time
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.IsNewFrame">
            <summary>
                Describes whether this instance is new frame
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.UpdateTimeStep">
            <summary>
                Updates the time step
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.CounterFrames">
            <summary>
                Counters the frames
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.UpdateFixedTime">
            <summary>
                Updates the fixed time
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Awake">
            <summary>
                Awakes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Start">
            <summary>
                Starts this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.BeforeUpdate">
            <summary>
                Before the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.AfterUpdate">
            <summary>
                Afters the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.FixedUpdate">
            <summary>
                Fix the update
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Manager.Time.TimeManagerBase.Exit">
            <summary>
                Exits this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Setting.SettingBase">
            <summary>
                The setting base class
            </summary>
        </member>
        <member name="P:Alis.Core.Setting.SettingBase.Id">
            <summary>
            Gets or sets the value of the id
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.AudioBackendType">
            <summary>
                The audio type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioBackendType.Os">
            <summary>
                The os audio type
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioBackendType.Sdl">
            <summary>
                The sfml audio type
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.AudioClipBase">
            <summary>
                The audio clip base class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.AudioClipBase.player">
            <summary>
                The player
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase" /> class
            </summary>
            <param name="fullPathAudio">The full path audio</param>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.#ctor(System.String,Alis.Core.Audio.AudioBackendType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.AudioClipBase" /> class
            </summary>
            <param name="fullPathAudio">The full path audio</param>
            <param name="audioBackendType">The audio backend type</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.SampleRate">
            <summary>
                Gets or sets the value of the sample rate
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.ChannelCount">
            <summary>
                Gets or sets the value of the channel count
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Duration">
            <summary>
                Gets or sets the value of the duration
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Pitch">
            <summary>
                Gets or sets the value of the pitch
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsMute">
            <summary>
                Gets or sets the value of the is mute
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsPlaying">
            <summary>
                Gets or sets the value of the is playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.FullPathAudioFile">
            <summary>
                Gets or sets the value of the full path audio file
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.AudioBackendType">
            <summary>
                Gets the value of the audio backend type
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.IsLooping">
            <summary>
                Gets or sets the value of the is looping
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.AudioClipBase.Volume">
            <summary>
                Gets or sets the value of the volume
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Play">
            <summary>
                Plays this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Stop">
            <summary>
                Stops this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Alis.Core.Audio.AudioClipBase.Resume">
            <summary>
                Resumes this instance
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="T:Alis.Core.Audio.IAudioRecorder">
            <summary>
                The audio recorder interface
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.IAudioSource`1">
            <summary>
                The audio source interface
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.AudioClip">
            <summary>
                Gets or sets the value of the audio clip base
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.IsPlaying">
            <summary>
                Gets the value of the is playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.PlayOnAwake">
            <summary>
                Gets or sets the value of the play on awake
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Mute">
            <summary>
                Gets or sets the value of the mute
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Loop">
            <summary>
                Gets or sets the value of the loop
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.IAudioSource`1.Volume">
            <summary>
                Gets or sets the value of the volume
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Play">
            <summary>
                Plays this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.IAudioSource`1.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Audio.OS.Interfaces.IPlayer">
            <summary>
                The player interface
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Interfaces.IPlayer.Playing">
            <summary>
                Gets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Interfaces.IPlayer.Paused">
            <summary>
                Gets the value of the paused
            </summary>
        </member>
        <member name="E:Alis.Core.Audio.OS.Interfaces.IPlayer.PlaybackFinished">
            <summary>
                playback
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Interfaces.IPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Player">
            <summary>
                The player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Player._internalPlayer">
            <summary>
                The internal player
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Audio.OS.Player" /> class
            </summary>
            <exception cref="T:System.Exception">No implementation exist for the current OS</exception>
        </member>
        <member name="E:Alis.Core.Audio.OS.Player.PlaybackFinished">
            <summary>
                Internally, sets Playing flag to false. Additional handlers can be attached to it to handle any custom logic.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Player.Playing">
            <summary>
                Indicates that the audio is currently playing.
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Player.Paused">
            <summary>
                Indicates that the audio playback is currently paused.
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Play(System.String)">
            <summary>
                Will stop any current playback and will start playing the specified audio file. The fileName parameter can be an
                absolute path or a path relative to the directory where the library is located. Sets Playing flag to true. Sets
                Paused flag to false.
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Pause">
            <summary>
                Pauses any ongong playback. Sets Paused flag to true. Doesn't modify Playing flag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Resume">
            <summary>
                Resumes any paused playback. Sets Paused flag to false. Doesn't modify Playing flag.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.Stop">
            <summary>
                Stops any current playback and clears the buffer. Sets Playing and Paused flags to false.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.SetVolume(System.Byte)">
            <summary>
                Sets the playing volume as percent
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Player.OnPlaybackFinished(System.Object,System.EventArgs)">
            <summary>
                Ons the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.LinuxPlayer">
            <summary>
                The linux player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Players.UnixPlayerBase" />
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.LinuxPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Percent can't exceed 100</exception>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.LinuxPlayer.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.MacPlayer">
            <summary>
                The mac player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Players.UnixPlayerBase" />
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.MacPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Percent can't exceed 100</exception>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.MacPlayer.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.UnixPlayerBase">
            <summary>
                The unix player base class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase.PauseProcessCommand">
            <summary>
                The pause process command
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase.ResumeProcessCommand">
            <summary>
                The resume process command
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.UnixPlayerBase._process">
            <summary>
                The process
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.UnixPlayerBase.Playing">
            <summary>
                Gets or sets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.UnixPlayerBase.Paused">
            <summary>
                Gets or sets the value of the paused
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.GetBashCommand(System.String)">
            <summary>
                Gets the bash command using the specified file name
            </summary>
            <param name="fileName">The file name</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.StartBashProcess(System.String)">
            <summary>
                Starts the bash process using the specified command
            </summary>
            <param name="command">The command</param>
            <returns>The process</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.UnixPlayerBase.HandlePlaybackFinished(System.Object,System.EventArgs)">
            <summary>
                Handles the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Audio.OS.Players.WindowsPlayer">
            <summary>
                The windows player class
            </summary>
            <seealso cref="T:Alis.Core.Audio.OS.Interfaces.IPlayer" />
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._fileName">
            <summary>
                The file name
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._playbackTimer">
            <summary>
                The playback timer
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Players.WindowsPlayer._playStopwatch">
            <summary>
                The play stopwatch
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.WindowsPlayer.Playing">
            <summary>
                Gets or sets the value of the playing
            </summary>
        </member>
        <member name="P:Alis.Core.Audio.OS.Players.WindowsPlayer.Paused">
            <summary>
                Gets or sets the value of the paused
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Play(System.String)">
            <summary>
                Plays the file name
            </summary>
            <param name="fileName">The file name</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Pause">
            <summary>
                Pauses this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Resume">
            <summary>
                Resumes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.Stop">
            <summary>
                Stops this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.SetVolume(System.Byte)">
            <summary>
                Sets the volume using the specified percent
            </summary>
            <param name="percent">The percent</param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.mciSendString(System.String,System.Text.StringBuilder,System.Int32,System.IntPtr)">
            <summary>
                Mcis the send string using the specified command
            </summary>
            <param name="command">The command</param>
            <param name="stringReturn">The string return</param>
            <param name="returnLength">The return length</param>
            <param name="hwndCallback">The hwnd callback</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.mciGetErrorString(System.Int32,System.Text.StringBuilder,System.Int32)">
            <summary>
                Mcis the get error string using the specified error code
            </summary>
            <param name="errorCode">The error code</param>
            <param name="errorText">The error text</param>
            <param name="errorTextSize">The error text size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.waveOutSetVolume(System.IntPtr,System.UInt32)">
            <summary>
                Waves the out set volume using the specified hwo
            </summary>
            <param name="hwo">The hwo</param>
            <param name="dwVolume">The dw volume</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.HandlePlaybackFinished(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
                Handles the playback finished using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="M:Alis.Core.Audio.OS.Players.WindowsPlayer.ExecuteMsiCommand(System.String)">
            <summary>
                Executes the msi command using the specified command string
            </summary>
            <param name="commandString">The command string</param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="T:Alis.Core.Audio.OS.Utils.FileUtil">
            <summary>
                The file util class
            </summary>
        </member>
        <member name="F:Alis.Core.Audio.OS.Utils.FileUtil.TempDirName">
            <summary>
                The temp dir name
            </summary>
        </member>
        <member name="M:Alis.Core.Audio.OS.Utils.FileUtil.CheckFileToPlay(System.String)">
            <summary>
                Checks the file to play using the specified original file name
            </summary>
            <param name="originalFileName">The original file name</param>
            <returns>The file name to return</returns>
        </member>
        <member name="M:Alis.Core.Audio.OS.Utils.FileUtil.ClearTempFiles">
            <summary>
                Clears the temp files
            </summary>
        </member>
        <member name="T:Alis.Core.Ecs.ComponentBase">
            <summary>Define a general component.</summary>
        </member>
        <member name="P:Alis.Core.Ecs.ComponentBase.GameObject">
            <summary>
                Game Object.
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.ComponentBase.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.ComponentBase.Tag">
            <summary>
                Gets or sets the value of the tag
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.ComponentBase.Transform">
            <summary>
                Gets or sets the value of the tag
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.ComponentBase.Destroyed">
            <summary>
                Gets or sets the value of the destroyed
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.AttachGameObject(Alis.Core.Ecs.GameObjectBase)">
            <summary>
                Attaches the game object using the specified game object
            </summary>
            <param name="gameObject">The game object</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnDestroy">
            <summary>
                Ons the destroy
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Enable">
            <summary>Enables this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Disable">
            <summary>Disables this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Draw">
            <summary>
                Draws this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Init">
            <summary>
                Inits this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Awake">
            <summary>Awakes this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Start">
            <summary>Starts this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.BeforeUpdate">
            <summary>Befores the update.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Update">
            <summary>Updates this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.AfterUpdate">
            <summary>Afters the update.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.FixedUpdate">
            <summary>Fixeds the update.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.DispatchEvents">
            <summary>
                Dispatches the events
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Stop">
            <summary>Stops this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Reset">
            <summary>Resets this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Destroy">
            <summary>
                Destroys this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnPressKey(Alis.Core.Aspect.Base.Mapping.Key)">
            <summary>
                Ons the press key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnPressDownKey(Alis.Core.Aspect.Base.Mapping.Key)">
            <summary>
                Ons the press down key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnReleaseKey(Alis.Core.Aspect.Base.Mapping.Key)">
            <summary>
                Ons the release key using the specified key
            </summary>
            <param name="key">The key</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnPressButton(Alis.Core.Aspect.Base.Mapping.Button,System.Int32)">
            <summary>
                Ons the press button using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="device">The device</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnPressDownButton(Alis.Core.Aspect.Base.Mapping.Button,System.Int32)">
            <summary>
                Ons the press down button using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="device">The device</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.OnReleaseButton(Alis.Core.Aspect.Base.Mapping.Button,System.Int32)">
            <summary>
                Ons the release button using the specified button
            </summary>
            <param name="button">The button</param>
            <param name="device">The device</param>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.Exit">
            <summary>Exits this instance.</summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.DestroyImmediate">
            <summary>
                Destroys the immediate
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.DontDestroyOnLoad">
            <summary>
                Donts the destroy on load
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.FindObjectOfType">
            <summary>
                Finds the object of type
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.ComponentBase.FindObjectsOfType">
            <summary>
                Finds the objects of type
            </summary>
        </member>
        <member name="T:Alis.Core.Ecs.GameObjectBase">
            <summary>
                The game object base class
            </summary>
        </member>
        <member name="F:Alis.Core.Ecs.GameObjectBase.Components">
            <summary>
                The components
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.GameObjectBase.Transform">
            <summary>
                The transform
            </summary>
        </member>
        <member name="M:Alis.Core.Ecs.GameObjectBase.AddComponent``1(``0)">
            <summary>
                Adds the component
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Alis.Core.Ecs.GameObjectBase.RemoveComponent``1(``0)">
            <summary>
                Removes the component
            </summary>
            <param name="component">The component</param>
        </member>
        <member name="M:Alis.Core.Ecs.GameObjectBase.ContainComponent(Alis.Core.Ecs.ComponentBase)">
            <summary>
                Describes whether this instance contain component
            </summary>
            <param name="component">The component</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Ecs.GameObjectBase.GetComponent``1">
            <summary>
                Gets the component
            </summary>
            <typeparam name="T">The </typeparam>
            <returns>The</returns>
        </member>
        <member name="M:Alis.Core.Ecs.GameObjectBase.Contains``1">
            <summary>
                Describes whether this instance contains
            </summary>
            <typeparam name="T">The </typeparam>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Ecs.SceneBase">
            <summary>
                The scene base class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Base.AlisObject" />
        </member>
        <member name="M:Alis.Core.Ecs.SceneBase.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Ecs.TransformBase">
            <summary>
                The transform base class
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.TransformBase.Position">
            <summary>
                The position
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.TransformBase.Rotation">
            <summary>
                The rotation
            </summary>
        </member>
        <member name="P:Alis.Core.Ecs.TransformBase.Scale">
            <summary>
                The scale
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.IDrawable">
            <summary>
            The drawable interface
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.Image">
            <summary>
            The image class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Image.nativePointer">
            <summary>
            The native pointer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Image.path">
            <summary>
            The path
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Image.isLoaded">
            <summary>
            The is loaded
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.Image.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Graphic.Image"/> class
            </summary>
            <param name="path">The path</param>
        </member>
        <member name="M:Alis.Core.Graphic.Image.Load">
            <summary>
            Loads this instance
            </summary>
            <exception cref="T:System.IO.FileNotFoundException">The image file does not exist</exception>
        </member>
        <member name="M:Alis.Core.Graphic.Image.GetNativePointer">
            <summary>
            Gets the native pointer
            </summary>
            <returns>The native pointer</returns>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlAudioCallback">
            <summary>
                The sdl audio callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlEventFilter">
            <summary>
                The sdl event filter
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlHitTest">
            <summary>
                The sdl hit test
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlIPhoneAnimationCallback">
            <summary>
                The sdl iphone animation callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlLogOutputFunction">
            <summary>
                The sdl log output function
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlMainFunc">
            <summary>
                The sdl main func
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlTimerCallback">
            <summary>
                The sdl timer callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWindowsMessageHook">
            <summary>
                The sdl windows message hook
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWopsCloseCallback">
            <summary>
                The sdl wops close callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWopsReadCallback">
            <summary>
                The sdl wops read callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWopsSeekCallback">
            <summary>
                The sdl wops seek callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWopsSizeCallback">
            <summary>
                The sdl wops size callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Delegates.SdlWopsWriteCallback">
            <summary>
                The sdl wops write callback
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.BitmapOrder">
            <summary>
                The sdl bit map order enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.BitmapOrder.BitMapOrderNone">
            <summary>
                The sdl bit map order none sdl bit map order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.BitmapOrder.BitMapOrder4321">
            <summary>
                The sdl bit map order 4321 sdl bit map order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.BitmapOrder.BitMapOrder1234">
            <summary>
                The sdl bit map order 1234 sdl bit map order
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.ImgInitFlags">
            <summary>
                The img initflags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.ImgInitFlags.ImgInitJpg">
            <summary>
                The img init jpg img initflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.ImgInitFlags.ImgInitPng">
            <summary>
                The img init png img initflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.ImgInitFlags.ImgInitTif">
            <summary>
                The img init tif img initflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.ImgInitFlags.ImgInitWebp">
            <summary>
                The img init webp img initflags
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.PackedLayout">
            <summary>
                The sdl packed layout enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayoutNone">
            <summary>
                The sdl packed layout none sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout332">
            <summary>
                The sdl packed layout 332 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout4444">
            <summary>
                The sdl packed layout 4444 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout1555">
            <summary>
                The sdl packed layout 1555 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout5551">
            <summary>
                The sdl packed layout 5551 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout565">
            <summary>
                The sdl packed layout 565 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout8888">
            <summary>
                The sdl packed layout 8888 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout2101010">
            <summary>
                The sdl packed layout 2101010 sdl packed layout
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedLayout.PackedLayout1010102">
            <summary>
                The sdl packed layout 1010102 sdl packed layout
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.PackedOrder">
            <summary>
                The sdl packed order enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderNone">
            <summary>
                The sdl packed order none sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderXRgb">
            <summary>
                The sdl packed order x rgb sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderRGbx">
            <summary>
                The sdl packed order r gbx sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderARgb">
            <summary>
                The sdl packed order argb sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderRGba">
            <summary>
                The sdl packed order rgba sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderXBgr">
            <summary>
                The sdl packed order x bgr sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderBGrx">
            <summary>
                The sdl packed order b grx sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderABgr">
            <summary>
                The sdl packed order a bgr sdl packed order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PackedOrder.PackedOrderBGra">
            <summary>
                The sdl packed order b gra sdl packed order
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.PixelType">
            <summary>
                The sdl pixel type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeUnknown">
            <summary>
                The sdl pixel type unknown sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeIndex1">
            <summary>
                The sdl pixel type index1 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeIndex4">
            <summary>
                The sdl pixel type index4 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeIndex8">
            <summary>
                The sdl pixel type index8 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypePacked8">
            <summary>
                The sdl pixel type packed8 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypePacked16">
            <summary>
                The sdl pixel type packed16 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypePacked32">
            <summary>
                The sdl pixel type packed32 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeArrayU8">
            <summary>
                The sdl pixel type array u8 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeArrayU16">
            <summary>
                The sdl pixel type arrayu16 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeArrayU32">
            <summary>
                The sdl pixel type arrayu32 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeArrayF16">
            <summary>
                The sdl pixel type arrayf16 sdl pixel type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.PixelType.PixelTypeArrayF32">
            <summary>
                The sdl pixel type arrayf32 sdl pixel type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder">
            <summary>
                The sdl array order enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderNone">
            <summary>
                The sdl array order none sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderRgb">
            <summary>
                The sdl array order rgb sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderRgba">
            <summary>
                The sdl array order rgba sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderArgb">
            <summary>
                The sdl array order argb sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderBgr">
            <summary>
                The sdl array order bgr sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderBgra">
            <summary>
                The sdl array order bgr sdl array order
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlArrayOrder.SdlArrayorderAbgr">
            <summary>
                The sdl array order abg sdl array order
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlAudioStatus">
            <summary>
                The sdl audio status enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlAudioStatus.SdlAudioStopped">
            <summary>
                The sdl audio stopped sdl audio status
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlAudioStatus.SdlAudioPlaying">
            <summary>
                The sdl audio playing sdl audio status
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlAudioStatus.SdlAudioPaused">
            <summary>
                The sdl audio paused sdl audio status
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor">
            <summary>
                The sdl blend factor enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorZero">
            <summary>
                The sdl blend factor zero sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorOne">
            <summary>
                The sdl blend factor one sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorSrcColor">
            <summary>
                The sdl blend factor src color sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorOneMinusSrcColor">
            <summary>
                The sdl blend factor one minus src color sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorSrcAlpha">
            <summary>
                The sdl blend factor src alpha sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorOneMinusSrcAlpha">
            <summary>
                The sdl blend factor one minus src alpha sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorDstColor">
            <summary>
                The sdl blend factor dst color sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorOneMinusDstColor">
            <summary>
                The sdl blend factor one minus dst color sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorDstAlpha">
            <summary>
                The sdl blend factor dst alpha sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendFactor.SdlBlendFactorOneMinusDstAlpha">
            <summary>
                The sdl blend factor one minus dst alpha sdl blend factor
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlBlendMode">
            <summary>
                The sdl blend mode enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.None">
            <summary>
                The sdl blend factor none sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.SdlBlendModeBlend">
            <summary>
                The sdl blend factor blend sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.SdlBlendModeAdd">
            <summary>
                The sdl blend factor add sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.SdlBlendModeMod">
            <summary>
                The sdl blend factor mod sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.SdlBlendModeMul">
            <summary>
                The sdl blend factor mul sdl blend factor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendMode.SdlBlendModeInvalid">
            <summary>
                The sdl blend factor invalid sdl blend factor
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation">
            <summary>
                The sdl blend operation enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation.SdlBlendOperationAdd">
            <summary>
                The sdl blend operation add sdl blend operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation.SdlBlendOperationSubtract">
            <summary>
                The sdl blend operation subtract sdl blend operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation.SdlBlendOperationRevSubtract">
            <summary>
                The sdl blend operation rev subtract sdl blend operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation.SdlBlendOperationMinimum">
            <summary>
                The sdl blend operation minimum sdl blend operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBlendOperation.SdlBlendOperationMaximum">
            <summary>
                The sdl blend operation maximum sdl blend operation
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlBool">
            <summary>
                The sdl bool enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBool.SdlFalse">
            <summary>
                The sdl false sdl bool
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlBool.SdlTrue">
            <summary>
                The sdl true sdl bool
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlDisplayEventId">
            <summary>
                The sdl display event id enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayEventId.SdlDisplayEventNone">
            <summary>
                The sdl display event none sdl display event id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayEventId.SdlDisplayEventOrientation">
            <summary>
                The sdl display event orientation sdl display event id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayEventId.SdlDisplayEventConnected">
            <summary>
                The sdl display event connected sdl display event id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayEventId.SdlDisplayEventDisconnected">
            <summary>
                The sdl display event disconnected sdl display event id
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation">
            <summary>
                The sdl display orientation enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation.SdlOrientationUnknown">
            <summary>
                The sdl orientation unknown sdl display orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation.SdlOrientationLandscape">
            <summary>
                The sdl orientation landscape sdl display orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation.SdlOrientationLandscapeFlipped">
            <summary>
                The sdl orientation landscape flipped sdl display orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation.SdlOrientationPortrait">
            <summary>
                The sdl orientation portrait sdl display orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlDisplayOrientation.SdlOrientationPortraitFlipped">
            <summary>
                The sdl orientation portrait flipped sdl display orientation
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlEventAction">
            <summary>
                The sdl event action enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventAction.SdlAddEvent">
            <summary>
                The sdl add event sdl event action
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventAction.SdlPeekEvent">
            <summary>
                The sdl peek event sdl event action
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventAction.SdlGetEvent">
            <summary>
                The sdl get event sdl event action
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlEventType">
            <summary>
                The sdl event type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlFirstEvent">
            <summary>
                The sdl first event sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlQuit">
            <summary>
                The sdl quit sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppTerminating">
            <summary>
                The sdl app terminating sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppLowMemory">
            <summary>
                The sdl app low memory sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppWillEnterBackground">
            <summary>
                The sdl app will enter background sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppDidEnterBackground">
            <summary>
                The sdl app did enter background sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppWillEnterForeground">
            <summary>
                The sdl app will enter foreground sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAppDidEnterForeground">
            <summary>
                The sdl app did enter foreground sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlLocaleChanged">
            <summary>
                The sdl locale changed sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDisplayEvent">
            <summary>
                The sdl display event sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlWindowEvent">
            <summary>
                The sdl window event sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlSysWmEvent">
            <summary>
                The sdl sys wm event sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlKeydown">
            <summary>
                The sdl keydown sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlKeyup">
            <summary>
                The sdl keyup sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlTextEditing">
            <summary>
                The sdl text editing sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlTextInput">
            <summary>
                The sdl text input sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlKeymapChanged">
            <summary>
                The sdl keymap changed sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlMouseMotion">
            <summary>
                The sdl mouse motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlMouseButtonDown">
            <summary>
                The sdl mouse button down sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlMouseButtonUp">
            <summary>
                The sdl mouse button up sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlMousewheel">
            <summary>
                The sdl mousewheel sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyAxisMotion">
            <summary>
                The sdl joy axis motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyBallMotion">
            <summary>
                The sdl joy ball motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyHatMotion">
            <summary>
                The sdl joy hat motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyButtonDown">
            <summary>
                The sdl joy button down sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyButtonUp">
            <summary>
                The sdl joy button up sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyDeviceAdded">
            <summary>
                The sdl joy device added sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlJoyDeviceRemoved">
            <summary>
                The sdl joy device removed sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerAxisMotion">
            <summary>
                The sdl controller axis motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerButtonDown">
            <summary>
                The sdl controller button down sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerButtonUp">
            <summary>
                The sdl controller button up sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerDeviceAdded">
            <summary>
                The sdl controller device added sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerDeviceRemoved">
            <summary>
                The sdl controller device removed sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerDeviceRemapped">
            <summary>
                The sdl controller device remapped sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerTouchpadDown">
            <summary>
                The sdl controller touchpad down sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerTouchpadMotion">
            <summary>
                The sdl controller touchpad motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerTouchpadUp">
            <summary>
                The sdl controller touchpad up sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlControllerSensorUpdate">
            <summary>
                The sdl controller sensor update sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlFingerDown">
            <summary>
                The sdl finger down sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlFingerUp">
            <summary>
                The sdl finger up sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlFingerMotion">
            <summary>
                The sdl finger motion sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDollarGesture">
            <summary>
                The sdl dollar gesture sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDollarRecord">
            <summary>
                The sdl dollar record sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlMultiGesture">
            <summary>
                The sdl multi gesture sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlClipBoardUpdate">
            <summary>
                The sdl clip board update sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDropFile">
            <summary>
                The sdl drop file sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDropText">
            <summary>
                The sdl drop text sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDropBegin">
            <summary>
                The sdl drop begin sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlDropComplete">
            <summary>
                The sdl drop complete sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAudioDeviceAdded">
            <summary>
                The sdl audio device added sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlAudioDeviceRemoved">
            <summary>
                The sdl audio device removed sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlSensorUpdate">
            <summary>
                The sdl sensor update sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlRenderTargetsReset">
            <summary>
                The sdl render targets reset sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlRenderDeviceReset">
            <summary>
                The sdl render device reset sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlPollSentinel">
            <summary>
                The sdl poll sentinel sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlUserEvent">
            <summary>
                The sdl user event sdl event type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlEventType.SdlLastEvent">
            <summary>
                The sdl last event sdl event type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlFlashOperation">
            <summary>
                The sdl flash operation enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlFlashOperation.SdlFlashCancel">
            <summary>
                The sdl flash cancel sdl flash operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlFlashOperation.SdlFlashBriefly">
            <summary>
                The sdl flash briefly sdl flash operation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlFlashOperation.SdlFlashUntilFocused">
            <summary>
                The sdl flash until focused sdl flash operation
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis">
            <summary>
                The sdl game controller axis enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisInvalid">
            <summary>
                The sdl controller axis invalid sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisLeftX">
            <summary>
                The sdl controller axis left x sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisLeftY">
            <summary>
                The sdl controller axis lefty sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisRightX">
            <summary>
                The sdl controller axis right X sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisRightY">
            <summary>
                The sdl controller axis right Y sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisTriggerLeft">
            <summary>
                The sdl controller axis trigger left sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisTriggerRight">
            <summary>
                The sdl controller axis trigger right sdl game controller axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis.SdlControllerAxisMax">
            <summary>
                The sdl controller axis max sdl game controller axis
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGameControllerBindType">
            <summary>
                The sdl game controller bind type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerBindType.SdlControllerBindTypeNone">
            <summary>
                The sdl controller bind type none sdl game controller bind type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerBindType.SdlControllerBindTypeButton">
            <summary>
                The sdl controller bind type button sdl game controller bind type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerBindType.SdlControllerBindTypeAxis">
            <summary>
                The sdl controller bind type axis sdl game controller bind type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerBindType.SdlControllerBindTypeHat">
            <summary>
                The sdl controller bind type hat sdl game controller bind type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton">
            <summary>
                The sdl game controller button enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonInvalid">
            <summary>
                The sdl controller button invalid sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonA">
            <summary>
                The sdl controller button sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonB">
            <summary>
                The sdl controller button sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonX">
            <summary>
                The sdl controller button sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonY">
            <summary>
                The sdl controller button sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonBack">
            <summary>
                The sdl controller button back sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonGuide">
            <summary>
                The sdl controller button guide sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonStart">
            <summary>
                The sdl controller button start sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonLeftStick">
            <summary>
                The sdl controller button left stick sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonRightStick">
            <summary>
                The sdl controller button right stick sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonLeftShoulder">
            <summary>
                The sdl controller button left shoulder sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonRightShoulder">
            <summary>
                The sdl controller button right shoulder sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonDpadUp">
            <summary>
                The sdl controller button dpad up sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonDpadDown">
            <summary>
                The sdl controller button dpad down sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonDpadLeft">
            <summary>
                The sdl controller button dpad left sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonDpadRight">
            <summary>
                The sdl controller button dpad right sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonMisc1">
            <summary>
                The sdl controller button misc1 sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonPaddle1">
            <summary>
                The sdl controller button paddle1 sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonPaddle2">
            <summary>
                The sdl controller button paddle2 sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonPaddle3">
            <summary>
                The sdl controller button paddle3 sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonPaddle4">
            <summary>
                The sdl controller button paddle4 sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonTouchpad">
            <summary>
                The sdl controller button touchpad sdl game controller button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton.SdlControllerButtonMax">
            <summary>
                The sdl controller button max sdl game controller button
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGlAttr">
            <summary>
                The sdl gl attr enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlRedSize">
            <summary>
                The sdl gl red size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlGreenSize">
            <summary>
                The sdl gl green size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlBlueSize">
            <summary>
                The sdl gl blue size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAlphaSize">
            <summary>
                The sdl gl alpha size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlBufferSize">
            <summary>
                The sdl gl buffer size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlDoubleBuffer">
            <summary>
                The sdl gl double buffer sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlDepthSize">
            <summary>
                The sdl gl depth size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlStencilSize">
            <summary>
                The sdl gl stencil size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAccumRedSize">
            <summary>
                The sdl gl accum red size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAccumGreenSize">
            <summary>
                The sdl gl accum green size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAccumBlueSize">
            <summary>
                The sdl gl accum blue size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAccumAlphaSize">
            <summary>
                The sdl gl accum alpha size sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlStereo">
            <summary>
                The sdl gl stereo sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlMultiSampleBuffers">
            <summary>
                The sdl gl multi sample buffers sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlMultiSampleSamples">
            <summary>
                The sdl gl multi sample samples sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlAcceleratedVisual">
            <summary>
                The sdl gl accelerated visual sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlRetainedBacking">
            <summary>
                The sdl gl retained backing sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextMajorVersion">
            <summary>
                The sdl gl context major version sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextMinorVersion">
            <summary>
                The sdl gl context minor version sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextEgl">
            <summary>
                The sdl gl context egl sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextFlags">
            <summary>
                The sdl gl context flags sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextProfileMask">
            <summary>
                The sdl gl context profile mask sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlShareWithCurrentContext">
            <summary>
                The sdl gl share with current context sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlFramebufferSrgbCapable">
            <summary>
                The sdl gl framebuffer srgb capable sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextReleaseBehavior">
            <summary>
                The sdl gl context release behavior sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextResetNotification">
            <summary>
                The sdl gl context reset notification sdl gl attr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlAttr.SdlGlContextNoError">
            <summary>
                The sdl gl context no error sdl gl attr
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGlContext">
            <summary>
                The sdl gl context enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlContext.SdlGlContextDebugFlag">
            <summary>
                The sdl gl context debug flag sdl gl context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlContext.SdlGlContextForwardCompatibleFlag">
            <summary>
                The sdl gl context forward compatible flag sdl gl context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlContext.SdlGlContextRobustAccessFlag">
            <summary>
                The sdl gl context robust access flag sdl gl context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlContext.SdlGlContextResetIsolationFlag">
            <summary>
                The sdl gl context reset isolation flag sdl gl context
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlGlProfile">
            <summary>
                The sdl gl profile enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlProfile.SdlGlContextProfileCore">
            <summary>
                The sdl gl context profile core sdl gl profile
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlProfile.SdlGlContextProfileCompatibility">
            <summary>
                The sdl gl context profile compatibility sdl gl profile
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlGlProfile.SdlGlContextProfileEs">
            <summary>
                The sdl gl context profile es sdl gl profile
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlHintPriority">
            <summary>
                The sdl hintpriority enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHintPriority.SdlHintDefault">
            <summary>
                The sdl hint default sdl hintpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHintPriority.SdlHintNormal">
            <summary>
                The sdl hint normal sdl hintpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHintPriority.SdlHintOverride">
            <summary>
                The sdl hint override sdl hintpriority
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult">
            <summary>
                The sdl hittestresult enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestNormal">
            <summary>
                The sdl hittest normal sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestDraggable">
            <summary>
                The sdl hittest draggable sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeTopleft">
            <summary>
                The sdl hittest resize topleft sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeTop">
            <summary>
                The sdl hittest resize top sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeTopright">
            <summary>
                The sdl hittest resize topright sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeRight">
            <summary>
                The sdl hittest resize right sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeBottomright">
            <summary>
                The sdl hittest resize bottomright sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeBottom">
            <summary>
                The sdl hittest resize bottom sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeBottomleft">
            <summary>
                The sdl hittest resize bottomleft sdl hittestresult
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlHitTestResult.SdlHittestResizeLeft">
            <summary>
                The sdl hittest resize left sdl hittestresult
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel">
            <summary>
                The sdl joystickpowerlevel enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerUnknown">
            <summary>
                The sdl joystick power unknown sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerEmpty">
            <summary>
                The sdl joystick power empty sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerLow">
            <summary>
                The sdl joystick power low sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerMedium">
            <summary>
                The sdl joystick power medium sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerFull">
            <summary>
                The sdl joystick power full sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerWired">
            <summary>
                The sdl joystick power wired sdl joystickpowerlevel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickPowerLevel.SdlJoystickPowerMax">
            <summary>
                The sdl joystick power max sdl joystickpowerlevel
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlJoystickType">
            <summary>
                The sdl joysticktype enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeUnknown">
            <summary>
                The sdl joystick type unknown sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeGamecontroller">
            <summary>
                The sdl joystick type gamecontroller sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeWheel">
            <summary>
                The sdl joystick type wheel sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeArcadeStick">
            <summary>
                The sdl joystick type arcade stick sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeFlightStick">
            <summary>
                The sdl joystick type flight stick sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeDancePad">
            <summary>
                The sdl joystick type dance pad sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeGuitar">
            <summary>
                The sdl joystick type guitar sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeDrumKit">
            <summary>
                The sdl joystick type drum kit sdl joysticktype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlJoystickType.SdlJoystickTypeArcadePad">
            <summary>
                The sdl joystick type arcade pad sdl joysticktype
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlKeycode">
            <summary>
                The sdl keycode enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkUnknown">
            <summary>
                The sdlk unknown sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkReturn">
            <summary>
                The sdlk return sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkEscape">
            <summary>
                The sdlk escape sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkBackspace">
            <summary>
                The sdlk backspace sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkTab">
            <summary>
                The sdlk tab sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSpace">
            <summary>
                The sdlk space sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkExclaim">
            <summary>
                The sdlk exclaim sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkQuotedbl">
            <summary>
                The sdlk quotedbl sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkHash">
            <summary>
                The sdlk hash sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPercent">
            <summary>
                The sdlk percent sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkDollar">
            <summary>
                The sdlk dollar sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAmpersand">
            <summary>
                The sdlk ampersand sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkQuote">
            <summary>
                The sdlk quote sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLeftparen">
            <summary>
                The sdlk leftparen sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRightparen">
            <summary>
                The sdlk rightparen sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAsterisk">
            <summary>
                The sdlk asterisk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPlus">
            <summary>
                The sdlk plus sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkComma">
            <summary>
                The sdlk comma sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMinus">
            <summary>
                The sdlk minus sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPeriod">
            <summary>
                The sdlk period sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSlash">
            <summary>
                The sdlk slash sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk0">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk1">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk2">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk3">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk4">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk5">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk6">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk7">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk8">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.Sdlk9">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkColon">
            <summary>
                The sdlk colon sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSemicolon">
            <summary>
                The sdlk semicolon sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLess">
            <summary>
                The sdlk less sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkEquals">
            <summary>
                The sdlk equals sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkGreater">
            <summary>
                The sdlk greater sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkQuestion">
            <summary>
                The sdlk question sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAt">
            <summary>
                The sdlk at sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLeftbracket">
            <summary>
                The sdlk leftbracket sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkBackslash">
            <summary>
                The sdlk backslash sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRightbracket">
            <summary>
                The sdlk rightbracket sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCaret">
            <summary>
                The sdlk caret sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkUnderscore">
            <summary>
                The sdlk underscore sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkBackquote">
            <summary>
                The sdlk backquote sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkA">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkB">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkC">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkD">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkE">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkG">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkH">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkI">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkJ">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkK">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkL">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkM">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkN">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkO">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkP">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkQ">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkR">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkS">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkT">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkU">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkV">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkW">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkX">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkY">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkZ">
            <summary>
                The sdlk sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCapslock">
            <summary>
                The sdlk capslock sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF1">
            <summary>
                The sdlk f1 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF2">
            <summary>
                The sdlk f2 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF3">
            <summary>
                The sdlk f3 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF4">
            <summary>
                The sdlk f4 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF5">
            <summary>
                The sdlk f5 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF6">
            <summary>
                The sdlk f6 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF7">
            <summary>
                The sdlk f7 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF8">
            <summary>
                The sdlk f8 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF9">
            <summary>
                The sdlk f9 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF10">
            <summary>
                The sdlk f10 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF11">
            <summary>
                The sdlk f11 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF12">
            <summary>
                The sdlk f12 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPrintscreen">
            <summary>
                The sdlk printscreen sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkScrolllock">
            <summary>
                The sdlk scrolllock sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPause">
            <summary>
                The sdlk pause sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkInsert">
            <summary>
                The sdlk insert sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkHome">
            <summary>
                The sdlk home sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPageup">
            <summary>
                The sdlk pageup sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkDelete">
            <summary>
                The sdlk delete sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkEnd">
            <summary>
                The sdlk end sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPagedown">
            <summary>
                The sdlk pagedown sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRight">
            <summary>
                The sdlk right sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLeft">
            <summary>
                The sdlk left sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkDown">
            <summary>
                The sdlk down sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkUp">
            <summary>
                The sdlk up sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkNumlockclear">
            <summary>
                The sdlk numlockclear sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpDivide">
            <summary>
                The sdlk kp divide sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMultiply">
            <summary>
                The sdlk kp multiply sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMinus">
            <summary>
                The sdlk kp minus sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpPlus">
            <summary>
                The sdlk kp plus sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpEnter">
            <summary>
                The sdlk kp enter sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp1">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp2">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp3">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp4">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp5">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp6">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp7">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp8">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp9">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp0">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpPeriod">
            <summary>
                The sdlk kp period sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkApplication">
            <summary>
                The sdlk application sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPower">
            <summary>
                The sdlk power sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpEquals">
            <summary>
                The sdlk kp equals sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF13">
            <summary>
                The sdlk f13 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF14">
            <summary>
                The sdlk f14 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF15">
            <summary>
                The sdlk f15 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF16">
            <summary>
                The sdlk f16 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF17">
            <summary>
                The sdlk f17 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF18">
            <summary>
                The sdlk f18 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF19">
            <summary>
                The sdlk f19 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF20">
            <summary>
                The sdlk f20 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF21">
            <summary>
                The sdlk f21 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF22">
            <summary>
                The sdlk f22 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF23">
            <summary>
                The sdlk f23 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkF24">
            <summary>
                The sdlk f24 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkExecute">
            <summary>
                The sdlk execute sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkHelp">
            <summary>
                The sdlk help sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMenu">
            <summary>
                The sdlk menu sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSelect">
            <summary>
                The sdlk select sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkStop">
            <summary>
                The sdlk stop sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAgain">
            <summary>
                The sdlk again sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkUndo">
            <summary>
                The sdlk undo sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCut">
            <summary>
                The sdlk cut sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCopy">
            <summary>
                The sdlk copy sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPaste">
            <summary>
                The sdlk paste sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkFind">
            <summary>
                The sdlk find sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMute">
            <summary>
                The sdlk mute sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkVolumeup">
            <summary>
                The sdlk volumeup sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkVolumedown">
            <summary>
                The sdlk volumedown sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpComma">
            <summary>
                The sdlk kp comma sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpEqualsas400">
            <summary>
                The sdlk kp equalsas400 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAlterase">
            <summary>
                The sdlk alterase sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSysreq">
            <summary>
                The sdlk sysreq sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCancel">
            <summary>
                The sdlk cancel sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkClear">
            <summary>
                The sdlk clear sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkPrior">
            <summary>
                The sdlk prior sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkReturn2">
            <summary>
                The sdlk return2 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSeparator">
            <summary>
                The sdlk separator sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkOut">
            <summary>
                The sdlk out sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkOper">
            <summary>
                The sdlk oper sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkClearagain">
            <summary>
                The sdlk clearagain sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCrsel">
            <summary>
                The sdlk crsel sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkExsel">
            <summary>
                The sdlk exsel sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp00">
            <summary>
                The sdlk kp 00 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKp000">
            <summary>
                The sdlk kp 000 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkThousandsseparator">
            <summary>
                The sdlk thousandsseparator sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkDecimalseparator">
            <summary>
                The sdlk decimalseparator sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCurrencyunit">
            <summary>
                The sdlk currencyunit sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCurrencysubunit">
            <summary>
                The sdlk currencysubunit sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpLeftparen">
            <summary>
                The sdlk kp leftparen sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpRightparen">
            <summary>
                The sdlk kp rightparen sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpLeftbrace">
            <summary>
                The sdlk kp leftbrace sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpRightbrace">
            <summary>
                The sdlk kp rightbrace sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpTab">
            <summary>
                The sdlk kp tab sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpBackspace">
            <summary>
                The sdlk kp backspace sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpA">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpB">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpC">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpD">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpE">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpF">
            <summary>
                The sdlk kp sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpXor">
            <summary>
                The sdlk kp xor sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpPower">
            <summary>
                The sdlk kp power sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpPercent">
            <summary>
                The sdlk kp percent sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpLess">
            <summary>
                The sdlk kp less sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpGreater">
            <summary>
                The sdlk kp greater sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpAmpersand">
            <summary>
                The sdlk kp ampersand sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpDblampersand">
            <summary>
                The sdlk kp dblampersand sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpVerticalbar">
            <summary>
                The sdlk kp verticalbar sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpDblverticalbar">
            <summary>
                The sdlk kp dblverticalbar sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpColon">
            <summary>
                The sdlk kp colon sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpHash">
            <summary>
                The sdlk kp hash sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpSpace">
            <summary>
                The sdlk kp space sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpAt">
            <summary>
                The sdlk kp at sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpExclam">
            <summary>
                The sdlk kp exclam sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemstore">
            <summary>
                The sdlk kp memstore sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemrecall">
            <summary>
                The sdlk kp memrecall sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemclear">
            <summary>
                The sdlk kp memclear sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemadd">
            <summary>
                The sdlk kp memadd sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemsubtract">
            <summary>
                The sdlk kp memsubtract sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemmultiply">
            <summary>
                The sdlk kp memmultiply sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpMemdivide">
            <summary>
                The sdlk kp memdivide sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpPlusminus">
            <summary>
                The sdlk kp plusminus sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpClear">
            <summary>
                The sdlk kp clear sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpClearentry">
            <summary>
                The sdlk kp clearentry sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpBinary">
            <summary>
                The sdlk kp binary sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpOctal">
            <summary>
                The sdlk kp octal sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpDecimal">
            <summary>
                The sdlk kp decimal sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKpHexadecimal">
            <summary>
                The sdlk kp hexadecimal sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLctrl">
            <summary>
                The sdlk lctrl sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLshift">
            <summary>
                The sdlk lshift sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLalt">
            <summary>
                The sdlk lalt sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkLgui">
            <summary>
                The sdlk lgui sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRctrl">
            <summary>
                The sdlk rctrl sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRshift">
            <summary>
                The sdlk rshift sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRalt">
            <summary>
                The sdlk ralt sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkRgui">
            <summary>
                The sdlk rgui sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMode">
            <summary>
                The sdlk mode sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudionext">
            <summary>
                The sdlk audionext sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudioprev">
            <summary>
                The sdlk audioprev sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudiostop">
            <summary>
                The sdlk audiostop sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudioplay">
            <summary>
                The sdlk audioplay sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudiomute">
            <summary>
                The sdlk audiomute sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMediaselect">
            <summary>
                The sdlk mediaselect sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkWww">
            <summary>
                The sdlk www sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkMail">
            <summary>
                The sdlk mail sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkCalculator">
            <summary>
                The sdlk calculator sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkComputer">
            <summary>
                The sdlk computer sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcSearch">
            <summary>
                The sdlk ac search sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcHome">
            <summary>
                The sdlk ac home sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcBack">
            <summary>
                The sdlk ac back sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcForward">
            <summary>
                The sdlk ac forward sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcStop">
            <summary>
                The sdlk ac stop sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcRefresh">
            <summary>
                The sdlk ac refresh sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAcBookmarks">
            <summary>
                The sdlk ac bookmarks sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkBrightnessdown">
            <summary>
                The sdlk brightnessdown sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkBrightnessup">
            <summary>
                The sdlk brightnessup sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkDisplayswitch">
            <summary>
                The sdlk displayswitch sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKbdillumtoggle">
            <summary>
                The sdlk kbdillumtoggle sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKbdillumdown">
            <summary>
                The sdlk kbdillumdown sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkKbdillumup">
            <summary>
                The sdlk kbdillumup sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkEject">
            <summary>
                The sdlk eject sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkSleep">
            <summary>
                The sdlk sleep sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkApp1">
            <summary>
                The sdlk app1 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkApp2">
            <summary>
                The sdlk app2 sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudiorewind">
            <summary>
                The sdlk audiorewind sdl keycode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeycode.SdlkAudiofastforward">
            <summary>
                The sdlk audiofastforward sdl keycode
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlKeymod">
            <summary>
                The sdl keymod enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.None">
            <summary>
                The kmod none sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodLshift">
            <summary>
                The kmod lshift sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodRshift">
            <summary>
                The kmod rshift sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodLctrl">
            <summary>
                The kmod lctrl sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodRctrl">
            <summary>
                The kmod rctrl sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodLalt">
            <summary>
                The kmod lalt sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodRalt">
            <summary>
                The kmod ralt sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodLgui">
            <summary>
                The kmod lgui sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodRgui">
            <summary>
                The kmod rgui sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodNum">
            <summary>
                The kmod num sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodCaps">
            <summary>
                The kmod caps sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodMode">
            <summary>
                The kmod mode sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodScroll">
            <summary>
                The kmod scroll sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodCtrl">
            <summary>
                The kmod ctrl sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodShift">
            <summary>
                The kmod shift sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodAlt">
            <summary>
                The kmod alt sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodGui">
            <summary>
                The kmod gui sdl keymod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlKeymod.KmodReserved">
            <summary>
                The kmod reserved sdl keymod
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlLogCategory">
            <summary>
                The sdl logcategory enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryApplication">
            <summary>
                The sdl log category application sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryError">
            <summary>
                The sdl log category error sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryAssert">
            <summary>
                The sdl log category assert sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategorySystem">
            <summary>
                The sdl log category system sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryAudio">
            <summary>
                The sdl log category audio sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryVideo">
            <summary>
                The sdl log category video sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryRender">
            <summary>
                The sdl log category render sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryInput">
            <summary>
                The sdl log category input sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryTest">
            <summary>
                The sdl log category test sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved1">
            <summary>
                The sdl log category reserved1 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved2">
            <summary>
                The sdl log category reserved2 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved3">
            <summary>
                The sdl log category reserved3 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved4">
            <summary>
                The sdl log category reserved4 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved5">
            <summary>
                The sdl log category reserved5 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved6">
            <summary>
                The sdl log category reserved6 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved7">
            <summary>
                The sdl log category reserved7 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved8">
            <summary>
                The sdl log category reserved8 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved9">
            <summary>
                The sdl log category reserved9 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryReserved10">
            <summary>
                The sdl log category reserved10 sdl logcategory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogCategory.SdlLogCategoryCustom">
            <summary>
                The sdl log category custom sdl logcategory
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlLogPriority">
            <summary>
                The sdl logpriority enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityVerbose">
            <summary>
                The sdl log priority verbose sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityDebug">
            <summary>
                The sdl log priority debug sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityInfo">
            <summary>
                The sdl log priority info sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityWarn">
            <summary>
                The sdl log priority warn sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityError">
            <summary>
                The sdl log priority error sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlLogPriorityCritical">
            <summary>
                The sdl log priority critical sdl logpriority
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlLogPriority.SdlNumLogPriorities">
            <summary>
                The sdl num log priorities sdl logpriority
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxButtonFlags">
            <summary>
                The sdl messageboxbuttonflags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxButtonFlags.SdlMessageboxButtonReturnkeyDefault">
            <summary>
                The sdl messagebox button returnkey default sdl messageboxbuttonflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxButtonFlags.SdlMessageboxButtonEscapekeyDefault">
            <summary>
                The sdl messagebox button escapekey default sdl messageboxbuttonflags
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType">
            <summary>
                The sdl message box color type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorBackground">
            <summary>
                The sdl messagebox color background sdl message box color type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorText">
            <summary>
                The sdl messagebox color text sdl message box color type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorButtonBorder">
            <summary>
                The sdl messagebox color button border sdl message box color type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorButtonBackground">
            <summary>
                The sdl messagebox color button background sdl message box color type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorButtonSelected">
            <summary>
                The sdl messagebox color button selected sdl message box color type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxColorType.SdlMessageboxColorMax">
            <summary>
                The sdl messagebox color max sdl message box color type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags">
            <summary>
                The sdl messageboxflags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags.SdlMessageboxError">
            <summary>
                The sdl messagebox error sdl messageboxflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags.SdlMessageboxWarning">
            <summary>
                The sdl messagebox warning sdl messageboxflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags.SdlMessageboxInformation">
            <summary>
                The sdl messagebox information sdl messageboxflags
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlMouseWheelDirection">
            <summary>
                The sdl mousewheeldirection enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMouseWheelDirection.SdlMousewheelNormal">
            <summary>
                The sdl mousewheel normal sdl mousewheeldirection
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlMouseWheelDirection.SdlMousewheelFlipped">
            <summary>
                The sdl mousewheel flipped sdl mousewheeldirection
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlPowerState">
            <summary>
                The sdl powerstate enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlPowerState.SdlPowerstateUnknown">
            <summary>
                The sdl powerstate unknown sdl powerstate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlPowerState.SdlPowerstateOnBattery">
            <summary>
                The sdl powerstate on battery sdl powerstate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlPowerState.SdlPowerstateNoBattery">
            <summary>
                The sdl powerstate no battery sdl powerstate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlPowerState.SdlPowerstateCharging">
            <summary>
                The sdl powerstate charging sdl powerstate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlPowerState.SdlPowerstateCharged">
            <summary>
                The sdl powerstate charged sdl powerstate
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlRendererFlags">
            <summary>
                The sdl rendererflags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlags.SdlRendererSoftware">
            <summary>
                The sdl renderer software sdl rendererflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlags.SdlRendererAccelerated">
            <summary>
                The sdl renderer accelerated sdl rendererflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlags.SdlRendererPresentvsync">
            <summary>
                The sdl renderer presentvsync sdl rendererflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlags.SdlRendererTargettexture">
            <summary>
                The sdl renderer targettexture sdl rendererflags
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlRendererFlip">
            <summary>
                The sdl rendererflip enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlip.None">
            <summary>
                The sdl flip none sdl rendererflip
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlip.SdlFlipHorizontal">
            <summary>
                The sdl flip horizontal sdl rendererflip
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlRendererFlip.SdlFlipVertical">
            <summary>
                The sdl flip vertical sdl rendererflip
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlScaleMode">
            <summary>
                The sdl scalemode enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScaleMode.SdlScaleModeNearest">
            <summary>
                The sdl scalemodenearest sdl scalemode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScaleMode.SdlScaleModeLinear">
            <summary>
                The sdl scalemodelinear sdl scalemode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScaleMode.SdlScaleModeBest">
            <summary>
                The sdl scalemodebest sdl scalemode
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlScancode">
            <summary>
                The sdl scancode enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeUnknown">
            <summary>
                The sdl scancode unknown sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeA">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeB">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeC">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeD">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeE">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeG">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeH">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeI">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeJ">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeK">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeL">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeM">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeN">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeO">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeP">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeQ">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeR">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeS">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeT">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeU">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeV">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeW">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeX">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeY">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeZ">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode1">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode2">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode3">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode4">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode5">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode6">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode7">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode8">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode9">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancode0">
            <summary>
                The sdl scancode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeReturn">
            <summary>
                The sdl scancode return sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeEscape">
            <summary>
                The sdl scancode escape sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeBackspace">
            <summary>
                The sdl scancode backspace sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeTab">
            <summary>
                The sdl scancode tab sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSpace">
            <summary>
                The sdl scancode space sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMinus">
            <summary>
                The sdl scancode minus sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeEquals">
            <summary>
                The sdl scancode equals sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLeftbracket">
            <summary>
                The sdl scancode leftbracket sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRightbracket">
            <summary>
                The sdl scancode rightbracket sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeBackslash">
            <summary>
                The sdl scancode backslash sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeNonushash">
            <summary>
                The sdl scancode nonushash sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSemicolon">
            <summary>
                The sdl scancode semicolon sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeApostrophe">
            <summary>
                The sdl scancode apostrophe sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeGrave">
            <summary>
                The sdl scancode grave sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeComma">
            <summary>
                The sdl scancode comma sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePeriod">
            <summary>
                The sdl scancode period sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSlash">
            <summary>
                The sdl scancode slash sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCapslock">
            <summary>
                The sdl scancode capslock sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF1">
            <summary>
                The sdl scancode f1 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF2">
            <summary>
                The sdl scancode f2 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF3">
            <summary>
                The sdl scancode f3 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF4">
            <summary>
                The sdl scancode f4 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF5">
            <summary>
                The sdl scancode f5 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF6">
            <summary>
                The sdl scancode f6 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF7">
            <summary>
                The sdl scancode f7 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF8">
            <summary>
                The sdl scancode f8 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF9">
            <summary>
                The sdl scancode f9 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF10">
            <summary>
                The sdl scancode f10 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF11">
            <summary>
                The sdl scancode f11 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF12">
            <summary>
                The sdl scancode f12 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePrintscreen">
            <summary>
                The sdl scancode printscreen sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeScrolllock">
            <summary>
                The sdl scancode scrolllock sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePause">
            <summary>
                The sdl scancode pause sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInsert">
            <summary>
                The sdl scancode insert sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeHome">
            <summary>
                The sdl scancode home sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePageup">
            <summary>
                The sdl scancode pageup sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeDelete">
            <summary>
                The sdl scancode delete sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeEnd">
            <summary>
                The sdl scancode end sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePagedown">
            <summary>
                The sdl scancode pagedown sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRight">
            <summary>
                The sdl scancode right sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLeft">
            <summary>
                The sdl scancode left sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeDown">
            <summary>
                The sdl scancode down sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeUp">
            <summary>
                The sdl scancode up sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeNumlockclear">
            <summary>
                The sdl scancode numlockclear sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpDivide">
            <summary>
                The sdl scancode kp divide sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMultiply">
            <summary>
                The sdl scancode kp multiply sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMinus">
            <summary>
                The sdl scancode kp minus sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpPlus">
            <summary>
                The sdl scancode kp plus sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpEnter">
            <summary>
                The sdl scancode kp enter sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp1">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp2">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp3">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp4">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp5">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp6">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp7">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp8">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp9">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp0">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpPeriod">
            <summary>
                The sdl scancode kp period sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeNonusbackslash">
            <summary>
                The sdl scancode nonusbackslash sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeApplication">
            <summary>
                The sdl scancode application sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePower">
            <summary>
                The sdl scancode power sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpEquals">
            <summary>
                The sdl scancode kp equals sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF13">
            <summary>
                The sdl scancode f13 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF14">
            <summary>
                The sdl scancode f14 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF15">
            <summary>
                The sdl scancode f15 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF16">
            <summary>
                The sdl scancode f16 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF17">
            <summary>
                The sdl scancode f17 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF18">
            <summary>
                The sdl scancode f18 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF19">
            <summary>
                The sdl scancode f19 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF20">
            <summary>
                The sdl scancode f20 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF21">
            <summary>
                The sdl scancode f21 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF22">
            <summary>
                The sdl scancode f22 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF23">
            <summary>
                The sdl scancode f23 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeF24">
            <summary>
                The sdl scancode f24 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeExecute">
            <summary>
                The sdl scancode execute sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeHelp">
            <summary>
                The sdl scancode help sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMenu">
            <summary>
                The sdl scancode menu sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSelect">
            <summary>
                The sdl scancode select sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeStop">
            <summary>
                The sdl scancode stop sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAgain">
            <summary>
                The sdl scancode again sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeUndo">
            <summary>
                The sdl scancode undo sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCut">
            <summary>
                The sdl scancode cut sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCopy">
            <summary>
                The sdl scancode copy sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePaste">
            <summary>
                The sdl scancode paste sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeFind">
            <summary>
                The sdl scancode find sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMute">
            <summary>
                The sdl scancode mute sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeVolumeup">
            <summary>
                The sdl scancode volumeup sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeVolumedown">
            <summary>
                The sdl scancode volumedown sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpComma">
            <summary>
                The sdl scancode kp comma sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpEqualsas400">
            <summary>
                The sdl scancode kp equalsas400 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational1">
            <summary>
                The sdl scancode international1 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational2">
            <summary>
                The sdl scancode international2 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational3">
            <summary>
                The sdl scancode international3 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational4">
            <summary>
                The sdl scancode international4 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational5">
            <summary>
                The sdl scancode international5 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational6">
            <summary>
                The sdl scancode international6 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational7">
            <summary>
                The sdl scancode international7 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational8">
            <summary>
                The sdl scancode international8 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeInternational9">
            <summary>
                The sdl scancode international9 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang1">
            <summary>
                The sdl scancode lang1 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang2">
            <summary>
                The sdl scancode lang2 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang3">
            <summary>
                The sdl scancode lang3 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang4">
            <summary>
                The sdl scancode lang4 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang5">
            <summary>
                The sdl scancode lang5 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang6">
            <summary>
                The sdl scancode lang6 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang7">
            <summary>
                The sdl scancode lang7 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang8">
            <summary>
                The sdl scancode lang8 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLang9">
            <summary>
                The sdl scancode lang9 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAlterase">
            <summary>
                The sdl scancode alterase sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSysreq">
            <summary>
                The sdl scancode sysreq sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCancel">
            <summary>
                The sdl scancode cancel sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeClear">
            <summary>
                The sdl scancode clear sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodePrior">
            <summary>
                The sdl scancode prior sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeReturn2">
            <summary>
                The sdl scancode return2 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSeparator">
            <summary>
                The sdl scancode separator sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeOut">
            <summary>
                The sdl scancode out sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeOper">
            <summary>
                The sdl scancode oper sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeClearagain">
            <summary>
                The sdl scancode clearagain sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCrsel">
            <summary>
                The sdl scancode crsel sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeExsel">
            <summary>
                The sdl scancode exsel sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp00">
            <summary>
                The sdl scancode kp 00 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKp000">
            <summary>
                The sdl scancode kp 000 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeThousandsseparator">
            <summary>
                The sdl scancode thousandsseparator sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeDecimalseparator">
            <summary>
                The sdl scancode decimalseparator sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCurrencyunit">
            <summary>
                The sdl scancode currencyunit sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCurrencysubunit">
            <summary>
                The sdl scancode currencysubunit sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpLeftparen">
            <summary>
                The sdl scancode kp leftparen sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpRightparen">
            <summary>
                The sdl scancode kp rightparen sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpLeftbrace">
            <summary>
                The sdl scancode kp leftbrace sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpRightbrace">
            <summary>
                The sdl scancode kp rightbrace sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpTab">
            <summary>
                The sdl scancode kp tab sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpBackspace">
            <summary>
                The sdl scancode kp backspace sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpA">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpB">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpC">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpD">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpE">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpF">
            <summary>
                The sdl scancode kp sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpXor">
            <summary>
                The sdl scancode kp xor sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpPower">
            <summary>
                The sdl scancode kp power sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpPercent">
            <summary>
                The sdl scancode kp percent sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpLess">
            <summary>
                The sdl scancode kp less sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpGreater">
            <summary>
                The sdl scancode kp greater sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpAmpersand">
            <summary>
                The sdl scancode kp ampersand sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpDblampersand">
            <summary>
                The sdl scancode kp dblampersand sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpVerticalbar">
            <summary>
                The sdl scancode kp verticalbar sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpDblverticalbar">
            <summary>
                The sdl scancode kp dblverticalbar sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpColon">
            <summary>
                The sdl scancode kp colon sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpHash">
            <summary>
                The sdl scancode kp hash sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpSpace">
            <summary>
                The sdl scancode kp space sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpAt">
            <summary>
                The sdl scancode kp at sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpExclam">
            <summary>
                The sdl scancode kp exclam sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemstore">
            <summary>
                The sdl scancode kp memstore sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemrecall">
            <summary>
                The sdl scancode kp memrecall sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemclear">
            <summary>
                The sdl scancode kp memclear sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemadd">
            <summary>
                The sdl scancode kp memadd sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemsubtract">
            <summary>
                The sdl scancode kp memsubtract sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemmultiply">
            <summary>
                The sdl scancode kp memmultiply sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpMemdivide">
            <summary>
                The sdl scancode kp memdivide sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpPlusminus">
            <summary>
                The sdl scancode kp plusminus sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpClear">
            <summary>
                The sdl scancode kp clear sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpClearentry">
            <summary>
                The sdl scancode kp clearentry sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpBinary">
            <summary>
                The sdl scancode kp binary sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpOctal">
            <summary>
                The sdl scancode kp octal sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpDecimal">
            <summary>
                The sdl scancode kp decimal sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKpHexadecimal">
            <summary>
                The sdl scancode kp hexadecimal sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLctrl">
            <summary>
                The sdl scancode lctrl sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLshift">
            <summary>
                The sdl scancode lshift sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLalt">
            <summary>
                The sdl scancode lalt sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeLgui">
            <summary>
                The sdl scancode lgui sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRctrl">
            <summary>
                The sdl scancode rctrl sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRshift">
            <summary>
                The sdl scancode rshift sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRalt">
            <summary>
                The sdl scancode ralt sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeRgui">
            <summary>
                The sdl scancode rgui sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMode">
            <summary>
                The sdl scancode mode sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudionext">
            <summary>
                The sdl scancode audionext sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudioprev">
            <summary>
                The sdl scancode audioprev sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudiostop">
            <summary>
                The sdl scancode audiostop sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudioplay">
            <summary>
                The sdl scancode audioplay sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudiomute">
            <summary>
                The sdl scancode audiomute sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMediaselect">
            <summary>
                The sdl scancode mediaselect sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeWww">
            <summary>
                The sdl scancode www sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeMail">
            <summary>
                The sdl scancode mail sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeCalculator">
            <summary>
                The sdl scancode calculator sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeComputer">
            <summary>
                The sdl scancode computer sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcSearch">
            <summary>
                The sdl scancode ac search sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcHome">
            <summary>
                The sdl scancode ac home sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcBack">
            <summary>
                The sdl scancode ac back sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcForward">
            <summary>
                The sdl scancode ac forward sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcStop">
            <summary>
                The sdl scancode ac stop sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcRefresh">
            <summary>
                The sdl scancode ac refresh sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAcBookmarks">
            <summary>
                The sdl scancode ac bookmarks sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeBrightnessdown">
            <summary>
                The sdl scancode brightnessdown sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeBrightnessup">
            <summary>
                The sdl scancode brightnessup sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeDisplayswitch">
            <summary>
                The sdl scancode displayswitch sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKbdillumtoggle">
            <summary>
                The sdl scancode kbdillumtoggle sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKbdillumdown">
            <summary>
                The sdl scancode kbdillumdown sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeKbdillumup">
            <summary>
                The sdl scancode kbdillumup sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeEject">
            <summary>
                The sdl scancode eject sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeSleep">
            <summary>
                The sdl scancode sleep sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeApp1">
            <summary>
                The sdl scancode app1 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeApp2">
            <summary>
                The sdl scancode app2 sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudiorewind">
            <summary>
                The sdl scancode audiorewind sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlScancodeAudiofastforward">
            <summary>
                The sdl scancode audiofastforward sdl scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlScancode.SdlNumScancodes">
            <summary>
                The sdl num scancodes sdl scancode
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlSensorType">
            <summary>
                The sdl sensortype enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSensorType.SdlSensorInvalid">
            <summary>
                The sdl sensor invalid sdl sensortype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSensorType.SdlSensorUnknown">
            <summary>
                The sdl sensor unknown sdl sensortype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSensorType.SdlSensorAccel">
            <summary>
                The sdl sensor accel sdl sensortype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSensorType.SdlSensorGyro">
            <summary>
                The sdl sensor gyro sdl sensortype
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor">
            <summary>
                The sdl systemcursor enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorArrow">
            <summary>
                The sdl system cursor arrow sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorIbeam">
            <summary>
                The sdl system cursor ibeam sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorWait">
            <summary>
                The sdl system cursor wait sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorCrosshair">
            <summary>
                The sdl system cursor crosshair sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorWaitarrow">
            <summary>
                The sdl system cursor waitarrow sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorSizenwse">
            <summary>
                The sdl system cursor sizenwse sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorSizenesw">
            <summary>
                The sdl system cursor sizenesw sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorSizewe">
            <summary>
                The sdl system cursor sizewe sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorSizens">
            <summary>
                The sdl system cursor sizens sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorSizeall">
            <summary>
                The sdl system cursor sizeall sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorNo">
            <summary>
                The sdl system cursor no sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlSystemCursorHand">
            <summary>
                The sdl system cursor hand sdl systemcursor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSystemCursor.SdlNumSystemCursors">
            <summary>
                The sdl num system cursors sdl systemcursor
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlSyswmType">
            <summary>
                The sdl syswm type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmUnknown">
            <summary>
                The sdl syswm unknown sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmWindows">
            <summary>
                The sdl syswm windows sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmX11">
            <summary>
                The sdl syswm x11 sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmDirectfb">
            <summary>
                The sdl syswm directfb sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmCocoa">
            <summary>
                The sdl syswm cocoa sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmUikit">
            <summary>
                The sdl syswm uikit sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmWayland">
            <summary>
                The sdl syswm wayland sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmMir">
            <summary>
                The sdl syswm mir sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmWinrt">
            <summary>
                The sdl syswm winrt sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmAndroid">
            <summary>
                The sdl syswm android sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmVivante">
            <summary>
                The sdl syswm vivante sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmOs2">
            <summary>
                The sdl syswm os2 sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmHaiku">
            <summary>
                The sdl syswm haiku sdl syswm type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlSyswmType.SdlSyswmKmsdrm">
            <summary>
                The sdl syswm kmsdrm sdl syswm type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlTextureAccess">
            <summary>
                The sdl textureaccess enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureAccess.SdlTextureaccessStatic">
            <summary>
                The sdl textureaccess static sdl textureaccess
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureAccess.SdlTextureaccessStreaming">
            <summary>
                The sdl textureaccess streaming sdl textureaccess
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureAccess.SdlTextureaccessTarget">
            <summary>
                The sdl textureaccess target sdl textureaccess
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlTextureModulate">
            <summary>
                The sdl texturemodulate enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureModulate.None">
            <summary>
                The sdl texturemodulate none sdl texturemodulate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureModulate.SdlTexturemodulateHorizontal">
            <summary>
                The sdl texturemodulate horizontal sdl texturemodulate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTextureModulate.SdlTexturemodulateVertical">
            <summary>
                The sdl texturemodulate vertical sdl texturemodulate
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlTouchDeviceType">
            <summary>
                The sdl touchdevicetype enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTouchDeviceType.SdlTouchDeviceInvalid">
            <summary>
                The sdl touch device invalid sdl touchdevicetype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTouchDeviceType.SdlTouchDeviceDirect">
            <summary>
                The sdl touch device direct sdl touchdevicetype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTouchDeviceType.SdlTouchDeviceIndirectAbsolute">
            <summary>
                The sdl touch device indirect absolute sdl touchdevicetype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlTouchDeviceType.SdlTouchDeviceIndirectRelative">
            <summary>
                The sdl touch device indirect relative sdl touchdevicetype
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent">
            <summary>
                The sdl windowevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.windowEvent">
            <summary>
                The window event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.data1">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEvent.data2">
            <summary>
                The data
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId">
            <summary>
                The sdl windoweventid enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventNone">
            <summary>
                The sdl windowevent none sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventShown">
            <summary>
                The sdl windowevent shown sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventHidden">
            <summary>
                The sdl windowevent hidden sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventExposed">
            <summary>
                The sdl windowevent exposed sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventMoved">
            <summary>
                The sdl windowevent moved sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventResized">
            <summary>
                The sdl windowevent resized sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventSizeChanged">
            <summary>
                The sdl windowevent size changed sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventMinimized">
            <summary>
                The sdl windowevent minimized sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventMaximized">
            <summary>
                The sdl windowevent maximized sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventRestored">
            <summary>
                The sdl windowevent restored sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventEnter">
            <summary>
                The sdl windowevent enter sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventLeave">
            <summary>
                The sdl windowevent leave sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventFocusGained">
            <summary>
                The sdl windowevent focus gained sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventFocusLost">
            <summary>
                The sdl windowevent focus lost sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventClose">
            <summary>
                The sdl windowevent close sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventTakeFocus">
            <summary>
                The sdl windowevent take focus sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventHitTest">
            <summary>
                The sdl windowevent hit test sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventIccprofChanged">
            <summary>
                The sdl windowevent iccprof changed sdl windoweventid
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowEventId.SdlWindoweventDisplayChanged">
            <summary>
                The sdl windowevent display changed sdl windoweventid
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags">
            <summary>
                The sdl windowflags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowFullscreen">
            <summary>
                The sdl window fullscreen sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowOpengl">
            <summary>
                The sdl window opengl sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowShown">
            <summary>
                The sdl window shown sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowHidden">
            <summary>
                The sdl window hidden sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowBorderless">
            <summary>
                The sdl window borderless sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowResizable">
            <summary>
                The sdl window resizable sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMinimized">
            <summary>
                The sdl window minimized sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMaximized">
            <summary>
                The sdl window maximized sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMouseGrabbed">
            <summary>
                The sdl window mouse grabbed sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowInputFocus">
            <summary>
                The sdl window input focus sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMouseFocus">
            <summary>
                The sdl window mouse focus sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowFullscreenDesktop">
            <summary>
                The sdl window fullscreen desktop sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowForeign">
            <summary>
                The sdl window foreign sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowAllowHighdpi">
            <summary>
                The sdl window allow highdpi sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMouseCapture">
            <summary>
                The sdl window mouse capture sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowAlwaysOnTop">
            <summary>
                The sdl window always on top sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowSkipTaskbar">
            <summary>
                The sdl window skip taskbar sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowUtility">
            <summary>
                The sdl window utility sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowTooltip">
            <summary>
                The sdl window tooltip sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowPopupMenu">
            <summary>
                The sdl window popup menu sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowKeyboardGrabbed">
            <summary>
                The sdl window keyboard grabbed sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowVulkan">
            <summary>
                The sdl window vulkan sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowMetal">
            <summary>
                The sdl window metal sdl windowflags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWindowFlags.SdlWindowInputGrabbed">
            <summary>
                The sdl window input grabbed sdl windowflags
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Enums.SdlWinRtDeviceFamily">
            <summary>
                The sdl winrt devicefamily enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWinRtDeviceFamily.SdlWinrtDevicefamilyUnknown">
            <summary>
                The sdl winrt devicefamily unknown sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWinRtDeviceFamily.SdlWinrtDevicefamilyDesktop">
            <summary>
                The sdl winrt devicefamily desktop sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWinRtDeviceFamily.SdlWinrtDevicefamilyMobile">
            <summary>
                The sdl winrt devicefamily mobile sdl winrt devicefamily
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Enums.SdlWinRtDeviceFamily.SdlWinrtDevicefamilyXbox">
            <summary>
                The sdl winrt devicefamily xbox sdl winrt devicefamily
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Sdl">
            <summary>
                The sdl class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.NativeLibName">
            <summary>
                The native lib name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwSeekSet">
            <summary>
                The rw seek set
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwSeekCur">
            <summary>
                The rw seek cur
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwSeekEnd">
            <summary>
                The rw seek end
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsUnknown">
            <summary>
                The sdl rw ops unknown
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsWinFile">
            <summary>
                The sdl rw ops win file
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsStdFile">
            <summary>
                The sdl rw ops std file
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsJniFile">
            <summary>
                The sdl rw ops jni file
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsMemory">
            <summary>
                The sdl rw ops memory
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RwOpsMemoryRo">
            <summary>
                The sdl rw ops memory ro
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitTimer">
            <summary>
                The sdl init timer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitAudio">
            <summary>
                The sdl init audio
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitVideo">
            <summary>
                The sdl init video
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitJoystick">
            <summary>
                The sdl init joystick
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitHaptic">
            <summary>
                The sdl init haptic
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitGameController">
            <summary>
                The sdl init game controller
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitEvents">
            <summary>
                The sdl init events
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitSensor">
            <summary>
                The sdl init sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitNoParachute">
            <summary>
                The sdl init no parachute
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.InitEverything">
            <summary>
                The sdl init sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintFramebufferAcceleration">
            <summary>
                The sdl hint framebuffer acceleration
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderDriver">
            <summary>
                The sdl hint render driver
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderOpenglShaders">
            <summary>
                The sdl hint render opengl shaders
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderDirect3DThreadsafe">
            <summary>
                The sdl hint render direct3d threadsafe
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderVsync">
            <summary>
                The sdl hint render vsync
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11XVidMode">
            <summary>
                The sdl hint video x11 x vid mode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11XIneRama">
            <summary>
                The sdl hint video x11 x ine rama
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11Xrandr">
            <summary>
                The sdl hint video x11 xrandr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintGrabKeyboard">
            <summary>
                The sdl hint grab keyboard
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoMinimizeOnFocusLoss">
            <summary>
                The sdl hint video minimize on focus loss
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintIdleTimerDisabled">
            <summary>
                The sdl hint idle timer disabled
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintOrientations">
            <summary>
                The sdl hint orientations
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintXInputEnabled">
            <summary>
                The sdl hint x input enabled
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintGameControllerConfig">
            <summary>
                The sdl hint game controller config
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickAllowBackgroundEvents">
            <summary>
                The sdl hint joystick allow background events
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAllowTopmost">
            <summary>
                The sdl hint allow topmost
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintTimerResolution">
            <summary>
                The sdl hint timer resolution
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderScaleQuality">
            <summary>
                The sdl hint render scale quality
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoHighDpiDisabled">
            <summary>
                The sdl hint video high dpi disabled
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintCtrlClickEmulateRightClick">
            <summary>
                The sdl hint ctrl click emulate right click
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoWinD3DCompiler">
            <summary>
                The sdl hint video win d3d compiler
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseRelativeModeWarp">
            <summary>
                The sdl hint mouse relative mode warp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoWindowSharePixelFormat">
            <summary>
                The sdl hint video window share pixel format
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoAllowScreensaver">
            <summary>
                The sdl hint video allow screensaver
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAccelerometerAsJoystick">
            <summary>
                The sdl hint accelerometer as joystick
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoMacFullscreenSpaces">
            <summary>
                The sdl hint video mac fullscreen spaces
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWinrtPrivacyPolicyUrl">
            <summary>
                The sdl hint winrt privacy policy url
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWinrtPrivacyPolicyLabel">
            <summary>
                The sdl hint winrt privacy policy label
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWinrtHandleBackButton">
            <summary>
                The sdl hint winrt handle back button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintNoSignalHandlers">
            <summary>
                The sdl hint no signal handlers
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintImeInternalEditing">
            <summary>
                The sdl hint ime internal editing
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidSeparateMouseAndTouch">
            <summary>
                The sdl hint android separate mouse and touch
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintEmscriptenKeyboardElement">
            <summary>
                The sdl hint emscripten keyboard element
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintThreadStackSize">
            <summary>
                The sdl hint thread stack size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowFrameUsableWhileCursorHidden">
            <summary>
                The sdl hint window frame usable while cursor hidden
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsEnableMessageLoop">
            <summary>
                The sdl hint windows enable message loop
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsNoCloseOnAltF4">
            <summary>
                The sdl hint windows no close on alt f4
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintXInputUseOldJoystickMapping">
            <summary>
                The sdl hint x input use old joystick mapping
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMacBackgroundApp">
            <summary>
                The sdl hint mac background app
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11NetWmPing">
            <summary>
                The sdl hint video x11 net wm ping
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidApkExpansionMainFileVersion">
            <summary>
                The sdl hint android apk expansion main file version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidApkExpansionPatchFileVersion">
            <summary>
                The sdl hint android apk expansion patch file version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseFocusClickThrough">
            <summary>
                The sdl hint mouse focus click through
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintBmpSaveLegacyFormat">
            <summary>
                The sdl hint bmp save legacy format
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsDisableThreadNaming">
            <summary>
                The sdl hint windows disable thread naming
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAppleTvRemoteAllowRotation">
            <summary>
                The sdl hint apple tv remote allow rotation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAudioResamplingMode">
            <summary>
                The sdl hint audio resampling mode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderLogicalSizeMode">
            <summary>
                The sdl hint render logical size mode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseNormalSpeedScale">
            <summary>
                The sdl hint mouse normal speed scale
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseRelativeSpeedScale">
            <summary>
                The sdl hint mouse relative speed scale
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintTouchMouseEvents">
            <summary>
                The sdl hint touch mouse events
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsIntroSourceIcon">
            <summary>
                The sdl hint windows intro source icon
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsIntroSourceIconSmall">
            <summary>
                The sdl hint windows intro source icon small
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintIosHideHomeIndicator">
            <summary>
                The sdl hint ios hide home indicator
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintTvRemoteAsJoystick">
            <summary>
                The sdl hint tv remote as joystick
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.VideoX11NetWmBypassCompositor">
            <summary>
                The sdl video x11 net wm bypass compositor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseDoubleClickTime">
            <summary>
                The sdl hint mouse double click time
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseDoubleClickRadius">
            <summary>
                The sdl hint mouse double click radius
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapi">
            <summary>
                The sdl hint joystick hidapi
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiPs4">
            <summary>
                The sdl hint joystick hidapi ps4
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiPs4Rumble">
            <summary>
                The sdl hint joystick hidapi ps4 rumble
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiSteam">
            <summary>
                The sdl hint joystick hidapi steam
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiSwitch">
            <summary>
                The sdl hint joystick hidapi switch
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiXbox">
            <summary>
                The sdl hint joystick hidapi xbox
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintEnableSteamControllers">
            <summary>
                The sdl hint enable steam controllers
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidTrapBackButton">
            <summary>
                The sdl hint android trap back button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseTouchEvents">
            <summary>
                The sdl hint mouse touch events
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintGameControllerConfigFile">
            <summary>
                The sdl hint game controller config file
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidBlockOnPause">
            <summary>
                The sdl hint android block on pause
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintRenderBatching">
            <summary>
                The sdl hint render batching
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintEventLogging">
            <summary>
                The sdl hint event logging
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWaveRiffChunkSize">
            <summary>
                The sdl hint wave riff chunk size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWaveTruncation">
            <summary>
                The sdl hint wave truncation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWaveFactChunk">
            <summary>
                The sdl hint wave fact chunk
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11WindowVisualId">
            <summary>
                The sdl hint x11 window visual id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintGameControllerUseButtonLabels">
            <summary>
                The sdl hint game controller use button labels
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoExternalContext">
            <summary>
                The sdl hint video external context
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiGameCube">
            <summary>
                The sdl hint joystick hidapi game cube
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintDisplayUsableBounds">
            <summary>
                The sdl hint display usable bounds
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoX11ForceEgl">
            <summary>
                The sdl hint video x11 force egl
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintGameControllerType">
            <summary>
                The sdl hint game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiCorrelateXInput">
            <summary>
                The sdl hint joystick hidapi correlate x input
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickRawInput">
            <summary>
                The sdl hint joystick raw input
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAudioDeviceAppName">
            <summary>
                The sdl hint audio device app name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAudioDeviceStreamName">
            <summary>
                The sdl hint audio device stream name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintPreferredLocales">
            <summary>
                The sdl hint preferred locales
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintThreadPriorityPolicy">
            <summary>
                The sdl hint thread priority policy
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintEmscriptenAsyncify">
            <summary>
                The sdl hint emscripten asyncify
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintLinuxJoystickDeadZones">
            <summary>
                The sdl hint linux joystick dead zones
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAndroidBlockOnPausePauseAudio">
            <summary>
                The sdl hint android block on pause pause audio
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiPs5">
            <summary>
                The sdl hint joystick hidapi ps5
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintThreadForceRealtimeTimeCritical">
            <summary>
                The sdl hint thread force realtime time critical
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.SdlHintJoystickThread">
            <summary>
                The sdl hint joystick thread
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAutoUpdateJoysticks">
            <summary>
                The sdl hint auto update joysticks
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAutoUpdateSensors">
            <summary>
                The sdl hint auto update sensors
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintMouseRelativeScaling">
            <summary>
                The sdl hint mouse relative scaling
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiPs5Rumble">
            <summary>
                The sdl hint joystick hidapi ps5 rumble
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsForceMutexCriticalSections">
            <summary>
                The sdl hint windows force mutex critical sections
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsForceSemaphoreKernel">
            <summary>
                The sdl hint windows force semaphore kernel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiPs5PlayerLed">
            <summary>
                The sdl hint joystick hidapi ps5 player led
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowsUseD3D9Ex">
            <summary>
                The sdl hint windows use d3d9ex
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiJoyCons">
            <summary>
                The sdl hint joystick hidapi joy cons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiStadia">
            <summary>
                The sdl hint joystick hidapi stadia
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiSwitchHomeLed">
            <summary>
                The sdl hint joystick hidapi switch home led
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAllowAltTabWhileGrabbed">
            <summary>
                The sdl hint allow alt tab while grabbed
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintKmSdFmRequireDrmMaster">
            <summary>
                The sdl hint km sd rm require drm master
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAudioDeviceStreamRole">
            <summary>
                The sdl hint audio device stream role
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintX11ForceOverrideRedirect">
            <summary>
                The sdl hint x11 force override redirect
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickHidapiLuna">
            <summary>
                The sdl hint joystick hidapi luna
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickRawInputCorrelateXInput">
            <summary>
                The sdl hint joystick raw input correlate x input
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAudioIncludeMonitors">
            <summary>
                The sdl hint audio include monitors
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoWaylandAllowLibDecor">
            <summary>
                The sdl hint video wayland allow lib decor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintVideoEglAllowTransparency">
            <summary>
                The sdl hint video egl allow transparency
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintAppName">
            <summary>
                The sdl hint app name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintScreensaverInhibitActivityName">
            <summary>
                The sdl hint screensaver inhibit activity name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintImeShowUi">
            <summary>
                The sdl hint ime show ui
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintWindowNoActivationWhenShown">
            <summary>
                The sdl hint window no activation when shown
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintPollSentinel">
            <summary>
                The sdl hint poll sentinel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintJoystickDevice">
            <summary>
                The sdl hint joystick device
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HintLinuxJoystickClassic">
            <summary>
                The sdl hint linux joystick classic
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.MajorVersion">
            <summary>
                The sdl major version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.MinorVersion">
            <summary>
                The sdl minor version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PatchLevel">
            <summary>
                The sdl patch level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.WindowPosUndefinedMask">
            <summary>
                The sdl window pos undefined mask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.WindowPosCenteredMask">
            <summary>
                The sdl window pos centered mask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.WindowPosUndefined">
            <summary>
                The sdl window pos undefined
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.WindowPosCentered">
            <summary>
                The sdl window pos centered
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.SwSurface">
            <summary>
                The sdl sw surface
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PreAlloc">
            <summary>
                The sdl pre alloc
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.RleAccel">
            <summary>
                The sdl rle accel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.DontFree">
            <summary>
                The sdl dont free
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Pressed">
            <summary>
                The sdl pressed
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Released">
            <summary>
                The sdl released
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.TextEditingEventTextSize">
            <summary>
                The sdl text editing event text size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.TextInputEventTextSize">
            <summary>
                The sdl text input event text size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Query">
            <summary>
                The sdl query
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Ignore">
            <summary>
                The sdl ignore
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Disable">
            <summary>
                The sdl disable
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.Enable">
            <summary>
                The sdl enable
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.KScancodeMask">
            <summary>
                The sdl scancode mask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonLeft">
            <summary>
                The sdl button left
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonMiddle">
            <summary>
                The sdl button middle
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonRight">
            <summary>
                The sdl button right
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonX1">
            <summary>
                The sdl button x1
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonX2">
            <summary>
                The sdl button x2
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.TouchMouseId">
            <summary>
                The max value
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatCentered">
            <summary>
                The sdl hat centered
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatUp">
            <summary>
                The sdl hat up
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatRight">
            <summary>
                The sdl hat right
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatDown">
            <summary>
                The sdl hat down
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatLeft">
            <summary>
                The sdl hat left
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatRightUp">
            <summary>
                The sdl hat up
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatRightDown">
            <summary>
                The sdl hat down
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatLeftUp">
            <summary>
                The sdl hat up
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HatLeftDown">
            <summary>
                The sdl hat down
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.IphoneMaxGForce">
            <summary>
                The sdl iphone max g force
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticConstant">
            <summary>
                The sdl haptic constant
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSine">
            <summary>
                The sdl haptic sine
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticLeftRight">
            <summary>
                The sdl haptic left right
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticTriangle">
            <summary>
                The sdl haptic triangle
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSawToothUp">
            <summary>
                The sdl haptic saw tooth up
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSawToothDown">
            <summary>
                The sdl haptic saw tooth down
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSpring">
            <summary>
                The sdl haptic spring
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticDamper">
            <summary>
                The sdl haptic damper
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticInertia">
            <summary>
                The sdl haptic inertia
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticFriction">
            <summary>
                The sdl haptic friction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticCustom">
            <summary>
                The sdl haptic custom
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticGain">
            <summary>
                The sdl haptic gain
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticAutoCenter">
            <summary>
                The sdl haptic auto center
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticStatus">
            <summary>
                The sdl haptic status
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticPauseVar">
            <summary>
                The sdl haptic pause
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticPolar">
            <summary>
                The sdl haptic polar
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticCartesian">
            <summary>
                The sdl haptic cartesian
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSpherical">
            <summary>
                The sdl haptic spherical
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticSteeringAxis">
            <summary>
                The sdl haptic steering axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.HapticInfinity">
            <summary>
                The sdl haptic infinity
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.StandardGravity">
            <summary>
                The sdl standard gravity
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioMaskBitSize">
            <summary>
                The sdl audio mask bit size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioMaskDatatype">
            <summary>
                The sdl audio mask datatype
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioMaskEndian">
            <summary>
                The sdl audio mask endian
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioMaskSigned">
            <summary>
                The sdl audio mask signed
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioU8">
            <summary>
                The audio u8
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS8">
            <summary>
                The audio s8
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioU16Lsb">
            <summary>
                The audio u16lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS16Lsb">
            <summary>
                The audio s16lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioU16Msb">
            <summary>
                The audio u16msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS16Msb">
            <summary>
                The audio s16msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioU16">
            <summary>
                The audio u16lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS16">
            <summary>
                The audio s16lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS32Lsb">
            <summary>
                The audio s32lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS32Msb">
            <summary>
                The audio s32msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS32">
            <summary>
                The audio s32lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioF32Lsb">
            <summary>
                The audio f32lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioF32Msb">
            <summary>
                The audio f32msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioF32">
            <summary>
                The audio f32lsb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioAllowFrequencyChange">
            <summary>
                The sdl audio allow frequency change
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioAllowFormatChange">
            <summary>
                The sdl audio allow format change
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioAllowChannelsChange">
            <summary>
                The sdl audio allow channels change
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioAllowSamplesChange">
            <summary>
                The sdl audio allow samples change
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioAllowAnyChange">
            <summary>
                The sdl audio allow samples change
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.MixMaxVolume">
            <summary>
                The sdl mix max volume
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AndroidExternalStorageRead">
            <summary>
                The sdl android external storage read
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AndroidExternalStorageWrite">
            <summary>
                The sdl android external storage write
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.CompiledVersion">
            <summary>
                The sdl patch level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatUnknown">
            <summary>
                The sdl pixel format unknown
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIndex1Lsb">
            <summary>
                The sdl bit map order 4321
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIndex1Msb">
            <summary>
                The sdl bit map order 1234
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIndex4Lsb">
            <summary>
                The sdl bit map order 4321
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIndex4Msb">
            <summary>
                The sdl bit map order 1234
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIndex8">
            <summary>
                The sdl pixel type index8
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb332">
            <summary>
                The sdl packed layout 332
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXRgb444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb444">
            <summary>
                The sdl pixel format x rgb 444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXBgr444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBgr444">
            <summary>
                The sdl pixel format x bgr 444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXRgb1555">
            <summary>
                The sdl packed layout 1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb555">
            <summary>
                The sdl pixel format xrgb1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXBgr1555">
            <summary>
                The sdl packed layout 1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBgr555">
            <summary>
                The sdl pixel format xbgr1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatArgb4444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgba4444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatABgr4444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBGra4444">
            <summary>
                The sdl packed layout 4444
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatArgb1555">
            <summary>
                The sdl packed layout 1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgba5551">
            <summary>
                The sdl packed layout 5551
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatABgr1555">
            <summary>
                The sdl packed layout 1555
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBGra5551">
            <summary>
                The sdl packed layout 5551
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb565">
            <summary>
                The sdl packed layout 565
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBgr565">
            <summary>
                The sdl packed layout 565
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb24">
            <summary>
                The sdl array order rgb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBgr24">
            <summary>
                The sdl array order bgr
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXRgb888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgb888">
            <summary>
                The sdl pixel format x rgb 888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgbX8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatXBgr888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBgr888">
            <summary>
                The sdl pixel format x bgr 888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatBGrx8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatArgb8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatRgba8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatABgr8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatB8888">
            <summary>
                The sdl packed layout 8888
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatArgb2101010">
            <summary>
                The sdl packed layout 2101010
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatYv12">
            <summary>
                The sdl define pixel four cc
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatIy">
            <summary>
                The sdl define pixel four cc
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatYuy2">
            <summary>
                The sdl define pixel four
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatUy">
            <summary>
                The sdl define pixel four
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.PixelFormatYv">
            <summary>
                The sdl define pixel four
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonLMask">
            <summary>
                The sdl button left
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonMMask">
            <summary>
                The sdl button middle
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonRMask">
            <summary>
                The sdl button right
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonX1Mask">
            <summary>
                The sdl button x1
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.ButtonX2Mask">
            <summary>
                The sdl button x2
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioU16Sys">
            <summary>
                The audio u16msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS16Sys">
            <summary>
                The audio s16msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioS32Sys">
            <summary>
                The audio s32msb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Sdl.AudioF32Sys">
            <summary>
                The audio f32msb
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.SDL.Sdl" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Fourcc(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the fourcc using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <param name="d">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_malloc(System.Int32)">
            <summary>
                Sdl the malloc using the specified size
            </summary>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Malloc(System.Int32)">
            <summary>
                Malloc the size
            </summary>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_free(System.IntPtr)">
            <summary>
                Sdl the free using the specified mem block
            </summary>
            <param name="memBlock">The mem block</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Free(System.IntPtr)">
            <summary>
                Frees the mem block
            </summary>
            <param name="memBlock">The mem block</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_memCpy(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the mem cpy using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MemCpy(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Mem the cpy using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RWFromFile(System.Byte[],System.Byte[])">
            <summary>
                Internals the sdl rw from file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="mode">The mode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwFromFile(System.String,System.String)">
            <summary>
                Sdl the rw from file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="mode">The mode</param>
            <returns>The rw ops</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AllocRW">
            <summary>
                Sdl the alloc rw
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AllocRw">
            <summary>
                Internal the sdl alloc rw
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeRW(System.IntPtr)">
            <summary>
                Sdl the free rw using the specified area
            </summary>
            <param name="area">The area</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreeRw(System.IntPtr)">
            <summary>
                Free the rw using the specified area
            </summary>
            <param name="area">The area</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RWFromFP(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the rw from fp using the specified fp
            </summary>
            <param name="fp">The fp</param>
            <param name="autoClose">The auto close</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwFromFp(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Rws the from fp using the specified fp
            </summary>
            <param name="fp">The fp</param>
            <param name="autoClose">The auto close</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RWFromMem(System.IntPtr,System.Int32)">
            <summary>
                Sdl the rw from mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwFromMem(System.IntPtr,System.Int32)">
            <summary>
                Rws the from mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RWFromConstMem(System.IntPtr,System.Int32)">
            <summary>
                Sdl the rw from const mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwFromConstMem(System.IntPtr,System.Int32)">
            <summary>
                Rws the from const mem using the specified mem
            </summary>
            <param name="mem">The mem</param>
            <param name="size">The size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwSize(System.IntPtr)">
            <summary>
                Sdl the r w size using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwSize(System.IntPtr)">
            <summary>
                Rws the size using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwSeek(System.IntPtr,System.Int64,System.Int32)">
            <summary>
                Sdl the r w seek using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="offset">The offset</param>
            <param name="whence">The whence</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwSeek(System.IntPtr,System.Int64,System.Int32)">
            <summary>
                Rws the seek using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="offset">The offset</param>
            <param name="whence">The whence</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwTell(System.IntPtr)">
            <summary>
                Sdl the r w tell using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwTell(System.IntPtr)">
            <summary>
                Rws the tell using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwRead(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the r w read using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxNum">The max num</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwRead(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Rws the read using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxNum">The max num</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwWrite(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the r w write using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxNum">The max num</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwWrite(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Rws the write using the specified context
            </summary>
            <param name="context">The context</param>
            <param name="ptr">The ptr</param>
            <param name="size">The size</param>
            <param name="maxNum">The max num</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadU8(System.IntPtr)">
            <summary>
                Sdl the read u 8 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadU8(System.IntPtr)">
            <summary>
                Reads the u 8 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadLE16(System.IntPtr)">
            <summary>
                Sdl the read le 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 16</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadLe16(System.IntPtr)">
            <summary>
                Reads the le 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadBE16(System.IntPtr)">
            <summary>
                Sdl the read be 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 16</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadBe16(System.IntPtr)">
            <summary>
                Reads the be 16 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadLE32(System.IntPtr)">
            <summary>
                Sdl the read le 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadLe32(System.IntPtr)">
            <summary>
                Reads the le 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadBE32(System.IntPtr)">
            <summary>
                Sdl the read be 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadBe32(System.IntPtr)">
            <summary>
                Reads the be 32 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadLE64(System.IntPtr)">
            <summary>
                Sdl the read le 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 64</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadLe64(System.IntPtr)">
            <summary>
                Reads the le 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The ulong</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ReadBE64(System.IntPtr)">
            <summary>
                Sdl the read be 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int 64</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ReadBe64(System.IntPtr)">
            <summary>
                Reads the be 64 using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The ulong</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteU8(System.IntPtr,System.Byte)">
            <summary>
                Sdl the write u 8 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteU8(System.IntPtr,System.Byte)">
            <summary>
                Writes the u 8 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteLE16(System.IntPtr,System.UInt16)">
            <summary>
                Sdl the write le 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteLe16(System.IntPtr,System.UInt16)">
            <summary>
                Writes the le 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteBE16(System.IntPtr,System.UInt16)">
            <summary>
                Sdl the write be 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteBe16(System.IntPtr,System.UInt16)">
            <summary>
                Writes the be 16 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteLE32(System.IntPtr,System.UInt32)">
            <summary>
                Sdl the write le 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteLe32(System.IntPtr,System.UInt32)">
            <summary>
                Writes the le 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteBE32(System.IntPtr,System.UInt32)">
            <summary>
                Sdl the write be 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteBe32(System.IntPtr,System.UInt32)">
            <summary>
                Writes the be 32 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteLE64(System.IntPtr,System.UInt64)">
            <summary>
                Sdl the write le 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteLe64(System.IntPtr,System.UInt64)">
            <summary>
                Writes the le 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WriteBE64(System.IntPtr,System.UInt64)">
            <summary>
                Sdl the write be 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WriteBe64(System.IntPtr,System.UInt64)">
            <summary>
                Writes the be 64 using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="value">The value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RwClose(System.IntPtr)">
            <summary>
                Sdl the r w close using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RwClose(System.IntPtr)">
            <summary>
                Rws the close using the specified context
            </summary>
            <param name="context">The context</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LoadFile(System.Byte[],System.IntPtr@)">
            <summary>
                Internals the sdl load file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="dataSize">The data size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LoadFile(System.String,System.IntPtr@)">
            <summary>
                Sdl the load file using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="dataSize">The data size</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetMainReady">
            <summary>
                Sdl the set main ready
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetMainReady">
            <summary>
                Sets the main ready
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WinRTRunApp(Alis.Core.Graphic.SDL.Delegates.SdlMainFunc,System.IntPtr)">
            <summary>
                Sdl the win rt run app using the specified main function
            </summary>
            <param name="mainFunction">The main function</param>
            <param name="reserved">The reserved</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WinRtRunApp(Alis.Core.Graphic.SDL.Delegates.SdlMainFunc,System.IntPtr)">
            <summary>
                Wins the rt run app using the specified main function
            </summary>
            <param name="mainFunction">The main function</param>
            <param name="reserved">The reserved</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UIKitRunApp(System.Int32,System.IntPtr,Alis.Core.Graphic.SDL.Delegates.SdlMainFunc)">
            <summary>
                Sdl the ui kit run app using the specified argc
            </summary>
            <param name="argc">The argc</param>
            <param name="argv">The argv</param>
            <param name="mainFunction">The main function</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UiKitRunApp(System.Int32,System.IntPtr,Alis.Core.Graphic.SDL.Delegates.SdlMainFunc)">
            <summary>
                Uis the kit run app using the specified argc
            </summary>
            <param name="argc">The argc</param>
            <param name="argv">The argv</param>
            <param name="mainFunction">The main function</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Init(System.UInt32)">
            <summary>
                Sdl the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Init(System.UInt32)">
            <summary>
                Sdl the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_InitSubSystem(System.UInt32)">
            <summary>
                Sdl the init sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.InitSubSystem(System.UInt32)">
            <summary>
                Inits the sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Quit">
            <summary>
                Sdl the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Quit">
            <summary>
                Sdl the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_QuitSubSystem(System.UInt32)">
            <summary>
                Sdl the quit sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.QuitSubSystem(System.UInt32)">
            <summary>
                Quits the sub system using the specified flags
            </summary>
            <param name="flags">The flags</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WasInit(System.UInt32)">
            <summary>
                Sdl the was init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_WasInit(System.UInt32)">
            <summary>
                Sdl the was init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPlatform">
            <summary>
                Internals the sdl get platform
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetPlatform">
            <summary>
                Sdl the get platform
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ClearHints">
            <summary>
                Sdl the clear hints
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ClearHints">
            <summary>
                Clears the hints
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetHint(System.Byte[])">
            <summary>
                Internals the sdl get hint using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetHint(System.String)">
            <summary>
                Sdl the get hint using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetHint(System.Byte[],System.Byte[])">
            <summary>
                Internals the sdl set hint using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetHint(System.String,System.String)">
            <summary>
                Sdl the set hint using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetHintWithPriority(System.Byte[],System.Byte[],Alis.Core.Graphic.SDL.Enums.SdlHintPriority)">
            <summary>
                Internals the sdl set hint with priority using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="priority">The priority</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetHintWithPriority(System.String,System.String,Alis.Core.Graphic.SDL.Enums.SdlHintPriority)">
            <summary>
                Sdl the set hint with priority using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="value">The value</param>
            <param name="priority">The priority</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetHintBoolean(System.Byte[],Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Internals the sdl get hint boolean using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="defaultValue">The default value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetHintBoolean(System.String,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the get hint boolean using the specified name
            </summary>
            <param name="name">The name</param>
            <param name="defaultValue">The default value</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ClearError">
            <summary>
                Sdl the clear error
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ClearError">
            <summary>
                Sdl the clear error
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetError">
            <summary>
                Internals the sdl get error
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetError">
            <summary>
                Sdl the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetError(System.Byte[])">
            <summary>
                Internals the sdl set error using the specified fmt and arg list
            </summary>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetError(System.String)">
            <summary>
                Sdl the set error using the specified fmt and arg list
            </summary>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetErrorMsg(System.IntPtr,System.Int32)">
            <summary>
                Sdl the get error msg using the specified err str
            </summary>
            <param name="errStr">The err str</param>
            <param name="maxlength">The maxlength</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetErrorMsg(System.IntPtr,System.Int32)">
            <summary>
                Sdl the get error msg using the specified err str
            </summary>
            <param name="errStr">The err str</param>
            <param name="maxlength">The maxlength</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Log(System.Byte[])">
            <summary>
                Internals the sdl log using the specified fmt and arg list
            </summary>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Log(System.String)">
            <summary>
                Sdl the log using the specified fmt and arg list
            </summary>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogVerbose(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log verbose using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogVerbose(System.Int32,System.String)">
            <summary>
                Sdl the log verbose using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogDebug(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log debug using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogDebug(System.Int32,System.String)">
            <summary>
                Sdl the log debug using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogInfo(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log info using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogInfo(System.Int32,System.String)">
            <summary>
                Sdl the log info using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogWarn(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log warn using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogWarning(System.Int32,System.String)">
            <summary>
                Sdl the log warn using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogError(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log error using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogError(System.Int32,System.String)">
            <summary>
                Sdl the log error using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogCritical(System.Int32,System.Byte[])">
            <summary>
                Internals the sdl log critical using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogCritical(System.Int32,System.String)">
            <summary>
                Sdl the log critical using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogMessage(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority,System.Byte[])">
            <summary>
                Internals the sdl log message using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogMessage(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority,System.String)">
            <summary>
                Sdl the log message using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogMessageV(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority,System.Byte[])">
            <summary>
                Internals the sdl log message v using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogMessageV(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority,System.String)">
            <summary>
                Sdl the log message v using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogGetPriority(System.Int32)">
            <summary>
                Sdl the log get priority using the specified category
            </summary>
            <param name="category">The category</param>
            <returns>The sdl log priority</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogGetPriority(System.Int32)">
            <summary>
                Sdl the log get priority using the specified category
            </summary>
            <param name="category">The category</param>
            <returns>The sdl log priority</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogSetPriority(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority)">
            <summary>
                Sdl the log set priority using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogSetPriority(System.Int32,Alis.Core.Graphic.SDL.Enums.SdlLogPriority)">
            <summary>
                Sdl the log set priority using the specified category
            </summary>
            <param name="category">The category</param>
            <param name="priority">The priority</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogSetAllPriority(Alis.Core.Graphic.SDL.Enums.SdlLogPriority)">
            <summary>
                Sdl the log set all priority using the specified priority
            </summary>
            <param name="priority">The priority</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogSetAllPriority(Alis.Core.Graphic.SDL.Enums.SdlLogPriority)">
            <summary>
                Sdl the log set all priority using the specified priority
            </summary>
            <param name="priority">The priority</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogResetPriorities">
            <summary>
                Sdl the log reset priorities
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogResetPriorities">
            <summary>
                Sdl the log reset priorities
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogGetOutputFunction(System.IntPtr@,System.IntPtr@)">
            <summary>
                Sdl the log get output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_LogGetOutputFunction(Alis.Core.Graphic.SDL.Delegates.SdlLogOutputFunction@,System.IntPtr@)">
            <summary>
                Sdl the log get output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LogSetOutputFunction(Alis.Core.Graphic.SDL.Delegates.SdlLogOutputFunction,System.IntPtr)">
            <summary>
                Sdl the log set output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LogSetOutputFunction(Alis.Core.Graphic.SDL.Delegates.SdlLogOutputFunction,System.IntPtr)">
            <summary>
                Logs the set output function using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ShowMessageBox(Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData@,System.Int32@)">
            <summary>
                Internals the sdl show message box using the specified message box data
            </summary>
            <param name="messageBoxData">The message box data</param>
            <param name="buttonId">The button id</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_AllocUTF8(System.String)">
            <summary>
                Internals the alloc utf 8 using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The mem</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ShowMessageBox(Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData@,System.Int32@)">
            <summary>
                Sdl the show message box using the specified message box data
            </summary>
            <param name="messageBoxData">The message box data</param>
            <param name="buttonId">The button id</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ShowSimpleMessageBox(Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags,System.Byte[],System.Byte[],System.IntPtr)">
            <summary>
                Internals the sdl show simple message box using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="title">The title</param>
            <param name="message">The message</param>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ShowSimpleMessageBox(Alis.Core.Graphic.SDL.Enums.SdlMessageBoxFlags,System.String,System.String,System.IntPtr)">
            <summary>
                Sdl the show simple message box using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="title">The title</param>
            <param name="message">The message</param>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Version">
            <summary>
                Sdl the version
            </summary>
            <returns>The sdl version</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VersionNum(System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the version num using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VersionAtLeast(System.Int32,System.Int32,System.Int32)">
            <summary>
                Describes whether sdl version at least
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="z">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetVersion(Alis.Core.Graphic.SDL.Structs.SdlVersion@)">
            <summary>
                Sdl the get version using the specified ver
            </summary>
            <param name="ver">The ver</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetVersion(Alis.Core.Graphic.SDL.Structs.SdlVersion@)">
            <summary>
                Sdl the get version using the specified ver
            </summary>
            <param name="ver">The ver</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRevision">
            <summary>
                Internals the sdl get revision
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRevision">
            <summary>
                Sdl the get revision
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRevisionNumber">
            <summary>
                Sdl the get revision number
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRevisionNumber">
            <summary>
                Sdl the get revision number
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WindowPosUndefinedDisplay(System.Int32)">
            <summary>
                Sdl the window pos undefined display using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WindowPosIsUndefined(System.Int32)">
            <summary>
                Describes whether sdl window pos is undefined
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WindowPosCenteredDisplay(System.Int32)">
            <summary>
                Sdl the window pos centered display using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WindowPosIsCentered(System.Int32)">
            <summary>
                Describes whether sdl window pos is centered
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateWindow(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlWindowFlags)">
            <summary>
                Internals the sdl create window using the specified title
            </summary>
            <param name="title">The title</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateWindow(System.String,System.Int32,System.Int32,System.Int32,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlWindowFlags)">
            <summary>
                Sdl the create window using the specified title
            </summary>
            <param name="title">The title</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateWindowAndRenderer(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlWindowFlags,System.IntPtr@,System.IntPtr@)">
            <summary>
                Sdl the create window and renderer using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="windowFlags">The window flags</param>
            <param name="window">The window</param>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateWindowAndRenderer(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlWindowFlags,System.IntPtr@,System.IntPtr@)">
            <summary>
                Sdl the create window and renderer using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="windowFlags">The window flags</param>
            <param name="window">The window</param>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateWindowFrom(System.IntPtr)">
            <summary>
                Sdl the create window from using the specified data
            </summary>
            <param name="data">The data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateWindowFrom(System.IntPtr)">
            <summary>
                Sdl the create window from using the specified data
            </summary>
            <param name="data">The data</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DestroyWindow(System.IntPtr)">
            <summary>
                Sdl the destroy window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DestroyWindow(System.IntPtr)">
            <summary>
                Sdl the destroy window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DisableScreenSaver">
            <summary>
                Sdl the disable screen saver
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DisableScreenSaver">
            <summary>
                Sdl the disable screen saver
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_EnableScreenSaver">
            <summary>
                Sdl the enable screen saver
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.EnableScreenSaver">
            <summary>
                Internals the sdl enable screen saver
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetClosestDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get closest display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <param name="closest">The closest</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetClosestDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get closest display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <param name="closest">The closest</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCurrentDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get current display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetCurrentDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get current display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCurrentVideoDriver">
            <summary>
                Internals the sdl get current video driver
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_GetCurrentVideoDriver">
            <summary>
                Sdl the get current video driver
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDesktopDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get desktop display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDesktopDisplayMode(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Gets the desktop display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayName(System.Int32)">
            <summary>
                Internals the sdl get display name using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayName(System.Int32)">
            <summary>
                Sdl the get display name using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayBounds(System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the get display bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayBounds(System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Gets the display bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayDPI(System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
                Sdl the get display dpi using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="dDpi">The d dpi</param>
            <param name="hDpi">The h dpi</param>
            <param name="vDpi">The v dpi</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayDpi(System.Int32,System.Single@,System.Single@,System.Single@)">
            <summary>
                Gets the display dpi using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="dDpi">The dpi</param>
            <param name="hDpi">The dpi</param>
            <param name="vDpi">The dpi</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayOrientation(System.Int32)">
            <summary>
                Sdl the get display orientation using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The sdl display orientation</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayOrientation(System.Int32)">
            <summary>
                Gets the display orientation using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The sdl display orientation</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayMode(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="modeIndex">The mode index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayMode(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Gets the display mode using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="modeIndex">The mode index</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetDisplayUsableBounds(System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the get display usable bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetDisplayUsableBounds(System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Gets the display usable bounds using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumDisplayModes(System.Int32)">
            <summary>
                Sdl the get num display modes using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumDisplayModes(System.Int32)">
            <summary>
                Gets the num display modes using the specified display index
            </summary>
            <param name="displayIndex">The display index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumVideoDisplays">
            <summary>
                Sdl the get num video displays
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumVideoDisplays">
            <summary>
                Gets the num video displays
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumVideoDrivers">
            <summary>
                Sdl the get num video drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumVideoDrivers">
            <summary>
                Gets the num video drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetVideoDriver(System.Int32)">
            <summary>
                Internals the sdl get video driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetVideoDriver(System.Int32)">
            <summary>
                Sdl the get video driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowBrightness(System.IntPtr)">
            <summary>
                Sdl the get window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowBrightness(System.IntPtr)">
            <summary>
                Gets the window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowOpacity(System.IntPtr,System.Single)">
            <summary>
                Sdl the set window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="opacity">The opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowOpacity(System.IntPtr,System.Single)">
            <summary>
                Sets the window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="opacity">The opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowOpacity(System.IntPtr,System.Single@)">
            <summary>
                Sdl the get window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="outOpacity">The out opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowOpacity(System.IntPtr,System.Single@)">
            <summary>
                Gets the window opacity using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="outOpacity">The out opacity</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowModalFor(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set window modal for using the specified modal window
            </summary>
            <param name="modalWindow">The modal window</param>
            <param name="parentWindow">The parent window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowModalFor(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the window modal for using the specified modal window
            </summary>
            <param name="modalWindow">The modal window</param>
            <param name="parentWindow">The parent window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowInputFocus(System.IntPtr)">
            <summary>
                Sdl the set window input focus using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowInputFocus(System.IntPtr)">
            <summary>
                Sets the window input focus using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowData(System.IntPtr,System.Byte[])">
            <summary>
                Internals the sdl get window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowData(System.IntPtr,System.String)">
            <summary>
                Sdl the get window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowDisplayIndex(System.IntPtr)">
            <summary>
                Sdl the get window display index using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowDisplayIndex(System.IntPtr)">
            <summary>
                Gets the window display index using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowDisplayMode(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the get window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowDisplayMode(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Gets the window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowICCProfile(System.IntPtr,System.IntPtr@)">
            <summary>
                Sdl the get window icc profile using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowIccProfile(System.IntPtr,System.IntPtr@)">
            <summary>
                Gets the window icc profile using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowFlags(System.IntPtr)">
            <summary>
                Sdl the get window flags using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowFlags(System.IntPtr)">
            <summary>
                Gets the window flags using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowFromID(System.UInt32)">
            <summary>
                Sdl the get window from id using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowFromId(System.UInt32)">
            <summary>
                Gets the window from id using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
                Sdl the get window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
                Gets the window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowGrab(System.IntPtr)">
            <summary>
                Sdl the get window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowGrab(System.IntPtr)">
            <summary>
                Gets the window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowKeyboardGrab(System.IntPtr)">
            <summary>
                Sdl the get window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowKeyboardGrab(System.IntPtr)">
            <summary>
                Gets the window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowMouseGrab(System.IntPtr)">
            <summary>
                Sdl the get window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowMouseGrab(System.IntPtr)">
            <summary>
                Gets the window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowID(System.IntPtr)">
            <summary>
                Sdl the get window id using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowId(System.IntPtr)">
            <summary>
                Gets the window id using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowPixelFormat(System.IntPtr)">
            <summary>
                Sdl the get window pixel format using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowPixelFormat(System.IntPtr)">
            <summary>
                Gets the window pixel format using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="maxW">The max</param>
            <param name="maxH">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowMaximumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gets the window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="maxW">The max</param>
            <param name="maxH">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="minW">The min</param>
            <param name="minH">The min</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowMinimumSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gets the window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="minW">The min</param>
            <param name="minH">The min</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowPosition(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gets the window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gets the window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowSurface(System.IntPtr)">
            <summary>
                Sdl the get window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowSurface(System.IntPtr)">
            <summary>
                Gets the window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowTitle(System.IntPtr)">
            <summary>
                Internals the sdl get window title using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowTitle(System.IntPtr)">
            <summary>
                Sdl the get window title using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_BindTexture(System.IntPtr,System.Single@,System.Single@)">
            <summary>
                Sdl the gl bind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="texW">The tex w</param>
            <param name="texH">The tex h</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlBindTexture(System.IntPtr,System.Single@,System.Single@)">
            <summary>
                Gls the bind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="texW">The tex</param>
            <param name="texH">The tex</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_CreateContext(System.IntPtr)">
            <summary>
                Sdl the gl create context using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlCreateContext(System.IntPtr)">
            <summary>
                Gls the create context using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_DeleteContext(System.IntPtr)">
            <summary>
                Sdl the gl delete context using the specified context
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlDeleteContext(System.IntPtr)">
            <summary>
                Gls the delete context using the specified context
            </summary>
            <param name="context">The context</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_LoadLibrary(System.Byte[])">
            <summary>
                Internals the sdl gl load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlLoadLibrary(System.String)">
            <summary>
                Sdl the gl load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetProcAddress(System.Byte[])">
            <summary>
                Sdl the gl get proc address using the specified proc
            </summary>
            <param name="proc">The proc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetProcAddress(System.String)">
            <summary>
                Sdl the gl get proc address using the specified proc
            </summary>
            <param name="proc">The proc</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_UnloadLibrary">
            <summary>
                Sdl the gl unload library
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlUnloadLibrary">
            <summary>
                Gls the unload library
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_ExtensionSupported(System.Byte[])">
            <summary>
                Internals the sdl gl extension supported using the specified extension
            </summary>
            <param name="extension">The extension</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlExtensionSupported(System.String)">
            <summary>
                Sdl the gl extension supported using the specified extension
            </summary>
            <param name="extension">The extension</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_ResetAttributes">
            <summary>
                Sdl the gl reset attributes
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlResetAttributes">
            <summary>
                Gls the reset attributes
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetAttribute(Alis.Core.Graphic.SDL.Enums.SdlGlAttr,System.Int32@)">
            <summary>
                Sdl the gl get attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetAttribute(Alis.Core.Graphic.SDL.Enums.SdlGlAttr,System.Int32@)">
            <summary>
                Gls the get attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetSwapInterval">
            <summary>
                Sdl the gl get swap interval
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetSwapInterval">
            <summary>
                Gls the get swap interval
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_MakeCurrent(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the gl make current using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="context">The context</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlMakeCurrent(System.IntPtr,System.IntPtr)">
            <summary>
                Gls the make current using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="context">The context</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetCurrentWindow">
            <summary>
                Sdl the gl get current window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetCurrentWindow">
            <summary>
                Gls the get current window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetCurrentContext">
            <summary>
                Sdl the gl get current context
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetCurrentContext">
            <summary>
                Gls the get current context
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the gl get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlGetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gls the get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_SetAttribute(Alis.Core.Graphic.SDL.Enums.SdlGlAttr,System.Int32)">
            <summary>
                Sdl the gl set attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlSetAttributeByInt(Alis.Core.Graphic.SDL.Enums.SdlGlAttr,System.Int32)">
            <summary>
                Gls the set attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlSetAttributeByProfile(Alis.Core.Graphic.SDL.Enums.SdlGlAttr,Alis.Core.Graphic.SDL.Enums.SdlGlProfile)">
            <summary>
                Sdl the gl set attribute using the specified attr
            </summary>
            <param name="attr">The attr</param>
            <param name="profile">The profile</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_SetSwapInterval(System.Int32)">
            <summary>
                Sdl the gl set swap interval using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlSetSwapInterval(System.Int32)">
            <summary>
                Gls the set swap interval using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_SwapWindow(System.IntPtr)">
            <summary>
                Sdl the gl swap window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlSwapWindow(System.IntPtr)">
            <summary>
                Gls the swap window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GL_UnbindTexture(System.IntPtr)">
            <summary>
                Sdl the gl unbind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GlUnbindTexture(System.IntPtr)">
            <summary>
                Gls the unbind texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HideWindow(System.IntPtr)">
            <summary>
                Sdl the hide window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HideWindow(System.IntPtr)">
            <summary>
                Hides the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsScreenSaverEnabled">
            <summary>
                Sdl the is screen saver enabled
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IsScreenSaverEnabled">
            <summary>
                Is the screen saver enabled
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MaximizeWindow(System.IntPtr)">
            <summary>
                Sdl the maximize window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MaximizeWindow(System.IntPtr)">
            <summary>
                Maximizes the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MinimizeWindow(System.IntPtr)">
            <summary>
                Sdl the minimize window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MinimizeWindow(System.IntPtr)">
            <summary>
                Minimizes the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RaiseWindow(System.IntPtr)">
            <summary>
                Sdl the raise window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RaiseWindow(System.IntPtr)">
            <summary>
                Raises the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RestoreWindow(System.IntPtr)">
            <summary>
                Sdl the restore window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RestoreWindow(System.IntPtr)">
            <summary>
                Restores the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowBrightness(System.IntPtr,System.Single)">
            <summary>
                Sdl the set window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="brightness">The brightness</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowBrightness(System.IntPtr,System.Single)">
            <summary>
                Sets the window brightness using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="brightness">The brightness</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowData(System.IntPtr,System.Byte[],System.IntPtr)">
            <summary>
                Internals the sdl set window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <param name="userdata">The userdata</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowData(System.IntPtr,System.String,System.IntPtr)">
            <summary>
                Sdl the set window data using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="name">The name</param>
            <param name="userdata">The userdata</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowDisplayMode(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sdl the set window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowDisplayMode(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlDisplayMode@)">
            <summary>
                Sets the window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowDisplayMode(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowDisplayMode(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the window display mode using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="mode">The mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowFullscreen(System.IntPtr,System.UInt32)">
            <summary>
                Sdl the set window fullscreen using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowFullscreen(System.IntPtr,System.UInt32)">
            <summary>
                Sets the window fullscreen using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
                Sdl the set window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowGammaRamp(System.IntPtr,System.UInt16[],System.UInt16[],System.UInt16[])">
            <summary>
                Sets the window gamma ramp using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowKeyboardGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowKeyboardGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window keyboard grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowMouseGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowMouseGrab(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window mouse grab using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="grabbed">The grabbed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowIcon(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set window icon using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="icon">The icon</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowIcon(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the window icon using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="icon">The icon</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the set window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="maxW">The max</param>
            <param name="maxH">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowMaximumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sets the window maximum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="maxW">The max</param>
            <param name="maxH">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the set window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="minW">The min</param>
            <param name="minH">The min</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowMinimumSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sets the window minimum size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="minW">The min</param>
            <param name="minH">The min</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_SetWindowPosition(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the set window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowPosition(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sets the window position using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the set window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sets the window size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowBordered(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window bordered using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="bordered">The bordered</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowBordered(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window bordered using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="bordered">The bordered</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get window borders size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="top">The top</param>
            <param name="left">The left</param>
            <param name="bottom">The bottom</param>
            <param name="right">The right</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowBordersSize(System.IntPtr,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Gets the window borders size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="top">The top</param>
            <param name="left">The left</param>
            <param name="bottom">The bottom</param>
            <param name="right">The right</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowResizable(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window resizable using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="resizable">The resizable</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowResizable(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window resizable using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="resizable">The resizable</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowAlwaysOnTop(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set window always on top using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="onTop">The on top</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowAlwaysOnTop(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the window always on top using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="onTop">The on top</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowTitle(System.IntPtr,System.Byte[])">
            <summary>
                Internals the sdl set window title using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowTitle(System.IntPtr,System.String)">
            <summary>
                Sdl the set window title using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="title">The title</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ShowWindow(System.IntPtr)">
            <summary>
                Sdl the show window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ShowWindow(System.IntPtr)">
            <summary>
                Shows the window using the specified window
            </summary>
            <param name="window">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateWindowSurface(System.IntPtr)">
            <summary>
                Sdl the update window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateWindowSurface(System.IntPtr)">
            <summary>
                Updates the window surface using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateWindowSurfaceRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Sdl the update window surface rects using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rects">The rects</param>
            <param name="numRects">The num rects</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateWindowSurfaceRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Updates the window surface rects using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rects">The rects</param>
            <param name="numRects">The num rects</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_VideoInit(System.Byte[])">
            <summary>
                Internals the sdl video init using the specified driver name
            </summary>
            <param name="driverName">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VideoInit(System.String)">
            <summary>
                Sdl the video init using the specified driver name
            </summary>
            <param name="driverName">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_VideoQuit">
            <summary>
                Sdl the video quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VideoQuit">
            <summary>
                Video the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowHitTest(System.IntPtr,Alis.Core.Graphic.SDL.Delegates.SdlHitTest,System.IntPtr)">
            <summary>
                Sdl the set window hit test using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="callback">The callback</param>
            <param name="callbackData">The callback data</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowHitTest(System.IntPtr,Alis.Core.Graphic.SDL.Delegates.SdlHitTest,System.IntPtr)">
            <summary>
                Sets the window hit test using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="callback">The callback</param>
            <param name="callbackData">The callback data</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetGrabbedWindow">
            <summary>
                Sdl the get grabbed window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetGrabbedWindow">
            <summary>
                Gets the grabbed window
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowMouseRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the set window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowMouseRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sets the window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowMouseRect(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowMouseRect(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowMouseRect(System.IntPtr)">
            <summary>
                Sdl the get window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetWindowMouseRect(System.IntPtr)">
            <summary>
                Gets the window mouse rect using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FlashWindow(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlFlashOperation)">
            <summary>
                Sdl the flash window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="operation">The operation</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FlashWindow(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlFlashOperation)">
            <summary>
                Flashes the window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="operation">The operation</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ComposeCustomBlendMode(Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendOperation,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendOperation)">
            <summary>
                Sdl the compose custom blend mode using the specified src color factor
            </summary>
            <param name="srcColorFactor">The src color factor</param>
            <param name="dstColorFactor">The dst color factor</param>
            <param name="colorOperation">The color operation</param>
            <param name="srcAlphaFactor">The src alpha factor</param>
            <param name="dstAlphaFactor">The dst alpha factor</param>
            <param name="alphaOperation">The alpha operation</param>
            <returns>The sdl blend mode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ComposeCustomBlendMode(Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendOperation,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendFactor,Alis.Core.Graphic.SDL.Enums.SdlBlendOperation)">
            <summary>
                Composes the custom blend mode using the specified src color factor
            </summary>
            <param name="srcColorFactor">The src color factor</param>
            <param name="dstColorFactor">The dst color factor</param>
            <param name="colorOperation">The color operation</param>
            <param name="srcAlphaFactor">The src alpha factor</param>
            <param name="dstAlphaFactor">The dst alpha factor</param>
            <param name="alphaOperation">The alpha operation</param>
            <returns>The sdl blend mode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_LoadLibrary(System.Byte[])">
            <summary>
                Internals the sdl vulkan load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanLoadLibrary(System.String)">
            <summary>
                Sdl the vulkan load library using the specified path
            </summary>
            <param name="path">The path</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_GetVkGetInstanceProcAddr">
            <summary>
                Sdl the vulkan get vk get instance proc addr
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanGetVkGetInstanceProcAddr">
            <summary>
                Vulkan the get vk get instance proc addr
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_UnloadLibrary">
            <summary>
                Sdl the vulkan unload library
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanUnloadLibrary">
            <summary>
                Vulkan the unload library
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr)">
            <summary>
                Sdl the vulkan get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanGetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr)">
            <summary>
                Vulkan the get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_GetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr[])">
            <summary>
                Sdl the vulkan get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanGetInstanceExtensions(System.IntPtr,System.UInt32@,System.IntPtr[])">
            <summary>
                Vulkan the get instance extensions using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="pCount">The count</param>
            <param name="pNames">The names</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_CreateSurface(System.IntPtr,System.IntPtr,System.UInt64@)">
            <summary>
                Sdl the vulkan create surface using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="instance">The instance</param>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanCreateSurface(System.IntPtr,System.IntPtr,System.UInt64@)">
            <summary>
                Vulkan the create surface using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="instance">The instance</param>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Vulkan_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the vulkan get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.VulkanGetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Vulkan the get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Metal_CreateView(System.IntPtr)">
            <summary>
                Sdl the metal create view using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MetalCreateView(System.IntPtr)">
            <summary>
                Metals the create view using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Metal_DestroyView(System.IntPtr)">
            <summary>
                Sdl the metal destroy view using the specified view
            </summary>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MetalDestroyView(System.IntPtr)">
            <summary>
                Metals the destroy view using the specified view
            </summary>
            <param name="view">The view</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Metal_GetLayer(System.IntPtr)">
            <summary>
                Sdl the metal get layer using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MetalGetLayer(System.IntPtr)">
            <summary>
                Metals the get layer using the specified view
            </summary>
            <param name="view">The view</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Metal_GetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the metal get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MetalGetDrawableSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Metals the get drawable size using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateRenderer(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlRendererFlags)">
            <summary>
                Sdl the create renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="index">The index</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateRenderer(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Enums.SdlRendererFlags)">
            <summary>
                Creates the renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="index">The index</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateSoftwareRenderer(System.IntPtr)">
            <summary>
                Sdl the create software renderer using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateSoftwareRenderer(System.IntPtr)">
            <summary>
                Creates the software renderer using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateTexture(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the create texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateTexture(System.IntPtr,System.UInt32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates the texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateTextureFromSurface(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the create texture from surface using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateTextureFromSurface(System.IntPtr,System.IntPtr)">
            <summary>
                Creates the texture from surface using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DestroyRenderer(System.IntPtr)">
            <summary>
                Sdl the destroy renderer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DestroyRenderer(System.IntPtr)">
            <summary>
                Destroys the renderer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DestroyTexture(System.IntPtr)">
            <summary>
                Sdl the destroy texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DestroyTexture(System.IntPtr)">
            <summary>
                Destroys the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumRenderDrivers">
            <summary>
                Sdl the get num render drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumRenderDrivers">
            <summary>
                Gets the num render drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRenderDrawBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Sdl the get render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRenderDrawBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Gets the render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextureScaleMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlScaleMode)">
            <summary>
                Sdl the set texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextureScaleMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlScaleMode)">
            <summary>
                Sets the texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTextureScaleMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlScaleMode@)">
            <summary>
                Sdl the get texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTextureScaleMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlScaleMode@)">
            <summary>
                Gets the texture scale mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="scaleMode">The scale mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextureUserData(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="userdata">The userdata</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextureUserData(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="userdata">The userdata</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTextureUserData(System.IntPtr)">
            <summary>
                Sdl the get texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTextureUserData(System.IntPtr)">
            <summary>
                Internals the sdl get texture user data using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Sdl the get render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRenderDrawColor(System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Gets the render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRenderDriverInfo(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlRendererInfo@)">
            <summary>
                Sdl the get render driver info using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRenderDriverInfo(System.Int32,Alis.Core.Graphic.SDL.Structs.SdlRendererInfo@)">
            <summary>
                Gets the render driver info using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRenderer(System.IntPtr)">
            <summary>
                Sdl the get renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRenderer(System.IntPtr)">
            <summary>
                Gets the renderer using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRendererInfo(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlRendererInfo@)">
            <summary>
                Sdl the get renderer info using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRendererInfo(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlRendererInfo@)">
            <summary>
                Gets the renderer info using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="info">The info</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRendererOutputSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the get renderer output size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRendererOutputSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Gets the renderer output size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTextureAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
                Sdl the get texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTextureAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
                Gets the texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTextureBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Sdl the get texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTextureBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Gets the texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Sdl the get texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTextureColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Gets the texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr@,System.Int32@)">
            <summary>
                Sdl the lock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr@,System.Int32@)">
            <summary>
                Locks the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)">
            <summary>
                Sdl the lock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockTexture(System.IntPtr,System.IntPtr,System.IntPtr@,System.Int32@)">
            <summary>
                Locks the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockTextureToSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr@)">
            <summary>
                Sdl the lock texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockTextureToSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr@)">
            <summary>
                Locks the texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockTextureToSurface(System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
                Sdl the lock texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockTextureToSurface(System.IntPtr,System.IntPtr,System.IntPtr@)">
            <summary>
                Locks the texture to surface using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_QueryTexture(System.IntPtr,System.UInt32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Sdl the query texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.QueryTexture(System.IntPtr,System.UInt32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Queries the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="format">The format</param>
            <param name="access">The access</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderClear(System.IntPtr)">
            <summary>
                Sdl the render clear using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderClear(System.IntPtr)">
            <summary>
                Renders the clear using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopy(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopy(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopy(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr)">
            <summary>
                Sdl the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopy(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr)">
            <summary>
                Renders the copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopy(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Renders the copy using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect"></param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the render draw line using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawLine(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Renders the draw line using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawLines(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32)">
            <summary>
                Sdl the render draw lines using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawLines(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32)">
            <summary>
                Renders the draw lines using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawPoint(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the render draw point using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawPoint(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Renders the draw point using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawPoints(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32)">
            <summary>
                Sdl the render draw points using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawPoints(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32)">
            <summary>
                Renders the draw points using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRect(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRect(System.IntPtr,System.IntPtr)">
            <summary>
                Renders the draw rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Sdl the render draw rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Renders the draw rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRect(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRect(System.IntPtr,System.IntPtr)">
            <summary>
                Renders the fill rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Sdl the render fill rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32)">
            <summary>
                Renders the fill rects using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Sdl the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Renders the copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Sdl the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Renders the copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr)">
            <summary>
                Sdl the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr)">
            <summary>
                Renders the copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Renders the copy f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyEx(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,Alis.Core.Aspect.Math.Figure.Point.PointF@,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Sdl the render copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderCopyExF(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr,System.Double,System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlRendererFlip)">
            <summary>
                Renders the copy ex f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="srcRect">The src rect</param>
            <param name="dstRect">The dst rect</param>
            <param name="angle">The angle</param>
            <param name="center">The center</param>
            <param name="flip">The flip</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGeometry(System.IntPtr,System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlVertex[],System.Int32,System.Int32[],System.Int32)">
            <summary>
                Sdl the render geometry using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="vertices">The vertices</param>
            <param name="numVertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="numIndices">The num indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGeometry(System.IntPtr,System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlVertex[],System.Int32,System.Int32[],System.Int32)">
            <summary>
                Renders the geometry using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="vertices">The vertices</param>
            <param name="numVertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="numIndices">The num indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGeometryRaw(System.IntPtr,System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the render geometry raw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="xy">The xy</param>
            <param name="xyStride">The xy stride</param>
            <param name="color">The color</param>
            <param name="colorStride">The color stride</param>
            <param name="uv">The uv</param>
            <param name="uvStride">The uv stride</param>
            <param name="numVertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="numIndices">The num indices</param>
            <param name="sizeIndices">The size indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGeometryRaw(System.IntPtr,System.IntPtr,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Renders the geometry raw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <param name="xy">The xy</param>
            <param name="xyStride">The xy stride</param>
            <param name="color">The color</param>
            <param name="colorStride">The color stride</param>
            <param name="uv">The uv</param>
            <param name="uvStride">The uv stride</param>
            <param name="numVertices">The num vertices</param>
            <param name="indices">The indices</param>
            <param name="numIndices">The num indices</param>
            <param name="sizeIndices">The size indices</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawPointF(System.IntPtr,System.Single,System.Single)">
            <summary>
                Sdl the render draw point f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawPointF(System.IntPtr,System.Single,System.Single)">
            <summary>
                Renders the draw point f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawPointsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointF[],System.Int32)">
            <summary>
                Sdl the render draw points f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawPointsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointF[],System.Int32)">
            <summary>
                Renders the draw points f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawLineF(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Sdl the render draw line f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawLineF(System.IntPtr,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Renders the draw line f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawLinesF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointF[],System.Int32)">
            <summary>
                Sdl the render draw lines f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawLinesF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Point.PointF[],System.Int32)">
            <summary>
                Renders the draw lines f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRectF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Sdl the render draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRectF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF@)">
            <summary>
                Renders the draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRectF(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRectF(System.IntPtr,System.IntPtr)">
            <summary>
                Renders the draw rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderDrawRectsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF[],System.Int32)">
            <summary>
                Sdl the render draw rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderDrawRectsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF[],System.Int32)">
            <summary>
                Renders the draw rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRectF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF)">
            <summary>
                Sdl the render fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRectF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF)">
            <summary>
                Renders the fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRectF(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRectF(System.IntPtr,System.IntPtr)">
            <summary>
                Renders the fill rect f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFillRectsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF[],System.Int32)">
            <summary>
                Sdl the render fill rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFillRectsF(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF[],System.Int32)">
            <summary>
                Renders the fill rects f using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render get clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the get clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetLogicalSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Sdl the render get logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetLogicalSize(System.IntPtr,System.Int32@,System.Int32@)">
            <summary>
                Renders the get logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetScale(System.IntPtr,System.Single@,System.Single@)">
            <summary>
                Sdl the render get scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetScale(System.IntPtr,System.Single@,System.Single@)">
            <summary>
                Renders the get scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderWindowToLogical(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
                Sdl the render window to logical using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderWindowToLogical(System.IntPtr,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
                Renders the window to logical using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderLogicalToWindow(System.IntPtr,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
                Sdl the render logical to window using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderLogicalToWindow(System.IntPtr,System.Single,System.Single,System.Int32@,System.Int32@)">
            <summary>
                Renders the logical to window using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="logicalX">The logical</param>
            <param name="logicalY">The logical</param>
            <param name="windowX">The window</param>
            <param name="windowY">The window</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetViewport(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render get viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetViewport(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the get viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderPresent(System.IntPtr)">
            <summary>
                Sdl the render present using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderPresent(System.IntPtr)">
            <summary>
                Renders the present using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderReadPixels(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Sdl the render read pixels using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <param name="format">The format</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderReadPixels(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Renders the read pixels using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <param name="format">The format</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetClipRect(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the render set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetClipRect(System.IntPtr,System.IntPtr)">
            <summary>
                Renders the set clip rect using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetLogicalSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the render set logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetLogicalSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Renders the set logical size using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetScale(System.IntPtr,System.Single,System.Single)">
            <summary>
                Sdl the render set scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetScale(System.IntPtr,System.Single,System.Single)">
            <summary>
                Renders the set scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="scaleX">The scale</param>
            <param name="scaleY">The scale</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetIntegerScale(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the render set integer scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="enable">The enable</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetIntegerScale(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Renders the set integer scale using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="enable">The enable</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetViewport(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the render set viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetViewport(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Renders the set viewport using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="rect">The rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetRenderDrawBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sdl the set render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetRenderDrawBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sets the render draw blend mode using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the set render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetRenderDrawColor(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sets the render draw color using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetRenderTarget(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetRenderTarget(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="texture">The texture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextureAlphaMod(System.IntPtr,System.Byte)">
            <summary>
                Sdl the set texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextureAlphaMod(System.IntPtr,System.Byte)">
            <summary>
                Sets the texture alpha mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextureBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sdl the set texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextureBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sets the texture blend mode using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the set texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextureColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sets the texture color mod using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockTexture(System.IntPtr)">
            <summary>
                Sdl the unlock texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UnlockTexture(System.IntPtr)">
            <summary>
                Unlocks the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32)">
            <summary>
                Sdl the update texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32)">
            <summary>
                Updates the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the update texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateTexture(System.IntPtr,System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Updates the texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="pixels">The pixels</param>
            <param name="pitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateYUVTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
                Sdl the update yuv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uPlane">The plane</param>
            <param name="uPitch">The pitch</param>
            <param name="vPlane">The plane</param>
            <param name="vPitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateYuvTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
                Updates the yuv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uPlane">The plane</param>
            <param name="uPitch">The pitch</param>
            <param name="vPlane">The plane</param>
            <param name="vPitch">The pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpdateNVTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
                Sdl the update nv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uvPlane">The uv plane</param>
            <param name="uvPitch">The uv pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpdateNvTexture(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.Int32,System.IntPtr,System.Int32)">
            <summary>
                Updates the nv texture using the specified texture
            </summary>
            <param name="texture">The texture</param>
            <param name="rect">The rect</param>
            <param name="yPlane">The plane</param>
            <param name="yPitch">The pitch</param>
            <param name="uvPlane">The uv plane</param>
            <param name="uvPitch">The uv pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderTargetSupported(System.IntPtr)">
            <summary>
                Sdl the render target supported using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderTargetSupported(System.IntPtr)">
            <summary>
                Renders the target supported using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRenderTarget(System.IntPtr)">
            <summary>
                Sdl the get render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRenderTarget(System.IntPtr)">
            <summary>
                Gets the render target using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetMetalLayer(System.IntPtr)">
            <summary>
                Sdl the render get metal layer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetMetalLayer(System.IntPtr)">
            <summary>
                Renders the get metal layer using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetMetalCommandEncoder(System.IntPtr)">
            <summary>
                Sdl the render get metal command encoder using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetMetalCommandEncoder(System.IntPtr)">
            <summary>
                Renders the get metal command encoder using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderSetVSync(System.IntPtr,System.Int32)">
            <summary>
                Sdl the render set v sync using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="vsync">The vsync</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderSetVSync(System.IntPtr,System.Int32)">
            <summary>
                Renders the set v sync using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="vsync">The vsync</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderIsClipEnabled(System.IntPtr)">
            <summary>
                Sdl the render is clip enabled using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderIsClipEnabled(System.IntPtr)">
            <summary>
                Renders the is clip enabled using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderFlush(System.IntPtr)">
            <summary>
                Sdl the render flush using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderFlush(System.IntPtr)">
            <summary>
                Renders the flush using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlDefinePixelFourcc(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the define pixel fourcc using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <param name="d">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlDefinePixelFormat(Alis.Core.Graphic.SDL.Enums.PixelType,System.UInt32,Alis.Core.Graphic.SDL.Enums.PackedLayout,System.Byte,System.Byte)">
            <summary>
                Sdl the define pixel format using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="order">The order</param>
            <param name="layout">The layout</param>
            <param name="bits">The bits</param>
            <param name="bytes">The bytes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPixelFlag(System.UInt32)">
            <summary>
                Sdl the pixel flag using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPixelType(System.UInt32)">
            <summary>
                Sdl the pixel type using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPixelOrder(System.UInt32)">
            <summary>
                Sdl the pixel order using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPixelLayout(System.UInt32)">
            <summary>
                Sdl the pixel layout using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlBitsPerPixel(System.UInt32)">
            <summary>
                Sdl the bits per pixel using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlBytesPerPixel(System.UInt32)">
            <summary>
                Sdl the bytes per pixel using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IsPixelFormatIndexed(System.UInt32)">
            <summary>
                Describes whether sdl is pixel format indexed
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsPixelFormatPacked(System.UInt32)">
            <summary>
                Describes whether sdl is pixel format packed
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsPixelFormatArray(System.UInt32)">
            <summary>
                Describes whether sdl is pixel format array
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsPixelFormatAlpha(System.UInt32)">
            <summary>
                Describes whether sdl is pixel format alpha
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsPixelFormatFour(System.UInt32)">
            <summary>
                Describes whether sdl is pixel format fourcc
            </summary>
            <param name="format">The format</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AllocFormat(System.UInt32)">
            <summary>
                Sdl the alloc format using the specified pixel format
            </summary>
            <param name="pixelFormat">The pixel format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AllocFormat(System.UInt32)">
            <summary>
                Allow the format using the specified pixel format
            </summary>
            <param name="pixelFormat">The pixel format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AllocPalette(System.Int32)">
            <summary>
                Sdl the alloc palette using the specified n colors
            </summary>
            <param name="nColors">The n colors</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AllocPalette(System.Int32)">
            <summary>
                Allow the palette using the specified n colors
            </summary>
            <param name="nColors">The colors</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CalculateGammaRamp(System.Single,System.UInt16[])">
            <summary>
                Sdl the calculate gamma ramp using the specified gamma
            </summary>
            <param name="gamma">The gamma</param>
            <param name="ramp">The ramp</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CalculateGammaRamp(System.Single,System.UInt16[])">
            <summary>
                Calculates the gamma ramp using the specified gamma
            </summary>
            <param name="gamma">The gamma</param>
            <param name="ramp">The ramp</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeFormat(System.IntPtr)">
            <summary>
                Sdl the free format using the specified format
            </summary>
            <param name="format">The format</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreeFormat(System.IntPtr)">
            <summary>
                Frees the format using the specified format
            </summary>
            <param name="format">The format</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreePalette(System.IntPtr)">
            <summary>
                Sdl the free palette using the specified palette
            </summary>
            <param name="palette">The palette</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreePalette(System.IntPtr)">
            <summary>
                Frees the palette using the specified palette
            </summary>
            <param name="palette">The palette</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPixelFormatName(System.UInt32)">
            <summary>
                Internals the sdl get pixel format name using the specified format
            </summary>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetPixelFormatName(System.UInt32)">
            <summary>
                Sdl the get pixel format name using the specified format
            </summary>
            <param name="format">The format</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRGB(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Sdl the get rgb using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRgb(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Gets the rgb using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRGBA(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Sdl the get rgba using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRgba(System.UInt32,System.IntPtr,System.Byte@,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Gets the rgba using the specified pixel
            </summary>
            <param name="pixel">The pixel</param>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MapRGB(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the map rgb using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MapRgb(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Maps the rgb using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MapRGBA(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the map rgba using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MapRgba(System.IntPtr,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
                Maps the rgba using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sdl the masks to pixel format enum using the specified bpp
            </summary>
            <param name="bpp">The bpp</param>
            <param name="rMask">The r mask</param>
            <param name="gMask">The g mask</param>
            <param name="bMask">The b mask</param>
            <param name="aMask">The a mask</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MasksToPixelFormatEnum(System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Mask the to pixel format enum using the specified bpp
            </summary>
            <param name="bpp">The bpp</param>
            <param name="rMask">The mask</param>
            <param name="gMask">The mask</param>
            <param name="bMask">The mask</param>
            <param name="aMask">The mask</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PixelFormatEnumToMasks(System.UInt32,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
                Sdl the pixel format enum to masks using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="bpp">The bpp</param>
            <param name="rMask">The r mask</param>
            <param name="gMask">The g mask</param>
            <param name="bMask">The b mask</param>
            <param name="aMask">The a mask</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PixelFormatEnumToMasks(System.UInt32,System.Int32@,System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
                Pixels the format enum to masks using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="bpp">The bpp</param>
            <param name="rMask">The mask</param>
            <param name="gMask">The mask</param>
            <param name="bMask">The mask</param>
            <param name="aMask">The mask</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetPaletteColors(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlColor[],System.Int32,System.Int32)">
            <summary>
                Sdl the set palette colors using the specified palette
            </summary>
            <param name="palette">The palette</param>
            <param name="colors">The colors</param>
            <param name="firstColor">The first color</param>
            <param name="nColors">The n colors</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetPaletteColors(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlColor[],System.Int32,System.Int32)">
            <summary>
                Sets the palette colors using the specified palette
            </summary>
            <param name="palette">The palette</param>
            <param name="colors">The colors</param>
            <param name="firstColor">The first color</param>
            <param name="nColors">The colors</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetPixelFormatPalette(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set pixel format palette using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetPixelFormatPalette(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the pixel format palette using the specified format
            </summary>
            <param name="format">The format</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PointInRect(Alis.Core.Aspect.Math.Figure.Point.PointI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the point in rect using the specified p
            </summary>
            <param name="p">The </param>
            <param name="r">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_EnclosePoints(Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the enclose points using the specified points
            </summary>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <param name="clip">The clip</param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.EnclosePoints(Alis.Core.Aspect.Math.Figure.Point.PointI[],System.Int32,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Encloses the points using the specified points
            </summary>
            <param name="points">The points</param>
            <param name="count">The count</param>
            <param name="clip">The clip</param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasIntersection(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the has intersection using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasIntersection(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Has the intersection using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IntersectRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the intersect rect using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IntersectRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Intersects the rect using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="result">The result</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IntersectRectAndLine(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Sdl the intersect rect and line using the specified rect
            </summary>
            <param name="rect">The rect</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IntersectRectAndLine(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Intersects the rect and line using the specified rect
            </summary>
            <param name="rect">The rect</param>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RectEmpty(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the rect empty using the specified r
            </summary>
            <param name="r">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_RectEquals(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the rect equals using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnionRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the union rect using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="result">The result</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UnionRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Unions the rect using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="result">The result</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlMustLock(System.IntPtr)">
            <summary>
                Describes whether sdl must lock
            </summary>
            <param name="surface">The surface</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Blit the surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Blit the surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitSurface(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.IntPtr)">
            <summary>
                Blit the surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the blit surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitSurface(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Blit the surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Blit the scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Blit the scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,System.IntPtr)">
            <summary>
                Blit the scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.BlitScaled(System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
                Blit the scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ConvertPixels(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Sdl the convert pixels using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="srcFormat">The src format</param>
            <param name="src">The src</param>
            <param name="srcPitch">The src pitch</param>
            <param name="dstFormat">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dstPitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ConvertPixels(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Converts the pixels using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="srcFormat">The src format</param>
            <param name="src">The src</param>
            <param name="srcPitch">The src pitch</param>
            <param name="dstFormat">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dstPitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PremultiplyAlpha(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Sdl the premultiply alpha using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="srcFormat">The src format</param>
            <param name="src">The src</param>
            <param name="srcPitch">The src pitch</param>
            <param name="dstFormat">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dstPitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PremultiplyAlpha(System.Int32,System.Int32,System.UInt32,System.IntPtr,System.Int32,System.UInt32,System.IntPtr,System.Int32)">
            <summary>
                Pre the alpha using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="srcFormat">The src format</param>
            <param name="src">The src</param>
            <param name="srcPitch">The src pitch</param>
            <param name="dstFormat">The dst format</param>
            <param name="dst">The dst</param>
            <param name="dstPitch">The dst pitch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ConvertSurface(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the convert surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="fmt">The fmt</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ConvertSurface(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
                Converts the surface using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="fmt">The fmt</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ConvertSurfaceFormat(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Sdl the convert surface format using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="pixelFormat">The pixel format</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ConvertSurfaceFormat(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
                Converts the surface format using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="pixelFormat">The pixel format</param>
            <param name="flags">The flags</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateRGBSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sdl the create rgb surface using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="rMask">The r mask</param>
            <param name="gMask">The g mask</param>
            <param name="bMask">The b mask</param>
            <param name="aMask">The a mask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateRgbSurface(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Creates the rgb surface using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="rMask">The mask</param>
            <param name="gMask">The mask</param>
            <param name="bMask">The mask</param>
            <param name="aMask">The mask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateRGBSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Sdl the create rgb surface from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="rMask">The r mask</param>
            <param name="gMask">The g mask</param>
            <param name="bMask">The b mask</param>
            <param name="aMask">The a mask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateRgbSurfaceFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Creates the rgb surface from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="rMask">The mask</param>
            <param name="gMask">The mask</param>
            <param name="bMask">The mask</param>
            <param name="aMask">The mask</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateRGBSurfaceWithFormat(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
                Sdl the create rgb surface with format using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateRgbSurfaceWithFormat(System.UInt32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
                Creates the rgb surface with format using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateRGBSurfaceWithFormatFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
                Sdl the create rgb surface with format from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateRgbSurfaceWithFormatFrom(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
                Creates the rgb surface with format from using the specified pixels
            </summary>
            <param name="pixels">The pixels</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="depth">The depth</param>
            <param name="pitch">The pitch</param>
            <param name="format">The format</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FillRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.UInt32)">
            <summary>
                Sdl the fill rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FillRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.UInt32)">
            <summary>
                Fills the rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FillRect(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the fill rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FillRect(System.IntPtr,System.IntPtr,System.UInt32)">
            <summary>
                Fills the rect using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rect">The rect</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FillRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32,System.UInt32)">
            <summary>
                Sdl the fill rects using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FillRects(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI[],System.Int32,System.UInt32)">
            <summary>
                Fills the rects using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="rects">The rects</param>
            <param name="count">The count</param>
            <param name="color">The color</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeSurface(System.IntPtr)">
            <summary>
                Sdl the free surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreeSurface(System.IntPtr)">
            <summary>
                Frees the surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the get clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Gets the clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasColorKey(System.IntPtr)">
            <summary>
                Sdl the has color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasColorKey(System.IntPtr)">
            <summary>
                Has the color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetColorKey(System.IntPtr,System.UInt32@)">
            <summary>
                Sdl the get color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetColorKey(System.IntPtr,System.UInt32@)">
            <summary>
                Gets the color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetSurfaceAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
                Sdl the get surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetSurfaceAlphaMod(System.IntPtr,System.Byte@)">
            <summary>
                Gets the surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetSurfaceBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Sdl the get surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetSurfaceBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode@)">
            <summary>
                Gets the surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Sdl the get surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetSurfaceColorMod(System.IntPtr,System.Byte@,System.Byte@,System.Byte@)">
            <summary>
                Gets the surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LoadBMP_RW(System.IntPtr,System.Int32)">
            <summary>
                Internals the sdl load bmp rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LoadBmp(System.String)">
            <summary>
                Sdl the load bmp using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockSurface(System.IntPtr)">
            <summary>
                Sdl the lock surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockSurface(System.IntPtr)">
            <summary>
                Locks the surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LowerBlit(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the lower blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LowerBlit(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Lowers the blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LowerBlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the lower blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LowerBlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Lowers the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SaveBMP_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Internals the sdl save bmp rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SaveBmp(System.IntPtr,System.String)">
            <summary>
                Sdl the save bmp using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the set clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetClipRect(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sets the clip rect using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="rect">The rect</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetColorKey(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
                Sdl the set color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetColorKey(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
                Sets the color key using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <param name="key">The key</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetSurfaceAlphaMod(System.IntPtr,System.Byte)">
            <summary>
                Sdl the set surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetSurfaceAlphaMod(System.IntPtr,System.Byte)">
            <summary>
                Sets the surface alpha mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="alpha">The alpha</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetSurfaceBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sdl the set surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetSurfaceBlendMode(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlBlendMode)">
            <summary>
                Sets the surface blend mode using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="blendMode">The blend mode</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the set surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetSurfaceColorMod(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sets the surface color mod using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetSurfacePalette(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the set surface palette using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetSurfacePalette(System.IntPtr,System.IntPtr)">
            <summary>
                Sets the surface palette using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="palette">The palette</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetSurfaceRLE(System.IntPtr,System.Int32)">
            <summary>
                Sdl the set surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetSurfaceRle(System.IntPtr,System.Int32)">
            <summary>
                Sets the surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="flag">The flag</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSurfaceRLE(System.IntPtr)">
            <summary>
                Sdl the has surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasSurfaceRle(System.IntPtr)">
            <summary>
                Has the surface rle using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SoftStretch(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the soft stretch using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SoftStretch(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Soft the stretch using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SoftStretchLinear(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the soft stretch linear using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SoftStretchLinear(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Soft the stretch linear using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockSurface(System.IntPtr)">
            <summary>
                Sdl the unlock surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UnlockSurface(System.IntPtr)">
            <summary>
                Unlocks the surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpperBlit(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the upper blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpperBlit(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Uppers the blit using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UpperBlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the upper blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UpperBlitScaled(System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@,System.IntPtr,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Uppers the blit scaled using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="srcRect">The src rect</param>
            <param name="dst">The dst</param>
            <param name="dstRect">The dst rect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DuplicateSurface(System.IntPtr)">
            <summary>
                Sdl the duplicate surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DuplicateSurface(System.IntPtr)">
            <summary>
                Duplicates the surface using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasClipboardText">
            <summary>
                Sdl the has clipboard text
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasClipboardText">
            <summary>
                Has the clipboard text
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetClipboardText">
            <summary>
                Internals the sdl get clipboard text
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetClipboardText">
            <summary>
                Sdl the get clipboard text
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetClipboardText(System.Byte[])">
            <summary>
                Internals the sdl set clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetClipboardText(System.String)">
            <summary>
                Sdl the set clipboard text using the specified text
            </summary>
            <param name="text">The text</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PumpEvents">
            <summary>
                Sdl the pump events
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PumpEvents">
            <summary>
                Pumps the events
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PeepEvents(Alis.Core.Graphic.SDL.Structs.SdlEvent[],System.Int32,Alis.Core.Graphic.SDL.Enums.SdlEventAction,Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the peep events using the specified events
            </summary>
            <param name="events">The events</param>
            <param name="numEvents">The num events</param>
            <param name="action">The action</param>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PeepEvents(Alis.Core.Graphic.SDL.Structs.SdlEvent[],System.Int32,Alis.Core.Graphic.SDL.Enums.SdlEventAction,Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Peeps the events using the specified events
            </summary>
            <param name="events">The events</param>
            <param name="numEvents">The num events</param>
            <param name="action">The action</param>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasEvent(Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the has event using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasEvent(Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Has the event using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasEvents(Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the has events using the specified min type
            </summary>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasEvents(Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Has the events using the specified min type
            </summary>
            <param name="minType">The min type</param>
            <param name="maxType">The max type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FlushEvent(Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the flush event using the specified type
            </summary>
            <param name="type">The type</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FlushEvent(Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Flushes the event using the specified type
            </summary>
            <param name="type">The type</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FlushEvents(Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the flush events using the specified min
            </summary>
            <param name="min">The min</param>
            <param name="max">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FlushEvents(Alis.Core.Graphic.SDL.Enums.SdlEventType,Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Flushes the events using the specified min
            </summary>
            <param name="min">The min</param>
            <param name="max">The max</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PollEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Sdl the poll event using the specified  event
            </summary>
            <param name="sdlEvent">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PollEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Polls the event using the specified sdl event
            </summary>
            <param name="sdlEvent">The sdl event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WaitEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Sdl the wait event using the specified  event
            </summary>
            <param name="sdlEvent">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WaitEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Waits the event using the specified sdl event
            </summary>
            <param name="sdlEvent">The sdl event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WaitEventTimeout(Alis.Core.Graphic.SDL.Structs.SdlEvent@,System.Int32)">
            <summary>
                Sdl the wait event timeout using the specified  event
            </summary>
            <param name="sdlEvent">The event</param>
            <param name="timeout">The timeout</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WaitEventTimeout(Alis.Core.Graphic.SDL.Structs.SdlEvent@,System.Int32)">
            <summary>
                Waits the event timeout using the specified sdl event
            </summary>
            <param name="sdlEvent">The sdl event</param>
            <param name="timeout">The timeout</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PushEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Sdl the push event using the specified  event
            </summary>
            <param name="sdlEvent">The event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PushEvent(Alis.Core.Graphic.SDL.Structs.SdlEvent@)">
            <summary>
                Pushes the event using the specified sdl event
            </summary>
            <param name="sdlEvent">The sdl event</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetEventFilter(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Sdl the set event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetEventFilter(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Sets the event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetEventFilter(System.IntPtr@,System.IntPtr@)">
            <summary>
                Sdl the get event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetEventFilter(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter@,System.IntPtr@)">
            <summary>
                Sdl the get event filter using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
            <returns>The ret val</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AddEventWatch(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Sdl the add event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AddEventWatch(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Adds the event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DelEventWatch(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Sdl the del event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.DelEventWatch(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Del the event watch using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FilterEvents(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Sdl the filter events using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FilterEvents(Alis.Core.Graphic.SDL.Delegates.SdlEventFilter,System.IntPtr)">
            <summary>
                Filters the events using the specified filter
            </summary>
            <param name="filter">The filter</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_EventState(Alis.Core.Graphic.SDL.Enums.SdlEventType,System.Int32)">
            <summary>
                Sdl the event state using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="state">The state</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetEventState(Alis.Core.Graphic.SDL.Enums.SdlEventType)">
            <summary>
                Sdl the get event state using the specified type
            </summary>
            <param name="type">The type</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RegisterEvents(System.Int32)">
            <summary>
                Sdl the register events using the specified num events
            </summary>
            <param name="numEvents">The num events</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RegisterEvents(System.Int32)">
            <summary>
                Registers the events using the specified num events
            </summary>
            <param name="numEvents">The num events</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ScanCodeToKeyCode(Alis.Core.Graphic.SDL.Enums.SdlScancode)">
            <summary>
                Sdl the scancode to keycode using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetKeyboardFocus">
            <summary>
                Sdl the get keyboard focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetKeyboardFocus">
            <summary>
                Gets the keyboard focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetKeyboardState(System.Int32@)">
            <summary>
                Sdl the get keyboard state using the specified num keys
            </summary>
            <param name="numKeys">The num keys</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetKeyboardState(System.Int32@)">
            <summary>
                Gets the keyboard state using the specified num keys
            </summary>
            <param name="numKeys">The num keys</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetModState">
            <summary>
                Sdl the get mod state
            </summary>
            <returns>The sdl key mod</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetModState">
            <summary>
                Gets the mod state
            </summary>
            <returns>The sdl key mod</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetModState(Alis.Core.Graphic.SDL.Enums.SdlKeymod)">
            <summary>
                Sdl the set mod state using the specified mod state
            </summary>
            <param name="modState">The mod state</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetModState(Alis.Core.Graphic.SDL.Enums.SdlKeymod)">
            <summary>
                Sets the mod state using the specified mod state
            </summary>
            <param name="modState">The mod state</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetKeyFromScancode(Alis.Core.Graphic.SDL.Enums.SdlScancode)">
            <summary>
                Sdl the get key from scancode using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetKeyFromScancode(Alis.Core.Graphic.SDL.Enums.SdlScancode)">
            <summary>
                Gets the key from scancode using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetScancodeFromKey(Alis.Core.Graphic.SDL.Enums.SdlKeycode)">
            <summary>
                Sdl the get scancode from key using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetScancodeFromKey(Alis.Core.Graphic.SDL.Enums.SdlKeycode)">
            <summary>
                Gets the scancode from key using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetScancodeName(Alis.Core.Graphic.SDL.Enums.SdlScancode)">
            <summary>
                Internals the sdl get scancode name using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetScancodeName(Alis.Core.Graphic.SDL.Enums.SdlScancode)">
            <summary>
                Sdl the get scancode name using the specified scancode
            </summary>
            <param name="scancode">The scancode</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetScancodeFromName(System.Byte[])">
            <summary>
                Internals the sdl get scancode from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetScancodeFromName(System.String)">
            <summary>
                Sdl the get scancode from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl scancode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetKeyName(Alis.Core.Graphic.SDL.Enums.SdlKeycode)">
            <summary>
                Internals the sdl get key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SGetKeyName(Alis.Core.Graphic.SDL.Enums.SdlKeycode)">
            <summary>
                Sdl the get key name using the specified key
            </summary>
            <param name="key">The key</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetKeyFromName(System.Byte[])">
            <summary>
                Internals the sdl get key from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetKeyFromName(System.String)">
            <summary>
                Sdl the get key from name using the specified name
            </summary>
            <param name="name">The name</param>
            <returns>The sdl keycode</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_StartTextInput">
            <summary>
                Sdl the start text input
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.StartTextInput">
            <summary>
                Starts the text input
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsTextInputActive">
            <summary>
                Sdl the is text input active
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IsTextInputActive">
            <summary>
                Is the text input active
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_StopTextInput">
            <summary>
                Sdl the stop text input
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.StopTextInput">
            <summary>
                Stops the text input
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetTextInputRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sdl the set text input rect using the specified rect
            </summary>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetTextInputRect(Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI@)">
            <summary>
                Sets the text input rect using the specified rect
            </summary>
            <param name="rect">The rect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasScreenKeyboardSupport">
            <summary>
                Sdl the has screen keyboard support
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HasScreenKeyboardSupport">
            <summary>
                Has the screen keyboard support
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsScreenKeyboardShown(System.IntPtr)">
            <summary>
                Sdl the is screen keyboard shown using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IsScreenKeyboardShown(System.IntPtr)">
            <summary>
                Is the screen keyboard shown using the specified window
            </summary>
            <param name="window">The window</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetMouseFocus">
            <summary>
                Sdl the get mouse focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetMouseFocus">
            <summary>
                Gets the mouse focus
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetMouseState(System.Int32@,System.Int32@)">
            <summary>
                Sdl the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetMouseStateOutXAndY(System.Int32@,System.Int32@)">
            <summary>
                Gets the mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetMouseState(System.IntPtr,System.Int32@)">
            <summary>
                Sdl the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetMouseStateXAndYOut(System.IntPtr,System.Int32@)">
            <summary>
                Gets the mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetMouseState(System.Int32@,System.IntPtr)">
            <summary>
                Sdl the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetMouseStateXOutAndY(System.Int32@,System.IntPtr)">
            <summary>
                Gets the mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetMouseState(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the get mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetMouseStateToXAndY(System.IntPtr,System.IntPtr)">
            <summary>
                Gets the mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetGlobalMouseState(System.Int32@,System.Int32@)">
            <summary>
                Sdl the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetGlobalMouseStateOutXAndOutY(System.Int32@,System.Int32@)">
            <summary>
                Gets the global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetGlobalMouseState(System.IntPtr,System.Int32@)">
            <summary>
                Sdl the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetGlobalMouseStateXAndYOut(System.IntPtr,System.Int32@)">
            <summary>
                Gets the global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetGlobalMouseState(System.Int32@,System.IntPtr)">
            <summary>
                Sdl the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetGlobalMouseStateOutXAndY(System.Int32@,System.IntPtr)">
            <summary>
                Gets the global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetGlobalMouseState(System.IntPtr,System.IntPtr)">
            <summary>
                Sdl the get global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetGlobalMouseStateXAndY(System.IntPtr,System.IntPtr)">
            <summary>
                Gets the global mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRelativeMouseState(System.Int32@,System.Int32@)">
            <summary>
                Sdl the get relative mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRelativeMouseState(System.Int32@,System.Int32@)">
            <summary>
                Gets the relative mouse state using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WarpMouseInWindow(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the warp mouse in window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WarpMouseInWindow(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Warps the mouse in window using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WarpMouseGlobal(System.Int32,System.Int32)">
            <summary>
                Sdl the warp mouse global using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.WarpMouseGlobal(System.Int32,System.Int32)">
            <summary>
                Warps the mouse global using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetRelativeMouseMode(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the set relative mouse mode using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetRelativeMouseMode(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sets the relative mouse mode using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CaptureMouse(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the capture mouse using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CaptureMouse(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Captures the mouse using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetRelativeMouseMode">
            <summary>
                Sdl the get relative mouse mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetRelativeMouseMode">
            <summary>
                Gets the relative mouse mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the create cursor using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="mask">The mask</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="hotX">The hot</param>
            <param name="hotY">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateCursor(System.IntPtr,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates the cursor using the specified data
            </summary>
            <param name="data">The data</param>
            <param name="mask">The mask</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <param name="hotX">The hot</param>
            <param name="hotY">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateColorCursor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the create color cursor using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="hotX">The hot</param>
            <param name="hotY">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateColorCursor(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Creates the color cursor using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="hotX">The hot</param>
            <param name="hotY">The hot</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CreateSystemCursor(Alis.Core.Graphic.SDL.Enums.SdlSystemCursor)">
            <summary>
                Sdl the create system cursor using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CreateSystemCursor(Alis.Core.Graphic.SDL.Enums.SdlSystemCursor)">
            <summary>
                Creates the system cursor using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetCursor(System.IntPtr)">
            <summary>
                Sdl the set cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetCursor(System.IntPtr)">
            <summary>
                Sets the cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCursor">
            <summary>
                Sdl the get cursor
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetCursor">
            <summary>
                Gets the cursor
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeCursor(System.IntPtr)">
            <summary>
                Sdl the free cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreeCursor(System.IntPtr)">
            <summary>
                Frees the cursor using the specified cursor
            </summary>
            <param name="cursor">The cursor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ShowCursor(System.Int32)">
            <summary>
                Sdl the show cursor using the specified toggle
            </summary>
            <param name="toggle">The toggle</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.ShowCursor(System.Int32)">
            <summary>
                Shows the cursor using the specified toggle
            </summary>
            <param name="toggle">The toggle</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Button(System.UInt32)">
            <summary>
                Sdl the button using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumTouchDevices">
            <summary>
                Sdl the get num touch devices
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumTouchDevices">
            <summary>
                Gets the num touch devices
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTouchDevice(System.Int32)">
            <summary>
                Sdl the get touch device using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTouchDevice(System.Int32)">
            <summary>
                Gets the touch device using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumTouchFingers(System.Int64)">
            <summary>
                Sdl the get num touch fingers using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumTouchFingers(System.Int64)">
            <summary>
                Gets the num touch fingers using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTouchFinger(System.Int64,System.Int32)">
            <summary>
                Sdl the get touch finger using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTouchFinger(System.Int64,System.Int32)">
            <summary>
                Gets the touch finger using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTouchDeviceType(System.Int64)">
            <summary>
                Sdl the get touch device type using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <returns>The sdl touch device type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTouchDeviceType(System.Int64)">
            <summary>
                Gets the touch device type using the specified touch id
            </summary>
            <param name="touchId">The touch id</param>
            <returns>The sdl touch device type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Sdl the joystick rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="lowFrequencyRumble">The low frequency rumble</param>
            <param name="highFrequencyRumble">The high frequency rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Joysticks the rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="lowFrequencyRumble">The low frequency rumble</param>
            <param name="highFrequencyRumble">The high frequency rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Sdl the joystick rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="leftRumble">The left rumble</param>
            <param name="rightRumble">The right rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Joysticks the rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="leftRumble">The left rumble</param>
            <param name="rightRumble">The right rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickClose(System.IntPtr)">
            <summary>
                Sdl the joystick close using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickClose(System.IntPtr)">
            <summary>
                Joysticks the close using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickEventState(System.Int32)">
            <summary>
                Sdl the joystick event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickEventState(System.Int32)">
            <summary>
                Joysticks the event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetAxis(System.IntPtr,System.Int32)">
            <summary>
                Sdl the joystick get axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetAxis(System.IntPtr,System.Int32)">
            <summary>
                Joysticks the get axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetAxisInitialState(System.IntPtr,System.Int32,System.UInt16@)">
            <summary>
                Sdl the joystick get axis initial state using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="state">The state</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetAxisInitialState(System.IntPtr,System.Int32,System.UInt16@)">
            <summary>
                Joysticks the get axis initial state using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="state">The state</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Sdl the joystick get ball using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="ball">The ball</param>
            <param name="dx">The dx</param>
            <param name="dy">The dy</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetBall(System.IntPtr,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Joysticks the get ball using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="ball">The ball</param>
            <param name="dx">The dx</param>
            <param name="dy">The dy</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetButton(System.IntPtr,System.Int32)">
            <summary>
                Sdl the joystick get button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetButton(System.IntPtr,System.Int32)">
            <summary>
                Joysticks the get button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetHat(System.IntPtr,System.Int32)">
            <summary>
                Sdl the joystick get hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetHat(System.IntPtr,System.Int32)">
            <summary>
                Joysticks the get hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickName(System.IntPtr)">
            <summary>
                Internals the sdl joystick name using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickName(System.IntPtr)">
            <summary>
                Sdl the joystick name using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickNameForIndex(System.Int32)">
            <summary>
                Internals the sdl joystick name for index using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickNameForIndex(System.Int32)">
            <summary>
                Sdl the joystick name for index using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickNumAxes(System.IntPtr)">
            <summary>
                Sdl the joystick num axes using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickNumAxes(System.IntPtr)">
            <summary>
                Joysticks the num axes using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickNumBalls(System.IntPtr)">
            <summary>
                Sdl the joystick num balls using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickNumBalls(System.IntPtr)">
            <summary>
                Joysticks the num balls using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickNumButtons(System.IntPtr)">
            <summary>
                Sdl the joystick num buttons using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickNumButtons(System.IntPtr)">
            <summary>
                Joysticks the num buttons using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickNumHats(System.IntPtr)">
            <summary>
                Sdl the joystick num hats using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickNumHats(System.IntPtr)">
            <summary>
                Joysticks the num hats using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickOpen(System.Int32)">
            <summary>
                Sdl the joystick open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickOpen(System.Int32)">
            <summary>
                Joysticks the open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickUpdate">
            <summary>
                Sdl the joystick update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickUpdate">
            <summary>
                Joysticks the update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_NumJoysticks">
            <summary>
                Sdl the num joysticks
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.NumJoysticks">
            <summary>
                Nums the joysticks
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceGUID(System.Int32)">
            <summary>
                Sdl the joystick get device guid using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceGuid(System.Int32)">
            <summary>
                Joysticks the get device guid using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetGUID(System.IntPtr)">
            <summary>
                Sdl the joystick get guid using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetGuid(System.IntPtr)">
            <summary>
                Joysticks the get guid using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetGUIDString(System.Guid,System.Byte[],System.Int32)">
            <summary>
                Sdl the joystick get guid string using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="pszGuid">The psz guid</param>
            <param name="cbGuid">The cb guid</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetGuidString(System.Guid,System.Byte[],System.Int32)">
            <summary>
                Joysticks the get guid string using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="pszGuid">The psz guid</param>
            <param name="cbGuid">The cb guid</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetGUIDFromString(System.Byte[])">
            <summary>
                Internals the sdl joystick get guid from string using the specified pch guid
            </summary>
            <param name="pchGuid">The pch guid</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetGuidFromString(System.String)">
            <summary>
                Sdl the joystick get guid from string using the specified pch guid
            </summary>
            <param name="pchGuid">The pch guid</param>
            <returns>The guid</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceVendor(System.Int32)">
            <summary>
                Sdl the joystick get device vendor using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceVendor(System.Int32)">
            <summary>
                Joysticks the get device vendor using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceProduct(System.Int32)">
            <summary>
                Sdl the joystick get device product using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceProduct(System.Int32)">
            <summary>
                Joysticks the get device product using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceProductVersion(System.Int32)">
            <summary>
                Sdl the joystick get device product version using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceProductVersion(System.Int32)">
            <summary>
                Joysticks the get device product version using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceType(System.Int32)">
            <summary>
                Sdl the joystick get device type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceType(System.Int32)">
            <summary>
                Joysticks the get device type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetDeviceInstanceID(System.Int32)">
            <summary>
                Sdl the joystick get device instance id using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetDeviceInstanceId(System.Int32)">
            <summary>
                Joysticks the get device instance id using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetVendor(System.IntPtr)">
            <summary>
                Sdl the joystick get vendor using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetVendor(System.IntPtr)">
            <summary>
                Joysticks the get vendor using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetProduct(System.IntPtr)">
            <summary>
                Sdl the joystick get product using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetProduct(System.IntPtr)">
            <summary>
                Joysticks the get product using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetProductVersion(System.IntPtr)">
            <summary>
                Sdl the joystick get product version using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetProductVersion(System.IntPtr)">
            <summary>
                Joysticks the get product version using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetSerial(System.IntPtr)">
            <summary>
                Internals the sdl joystick get serial using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetSerial(System.IntPtr)">
            <summary>
                Sdl the joystick get serial using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetType(System.IntPtr)">
            <summary>
                Sdl the joystick get type using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetType(System.IntPtr)">
            <summary>
                Joysticks the get type using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickGetAttached(System.IntPtr)">
            <summary>
                Sdl the joystick get attached using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickGetAttached(System.IntPtr)">
            <summary>
                Joysticks the get attached using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickInstanceID(System.IntPtr)">
            <summary>
                Sdl the joystick instance id using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickInstanceId(System.IntPtr)">
            <summary>
                Joysticks the instance id using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickCurrentPowerLevel(System.IntPtr)">
            <summary>
                Sdl the joystick current power level using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick power level</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickCurrentPowerLevel(System.IntPtr)">
            <summary>
                Joysticks the current power level using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl joystick power level</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickFromInstanceID(System.Int32)">
            <summary>
                Sdl the joystick from instance id using the specified instance id
            </summary>
            <param name="instanceId">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickFromInstanceId(System.Int32)">
            <summary>
                Joysticks the from instance id using the specified instance id
            </summary>
            <param name="instanceId">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockJoysticks">
            <summary>
                Sdl the lock joysticks
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockJoysticks">
            <summary>
                Locks the joysticks
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockJoysticks">
            <summary>
                Sdl the unlock joysticks
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UnlockJoysticks">
            <summary>
                Unlocks the joysticks
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickFromPlayerIndex(System.Int32)">
            <summary>
                Sdl the joystick from player index using the specified player index
            </summary>
            <param name="playerIndex">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickFromPlayerIndex(System.Int32)">
            <summary>
                Joysticks the from player index using the specified player index
            </summary>
            <param name="playerIndex">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
                Sdl the joystick set player index using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="playerIndex">The player index</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
                Joysticks the set player index using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="playerIndex">The player index</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickAttachVirtual(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the joystick attach virtual using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="nAxes">The n axes</param>
            <param name="nButtons">The n buttons</param>
            <param name="nHats">The n hats</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlJoystickAttachVirtual(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the joystick attach virtual using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="nAxes">The axes</param>
            <param name="nButtons">The buttons</param>
            <param name="nHats">The hats</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickDetachVirtual(System.Int32)">
            <summary>
                Sdl the joystick detach virtual using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickDetachVirtual(System.Int32)">
            <summary>
                Joysticks the detach virtual using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickIsVirtual(System.Int32)">
            <summary>
                Sdl the joystick is virtual using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickIsVirtual(System.Int32)">
            <summary>
                Joysticks the is virtual using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSetVirtualAxis(System.IntPtr,System.Int32,System.Int16)">
            <summary>
                Sdl the joystick set virtual axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSetVirtualAxis(System.IntPtr,System.Int32,System.Int16)">
            <summary>
                Joysticks the set virtual axis using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="axis">The axis</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSetVirtualButton(System.IntPtr,System.Int32,System.Byte)">
            <summary>
                Sdl the joystick set virtual button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSetVirtualButton(System.IntPtr,System.Int32,System.Byte)">
            <summary>
                Joysticks the set virtual button using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="button">The button</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSetVirtualHat(System.IntPtr,System.Int32,System.Byte)">
            <summary>
                Sdl the joystick set virtual hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSetVirtualHat(System.IntPtr,System.Int32,System.Byte)">
            <summary>
                Joysticks the set virtual hat using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="hat">The hat</param>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickHasLED(System.IntPtr)">
            <summary>
                Sdl the joystick has led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickHasLed(System.IntPtr)">
            <summary>
                Joysticks the has led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickHasRumble(System.IntPtr)">
            <summary>
                Sdl the joystick has rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickHasRumble(System.IntPtr)">
            <summary>
                Joysticks the has rumble using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickHasRumbleTriggers(System.IntPtr)">
            <summary>
                Sdl the joystick has rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickHasRumbleTriggers(System.IntPtr)">
            <summary>
                Joysticks the has rumble triggers using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSetLED(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the joystick set led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSetLed(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Joysticks the set led using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the joystick send effect using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Joysticks the send effect using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerAddMapping(System.Byte[])">
            <summary>
                Internals the sdl game controller add mapping using the specified mapping string
            </summary>
            <param name="mappingString">The mapping string</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerAddMapping(System.String)">
            <summary>
                Sdl the game controller add mapping using the specified mapping string
            </summary>
            <param name="mappingString">The mapping string</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerNumMappings">
            <summary>
                Sdl the game controller num mappings
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerNumMappings">
            <summary>
                Games the controller num mappings
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerMappingForIndex(System.Int32)">
            <summary>
                Internals the sdl game controller mapping for index using the specified mapping index
            </summary>
            <param name="mappingIndex">The mapping index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerMappingForIndex(System.Int32)">
            <summary>
                Sdl the game controller mapping for index using the specified mapping index
            </summary>
            <param name="mappingIndex">The mapping index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerAddMappingsFromRW(System.IntPtr,System.Int32)">
            <summary>
                Internals the sdl game controller add mappings from rw using the specified rw
            </summary>
            <param name="rw">The rw</param>
            <param name="freeRw">The free rw</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerAddMappingsFromFile(System.String)">
            <summary>
                Sdl the game controller add mappings from file using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerMappingForGUID(System.Guid)">
            <summary>
                Internals the sdl game controller mapping for guid using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerMappingForGuid(System.Guid)">
            <summary>
                Sdl the game controller mapping for guid using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerMapping(System.IntPtr)">
            <summary>
                Internals the sdl game controller mapping using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerMapping(System.IntPtr)">
            <summary>
                Sdl the game controller mapping using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsGameController(System.Int32)">
            <summary>
                Sdl the is game controller using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.IsGameController(System.Int32)">
            <summary>
                Is the game controller using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerNameForIndex(System.Int32)">
            <summary>
                Internals the sdl game controller name for index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerNameForIndex(System.Int32)">
            <summary>
                Sdl the game controller name for index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerMappingForDeviceIndex(System.Int32)">
            <summary>
                Internals the sdl game controller mapping for device index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerMappingForDeviceIndex(System.Int32)">
            <summary>
                Sdl the game controller mapping for device index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerOpen(System.Int32)">
            <summary>
                Sdl the game controller open using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerOpen(System.Int32)">
            <summary>
                Games the controller open using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerName(System.IntPtr)">
            <summary>
                Internals the sdl game controller name using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerName(System.IntPtr)">
            <summary>
                Sdl the game controller name using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetVendor(System.IntPtr)">
            <summary>
                Sdl the game controller get vendor using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetVendor(System.IntPtr)">
            <summary>
                Games the controller get vendor using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetProduct(System.IntPtr)">
            <summary>
                Sdl the game controller get product using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetProduct(System.IntPtr)">
            <summary>
                Games the controller get product using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetProductVersion(System.IntPtr)">
            <summary>
                Sdl the game controller get product version using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetProductVersion(System.IntPtr)">
            <summary>
                Games the controller get product version using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetSerial(System.IntPtr)">
            <summary>
                Internals the sdl game controller get serial using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_GameControllerGetSerial(System.IntPtr)">
            <summary>
                Sdl the game controller get serial using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetAttached(System.IntPtr)">
            <summary>
                Sdl the game controller get attached using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetAttached(System.IntPtr)">
            <summary>
                Games the controller get attached using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetJoystick(System.IntPtr)">
            <summary>
                Sdl the game controller get joystick using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetJoystick(System.IntPtr)">
            <summary>
                Games the controller get joystick using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerEventState(System.Int32)">
            <summary>
                Sdl the game controller event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerEventState(System.Int32)">
            <summary>
                Games the controller event state using the specified state
            </summary>
            <param name="state">The state</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerUpdate">
            <summary>
                Sdl the game controller update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerUpdate">
            <summary>
                Games the controller update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetAxisFromString(System.Byte[])">
            <summary>
                Internals the sdl game controller get axis from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller axis</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetAxisFromString(System.String)">
            <summary>
                Sdl the game controller get axis from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller axis</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetStringForAxis(Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Internals the sdl game controller get string for axis using the specified axis
            </summary>
            <param name="axis">The axis</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetStringForAxis(Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Sdl the game controller get string for axis using the specified axis
            </summary>
            <param name="axis">The axis</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetBindForAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Internals the sdl game controller get bind for axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The internal sdl game controller button bind</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetBindForAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Sdl the game controller get bind for axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Sdl the game controller get axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Games the controller get axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The short</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetButtonFromString(System.Byte[])">
            <summary>
                Internals the sdl game controller get button from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller button</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_GameControllerGetButtonFromString(System.String)">
            <summary>
                Sdl the game controller get button from string using the specified pch string
            </summary>
            <param name="pchString">The pch string</param>
            <returns>The sdl game controller button</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetStringForButton(Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Internals the sdl game controller get string for button using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetStringForButton(Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Sdl the game controller get string for button using the specified button
            </summary>
            <param name="button">The button</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetBindForButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Internals the sdl game controller get bind for button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The internal sdl game controller button bind</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetBindForButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Sdl the game controller get bind for button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Sdl the game controller get button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Games the controller get button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The byte</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Sdl the game controller rumble using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="lowFrequencyRumble">The low frequency rumble</param>
            <param name="highFrequencyRumble">The high frequency rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerRumble(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Games the controller rumble using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="lowFrequencyRumble">The low frequency rumble</param>
            <param name="highFrequencyRumble">The high frequency rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Sdl the game controller rumble triggers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="leftRumble">The left rumble</param>
            <param name="rightRumble">The right rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerRumbleTriggers(System.IntPtr,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
                Games the controller rumble triggers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="leftRumble">The left rumble</param>
            <param name="rightRumble">The right rumble</param>
            <param name="durationMs">The duration ms</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerClose(System.IntPtr)">
            <summary>
                Sdl the game controller close using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerClose(System.IntPtr)">
            <summary>
                Games the controller close using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetAppleSFSymbolsNameForButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Internals the sdl game controller get apple sf symbols name for button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_GameControllerGetAppleSFSymbolsNameForButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Sdl the game controller get apple sf symbols name for button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetAppleSFSymbolsNameForAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Internals the sdl game controller get apple sf symbols name for axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_GameControllerGetAppleSFSymbolsNameForAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Sdl the game controller get apple sf symbols name for axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerFromInstanceID(System.Int32)">
            <summary>
                Sdl the game controller from instance id using the specified joy id
            </summary>
            <param name="joyId">The joy id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerFromInstanceId(System.Int32)">
            <summary>
                Internals the sdl game controller from instance id using the specified joy id
            </summary>
            <param name="joyId">The joy id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerTypeForIndex(System.Int32)">
            <summary>
                Sdl the game controller type for index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerTypeForIndex(System.Int32)">
            <summary>
                Games the controller type for index using the specified joystick index
            </summary>
            <param name="joystickIndex">The joystick index</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetType(System.IntPtr)">
            <summary>
                Sdl the game controller get type using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetType(System.IntPtr)">
            <summary>
                Games the controller get type using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl game controller type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerFromPlayerIndex(System.Int32)">
            <summary>
                Sdl the game controller from player index using the specified player index
            </summary>
            <param name="playerIndex">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerFromPlayerIndex(System.Int32)">
            <summary>
                Games the controller from player index using the specified player index
            </summary>
            <param name="playerIndex">The player index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
                Sdl the game controller set player index using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="playerIndex">The player index</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerSetPlayerIndex(System.IntPtr,System.Int32)">
            <summary>
                Games the controller set player index using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="playerIndex">The player index</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasLED(System.IntPtr)">
            <summary>
                Sdl the game controller has led using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasLed(System.IntPtr)">
            <summary>
                Games the controller has led using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasRumble(System.IntPtr)">
            <summary>
                Sdl the game controller has rumble using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasRumble(System.IntPtr)">
            <summary>
                Games the controller has rumble using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasRumbleTriggers(System.IntPtr)">
            <summary>
                Sdl the game controller has rumble triggers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasRumbleTriggers(System.IntPtr)">
            <summary>
                Games the controller has rumble triggers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerSetLED(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Sdl the game controller set led using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerSetLed(System.IntPtr,System.Byte,System.Byte,System.Byte)">
            <summary>
                Games the controller set led using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="red">The red</param>
            <param name="green">The green</param>
            <param name="blue">The blue</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Sdl the game controller has axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasAxis(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerAxis)">
            <summary>
                Games the controller has axis using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="axis">The axis</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Sdl the game controller has button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasButton(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlGameControllerButton)">
            <summary>
                Games the controller has button using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="button">The button</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetNumTouchpads(System.IntPtr)">
            <summary>
                Sdl the game controller get num touchpads using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetNumTouchpads(System.IntPtr)">
            <summary>
                Games the controller get num touchpads using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetNumTouchpadFingers(System.IntPtr,System.Int32)">
            <summary>
                Sdl the game controller get num touchpad fingers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="touchpad">The touchpad</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetNumTouchpadFingers(System.IntPtr,System.Int32)">
            <summary>
                Games the controller get num touchpad fingers using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="touchpad">The touchpad</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Single@,System.Single@,System.Single@)">
            <summary>
                Sdl the game controller get touchpad finger using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="touchpad">The touchpad</param>
            <param name="finger">The finger</param>
            <param name="state">The state</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="pressure">The pressure</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetTouchpadFinger(System.IntPtr,System.Int32,System.Int32,System.Byte@,System.Single@,System.Single@,System.Single@)">
            <summary>
                Games the controller get touchpad finger using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="touchpad">The touchpad</param>
            <param name="finger">The finger</param>
            <param name="state">The state</param>
            <param name="x">The </param>
            <param name="y">The </param>
            <param name="pressure">The pressure</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerHasSensor(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Sdl the game controller has sensor using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerHasSensor(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Games the controller has sensor using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerSetSensorEnabled(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the game controller set sensor enabled using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerSetSensorEnabled(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType,Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Games the controller set sensor enabled using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <param name="enabled">The enabled</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerIsSensorEnabled(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Sdl the game controller is sensor enabled using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerIsSensorEnabled(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Games the controller is sensor enabled using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetSensorData(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType,System.IntPtr,System.Int32)">
            <summary>
                Sdl the game controller get sensor data using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="numValues">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetSensorData(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType,System.IntPtr,System.Int32)">
            <summary>
                Games the controller get sensor data using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <param name="data">The data</param>
            <param name="numValues">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerGetSensorDataRate(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Sdl the game controller get sensor data rate using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerGetSensorDataRate(System.IntPtr,Alis.Core.Graphic.SDL.Enums.SdlSensorType)">
            <summary>
                Games the controller get sensor data rate using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="type">The type</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GameControllerSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the game controller send effect using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GameControllerSendEffect(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Games the controller send effect using the specified game controller
            </summary>
            <param name="gameController">The game controller</param>
            <param name="data">The data</param>
            <param name="size">The size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticClose(System.IntPtr)">
            <summary>
                Sdl the haptic close using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticClose(System.IntPtr)">
            <summary>
                Haptics the close using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticDestroyEffect(System.IntPtr,System.Int32)">
            <summary>
                Sdl the haptic destroy effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticDestroyEffect(System.IntPtr,System.Int32)">
            <summary>
                Haptics the destroy effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticEffectSupported(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Sdl the haptic effect supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticEffectSupported(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Haptics the effect supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticGetEffectStatus(System.IntPtr,System.Int32)">
            <summary>
                Sdl the haptic get effect status using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticGetEffectStatus(System.IntPtr,System.Int32)">
            <summary>
                Haptics the get effect status using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticIndex(System.IntPtr)">
            <summary>
                Sdl the haptic index using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticIndex(System.IntPtr)">
            <summary>
                Haptics the index using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticName(System.Int32)">
            <summary>
                Internals the sdl haptic name using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticName(System.Int32)">
            <summary>
                Sdl the haptic name using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticNewEffect(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Sdl the haptic new effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticNewEffect(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Haptics the new effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticNumAxes(System.IntPtr)">
            <summary>
                Sdl the haptic num axes using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticNumAxes(System.IntPtr)">
            <summary>
                Haptics the num axes using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticNumEffects(System.IntPtr)">
            <summary>
                Sdl the haptic num effects using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticNumEffects(System.IntPtr)">
            <summary>
                Haptics the num effects using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticNumEffectsPlaying(System.IntPtr)">
            <summary>
                Sdl the haptic num effects playing using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticNumEffectsPlaying(System.IntPtr)">
            <summary>
                Haptics the num effects playing using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticOpen(System.Int32)">
            <summary>
                Sdl the haptic open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticOpen(System.Int32)">
            <summary>
                Haptics the open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticOpened(System.Int32)">
            <summary>
                Sdl the haptic opened using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticOpened(System.Int32)">
            <summary>
                Haptics the opened using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticOpenFromJoystick(System.IntPtr)">
            <summary>
                Sdl the haptic open from joystick using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticOpenFromJoystick(System.IntPtr)">
            <summary>
                Haptics the open from joystick using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticOpenFromMouse">
            <summary>
                Sdl the haptic open from mouse
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticOpenFromMouse">
            <summary>
                Haptics the open from mouse
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticPause(System.IntPtr)">
            <summary>
                Sdl the haptic pause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticPause(System.IntPtr)">
            <summary>
                Haptics the pause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticQuery(System.IntPtr)">
            <summary>
                Sdl the haptic query using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticQuery(System.IntPtr)">
            <summary>
                Haptics the query using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticRumbleInit(System.IntPtr)">
            <summary>
                Sdl the haptic rumble init using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticRumbleInit(System.IntPtr)">
            <summary>
                Haptics the rumble init using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticRumblePlay(System.IntPtr,System.Single,System.UInt32)">
            <summary>
                Sdl the haptic rumble play using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="strength">The strength</param>
            <param name="length">The length</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticRumblePlay(System.IntPtr,System.Single,System.UInt32)">
            <summary>
                Haptics the rumble play using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="strength">The strength</param>
            <param name="length">The length</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticRumbleStop(System.IntPtr)">
            <summary>
                Sdl the haptic rumble stop using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticRumbleStop(System.IntPtr)">
            <summary>
                Haptics the rumble stop using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticRumbleSupported(System.IntPtr)">
            <summary>
                Sdl the haptic rumble supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticRumbleSupported(System.IntPtr)">
            <summary>
                Haptics the rumble supported using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticRunEffect(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
                Sdl the haptic run effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="iterations">The iterations</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticRunEffect(System.IntPtr,System.Int32,System.UInt32)">
            <summary>
                Haptics the run effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="iterations">The iterations</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticSetAutoCenter(System.IntPtr,System.Int32)">
            <summary>
                Sdl the haptic set auto center using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="autoCenter">The auto center</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticSetAutoCenter(System.IntPtr,System.Int32)">
            <summary>
                Haptics the set auto center using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="autoCenter">The auto center</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticSetGain(System.IntPtr,System.Int32)">
            <summary>
                Sdl the haptic set gain using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="gain">The gain</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticSetGain(System.IntPtr,System.Int32)">
            <summary>
                Haptics the set gain using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="gain">The gain</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticStopAll(System.IntPtr)">
            <summary>
                Sdl the haptic stop all using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticStopAll(System.IntPtr)">
            <summary>
                Haptics the stop all using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticStopEffect(System.IntPtr,System.Int32)">
            <summary>
                Sdl the haptic stop effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticStopEffect(System.IntPtr,System.Int32)">
            <summary>
                Haptics the stop effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticUnpause(System.IntPtr)">
            <summary>
                Sdl the haptic unpause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticUnpause(System.IntPtr)">
            <summary>
                Haptics the unpause using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HapticUpdateEffect(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Sdl the haptic update effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="data">The data</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.HapticUpdateEffect(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlHapticEffect@)">
            <summary>
                Haptics the update effect using the specified haptic
            </summary>
            <param name="haptic">The haptic</param>
            <param name="effect">The effect</param>
            <param name="data">The data</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_JoystickIsHaptic(System.IntPtr)">
            <summary>
                Sdl the joystick is haptic using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.JoystickIsHaptic(System.IntPtr)">
            <summary>
                Joysticks the is haptic using the specified joystick
            </summary>
            <param name="joystick">The joystick</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MouseIsHaptic">
            <summary>
                Sdl the mouse is haptic
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MouseIsHaptic">
            <summary>
                Mouses the is haptic
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_NumHaptics">
            <summary>
                Sdl the num haptics
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.NumHaptics">
            <summary>
                Nums the haptics
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_NumSensors">
            <summary>
                Sdl the num sensors
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.NumSensors">
            <summary>
                Nums the sensors
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetDeviceName(System.Int32)">
            <summary>
                Internals the sdl sensor get device name using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetDeviceName(System.Int32)">
            <summary>
                Sdl the sensor get device name using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetDeviceType(System.Int32)">
            <summary>
                Sdl the sensor get device type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetDeviceType(System.Int32)">
            <summary>
                Sensors the get device type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetDeviceNonPortableType(System.Int32)">
            <summary>
                Sdl the sensor get device non portable type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetDeviceNonPortableType(System.Int32)">
            <summary>
                Sensors the get device non portable type using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetDeviceInstanceID(System.Int32)">
            <summary>
                Sdl the sensor get device instance id using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetDeviceInstanceId(System.Int32)">
            <summary>
                Sensors the get device instance id using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorOpen(System.Int32)">
            <summary>
                Sdl the sensor open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorOpen(System.Int32)">
            <summary>
                Sensors the open using the specified device index
            </summary>
            <param name="deviceIndex">The device index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorFromInstanceID(System.Int32)">
            <summary>
                Sdl the sensor from instance id using the specified instance id
            </summary>
            <param name="instanceId">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorFromInstanceId(System.Int32)">
            <summary>
                Sensors the from instance id using the specified instance id
            </summary>
            <param name="instanceId">The instance id</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetName(System.IntPtr)">
            <summary>
                Internals the sdl sensor get name using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetName(System.IntPtr)">
            <summary>
                Sdl the sensor get name using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetType(System.IntPtr)">
            <summary>
                Sdl the sensor get type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetType(System.IntPtr)">
            <summary>
                Sensors the get type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The sdl sensor type</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetNonPortableType(System.IntPtr)">
            <summary>
                Sdl the sensor get non portable type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetNonPortableType(System.IntPtr)">
            <summary>
                Sensors the get non portable type using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetInstanceID(System.IntPtr)">
            <summary>
                Sdl the sensor get instance id using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetInstanceId(System.IntPtr)">
            <summary>
                Sensors the get instance id using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorGetData(System.IntPtr,System.Single[],System.Int32)">
            <summary>
                Sdl the sensor get data using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <param name="data">The data</param>
            <param name="numValues">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorGetData(System.IntPtr,System.Single[],System.Int32)">
            <summary>
                Sensors the get data using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
            <param name="data">The data</param>
            <param name="numValues">The num values</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorClose(System.IntPtr)">
            <summary>
                Sdl the sensor close using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorClose(System.IntPtr)">
            <summary>
                Sensors the close using the specified sensor
            </summary>
            <param name="sensor">The sensor</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SensorUpdate">
            <summary>
                Sdl the sensor update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SensorUpdate">
            <summary>
                Sensors the update
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockSensors">
            <summary>
                Sdl the lock sensors
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockSensors">
            <summary>
                Locks the sensors
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockSensors">
            <summary>
                Sdl the unlock sensors
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.UnlockSensors">
            <summary>
                Unlocks the sensors
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioBitSize(System.UInt16)">
            <summary>
                Sdl the audio bit size using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The ushort</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsFloat(System.UInt16)">
            <summary>
                Describes whether sdl audio is float
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsBigEndian(System.UInt16)">
            <summary>
                Describes whether sdl audio is big endian
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsSigned(System.UInt16)">
            <summary>
                Describes whether sdl audio is signed
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsInt(System.UInt16)">
            <summary>
                Describes whether sdl audio is int
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsLittleEndian(System.UInt16)">
            <summary>
                Describes whether sdl audio is little endian
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioIsUnsigned(System.UInt16)">
            <summary>
                Describes whether sdl audio is unsigned
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioInit(System.Byte[])">
            <summary>
                Internals the sdl audio init using the specified driver name
            </summary>
            <param name="driverName">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AudioInit(System.String)">
            <summary>
                Sdl the audio init using the specified driver name
            </summary>
            <param name="driverName">The driver name</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioQuit">
            <summary>
                Sdl the audio quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AudioQuit">
            <summary>
                Audio the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CloseAudio">
            <summary>
                Sdl the close audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CloseAudio">
            <summary>
                Closes the audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_CloseAudioDevice(System.UInt32)">
            <summary>
                Sdl the close audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.CloseAudioDevice(System.UInt32)">
            <summary>
                Closes the audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeWAV(System.IntPtr)">
            <summary>
                Sdl the free wav using the specified audio buf
            </summary>
            <param name="audioBuf">The audio buf</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.FreeWav(System.IntPtr)">
            <summary>
                Frees the wav using the specified audio buf
            </summary>
            <param name="audioBuf">The audio buf</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAudioDeviceName(System.Int32,System.Int32)">
            <summary>
                Internals the sdl get audio device name using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="isCapture">The is capture</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetAudioDeviceName(System.Int32,System.Int32)">
            <summary>
                Sdl the get audio device name using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="isCapture">The is capture</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAudioDeviceStatus(System.UInt32)">
            <summary>
                Sdl the get audio device status using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetAudioDeviceStatus(System.UInt32)">
            <summary>
                Gets the audio device status using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAudioDriver(System.Int32)">
            <summary>
                Internals the sdl get audio driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetAudioDriver(System.Int32)">
            <summary>
                Sdl the get audio driver using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAudioStatus">
            <summary>
                Sdl the get audio status
            </summary>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetAudioStatus">
            <summary>
                Gets the audio status
            </summary>
            <returns>The sdl audio status</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCurrentAudioDriver">
            <summary>
                Internals the sdl get current audio driver
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetCurrentAudioDriver">
            <summary>
                Sdl the get current audio driver
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumAudioDevices(System.Int32)">
            <summary>
                Sdl the get num audio devices using the specified is capture
            </summary>
            <param name="isCapture">The is capture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumAudioDevices(System.Int32)">
            <summary>
                Gets the num audio devices using the specified is capture
            </summary>
            <param name="isCapture">The is capture</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetNumAudioDrivers">
            <summary>
                Sdl the get num audio drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetNumAudioDrivers">
            <summary>
                Gets the num audio drivers
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LoadWAV_RW(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.IntPtr@,System.UInt32@)">
            <summary>
                Internals the sdl load wav rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="spec">The spec</param>
            <param name="audioBuf">The audio buf</param>
            <param name="audioLen">The audio len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LoadWav(System.String,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.IntPtr@,System.UInt32@)">
            <summary>
                Sdl the load wav using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="spec">The spec</param>
            <param name="audioBuf">The audio buf</param>
            <param name="audioLen">The audio len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockAudio">
            <summary>
                Sdl the lock audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockAudio">
            <summary>
                Locks the audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_LockAudioDevice(System.UInt32)">
            <summary>
                Sdl the lock audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.LockAudioDevice(System.UInt32)">
            <summary>
                Locks the audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MixAudio(System.Byte[],System.Byte[],System.UInt32,System.Int32)">
            <summary>
                Sdl the mix audio using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MixAudio(System.Byte[],System.Byte[],System.UInt32,System.Int32)">
            <summary>
                Mixes the audio using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MixAudioFormat(System.IntPtr,System.IntPtr,System.UInt16,System.UInt32,System.Int32)">
            <summary>
                Sdl the mix audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MixAudioFormat(System.IntPtr,System.IntPtr,System.UInt16,System.UInt32,System.Int32)">
            <summary>
                Mixes the audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_MixAudioFormat(System.Byte[],System.Byte[],System.UInt16,System.UInt32,System.Int32)">
            <summary>
                Sdl the mix audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.MixAudioFormat(System.Byte[],System.Byte[],System.UInt16,System.UInt32,System.Int32)">
            <summary>
                Mixes the audio format using the specified dst
            </summary>
            <param name="dst">The dst</param>
            <param name="src">The src</param>
            <param name="format">The format</param>
            <param name="len">The len</param>
            <param name="volume">The volume</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_OpenAudio(Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@)">
            <summary>
                Sdl the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlOpenAudio(Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@)">
            <summary>
                Sdl the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_OpenAudio(Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.IntPtr)">
            <summary>
                Sdl the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlOpenAudio(Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.IntPtr)">
            <summary>
                Sdl the open audio using the specified desired
            </summary>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_OpenAudioDevice(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.Int32)">
            <summary>
                Sdl the open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="isCapture">The is capture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowedChanges">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlOpenAudioDevice(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.Int32)">
            <summary>
                Sdl the open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="isCapture">The is capture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowedChanges">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_OpenAudioDevice(System.Byte[],System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.Int32)">
            <summary>
                Internals the sdl open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="isCapture">The is capture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowedChanges">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlOpenAudioDevice(System.String,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@,System.Int32)">
            <summary>
                Sdl the open audio device using the specified device
            </summary>
            <param name="device">The device</param>
            <param name="isCapture">The is capture</param>
            <param name="desired">The desired</param>
            <param name="obtained">The obtained</param>
            <param name="allowedChanges">The allowed changes</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PauseAudio(System.Int32)">
            <summary>
                Sdl the pause audio using the specified pause on
            </summary>
            <param name="pauseOn">The pause on</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPauseAudio(System.Int32)">
            <summary>
                Sdl the pause audio using the specified pause on
            </summary>
            <param name="pauseOn">The pause on</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_PauseAudioDevice(System.UInt32,System.Int32)">
            <summary>
                Sdl the pause audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="pauseOn">The pause on</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlPauseAudioDevice(System.UInt32,System.Int32)">
            <summary>
                Sdl the pause audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="pauseOn">The pause on</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockAudio">
            <summary>
                Sdl the unlock audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlUnlockAudio">
            <summary>
                Sdl the unlock audio
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_UnlockAudioDevice(System.UInt32)">
            <summary>
                Sdl the unlock audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlUnlockAudioDevice(System.UInt32)">
            <summary>
                Sdl the unlock audio device using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_QueueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the queue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlQueueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the queue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_DequeueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the dequeue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlDequeueAudio(System.UInt32,System.IntPtr,System.UInt32)">
            <summary>
                Sdl the dequeue audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <param name="data">The data</param>
            <param name="len">The len</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetQueuedAudioSize(System.UInt32)">
            <summary>
                Sdl the get queued audio size using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetQueuedAudioSize(System.UInt32)">
            <summary>
                Sdl the get queued audio size using the specified dev
            </summary>
            <param name="dev">The dev</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_ClearQueuedAudio(System.UInt32)">
            <summary>
                Sdl the clear queued audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlClearQueuedAudio(System.UInt32)">
            <summary>
                Sdl the clear queued audio using the specified dev
            </summary>
            <param name="dev">The dev</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_NewAudioStream(System.UInt16,System.Byte,System.Int32,System.UInt16,System.Byte,System.Int32)">
            <summary>
                Sdl the new audio stream using the specified src format
            </summary>
            <param name="srcFormat">The src format</param>
            <param name="srcChannels">The src channels</param>
            <param name="srcRate">The src rate</param>
            <param name="dstFormat">The dst format</param>
            <param name="dstChannels">The dst channels</param>
            <param name="dstRate">The dst rate</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlNewAudioStream(System.UInt16,System.Byte,System.Int32,System.UInt16,System.Byte,System.Int32)">
            <summary>
                Sdl the new audio stream using the specified src format
            </summary>
            <param name="srcFormat">The src format</param>
            <param name="srcChannels">The src channels</param>
            <param name="srcRate">The src rate</param>
            <param name="dstFormat">The dst format</param>
            <param name="dstChannels">The dst channels</param>
            <param name="dstRate">The dst rate</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioStreamPut(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the audio stream put using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioStreamPut(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the audio stream put using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioStreamGet(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the audio stream get using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioStreamGet(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Sdl the audio stream get using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="buf">The buf</param>
            <param name="len">The len</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioStreamAvailable(System.IntPtr)">
            <summary>
                Sdl the audio stream available using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioStreamAvailable(System.IntPtr)">
            <summary>
                Sdl the audio stream available using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AudioStreamClear(System.IntPtr)">
            <summary>
                Sdl the audio stream clear using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAudioStreamClear(System.IntPtr)">
            <summary>
                Sdl the audio stream clear using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_FreeAudioStream(System.IntPtr)">
            <summary>
                Sdl the free audio stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlFreeAudioStream(System.IntPtr)">
            <summary>
                Sdl the free audio stream using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAudioDeviceSpec(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@)">
            <summary>
                Sdl the get audio device spec using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="isCapture">The is capture</param>
            <param name="spec">The spec</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetAudioDeviceSpec(System.Int32,System.Int32,Alis.Core.Graphic.SDL.Structs.SdlAudioSpec@)">
            <summary>
                Sdl the get audio device spec using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="isCapture">The is capture</param>
            <param name="spec">The spec</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_TICKS_PASSED(System.UInt32,System.UInt32)">
            <summary>
                Describes whether sdl ticks passed
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Delay(System.UInt32)">
            <summary>
                Sdl the delay using the specified ms
            </summary>
            <param name="ms">The ms</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.Delay(System.UInt32)">
            <summary>
                Delays the ms
            </summary>
            <param name="ms">The ms</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTicks">
            <summary>
                Sdl the get ticks
            </summary>
            <returns>The int 32</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTicks">
            <summary>
                Internals the sdl get ticks
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetTicks64">
            <summary>
                Sdl the get ticks 64
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetTicks64">
            <summary>
                Gets the ticks 64
            </summary>
            <returns>The ulong</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPerformanceCounter">
            <summary>
                Sdl the get performance counter
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetPerformanceCounter">
            <summary>
                Gets the performance counter
            </summary>
            <returns>The ulong</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPerformanceFrequency">
            <summary>
                Sdl the get performance frequency
            </summary>
            <returns>The int 64</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.GetPerformanceFrequency">
            <summary>
                Internals the sdl get performance frequency
            </summary>
            <returns>The ulong</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AddTimer(System.UInt32,Alis.Core.Graphic.SDL.Delegates.SdlTimerCallback,System.IntPtr)">
            <summary>
                Sdl the add timer using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="param">The param</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AddTimer(System.UInt32,Alis.Core.Graphic.SDL.Delegates.SdlTimerCallback,System.IntPtr)">
            <summary>
                Adds the timer using the specified interval
            </summary>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="param">The param</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RemoveTimer(System.Int32)">
            <summary>
                Sdl the remove timer using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RemoveTimer(System.Int32)">
            <summary>
                Removes the timer using the specified id
            </summary>
            <param name="id">The id</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SetWindowsMessageHook(Alis.Core.Graphic.SDL.Delegates.SdlWindowsMessageHook,System.IntPtr)">
            <summary>
                Sdl the set windows message hook using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SetWindowsMessageHook(Alis.Core.Graphic.SDL.Delegates.SdlWindowsMessageHook,System.IntPtr)">
            <summary>
                Sets the windows message hook using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="userdata">The userdata</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetD3D9Device(System.IntPtr)">
            <summary>
                Sdl the render get d 3 d 9 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetD3D9Device(System.IntPtr)">
            <summary>
                Renders the get d 3 d 9 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_RenderGetD3D11Device(System.IntPtr)">
            <summary>
                Sdl the render get d 3 d 11 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.RenderGetD3D11Device(System.IntPtr)">
            <summary>
                Renders the get d 3 d 11 device using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_iPhoneSetAnimationCallback(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Delegates.SdlIPhoneAnimationCallback,System.IntPtr)">
            <summary>
                Sdl the i phone set animation callback using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="callbackParam">The callback param</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PhoneSetAnimationCallback(System.IntPtr,System.Int32,Alis.Core.Graphic.SDL.Delegates.SdlIPhoneAnimationCallback,System.IntPtr)">
            <summary>
                Is the phone set animation callback using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="interval">The interval</param>
            <param name="callback">The callback</param>
            <param name="callbackParam">The callback param</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_iPhoneSetEventPump(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Sdl the i phone set event pump using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.PhoneSetEventPump(Alis.Core.Graphic.SDL.Enums.SdlBool)">
            <summary>
                Is the phone set event pump using the specified enabled
            </summary>
            <param name="enabled">The enabled</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidGetJNIEnv">
            <summary>
                Sdl the android get jni env
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.AndroidGetJniEnv">
            <summary>
                Androids the get jni env
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidGetActivity">
            <summary>
                Sdl the android get activity
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidGetActivity">
            <summary>
                Sdl the android get activity
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsAndroidTV">
            <summary>
                Sdl the is android tv
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsAndroidTv">
            <summary>
                Sdl the is android tv
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsChromebook">
            <summary>
                Sdl the is chromebook
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsChromebook">
            <summary>
                Sdl the is chromebook
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsDeXMode">
            <summary>
                Sdl the is de x mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsDeXMode">
            <summary>
                Sdl the is de x mode
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidBackButton">
            <summary>
                Sdl the android back button
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidBackButton">
            <summary>
                Sdl the android back button
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidGetInternalStoragePath">
            <summary>
                Internals the sdl android get internal storage path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidGetInternalStoragePath">
            <summary>
                Sdl the android get internal storage path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidGetExternalStorageState">
            <summary>
                Sdl the android get external storage state
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidGetExternalStorageState">
            <summary>
                Sdl the android get external storage state
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidGetExternalStoragePath">
            <summary>
                Internals the sdl android get external storage path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidGetExternalStoragePath">
            <summary>
                Sdl the android get external storage path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetAndroidSDKVersion">
            <summary>
                Sdl the get android sdk version
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetAndroidSdkVersion">
            <summary>
                Sdl the get android sdk version
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidRequestPermission(System.Byte[])">
            <summary>
                Internals the sdl android request permission using the specified permission
            </summary>
            <param name="permission">The permission</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlAndroidRequestPermission(System.String)">
            <summary>
                Sdl the android request permission using the specified permission
            </summary>
            <param name="permission">The permission</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_AndroidShowToast(System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Internals the sdl android show toast using the specified message
            </summary>
            <param name="message">The message</param>
            <param name="duration">The duration</param>
            <param name="gravity">The gravity</param>
            <param name="xOffset">The offset</param>
            <param name="yOffset">The offset</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_AndroidShowToast(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Sdl the android show toast using the specified message
            </summary>
            <param name="message">The message</param>
            <param name="duration">The duration</param>
            <param name="gravity">The gravity</param>
            <param name="xOffset">The offset</param>
            <param name="yOffset">The offset</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_WinRTGetDeviceFamily">
            <summary>
                Sdl the win rt get device family
            </summary>
            <returns>The sdl win rt device family</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlWinRtGetDeviceFamily">
            <summary>
                Sdl the win rt get device family
            </summary>
            <returns>The sdl win rt device family</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_IsTablet">
            <summary>
                Sdl the is tablet
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlIsTablet">
            <summary>
                Sdl the is tablet
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetWindowWMInfo(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo@)">
            <summary>
                Sdl the get window wm info using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="info">The info</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetWindowWmInfo(System.IntPtr,Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo@)">
            <summary>
                Sdl the get window wm info using the specified window
            </summary>
            <param name="window">The window</param>
            <param name="info">The info</param>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetBasePath">
            <summary>
                Internals the sdl get base path
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetBasePath">
            <summary>
                Sdl the get base path
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPrefPath(System.Byte[],System.Byte[])">
            <summary>
                Internals the sdl get pref path using the specified org
            </summary>
            <param name="org">The org</param>
            <param name="app">The app</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetPrefPath(System.String,System.String)">
            <summary>
                Sdl the get pref path using the specified org
            </summary>
            <param name="org">The org</param>
            <param name="app">The app</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPowerInfo(System.Int32@,System.Int32@)">
            <summary>
                Sdl the get power info using the specified secs
            </summary>
            <param name="secs">The secs</param>
            <param name="pct">The pct</param>
            <returns>The sdl power state</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetPowerInfo(System.Int32@,System.Int32@)">
            <summary>
                Sdl the get power info using the specified secs
            </summary>
            <param name="secs">The secs</param>
            <param name="pct">The pct</param>
            <returns>The sdl power state</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCPUCount">
            <summary>
                Sdl the get cpu count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetCpuCount">
            <summary>
                Sdl the get cpu count
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetCPUCacheLineSize">
            <summary>
                Sdl the get cpu cache line size
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetCpuCacheLineSize">
            <summary>
                Sdl the get cpu cache line size
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasRDTSC">
            <summary>
                Sdl the has rdtsc
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasRdtsc">
            <summary>
                Sdl the has rdtsc
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasAltiVec">
            <summary>
                Sdl the has alti vec
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasAltiVec">
            <summary>
                Sdl the has alti vec
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasMMX">
            <summary>
                Sdl the has mmx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasMmx">
            <summary>
                Sdl the has mmx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_Has3DNow">
            <summary>
                Sdl the has 3 d now
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHas3DNow">
            <summary>
                Sdl the has 3 d now
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSSE">
            <summary>
                Sdl the has sse
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasSse">
            <summary>
                Sdl the has sse
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSSE2">
            <summary>
                Sdl the has sse 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasSse2">
            <summary>
                Sdl the has sse 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSSE3">
            <summary>
                Sdl the has sse 3
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasSse3">
            <summary>
                Sdl the has sse 3
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSSE41">
            <summary>
                Sdl the has sse 41
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasSse41">
            <summary>
                Sdl the has sse 41
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasSSE42">
            <summary>
                Sdl the has sse 42
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasSse42">
            <summary>
                Sdl the has sse 42
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasAVX">
            <summary>
                Sdl the has avx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasAvx">
            <summary>
                Sdl the has avx
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasAVX2">
            <summary>
                Sdl the has avx 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasAvX2">
            <summary>
                Sdl the has avx 2
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasAVX512F">
            <summary>
                Sdl the has avx 512 f
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasAvx512F">
            <summary>
                Sdl the has avx 512 f
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasNEON">
            <summary>
                Sdl the has neon
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasNeon">
            <summary>
                Sdl the has neon
            </summary>
            <returns>The sdl bool</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetSystemRAM">
            <summary>
                Sdl the get system ram
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetSystemRam">
            <summary>
                Sdl the get system ram
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SIMDGetAlignment">
            <summary>
                Sdl the simd get alignment
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlSimdGetAlignment">
            <summary>
                Sdl the simd get alignment
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SIMDAlloc(System.UInt32)">
            <summary>
                Sdl the simd alloc using the specified len
            </summary>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlSimdAlloc(System.UInt32)">
            <summary>
                Sdl the simd alloc using the specified len
            </summary>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SIMDRealloc(System.IntPtr,System.UInt32)">
            <summary>
                Sdl the simd realloc using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlSimdRealloc(System.IntPtr,System.UInt32)">
            <summary>
                Sdl the simd realloc using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
            <param name="len">The len</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_SIMDFree(System.IntPtr)">
            <summary>
                Sdl the simd free using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlSimdFree(System.IntPtr)">
            <summary>
                Sdl the simd free using the specified ptr
            </summary>
            <param name="ptr">The ptr</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_HasARMSIMD">
            <summary>
                Sdl the has arms imd
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlHasArmsimd">
            <summary>
                Sdl the has armsimd
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_GetPreferredLocales">
            <summary>
                Sdl the get preferred locales
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SdlGetPreferredLocales">
            <summary>
                Sdl the get preferred locales
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.INTERNAL_SDL_OpenURL(System.Byte[])">
            <summary>
                Internals the sdl open url using the specified url
            </summary>
            <param name="url">The url</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Sdl.SDL_OpenURL(System.String)">
            <summary>
                Sdl the open url using the specified url
            </summary>
            <param name="url">The url</param>
            <returns>The result</returns>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.SdlDlls">
            <summary>
                The im gui dlls class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlDlls.SdlDllBytes">
            <summary>
                The osx arm64 sdl2
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlDlls.SdlImageDllBytes">
            <summary>
                The sdl2 image
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlDlls.SdlTtfDllBytes">
            <summary>
                The sdl2 ttf
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.SdlImage">
            <summary>
                The sdl image class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlImage.NativeLibName">
            <summary>
                The native lib name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlImage.SdlImageMajorVersion">
            <summary>
                The sdl image major version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlImage.SdlImageMinorVersion">
            <summary>
                The sdl image minor version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlImage.SdlImagePatchLevel">
            <summary>
                The sdl image patch level
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.SDL.SdlImage" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.SdlImageVersion">
            <summary>
                Sdl the image version
            </summary>
            <returns>The sdl version</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_Linked_Version">
            <summary>
                Internals the img linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_Linked_Version">
            <summary>
                Img the linked version
            </summary>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_Init(Alis.Core.Graphic.SDL.Enums.ImgInitFlags)">
            <summary>
                Img the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgInit(Alis.Core.Graphic.SDL.Enums.ImgInitFlags)">
            <summary>
                Img the init using the specified flags
            </summary>
            <param name="flags">The flags</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_Quit">
            <summary>
                Img the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgQuit">
            <summary>
                Img the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_Load(System.Byte[])">
            <summary>
                Internals the img load using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.Img_Load(System.String)">
            <summary>
                Img the load using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The handle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_Load_RW(System.IntPtr,System.Int32)">
            <summary>
                Img the load rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadRw(System.IntPtr,System.Int32)">
            <summary>
                Img the load rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_LoadTyped_RW(System.IntPtr,System.Int32,System.Byte[])">
            <summary>
                Internals the img load typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadTypedRw(System.IntPtr,System.Int32,System.String)">
            <summary>
                Img the load typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_LoadTexture(System.IntPtr,System.Byte[])">
            <summary>
                Internals the img load texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadTexture(System.IntPtr,System.String)">
            <summary>
                Img the load texture using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="file">The file</param>
            <returns>The handle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_LoadTexture_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Img the load texture rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadTextureRw(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Img the load texture rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_LoadTextureTyped_RW(System.IntPtr,System.IntPtr,System.Int32,System.Byte[])">
            <summary>
                Internals the img load texture typed rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="free">The free</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadTextureTypedRw(System.IntPtr,System.IntPtr,System.Int32,System.String)">
            <summary>
                Img the load texture typed rw using the specified renderer
            </summary>
            <param name="renderer">The renderer</param>
            <param name="src">The src</param>
            <param name="freeSrc">The free</param>
            <param name="type">The type</param>
            <returns>The handle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_ReadXPMFromArray(System.String[])">
            <summary>
                Img the read xpm from array using the specified xpm
            </summary>
            <param name="xpm">The xpm</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgReadXpmFromArray(System.String[])">
            <summary>
                Img the read xpm from array using the specified xpm
            </summary>
            <param name="xpm">The xpm</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_SavePNG(System.IntPtr,System.Byte[])">
            <summary>
                Internals the img save png using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgSavePng(System.IntPtr,System.String)">
            <summary>
                Img the save png using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_SavePNG_RW(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Img the save png rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="free">The free</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgSavePng(System.IntPtr,System.IntPtr,System.Int32)">
            <summary>
                Img the save png using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="free">The free</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.INTERNAL_IMG_SaveJPG(System.IntPtr,System.Byte[],System.Int32)">
            <summary>
                Internals the img save jpg using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <param name="quality">The quality</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgSaveJpg(System.IntPtr,System.String,System.Int32)">
            <summary>
                Img the save jpg using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="file">The file</param>
            <param name="quality">The quality</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_Save(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Img the save jpg rw using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="free">The free</param>
            <param name="quality">The quality</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgSave(System.IntPtr,System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Img the save using the specified surface
            </summary>
            <param name="surface">The surface</param>
            <param name="dst">The dst</param>
            <param name="free">The free</param>
            <param name="quality">The quality</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgGetError">
            <summary>
                Img the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgSetError(System.String)">
            <summary>
                Img the set error using the specified fmt and arg
            </summary>
            <param name="fmtAndArgList">The fmt and arg list</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_LoadAnimation(System.String)">
            <summary>
                Img the load animation using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadAnimation(System.String)">
            <summary>
                Img the load animation using the specified file
            </summary>
            <param name="file">The file</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_LoadAnimation_RW(System.IntPtr,System.Int32)">
            <summary>
                Img the load animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadAnimationRw(System.IntPtr,System.Int32)">
            <summary>
                Img the load animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_LoadAnimationTyped_RW(System.IntPtr,System.Int32,System.String)">
            <summary>
                Img the load animation typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadAnimationTypedRw(System.IntPtr,System.Int32,System.String)">
            <summary>
                Img the load animation typed rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="type">The type</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_FreeAnimation(System.IntPtr)">
            <summary>
                Img the free animation using the specified anim
            </summary>
            <param name="anim">The anim</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgFreeAnimation(System.IntPtr)">
            <summary>
                Img the free animation using the specified anim
            </summary>
            <param name="anim">The anim</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.IMG_LoadGIFAnimation_RW(System.IntPtr)">
            <summary>
                Img the load gif animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlImage.ImgLoadGifAnimationRw(System.IntPtr)">
            <summary>
                Img the load gif animation rw using the specified src
            </summary>
            <param name="src">The src</param>
            <returns>The int ptr</returns>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.SdlTtf">
            <summary>
                The sdl ttf extern class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.NativeLibName">
            <summary>
                The native lib name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.SdlTtfMajorVersion">
            <summary>
                The sdl ttf major version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.SdlTtfMinorVersion">
            <summary>
                The sdl ttf minor version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.SdlTtfPatchLevel">
            <summary>
                The sdl ttf patch level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.UnicodeBomNative">
            <summary>
                The unicode bom native
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.UnicodeBomSwapped">
            <summary>
                The unicode bom swapped
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfStyleNormal">
            <summary>
                The ttf style normal
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfStyleBold">
            <summary>
                The ttf style bold
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfStyleItalic">
            <summary>
                The ttf style italic
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfStyleUnderline">
            <summary>
                The ttf style underline
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfStyleStrikethrough">
            <summary>
                The ttf style strikethrough
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfHintingNormal">
            <summary>
                The ttf hinting normal
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfHintingLight">
            <summary>
                The ttf hinting light
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfHintingMono">
            <summary>
                The ttf hinting mono
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfHintingNone">
            <summary>
                The ttf hinting none
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.SdlTtf.TtfHintingLightSubpixel">
            <summary>
                The ttf hinting light subpixel
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.SDL.SdlTtf" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_LinkedVersion">
            <summary>
                Internals the ttf linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfLinkedVersion">
            <summary>
                Internals the ttf linked version
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_ByteSwappedUNICODE(System.Int32)">
            <summary>
                Ttf the byte swapped unicode using the specified swapped
            </summary>
            <param name="swapped">The swapped</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfByteSwappedUnicode(System.Int32)">
            <summary>
                Ttf the byte swapped unicode using the specified swapped
            </summary>
            <param name="swapped">The swapped</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_Init">
            <summary>
                Ttf the init
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfInit">
            <summary>
                Ttf the init
            </summary>
            <exception cref="T:System.Exception">TTF_Init failed</exception>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_OpenFont(System.Byte[],System.Int32)">
            <summary>
                Internals the ttf open font using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">The ptSize</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfOpenFont(System.Byte[],System.Int32)">
            <summary>
                Internal ttf the open font using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">The pt size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_OpenFontRW(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Ttf the open font rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The freeSrc</param>
            <param name="ptSize">The ptSize</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfOpenFontRw(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Ttf the open font rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="ptSize">The pt size</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_OpenFontIndex(System.Byte[],System.Int32,System.Int64)">
            <summary>
                Internals the ttf open font index using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">the size</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfOpenFontIndex(System.Byte[],System.Int32,System.Int64)">
            <summary>
                Internals the ttf open font index using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">The pt size</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_OpenFontIndexRW(System.IntPtr,System.Int32,System.Int32,System.Int64)">
            <summary>
                Ttf the open font index rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="ptSize">The pt size</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfOpenFontIndexRw(System.IntPtr,System.Int32,System.Int32,System.Int64)">
            <summary>
                Ttf the open font index rw using the specified src
            </summary>
            <param name="src">The src</param>
            <param name="freeSrc">The free src</param>
            <param name="ptSize">The pt size</param>
            <param name="index">The index</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetFontSize(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ptSize">The size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetFontSize(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ptSize">The pt size</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontStyle(System.IntPtr)">
            <summary>
                Ttf the get font style using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontStyle(System.IntPtr)">
            <summary>
                Ttf the get font style using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetFontStyle(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font style using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="style">The style</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetFontStyle(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font style using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="style">The style</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontOutline(System.IntPtr)">
            <summary>
                Ttf the get font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontOutline(System.IntPtr)">
            <summary>
                Ttf the get font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetFontOutline(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="outline">The outline</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetFontOutline(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font outline using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="outline">The outline</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontHinting(System.IntPtr)">
            <summary>
                Ttf the get font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontHinting(System.IntPtr)">
            <summary>
                Ttf the get font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetFontHinting(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="hinting">The hinting</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetFontHinting(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font hinting using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="hinting">The hinting</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontHeight(System.IntPtr)">
            <summary>
                Ttf the font height using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontHeight(System.IntPtr)">
            <summary>
                Ttf the font height using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontAscent(System.IntPtr)">
            <summary>
                Ttf the font ascent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontAscent(System.IntPtr)">
            <summary>
                Ttf the font ascent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontDescent(System.IntPtr)">
            <summary>
                Ttf the font descent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontDescent(System.IntPtr)">
            <summary>
                Ttf the font descent using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontLineSkip(System.IntPtr)">
            <summary>
                Ttf the font line skip using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontLineSkip(System.IntPtr)">
            <summary>
                Ttf the font line skip using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontKerning(System.IntPtr)">
            <summary>
                Ttf the get font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontKerning(System.IntPtr)">
            <summary>
                Ttf the get font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetFontKerning(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="allowed">The allowed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetFontKerning(System.IntPtr,System.Int32)">
            <summary>
                Ttf the set font kerning using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="allowed">The allowed</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontFaces(System.IntPtr)">
            <summary>
                Ttf the font faces using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontFaces(System.IntPtr)">
            <summary>
                Ttf the font faces using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_FontFaceIsFixedWidth(System.IntPtr)">
            <summary>
                Ttf the font face is fixed width using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontFaceIsFixedWidth(System.IntPtr)">
            <summary>
                Ttf the font face is fixed width using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_FontFaceFamilyName(System.IntPtr)">
            <summary>
                Internals the ttf font face family name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontFaceFamilyName(System.IntPtr)">
            <summary>
                Ttf the font face family name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_FontFaceStyleName(System.IntPtr)">
            <summary>
                Internals the ttf font face style name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfFontFaceStyleName(System.IntPtr)">
            <summary>
                Internals the ttf font face style name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GlyphIsProvided(System.IntPtr,System.UInt16)">
            <summary>
                Ttf the glyph is provided using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGlyphIsProvided(System.IntPtr,System.UInt16)">
            <summary>
                Ttf the glyph is provided using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GlyphIsProvided32(System.IntPtr,System.UInt32)">
            <summary>
                Ttf the glyph is provided 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGlyphIsProvided32(System.IntPtr,System.UInt32)">
            <summary>
                Ttf the glyph is provided 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GlyphMetrics(System.IntPtr,System.UInt16,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Ttf the glyph metrics using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="max">The max</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGlyphMetrics(System.IntPtr,System.UInt16,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Ttf the glyph metrics using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="max">The max</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GlyphMetrics32(System.IntPtr,System.UInt32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Ttf the glyph metrics 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="max">The max</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGlyphMetrics32(System.IntPtr,System.UInt32,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
                Ttf the glyph metrics 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="minx">The minx</param>
            <param name="max">The max</param>
            <param name="miny">The miny</param>
            <param name="maxy">The maxy</param>
            <param name="advance">The advance</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SizeText(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
                Ttf the size text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSizeText(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
                Ttf the size text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_SizeUTF8(System.IntPtr,System.Byte[],System.Int32@,System.Int32@)">
            <summary>
                Internals the ttf size utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfSizeUtf8(System.IntPtr,System.Byte[],System.Int32@,System.Int32@)">
            <summary>
                Internals the ttf size utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SizeUNICODE(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
                Ttf the size unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSizeUnicode(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
                Ttf the size unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_MeasureText(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Ttf the measure text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfMeasureText(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Ttf the measure text using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_MeasureUTF8(System.IntPtr,System.Byte[],System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Internals the ttf measure utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfMeasureUtf8(System.IntPtr,System.Byte[],System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Internals the ttf measure utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_MeasureUNICODE(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Ttf the measure unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfMeasureUnicode(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Ttf the measure unicode using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Solid(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextSolid(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Solid(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8Solid(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Solid(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeSolid(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Solid_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextSolidWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Solid_Wrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8SolidWrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Solid_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeSolidWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph_Solid(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyphSolid(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph32_Solid(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyph32Solid(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Shaded(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextShaded(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Shaded(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8Shaded(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Shaded(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeShaded(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Shaded_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextShadedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Shaded_Wrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8ShadedWrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Shaded_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeShadedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph_Shaded(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyphShaded(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph32_Shaded(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyph32Shaded(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Blended(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextBlended(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render text blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Blended(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8Blended(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Internals the ttf render utf 8 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Blended(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeBlended(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render unicode blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderText_Blended_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderTextBlendedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render text blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.INTERNAL_TTF_RenderUTF8_Blended_Wrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.InternalTtfRenderUtf8BlendedWrapped(System.IntPtr,System.Byte[],Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Internals the ttf render utf 8 blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="sdlColor">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUNICODE_Blended_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUnicodeBlendedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render unicode blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph_Blended(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyphBlended(System.IntPtr,System.UInt16,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderGlyph32_Blended(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderGlyph32Blended(System.IntPtr,System.UInt32,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render glyph 32 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="ch">The ch</param>
            <param name="fg">The fg</param>
            <returns>The int ptr</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetDirection(System.Int32)">
            <summary>
                Ttf the set direction using the specified direction
            </summary>
            <param name="direction">The direction</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetDirection(System.Int32)">
            <summary>
                Ttf the set direction using the specified direction
            </summary>
            <param name="direction">The direction</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_SetScript(System.Int32)">
            <summary>
                Ttf the set script using the specified script
            </summary>
            <param name="script">The script</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetScript(System.Int32)">
            <summary>
                Ttf the set script using the specified script
            </summary>
            <param name="script">The script</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_CloseFont(System.IntPtr)">
            <summary>
                Ttf the close font using the specified font
            </summary>
            <param name="font">The font</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfCloseFont(System.IntPtr)">
            <summary>
                Ttf the close font using the specified font
            </summary>
            <param name="font">The font</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_Quit">
            <summary>
                Ttf the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfQuit">
            <summary>
                Ttf the quit
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_WasInit">
            <summary>
                Ttf the was init
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfWasInit">
            <summary>
                Ttf the was init
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.SDL_GetFontKerningSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the get font kerning size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="prevIndex">The prev index</param>
            <param name="index">The index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.SdlGetFontKerningSize(System.IntPtr,System.Int32,System.Int32)">
            <summary>
                Sdl the get font kerning size using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="prevIndex">The prev index</param>
            <param name="index">The index</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontKerningSizeGlyphs(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
                Ttf the get font kerning size glyphs using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previousCh">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontKerningSizeGlyphs(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
                Ttf the get font kerning size glyphs using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previousCh">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_GetFontKerningSizeGlyphs32(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
                Ttf the get font kerning size glyphs 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previousCh">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetFontKerningSizeGlyphs32(System.IntPtr,System.UInt16,System.UInt16)">
            <summary>
                Ttf the get font kerning size glyphs 32 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="previousCh">The previous ch</param>
            <param name="ch">The ch</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfOpenFont(System.String,System.Int32)">
            <summary>
                Ttf the open font using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">The pt size</param>
            <returns>The handle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUtf8BlendedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render utf 8 blended wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapped">The wrapped</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfGetError">
            <summary>
                Ttf the get error
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSetError(System.String)">
            <summary>
                Ttf the set error using the specified fmt and arg
            </summary>
            <param name="fmtAndArgList">The fmt and arg</param>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUtf8Blended(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render utf 8 blended using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUtf8ShadedWrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render utf 8 shaded wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUtf8Shaded(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render utf 8 shaded using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="bg">The bg</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TTF_RenderUTF8_Solid_Wrapped(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor,System.UInt32)">
            <summary>
                Ttf the render utf 8 solid wrapped using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <param name="wrapLength">The wrap length</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfRenderUtf8Solid(System.IntPtr,System.String,Alis.Core.Graphic.SDL.Structs.SdlColor)">
            <summary>
                Ttf the render utf 8 solid using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="fg">The fg</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfMeasureUtf8(System.IntPtr,System.String,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Ttf the measure utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="measureWidth">The measure width</param>
            <param name="extent">The extent</param>
            <param name="count">The count</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfSizeUtf8(System.IntPtr,System.String,System.Int32@,System.Int32@)">
            <summary>
                Ttf the size utf 8 using the specified font
            </summary>
            <param name="font">The font</param>
            <param name="text">The text</param>
            <param name="w">The </param>
            <param name="h">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfFontFaceStyleName(System.IntPtr)">
            <summary>
                Ttf the font face style name using the specified font
            </summary>
            <param name="font">The font</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfOpenFontIndex(System.String,System.Int32,System.Int64)">
            <summary>
                Ttf the open font index using the specified file
            </summary>
            <param name="file">The file</param>
            <param name="ptSize">The pt size</param>
            <param name="index">The index</param>
            <returns>The handle</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.TtfLinkedVersion">
            <summary>
                Ttf the linked version
            </summary>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.SdlTtf.SdlTtfVersion">
            <summary>
                Sdl the ttf version using the specified x
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.ImgAnimation">
            <summary>
                The img animation
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.ImgAnimation.W">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.ImgAnimation.H">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.ImgAnimation.Frames">
            <summary>
                The frames
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.ImgAnimation.Delays">
            <summary>
                The delays
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalAndroidWmInfo">
            <summary>
                The internal android wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalAndroidWmInfo.window">
            <summary>
                Refers to an ANativeWindow
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalAndroidWmInfo.surface">
            <summary>
                Refers to an EGLSurface
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalCocoaWmInfo">
            <summary>
                The internal cocoa wminfo
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalCocoaWmInfo.window">
            <summary>
                Refers to an NSWindow*
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalDirectfbWmInfo">
            <summary>
                The internal directfb info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalDirectfbWmInfo.dfb">
            <summary>
                Refers to an IDirectFB*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalDirectfbWmInfo.window">
            <summary>
                Refers to an IDirectFBWindow*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalDirectfbWmInfo.surface">
            <summary>
                Refers to an IDirectFBSurface*
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindHat">
            <summary>
                The internal game controller button bind hat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindHat.hat">
            <summary>
                The hat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindHat.hat_mask">
            <summary>
                The hat mask
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindUnion">
            <summary>
                The internal game controller button bind union
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindUnion.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindUnion.axis">
            <summary>
                The axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalGameControllerButtonBindUnion.hat">
            <summary>
                The hat
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalKmsWmInfo">
            <summary>
                The internal kms wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalKmsWmInfo.dev_index">
            <summary>
                The dev index
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalKmsWmInfo.drm_fd">
            <summary>
                The drm fd
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalKmsWmInfo.gbm_dev">
            <summary>
                Refers to a gbm_device*
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalMirWmInfo">
            <summary>
                The internal mir wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalMirWmInfo.connection">
            <summary>
                Refers to a MirConnection*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalMirWmInfo.surface">
            <summary>
                Refers to a MirSurface*
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalOs2WmInfo">
            <summary>
                The internal os2 wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalOs2WmInfo.hwnd">
            <summary>
                Refers to an HWND
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalOs2WmInfo.hwndFrame">
            <summary>
                efers to an HWND
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalSdlGameControllerButtonBind">
            <summary>
                The internal sdl game controller button bind
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlGameControllerButtonBind.bindType">
            <summary>
                The bind type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlGameControllerButtonBind.unionVal0">
            <summary>
                The union val
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlGameControllerButtonBind.unionVal1">
            <summary>
                The union val
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxButtonData">
            <summary>
                The internal sdl message box button data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxButtonData.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxButtonData.buttonId">
            <summary>
                The button id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxButtonData.text">
            <summary>
                The UTF-8 button text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData">
            <summary>
                The internal sdl message box data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.window">
            <summary>
                The window, Parent window, can be NULL
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.title">
            <summary>
                The title, UTF-8 title
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.message">
            <summary>
                The message
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.numbuttons">
            <summary>
                The numbuttons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.buttons">
            <summary>
                The buttons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSdlMessageBoxData.colorScheme">
            <summary>
                The color scheme
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion">
            <summary>
                The internal sys wm driver union
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.win">
            <summary>
                The win
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.winrt">
            <summary>
                The winrt
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.x11">
            <summary>
                The 11
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.dfb">
            <summary>
                The dfb
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.cocoa">
            <summary>
                The cocoa
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.uikit">
            <summary>
                The uikit
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.wl">
            <summary>
                The wl
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.mir">
            <summary>
                The mir
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.android">
            <summary>
                The android
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.os2">
            <summary>
                The os
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.vivante">
            <summary>
                The vivante
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalSysWmDriverUnion.ksm">
            <summary>
                The ksm
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalUikitWmInfo">
            <summary>
                The internal uikit wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalUikitWmInfo.window">
            <summary>
                Refers to a UIWindow*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalUikitWmInfo.framebuffer">
            <summary>
                The frame buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalUikitWmInfo.colorBuffer">
            <summary>
                The color buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalUikitWmInfo.resolveFramebuffer">
            <summary>
                The resolve frame buffer
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalVivanteWmInfo">
            <summary>
                The internal vivante wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalVivanteWmInfo.display">
            <summary>
                The display
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalVivanteWmInfo.window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo">
            <summary>
                The internal wayland wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.display">
            <summary>
                Refers to a wl_display*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.surface">
            <summary>
                Refers to a wl_surface*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.shell_surface">
            <summary>
                Refers to a wl_shell_surface*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.egl_window">
            <summary>
                Refers to an egl_window*, requires >= 2.0.16
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.xdg_surface">
            <summary>
                Refers to an xdg_surface*, requires >= 2.0.16
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWaylandWmInfo.xdg_toplevel">
            <summary>
                Refers to an xdg_toplevel*, requires >= 2.0.18
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalWindowsWmInfo">
            <summary>
                The internal windows wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWindowsWmInfo.window">
            <summary>
                Refers to an HWND
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWindowsWmInfo.hdc">
            <summary>
                Refers to an HDC
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWindowsWmInfo.hInstance">
            <summary>
                Refers to an H INSTANCE
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalWinrtWmInfo">
            <summary>
                The internal winrt wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalWinrtWmInfo.window">
            <summary>
                Refers to an inspect
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.InternalX11WmInfo">
            <summary>
                The internal x11 wm info
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalX11WmInfo.display">
            <summary>
                Refers to a Display*
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.InternalX11WmInfo.window">
            <summary>
                Refers to a Window (XID, use ToInt64!)
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent">
            <summary>
                The sdl audio device event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.isCapture">
            <summary>
                The is capture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioDeviceEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec">
            <summary>
                The sdl audio spec
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.freq">
            <summary>
                The freq
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.format">
            <summary>
                The SDL_AudioFormat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.channels">
            <summary>
                The channels
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.silence">
            <summary>
                The silence
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.samples">
            <summary>
                The samples
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.size">
            <summary>
                The size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.callback">
            <summary>
                The callback
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlAudioSpec.userdata">
            <summary>
                The userdata
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlColor">
            <summary>
                The sdl color
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlColor.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlColor.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlColor.b">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlColor.a">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent">
            <summary>
                The sdl controller axis event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.which">
            <summary>
                The which SDL_JoystickID
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.axis">
            <summary>
                The axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.axisValue">
            <summary>
                The axis value
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerAxisEvent.padding4">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent">
            <summary>
                The sdl controller button event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.which">
            <summary>
                The which SDL_JoystickID
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerButtonEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlControllerDeviceEvent">
            <summary>
                The sdl controller device event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerDeviceEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerDeviceEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerDeviceEvent.which">
            <summary>
                The which joystick id
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent">
            <summary>
                The sdl controller sensor event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.which">
            <summary>
                The which SDL_JoystickID
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.sensor">
            <summary>
                The sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.data1">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.data2">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerSensorEvent.data3">
            <summary>
                The data
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent">
            <summary>
                The sdl controller touch pad event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.which">
            <summary>
                The which SDL_JoystickID
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.touchpad">
            <summary>
                The touchpad
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.finger">
            <summary>
                The finger
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlControllerTouchpadEvent.pressure">
            <summary>
                The pressure
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent">
            <summary>
                The sdl display event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.display">
            <summary>
                The display
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.displayEvent">
            <summary>
                The display event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayEvent.data1">
            <summary>
                The data
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode">
            <summary>
                The sdl display mode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode.format">
            <summary>
                The format
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode.w">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode.h">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode.refresh_rate">
            <summary>
                The refresh rate
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDisplayMode.driverData">
            <summary>
                The driverdata
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent">
            <summary>
                The sdl dollar gesture event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.touchId">
            <summary>
                The touch id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.gestureId">
            <summary>
                The gesture id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.numFingers">
            <summary>
                The num fingers
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.error">
            <summary>
                The error
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDollarGestureEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlDropEvent">
            <summary>
                The sdl drop event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDropEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDropEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDropEvent.file">
            <summary>
                The file
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlDropEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlEvent">
            <summary>
                The sdl event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.typeFSharp">
            <summary>
                The type sharp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.display">
            <summary>
                The display
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.window">
            <summary>
                The window
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.key">
            <summary>
                The key
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.edit">
            <summary>
                The edit
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.text">
            <summary>
                The text
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.motion">
            <summary>
                The motion
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.wheel">
            <summary>
                The wheel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.jAxis">
            <summary>
                The j axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.jBall">
            <summary>
                The j ball
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.jHat">
            <summary>
                The j hat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.jButton">
            <summary>
                The j button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.jDevice">
            <summary>
                The j device
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.cAxis">
            <summary>
                The c axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.cButton">
            <summary>
                The c button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.cDevice">
            <summary>
                The c device
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.cTouchpad">
            <summary>
                The c touchpad
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.cSensor">
            <summary>
                The c sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.aDevice">
            <summary>
                The adevice
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.sensor">
            <summary>
                The sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.quit">
            <summary>
                The quit
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.user">
            <summary>
                The user
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.sysWm">
            <summary>
                The sys wm
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.tFinger">
            <summary>
                The t finger
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.mGesture">
            <summary>
                The m gesture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.dGesture">
            <summary>
                The d gesture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.drop">
            <summary>
                The drop
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding0">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding4">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding5">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding6">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding7">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding8">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding9">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding10">
            <summary>
                The padding 10
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding11">
            <summary>
                The padding 11
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding12">
            <summary>
                The padding 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding13">
            <summary>
                The padding 13
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding14">
            <summary>
                The padding 14
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding15">
            <summary>
                The padding 15
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding16">
            <summary>
                The padding 16
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding17">
            <summary>
                The padding 17
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding18">
            <summary>
                The padding 18
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding19">
            <summary>
                The padding 19
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding20">
            <summary>
                The padding 20
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding21">
            <summary>
                The padding 21
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding22">
            <summary>
                The padding 22
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding23">
            <summary>
                The padding 23
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding24">
            <summary>
                The padding 24
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding25">
            <summary>
                The padding 25
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding26">
            <summary>
                The padding 26
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding27">
            <summary>
                The padding 27
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding28">
            <summary>
                The padding 28
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding29">
            <summary>
                The padding 29
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding30">
            <summary>
                The padding 30
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding31">
            <summary>
                The padding 31
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding32">
            <summary>
                The padding 32
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding33">
            <summary>
                The padding 33
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding34">
            <summary>
                The padding 34
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding35">
            <summary>
                The padding 35
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding36">
            <summary>
                The padding 36
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding37">
            <summary>
                The padding 37
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding38">
            <summary>
                The padding 38
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding39">
            <summary>
                The padding 39
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding40">
            <summary>
                The padding 40
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding41">
            <summary>
                The padding 41
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding42">
            <summary>
                The padding 42
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding43">
            <summary>
                The padding 43
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding44">
            <summary>
                The padding 44
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding45">
            <summary>
                The padding 45
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding46">
            <summary>
                The padding 46
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding47">
            <summary>
                The padding 47
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding48">
            <summary>
                The padding 48
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding49">
            <summary>
                The padding 49
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding50">
            <summary>
                The padding 50
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding51">
            <summary>
                The padding 51
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding52">
            <summary>
                The padding 52
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding53">
            <summary>
                The padding 53
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding54">
            <summary>
                The padding 54
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlEvent.padding55">
            <summary>
                The padding 55
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.SDL.Structs.SdlEvent.Padding">
            <summary>
                Gets or sets the value of the padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlFinger">
            <summary>
                The sdl finger
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlFinger.Id">
            <summary>
                The id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlFinger.X">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlFinger.Y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlFinger.Pressure">
            <summary>
                The pressure
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlGameControllerButtonBind">
            <summary>
                The sdl game controller button bind
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerButtonBind.bindType">
            <summary>
                The bind type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerButtonBind.value">
            <summary>
                The value
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType">
            <summary>
                The sdl game controller type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeUnknown">
            <summary>
                The sdl controller type unknown sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeXbox360">
            <summary>
                The sdl controller type xbox360 sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeXboxOne">
            <summary>
                The sdl controller type xbox one sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypePs3">
            <summary>
                The sdl controller type ps3 sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypePs4">
            <summary>
                The sdl controller type ps4 sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeNintendoSwitchPro">
            <summary>
                The sdl controller type nintendo switch pro sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeVirtual">
            <summary>
                The sdl controller type virtual sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypePs5">
            <summary>
                The sdl controller type ps5 sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeAmazonLuna">
            <summary>
                The sdl controller type amazon luna sdl game controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGameControllerType.SdlControllerTypeGoogleStadia">
            <summary>
                The sdl controller type google stadia sdl game controller type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlGenericEvent">
            <summary>
                The sdl generic event
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGenericEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlGenericEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition">
            <summary>
                The sdl haptic condition
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.delay">
            <summary>
                The delay
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.interval">
            <summary>
                The interval
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.right_sat">
            <summary>
                The right sat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.left_sat">
            <summary>
                The left sat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.rightCoefficient">
            <summary>
                The right Coefficient
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.leftCoefficient">
            <summary>
                The left Coefficient
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.deadBand">
            <summary>
                The dead band
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCondition.center">
            <summary>
                The center
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant">
            <summary>
                The sdl hapticconstant
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.delay">
            <summary>
                The delay
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.interval">
            <summary>
                The interval
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.level">
            <summary>
                The level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.attack_length">
            <summary>
                The attack length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.attack_level">
            <summary>
                The attack level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.fade_length">
            <summary>
                The fade length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticConstant.fade_level">
            <summary>
                The fade level
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom">
            <summary>
                The sdl hapticcustom
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.delay">
            <summary>
                The delay
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.interval">
            <summary>
                The interval
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.channels">
            <summary>
                The channels
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.period">
            <summary>
                The period
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.samples">
            <summary>
                The samples
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.data">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.attack_length">
            <summary>
                The attack length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.attack_level">
            <summary>
                The attack level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.fade_length">
            <summary>
                The fade length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticCustom.fade_level">
            <summary>
                The fade level
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticDirection">
            <summary>
                The sdl hapticdirection
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticDirection.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticDirection.dir">
            <summary>
                The dir
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect">
            <summary>
                The sdl hapticeffect
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.constant">
            <summary>
                The constant
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.periodic">
            <summary>
                The periodic
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.condition">
            <summary>
                The condition
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.ramp">
            <summary>
                The ramp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.leftright">
            <summary>
                The leftright
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticEffect.custom">
            <summary>
                The custom
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticLeftRight">
            <summary>
                The sdl hapticleftright
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticLeftRight.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticLeftRight.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticLeftRight.large_magnitude">
            <summary>
                The large magnitude
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticLeftRight.small_magnitude">
            <summary>
                The small magnitude
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic">
            <summary>
                The sdl hapticperiodic
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.delay">
            <summary>
                The delay
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.interval">
            <summary>
                The interval
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.period">
            <summary>
                The period
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.magnitude">
            <summary>
                The magnitude
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.offset">
            <summary>
                The offset
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.phase">
            <summary>
                The phase
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.attack_length">
            <summary>
                The attack length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.attack_level">
            <summary>
                The attack level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.fade_length">
            <summary>
                The fade length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticPeriodic.fade_level">
            <summary>
                The fade level
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp">
            <summary>
                The sdl hapticramp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.delay">
            <summary>
                The delay
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.interval">
            <summary>
                The interval
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.start">
            <summary>
                The start
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.end">
            <summary>
                The end
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.attack_length">
            <summary>
                The attack length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.attack_level">
            <summary>
                The attack level
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.fade_length">
            <summary>
                The fade length
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlHapticRamp.fade_level">
            <summary>
                The fade level
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent">
            <summary>
                The sdl joyaxisevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.axis">
            <summary>
                The axis
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.axisValue">
            <summary>
                The axis value
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyAxisEvent.padding4">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent">
            <summary>
                The sdl joyballevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.ball">
            <summary>
                The ball
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.xrel">
            <summary>
                The xrel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyBallEvent.yrel">
            <summary>
                The yrel
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent">
            <summary>
                The sdl joybuttonevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyButtonEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlJoyDeviceEvent">
            <summary>
                The sdl joydeviceevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyDeviceEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyDeviceEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyDeviceEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent">
            <summary>
                The sdl joyhatevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.hat">
            <summary>
                The hat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.hatValue">
            <summary>
                The hat value
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlJoyHatEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent">
            <summary>
                The sdl keyboardevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.repeat">
            <summary>
                The repeat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeyboardEvent.keysym">
            <summary>
                The keysym
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlKeysym">
            <summary>
                The sdl keysym
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeysym.scancode">
            <summary>
                The scancode
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeysym.sym">
            <summary>
                The sym
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeysym.mod">
            <summary>
                The mod
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlKeysym.unicode">
            <summary>
                The unicode
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlLocale">
            <summary>
                The sdl locale
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlLocale.language">
            <summary>
                The language
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlLocale.country">
            <summary>
                The country
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxButtonData">
            <summary>
                The sdl message box button data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxButtonData.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxButtonData.buttonId">
            <summary>
                The button id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxButtonData.text">
            <summary>
                The text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColor">
            <summary>
                The sdl messageboxcolor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColor.r">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColor.g">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColor.b">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColorScheme">
            <summary>
                The sdl messageboxcolorscheme
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxColorScheme.colors">
            <summary>
                The colors
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData">
            <summary>
                The sdl messageboxdata
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.window">
            <summary>
                The window
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.title">
            <summary>
                The title
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.message">
            <summary>
                The message
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.numbuttons">
            <summary>
                The numbuttons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.buttons">
            <summary>
                The buttons
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMessageBoxData.colorScheme">
            <summary>
                The color scheme
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent">
            <summary>
                The sdl mousebuttonevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.button">
            <summary>
                The button
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.clicks">
            <summary>
                The clicks
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseButtonEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent">
            <summary>
                The sdl mousemotionevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.padding1">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.padding2">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.padding3">
            <summary>
                The padding
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.xrel">
            <summary>
                The xrel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseMotionEvent.yrel">
            <summary>
                The yrel
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent">
            <summary>
                The sdl mousewheelevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.direction">
            <summary>
                The direction
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.preciseX">
            <summary>
                The precise
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMouseWheelEvent.preciseY">
            <summary>
                The precise
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent">
            <summary>
                The sdl multigestureevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.touchId">
            <summary>
                The touch id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.dTheta">
            <summary>
                The theta
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.dDist">
            <summary>
                The dist
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.numFingers">
            <summary>
                The num fingers
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlMultiGestureEvent.padding">
            <summary>
                The padding
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlPalette">
            <summary>
                The sdl palette
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPalette.ncolors">
            <summary>
                The ncolors
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPalette.colors">
            <summary>
                The colors
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPalette.version">
            <summary>
                The version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPalette.refcount">
            <summary>
                The refcount
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat">
            <summary>
                The sdl pixelformat
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.format">
            <summary>
                The format
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.palette">
            <summary>
                The palette
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.BitsPerPixel">
            <summary>
                The bits per pixel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.BytesPerPixel">
            <summary>
                The bytes per pixel
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Rmask">
            <summary>
                The rmask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Gmask">
            <summary>
                The gmask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Bmask">
            <summary>
                The bmask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Amask">
            <summary>
                The amask
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Rloss">
            <summary>
                The rloss
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Gloss">
            <summary>
                The gloss
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Bloss">
            <summary>
                The bloss
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Aloss">
            <summary>
                The aloss
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Rshift">
            <summary>
                The rshift
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Gshift">
            <summary>
                The gshift
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Bshift">
            <summary>
                The bshift
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.Ashift">
            <summary>
                The ashift
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.refcount">
            <summary>
                The refcount
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlPixelFormat.next">
            <summary>
                The next
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlQuitEvent">
            <summary>
                The sdl quitevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlQuitEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlQuitEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo">
            <summary>
                The sdl rendererinfo
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.name">
            <summary>
                The name
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.num_texture_formats">
            <summary>
                The num texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats0">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats1">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats2">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats3">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats4">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats5">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats6">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats7">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats8">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats9">
            <summary>
                The texture formats
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats10">
            <summary>
                The texture formats 10
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats11">
            <summary>
                The texture formats 11
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats12">
            <summary>
                The texture formats 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats13">
            <summary>
                The texture formats 13
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats14">
            <summary>
                The texture formats 14
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.textureFormats15">
            <summary>
                The texture formats 15
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.max_texture_width">
            <summary>
                The max texture width
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.max_texture_height">
            <summary>
                The max texture height
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.SDL.Structs.SdlRendererInfo.TextureFormats">
            <summary>
                Gets or sets the value of the text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlRWops">
            <summary>
                The sdl rwops
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.size">
            <summary>
                The size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.seek">
            <summary>
                The seek
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.read">
            <summary>
                The read
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.write">
            <summary>
                The write
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.close">
            <summary>
                The close
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlRWops.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent">
            <summary>
                The sdl sensorevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.which">
            <summary>
                The which
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float0">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float1">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float2">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float3">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float4">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.float5">
            <summary>
                The data
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.SDL.Structs.SdlSensorEvent.Data">
            <summary>
                Gets or sets the value of the text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlSurface">
            <summary>
                The sdl surface
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.format">
            <summary>
                The format
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.w">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.h">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.pitch">
            <summary>
                The pitch
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.pixels">
            <summary>
                The pixels
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.userdata">
            <summary>
                The userdata
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.locked">
            <summary>
                The locked
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.list_blitmap">
            <summary>
                The list blitmap
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.clip_rect">
            <summary>
                The clip rect
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.map">
            <summary>
                The map
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSurface.refcount">
            <summary>
                The refcount
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlSysWmEvent">
            <summary>
                The sdl syswmevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWmEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWmEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWmEvent.msg">
            <summary>
                The msg
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo">
            <summary>
                The sdl syswminfo
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo.version">
            <summary>
                The version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo.subsystem">
            <summary>
                The subsystem
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlSysWMinfo.info">
            <summary>
                The info
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent">
            <summary>
                The sdl texteditingevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.textPtr">
            <summary>
                The sdl texteditingevent text size
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.start">
            <summary>
                The start
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.length">
            <summary>
                The length
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.SDL.Structs.SdlTextEditingEvent.Text">
            <summary>
                Gets or sets the value of the text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent">
            <summary>
                The sdl textinputevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte0">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte1">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte2">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte3">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte4">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte5">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte6">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte7">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte8">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte9">
            <summary>
                The byte
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte10">
            <summary>
                The byte 10
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte11">
            <summary>
                The byte 11
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte12">
            <summary>
                The byte 12
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte13">
            <summary>
                The byte 13
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte14">
            <summary>
                The byte 14
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte15">
            <summary>
                The byte 15
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte16">
            <summary>
                The byte 16
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte17">
            <summary>
                The byte 17
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte18">
            <summary>
                The byte 18
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte19">
            <summary>
                The byte 19
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte20">
            <summary>
                The byte 20
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte21">
            <summary>
                The byte 21
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte22">
            <summary>
                The byte 22
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte23">
            <summary>
                The byte 23
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte24">
            <summary>
                The byte 24
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte25">
            <summary>
                The byte 25
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte26">
            <summary>
                The byte 26
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte27">
            <summary>
                The byte 27
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte28">
            <summary>
                The byte 28
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte29">
            <summary>
                The byte 29
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte30">
            <summary>
                The byte 30
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.byte31">
            <summary>
                The byte 31
            </summary>
        </member>
        <member name="P:Alis.Core.Graphic.SDL.Structs.SdlTextInputEvent.Text">
            <summary>
                Gets or sets the value of the text
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent">
            <summary>
                The sdl touchfingerevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.touchId">
            <summary>
                The touch id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.fingerId">
            <summary>
                The finger id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.dx">
            <summary>
                The dx
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.dy">
            <summary>
                The dy
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.pressure">
            <summary>
                The pressure
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlTouchFingerEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlUserEvent">
            <summary>
                The sdl userevent
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.timestamp">
            <summary>
                The timestamp
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.windowID">
            <summary>
                The window id
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.code">
            <summary>
                The code
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.data1">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlUserEvent.data2">
            <summary>
                The data
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlVersion">
            <summary>
                The sdl version
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVersion.major">
            <summary>
                The major
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVersion.minor">
            <summary>
                The minor
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVersion.patch">
            <summary>
                The patch
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.SDL.Structs.SdlVersion.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Graphic.SDL.Structs.SdlVersion" /> class
            </summary>
            <param name="sdlTtfMajorVersion">The sdl ttf major version</param>
            <param name="sdlTtfMinorVersion">The sdl ttf minor version</param>
            <param name="sdlTtfPatchLevel">The sdl ttf patch level</param>
        </member>
        <member name="T:Alis.Core.Graphic.SDL.Structs.SdlVertex">
            <summary>
                The sdl vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVertex.position">
            <summary>
                The position
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVertex.color">
            <summary>
                The color
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.SDL.Structs.SdlVertex.tex_coord">
            <summary>
                The tex coord
            </summary>
        </member>
        <member name="T:Alis.Core.Graphic.Sprite">
            <summary>
            The sprite class
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Sprite.texture">
            <summary>
            The texture
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Sprite.depth">
            <summary>
            The depth
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.Sprite.#ctor(Alis.Core.Graphic.Texture,Alis.Core.Aspect.Math.Definition.Depth)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Graphic.Sprite"/> class
            </summary>
            <param name="texture">The texture</param>
            <param name="depth">The depth</param>
        </member>
        <member name="M:Alis.Core.Graphic.Sprite.Draw(System.IntPtr)">
            <summary>
            Draws the renderer
            </summary>
            <param name="renderer">The renderer</param>
        </member>
        <member name="T:Alis.Core.Graphic.Texture">
            <summary>
            The texture class
            </summary>
            <seealso cref="T:Alis.Core.Graphic.IDrawable"/>
        </member>
        <member name="F:Alis.Core.Graphic.Texture.nativePointer">
            <summary>
            The native pointer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Texture.renderer">
            <summary>
            The renderer
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Texture.image">
            <summary>
            The image
            </summary>
        </member>
        <member name="F:Alis.Core.Graphic.Texture.Figure">
            <summary>
            The figure
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.Texture.#ctor(System.IntPtr,Alis.Core.Graphic.Image,Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Graphic.Texture"/> class
            </summary>
            <param name="renderer">The renderer</param>
            <param name="image">The image</param>
            <param name="figure">The figure</param>
        </member>
        <member name="M:Alis.Core.Graphic.Texture.Load">
            <summary>
            Loads this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Graphic.Texture.GetNativePointer">
            <summary>
            Gets the native pointer
            </summary>
            <returns>The int ptr</returns>
        </member>
        <member name="T:Alis.Core.Network.BufferPool">
            <summary>
                This buffer pool is instance thread safe
                Use GetBuffer to get a MemoryStream (with a publically accessible buffer)
                Calling Close on this MemoryStream will clear its internal buffer and return the buffer to the pool for reuse
                MemoryStreams can grow larger than the DEFAULT_BUFFER_SIZE (or whatever you passed in)
                and the underlying buffers will be returned to the pool at their larger sizes
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.DefaultBufferSize">
            <summary>
                The default buffer size
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool._bufferPoolStack">
            <summary>
                The buffer pool stack
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool._bufferSize">
            <summary>
                The buffer size
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool" /> class
            </summary>
            <param name="bufferSize">The buffer size</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.GetBuffer">
            <summary>
                Gets a MemoryStream built from a buffer plucked from a thread safe pool
                The pool grows automatically.
                Closing the memory stream clears the buffer and returns it to the pool
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.ReturnBuffer(System.Byte[])">
            <summary>
                Returns the buffer using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
        </member>
        <member name="T:Alis.Core.Network.BufferPool.PublicBufferMemoryStream">
            <summary>
                This memory stream is not instance thread safe (not to be confused with the BufferPool which is instance thread
                safe)
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._bufferPoolInternal">
            <summary>
                The buffer pool internal
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._buffer">
            <summary>
                The buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Network.BufferPool.PublicBufferMemoryStream._ms">
            <summary>
                The ms
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.#ctor(System.Byte[],Alis.Core.Network.BufferPool)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.BufferPool.PublicBufferMemoryStream" /> class
            </summary>
            <param name="buffer">The buffer</param>
            <param name="bufferPool">The buffer pool</param>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Length">
            <summary>
                Gets the value of the length
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanRead">
            <summary>
                Gets the value of the can read
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanSeek">
            <summary>
                Gets the value of the can seek
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanTimeout">
            <summary>
                Gets the value of the can timeout
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CanWrite">
            <summary>
                Gets the value of the can write
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Capacity">
            <summary>
                Gets or sets the value of the capacity
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Position">
            <summary>
                Gets or sets the value of the position
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadTimeout">
            <summary>
                Gets or sets the value of the read timeout
            </summary>
        </member>
        <member name="P:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteTimeout">
            <summary>
                Gets or sets the value of the write timeout
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
                Begins the read using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="callback">The callback</param>
            <param name="state">The state</param>
            <returns>The async result</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
                Begins the write using the specified buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="callback">The callback</param>
            <param name="state">The state</param>
            <returns>The async result</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Close">
            <summary>
                Closes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Copies the to using the specified destination
            </summary>
            <param name="destination">The destination</param>
            <param name="bufferSize">The buffer size</param>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EndRead(System.IAsyncResult)">
            <summary>
                Ends the read using the specified async result
            </summary>
            <param name="asyncResult">The async result</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EndWrite(System.IAsyncResult)">
            <summary>
                Ends the write using the specified async result
            </summary>
            <param name="asyncResult">The async result</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Flush">
            <summary>
                Flushes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.FlushAsync(System.Threading.CancellationToken)">
            <summary>
                Flushes the cancellation token
            </summary>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.GetBuffer">
            <summary>
                Gets the buffer
            </summary>
            <returns>The byte array</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Reads the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.EnlargeBufferIfRequired(System.Int32)">
            <summary>
                Enlarges the buffer if required using the specified count
            </summary>
            <param name="count">The count</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException">
                Tried to create a buffer ({requiredSize:#,##0} bytes) that was
                larger than the max allowed size ({int.MaxValue:#,##0})
            </exception>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteByte(System.Byte)">
            <summary>
                Writes the byte using the specified value
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
                Writes the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Writes the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="cancellationToken">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.InitializeLifetimeService">
            <summary>
                Initializes the lifetime service
            </summary>
            <returns>The object</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Reads the buffer
            </summary>
            <param name="buffer">The buffer</param>
            <param name="offset">The offset</param>
            <param name="count">The count</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ReadByte">
            <summary>
                Reads the byte
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
                Seeks the offset
            </summary>
            <param name="offset">The offset</param>
            <param name="loc">The loc</param>
            <returns>The long</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.SetLength(System.Int64)">
            <summary>
                Note: This will not make the MemoryStream any smaller, only larger
            </summary>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.ToArray">
            <summary>
                Returns the array
            </summary>
            <returns>The byte array</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.TryGetBuffer(System.ArraySegment{System.Byte}@)">
            <summary>
                Describes whether this instance try get buffer
            </summary>
            <param name="buffer">The buffer</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Network.BufferPool.PublicBufferMemoryStream.WriteTo(System.IO.Stream)">
            <summary>
                Writes the to using the specified stream
            </summary>
            <param name="stream">The stream</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.EntityTooLargeException">
            <summary>
                The entity too large exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor(System.String)">
            <summary>
                Http header too large to fit in buffer
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.EntityTooLargeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException">
            <summary>
                The invalid http response code exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="responseCode">The response code</param>
            <param name="responseDetails">The response details</param>
            <param name="responseHeader">The response header</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseCode">
            <summary>
                Gets or sets the value of the response code
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseHeader">
            <summary>
                Gets or sets the value of the response header
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException.ResponseDetails">
            <summary>
                Gets or sets the value of the response details
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.MaskKeyLengthException">
            <summary>
            The mask key length exception class
            </summary>
            <seealso cref="T:System.Exception"/>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.MaskKeyLengthException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.MaskKeyLengthException"/> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException">
            <summary>
                The sec web socket key missing exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.ServerListenerSocketException">
            <summary>
                The server listener socket exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.ServerListenerSocketException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.ServerListenerSocketException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException">
            <summary>
                The web socket buffer overflow exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketBufferOverflowException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException">
            <summary>
                The web socket handshake failed exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException">
            <summary>
                The web socket version not supported exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException" /> class
            </summary>
            <param name="message">The message</param>
            <param name="inner">The inner</param>
        </member>
        <member name="T:Alis.Core.Network.HttpHelper">
            <summary>
                The http helper class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.HttpHelper.HttpGetHeaderRegex">
            <summary>
                The http get header regex
            </summary>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.CalculateWebSocketKey">
            <summary>
                Calculates a random WebSocket key that can be used to initiate a WebSocket handshake
            </summary>
            <returns>A random websocket key</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ComputeSocketAcceptString(System.String)">
            <summary>
                Computes a WebSocket accept string from a given key
            </summary>
            <param name="secWebSocketKey">The web socket key to base the accept string on</param>
            <returns>A web socket accept string</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ReadHttpHeaderAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads an http header as per the HTTP spec
            </summary>
            <param name="stream">The stream to read UTF8 text from</param>
            <param name="token">The cancellation token</param>
            <returns>The HTTP header</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.IsWebSocketUpgradeRequest(System.String)">
            <summary>
                Decodes the header to detect is this is a web socket upgrade response
            </summary>
            <param name="header">The HTTP header</param>
            <returns>True if this is an http WebSocket upgrade response</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.GetPathFromHeader(System.String)">
            <summary>
                Gets the path from the HTTP header
            </summary>
            <param name="httpHeader">The HTTP header to read</param>
            <returns>The path</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.GetSubProtocols(System.String)">
            <summary>
                Gets the sub protocols using the specified http header
            </summary>
            <param name="httpHeader">The http header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.EntityTooLargeException">Sec-WebSocket-Protocol exceeded the maximum of length of {MAX_LEN}</exception>
            <returns>A list of string</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.ReadHttpResponseCode(System.String)">
            <summary>
                Reads the HTTP response code from the http response string
            </summary>
            <param name="response">The response string</param>
            <returns>the response code</returns>
        </member>
        <member name="M:Alis.Core.Network.HttpHelper.WriteHttpHeaderAsync(System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Writes an HTTP response string to the stream
            </summary>
            <param name="response">The response (without the new line characters)</param>
            <param name="stream">The stream to write to</param>
            <param name="token">The cancellation token</param>
        </member>
        <member name="T:Alis.Core.Network.IBufferPool">
            <summary>
                The buffer pool interface
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IBufferPool.GetBuffer">
            <summary>
                Gets a MemoryStream built from a buffer plucked from a thread safe pool
                The pool grows automatically.
                Closing the memory stream clears the buffer and returns it to the pool
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.BinaryReaderWriter">
            <summary>
                The binary reader writer class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadExactly(System.Int32,System.IO.Stream,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the exactly using the specified length
            </summary>
            <param name="length">The length</param>
            <param name="stream">The stream</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <exception cref="T:System.IO.EndOfStreamException"></exception>
            <exception cref="T:System.IO.InternalBufferOverflowException">
                Unable to read {length} bytes into buffer (offset: {buffer.Offset}
                size: {buffer.Count}). Use a larger read buffer
            </exception>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadUShortExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the u short exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the ushort</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadULongExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the u long exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the ulong</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.ReadLongExactly(System.IO.Stream,System.Boolean,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Reads the long exactly using the specified stream
            </summary>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
            <param name="buffer">The buffer</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>A task containing the long</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteInt(System.Int32,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the int using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteULong(System.UInt64,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the u long using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteLong(System.Int64,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the long using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.BinaryReaderWriter.WriteUShort(System.UInt16,System.IO.Stream,System.Boolean)">
            <summary>
                Writes the u short using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="stream">The stream</param>
            <param name="isLittleEndian">The is little endian</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.Events">
            <summary>
                Use the Guid to locate this EventSource in PerfView using the Additional Providers box (without wildcard
                characters)
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.Events.Log">
            <summary>
                The events
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientConnectingToIpAddress(System.Guid,System.String,System.Int32)">
            <summary>
                Clients the connecting to ip address using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="ipAddress">The ip address</param>
            <param name="port">The port</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientConnectingToHost(System.Guid,System.String,System.Int32)">
            <summary>
                Clients the connecting to host using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="host">The host</param>
            <param name="port">The port</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.AttemtingToSecureSslConnection(System.Guid)">
            <summary>
                Attemtings the to secure ssl connection using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ConnectionSecured(System.Guid)">
            <summary>
                Connections the secured using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ConnectionNotSecure(System.Guid)">
            <summary>
                Connections the not secure using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SslCertificateError(System.Net.Security.SslPolicyErrors)">
            <summary>
                Ssls the certificate error using the specified ssl policy errors
            </summary>
            <param name="sslPolicyErrors">The ssl policy errors</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.HandshakeSent(System.Guid,System.String)">
            <summary>
                Handshakes the sent using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="httpHeader">The http header</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReadingHttpResponse(System.Guid)">
            <summary>
                Readings the http response using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReadHttpResponseError(System.Guid,System.String)">
            <summary>
                Reads the http response error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidHttpResponseCode(System.Guid,System.String)">
            <summary>
                Invalids the http response code using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.HandshakeFailure(System.Guid,System.String)">
            <summary>
                Handshakes the failure using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ClientHandshakeSuccess(System.Guid)">
            <summary>
                Clients the handshake success using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ServerHandshakeSuccess(System.Guid)">
            <summary>
                Servers the handshake success using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.AcceptWebSocketStarted(System.Guid)">
            <summary>
                Accepts the web socket started using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SendingHandshakeResponse(System.Guid,System.String)">
            <summary>
                Sendings the handshake response using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketVersionNotSupported(System.Guid,System.String)">
            <summary>
                Webs the socket version not supported using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.BadRequest(System.Guid,System.String)">
            <summary>
                Bads the request using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.UsePerMessageDeflate(System.Guid)">
            <summary>
                Uses the per message deflate using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.NoMessageCompression(System.Guid)">
            <summary>
                Noes the message compression using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.KeepAliveIntervalZero(System.Guid)">
            <summary>
                Keeps the alive interval zero using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.PingPongManagerStarted(System.Guid,System.Int32)">
            <summary>
                Pings the pong manager started using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="keepAliveIntervalSeconds">The keep alive interval seconds</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.PingPongManagerEnded(System.Guid)">
            <summary>
                Pings the pong manager ended using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.KeepAliveIntervalExpired(System.Guid,System.Int32)">
            <summary>
                Keeps the alive interval expired using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="keepAliveIntervalSeconds">The keep alive interval seconds</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeout(System.Guid,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeoutCancelled(System.Guid,System.Int32,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout cancelled using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="timeoutSeconds">The timeout seconds</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputAutoTimeoutError(System.Guid,System.String,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.String)">
            <summary>
                Closes the output auto timeout error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeException">The close exception</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.TryGetBufferNotSupported(System.Guid,System.String)">
            <summary>
                Tries the get buffer not supported using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="streamType">The stream type</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.SendingFrame(System.Guid,Alis.Core.Network.Internal.WebSocketOpCode,System.Boolean,System.Int32,System.Boolean)">
            <summary>
                Sendings the frame using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="numBytes">The num bytes</param>
            <param name="isPayloadCompressed">The is payload compressed</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.ReceivedFrame(System.Guid,Alis.Core.Network.Internal.WebSocketOpCode,System.Boolean,System.Int32)">
            <summary>
                Receiveds the frame using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="numBytes">The num bytes</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseOutputNoHandshake(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the output no handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeStarted(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the handshake started using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeRespond(System.Guid,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the handshake respond using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseHandshakeComplete(System.Guid)">
            <summary>
                Closes the handshake complete using the specified guid
            </summary>
            <param name="guid">The guid</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.CloseFrameReceivedInUnexpectedState(System.Guid,System.Net.WebSockets.WebSocketState,System.Nullable{System.Net.WebSockets.WebSocketCloseStatus},System.String)">
            <summary>
                Closes the frame received in unexpected state using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">The status description</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDispose(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Webs the socket dispose using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDisposeCloseTimeout(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Webs the socket dispose close timeout using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.WebSocketDisposeError(System.Guid,System.Net.WebSockets.WebSocketState,System.String)">
            <summary>
                Webs the socket dispose error using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
            <param name="exception">The exception</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidStateBeforeClose(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Invalids the state before close using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.Events.InvalidStateBeforeCloseOutput(System.Guid,System.Net.WebSockets.WebSocketState)">
            <summary>
                Invalids the state before close output using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="webSocketState">The web socket state</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrame">
            <summary>
                The web socket frame class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrame.#ctor(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.ArraySegment{System.Byte})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketFrame" /> class
            </summary>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="count">The count</param>
            <param name="maskKey">The mask key</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrame.#ctor(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.Net.WebSockets.WebSocketCloseStatus,System.String,System.ArraySegment{System.Byte})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketFrame" /> class
            </summary>
            <param name="isFinBitSet">The is fin bit set</param>
            <param name="webSocketOpCode">The web socket op code</param>
            <param name="count">The count</param>
            <param name="closeStatus">The close status</param>
            <param name="closeStatusDescription">The close status description</param>
            <param name="maskKey">The mask key</param>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.IsFinBitSet">
            <summary>
                Gets the value of the is fin bit set
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.OpCode">
            <summary>
                Gets the value of the op code
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.Count">
            <summary>
                Gets the value of the count
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.CloseStatus">
            <summary>
                Gets the value of the close status
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.CloseStatusDescription">
            <summary>
                Gets the value of the close status description
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketFrame.MaskKey">
            <summary>
                Gets the value of the mask key
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameCommon">
            <summary>
                The web socket frame common class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketFrameCommon.MaskKeyLength">
            <summary>
                The mask key length
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameCommon.ToggleMask(System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
                Mutate payload with the mask key
                This is a reversible process
                If you apply this to masked data it will be unmasked and visa versa
            </summary>
            <param name="maskKey">The 4 byte mask key</param>
            <param name="payload">The payload to mutate</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameReader">
            <summary>
                Reads a WebSocket frame
                see http://tools.ietf.org/html/rfc6455 for specification
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.CalculateNumBytesToRead(System.Int32,System.Int32)">
            <summary>
                Calculates the num bytes to read using the specified num bytes letf to read
            </summary>
            <param name="numBytesLetfToRead">The num bytes letf to read</param>
            <param name="bufferSize">The buffer size</param>
            <returns>The num bytes letf to read</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadFromCursorAsync(System.IO.Stream,System.ArraySegment{System.Byte},Alis.Core.Network.Internal.WebSocketReadCursor,System.Threading.CancellationToken)">
            <summary>
                The last read could not be completed because the read buffer was too small.
                We need to continue reading bytes off the stream.
                Not to be confused with a continuation frame
            </summary>
            <param name="fromStream">The stream to read from</param>
            <param name="intoBuffer">The buffer to read into</param>
            <param name="readCursor">The previous partial websocket frame read plus cursor information</param>
            <param name="cancellationToken">the cancellation token</param>
            <returns>A websocket frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadAsync(System.IO.Stream,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Read a WebSocket frame from the stream
            </summary>
            <param name="fromStream">The stream to read from</param>
            <param name="intoBuffer">The buffer to read into</param>
            <param name="cancellationToken">the cancellation token</param>
            <returns>A websocket frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.DecodeCloseFrame(System.Boolean,Alis.Core.Network.Internal.WebSocketOpCode,System.Int32,System.ArraySegment{System.Byte},System.ArraySegment{System.Byte})">
            <summary>
                Extracts close status and close description information from the web socket frame
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameReader.ReadLength(System.Byte,System.ArraySegment{System.Byte},System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads the length of the payload according to the contents of byte2
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketFrameWriter">
            <summary>
                The web socket frame writer class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketFrameWriter.Write(Alis.Core.Network.Internal.WebSocketOpCode,System.ArraySegment{System.Byte},System.IO.MemoryStream,System.Boolean,System.Boolean)">
            <summary>
                No async await stuff here because we are dealing with a memory stream
            </summary>
            <param name="opCode">The web socket opcode</param>
            <param name="fromPayload">Array segment to get payload data from</param>
            <param name="toStream">Stream to write to</param>
            <param name="isLastFrame">True is this is the last frame in this message (usually true)</param>
            <param name="isClient"></param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketImplementation">
            <summary>
                Main implementation of the WebSocket abstract class
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation.PingPongPayloadLen">
            <summary>
                The max ping pong payload len
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._guid">
            <summary>
                The guid
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._includeExceptionInCloseResponse">
            <summary>
                The include exception in close response
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._internalReadCts">
            <summary>
                The internal read cts
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._isClient">
            <summary>
                The is client
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._recycledStreamFactory">
            <summary>
                The recycled stream factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._semaphore">
            <summary>
                The semaphore slim
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._stream">
            <summary>
                The stream
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._usePerMessageDeflate">
            <summary>
                The use per message deflate
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._closeStatus">
            <summary>
                The close status
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._closeStatusDescription">
            <summary>
                The close status description
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._continuationFrameMessageType">
            <summary>
                The binary
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._isContinuationFrame">
            <summary>
                The is continuation frame
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._readCursor">
            <summary>
                The read cursor
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._state">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketImplementation._tryGetBufferFailureLogged">
            <summary>
                The try get buffer failure logged
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.#ctor(System.Guid,System.Func{System.IO.MemoryStream},System.IO.Stream,System.TimeSpan,System.String,System.Boolean,System.Boolean,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketImplementation" /> class
            </summary>
            <param name="guid">The guid</param>
            <param name="recycledStreamFactory">The recycled stream factory</param>
            <param name="stream">The stream</param>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="secWebSocketExtensions">The sec web socket extensions</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="isClient">The is client</param>
            <param name="subProtocol">The sub protocol</param>
            <exception cref="T:System.InvalidOperationException">KeepAliveInterval must be Zero or positive</exception>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.CloseStatus">
            <summary>
                Gets the value of the close status
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.CloseStatusDescription">
            <summary>
                Gets the value of the close status description
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.State">
            <summary>
                Gets the value of the state
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.SubProtocol">
            <summary>
                Gets the value of the sub protocol
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketImplementation.KeepAliveInterval">
            <summary>
                Gets the value of the keep alive interval
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.ReceiveAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Receive web socket result
            </summary>
            <param name="buffer">The buffer to copy data into</param>
            <param name="cancellationToken">The cancellation token</param>
            <returns>The web socket result details</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendAsync(System.ArraySegment{System.Byte},System.Net.WebSockets.WebSocketMessageType,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Send data to the web socket
            </summary>
            <param name="buffer">the buffer containing data to send</param>
            <param name="messageType">The message type. Can be Text or Binary</param>
            <param name="endOfMessage">
                True if this message is a standalone message (this is the norm)
                If it is a multi-part message then false (and true for the last message)
            </param>
            <param name="cancellationToken">the cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendPingAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Call this automatically from server side each keepAliveInterval period
                NOTE: ping payload must be 125 bytes or less
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.Abort">
            <summary>
                Aborts the WebSocket without sending a Close frame
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>
                Polite close (use the close handshake)
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseOutputAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Threading.CancellationToken)">
            <summary>
                Fire and forget close
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.Dispose">
            <summary>
                Dispose will send a close frame if the connection is still open
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.OnPong(Alis.Core.Network.PongEventArgs)">
            <summary>
                Called when a Pong frame is received
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.BuildClosePayload(System.Net.WebSockets.WebSocketCloseStatus,System.String)">
            <summary>
                As per the spec, write the close status followed by the close reason
            </summary>
            <param name="closeStatus">The close status</param>
            <param name="statusDescription">Optional extra close details</param>
            <returns>The payload to sent in the close frame</returns>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.SendPongAsync(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            NOTE: pong payload must be 125 bytes or less
            Pong should contain the same payload as the ping
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.RespondToCloseFrame(Alis.Core.Network.Internal.WebSocketFrame,System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Called when a Close frame is received
                Send a response close frame if applicable
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.GetBuffer(System.IO.MemoryStream)">
            <summary>
                Note that the way in which the stream buffer is accessed can lead to significant performance problems
                You want to avoid a call to stream.ToArray to avoid extra memory allocation
                MemoryStream can be configured to have its internal buffer accessible.
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.WriteStreamToNetwork(System.IO.MemoryStream,System.Threading.CancellationToken)">
            <summary>
                Puts data on the wire
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.GetOppCode(System.Net.WebSockets.WebSocketMessageType)">
            <summary>
                Turns a spec websocket frame opcode into a WebSocketMessageType
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketImplementation.CloseOutputAutoTimeoutAsync(System.Net.WebSockets.WebSocketCloseStatus,System.String,System.Exception)">
            <summary>
                Automatic WebSocket close in response to some invalid data from the remote websocket host
            </summary>
            <param name="closeStatus">The close status to use</param>
            <param name="statusDescription">A description of why we are closing</param>
            <param name="ex">The exception (for logging)</param>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketOpCode">
            <summary>
                The web socket op code enum
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.ContinuationFrame">
            <summary>
                The continuation frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.TextFrame">
            <summary>
                The text frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.BinaryFrame">
            <summary>
                The binary frame web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.ConnectionClose">
            <summary>
                The connection close web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.Ping">
            <summary>
                The ping web socket op code
            </summary>
        </member>
        <member name="F:Alis.Core.Network.Internal.WebSocketOpCode.Pong">
            <summary>
                The pong web socket op code
            </summary>
        </member>
        <member name="T:Alis.Core.Network.Internal.WebSocketReadCursor">
            <summary>
                The web socket read cursor class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.Internal.WebSocketReadCursor.#ctor(Alis.Core.Network.Internal.WebSocketFrame,System.Int32,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.Internal.WebSocketReadCursor" /> class
            </summary>
            <param name="frame">The frame</param>
            <param name="numBytesRead">The num bytes read</param>
            <param name="numBytesLeftToRead">The num bytes left to read</param>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.WebSocketFrame">
            <summary>
                Gets the value of the web socket frame
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.NumBytesRead">
            <summary>
                Gets the value of the num bytes read
            </summary>
        </member>
        <member name="P:Alis.Core.Network.Internal.WebSocketReadCursor.NumBytesLeftToRead">
            <summary>
                Gets the value of the num bytes left to read
            </summary>
        </member>
        <member name="T:Alis.Core.Network.IPingPongManager">
            <summary>
                Ping Pong Manager used to facilitate ping pong WebSocket messages
            </summary>
        </member>
        <member name="E:Alis.Core.Network.IPingPongManager.Pong">
            <summary>
                Raised when a Pong frame is received
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IPingPongManager.SendPing(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Sends a ping frame
            </summary>
            <param name="payload">The payload (must be 125 bytes of less)</param>
            <param name="cancellation">The cancellation token</param>
        </member>
        <member name="T:Alis.Core.Network.IWebSocketClientFactory">
            <summary>
                Web socket client factory used to open web socket client connections
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Connect with default options
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.Uri,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with options specified
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketClientFactory.ConnectAsync(System.IO.Stream,System.String,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with a stream that has already been opened and HTTP websocket upgrade request sent
                This function will check the handshake response from the server and proceed if successful
                Use this function if you have specific requirements to open a conenction like using special http headers and
                cookies
                You will have to build your own HTTP websocket upgrade request
                You may not even choose to use TCP/IP and this function will allow you to do that
            </summary>
            <param name="responseStream">The full duplex response stream from the server</param>
            <param name="secWebSocketKey">The secWebSocketKey you used in the handshake request</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Network.IWebSocketServerFactory">
            <summary>
                Web socket server factory used to open web socket server connections
            </summary>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade
            </summary>
            <param name="stream">The network stream</param>
            <param name="token">The optional cancellation token</param>
            <returns>Http data read from the stream</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with default options
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.IWebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with options specified
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="options">The web socket options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="T:Alis.Core.Network.PingPongManager">
            <summary>
                Ping Pong Manager used to facilitate ping pong WebSocket messages
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._cancellationToken">
            <summary>
                The cancellation token
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._guid">
            <summary>
                The guid
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._keepAliveInterval">
            <summary>
                The keep alive interval
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._stopwatch">
            <summary>
                The stopwatch
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._webSocket">
            <summary>
                The web socket
            </summary>
        </member>
        <member name="F:Alis.Core.Network.PingPongManager._pingSentTicks">
            <summary>
                The ping sent ticks
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.#ctor(System.Guid,System.Net.WebSockets.WebSocket,System.TimeSpan,System.Threading.CancellationToken)">
            <summary>
                Initialises a new instance of the PingPongManager to facilitate ping pong WebSocket messages.
                If you are manually creating an instance of this class then it is advisable to set keepAliveInterval to
                TimeSpan.Zero when you create the WebSocket instance (using a factory) otherwise you may be automatically
                be sending duplicate Ping messages (see keepAliveInterval below)
            </summary>
            <param name="guid"></param>
            <param name="webSocket">The web socket used to listen to ping messages and send pong messages</param>
            <param name="keepAliveInterval">
                The time between automatically sending ping messages.
                Set this to TimeSpan.Zero if you with to manually control sending ping messages.
            </param>
            <param name="cancellationToken">
                The token used to cancel a pending ping send AND the automatic sending of ping messages
                if keepAliveInterval is positive
            </param>
        </member>
        <member name="E:Alis.Core.Network.PingPongManager.Pong">
            <summary>
                Raised when a Pong frame is received
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.SendPing(System.ArraySegment{System.Byte},System.Threading.CancellationToken)">
            <summary>
                Sends a ping frame
            </summary>
            <param name="payload">The payload (must be 125 bytes of less)</param>
            <param name="cancellation">The cancellation token</param>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.OnPong(Alis.Core.Network.PongEventArgs)">
            <summary>
                Ons the pong using the specified e
            </summary>
            <param name="e">The </param>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.PingForever">
            <summary>
                Pings the forever
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PingPongManager.WebSocketImpl_Pong(System.Object,Alis.Core.Network.PongEventArgs)">
            <summary>
                Webs the socket impl pong using the specified sender
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Network.PongEventArgs">
            <summary>
                Pong EventArgs
            </summary>
        </member>
        <member name="M:Alis.Core.Network.PongEventArgs.#ctor(System.ArraySegment{System.Byte})">
            <summary>
                Initialises a new instance of the PongEventArgs class
            </summary>
            <param name="payload">The pong payload must be 125 bytes or less (can be zero bytes)</param>
        </member>
        <member name="P:Alis.Core.Network.PongEventArgs.Payload">
            <summary>
                The data extracted from a Pong WebSocket frame
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketClientFactory">
            <summary>
                Web socket client factory used to open web socket client connections
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketClientFactory._bufferFactory">
            <summary>
                The buffer factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketClientFactory._bufferPool">
            <summary>
                The buffer pool
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketClientFactory.tcpClient">
            <summary>
                The tcp client
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.#ctor">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class without caring about internal buffers
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.#ctor(System.Func{System.IO.MemoryStream})">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class with control over internal buffer creation
            </summary>
            <param name="bufferFactory">
                Used to get a memory stream. Feel free to implement your own buffer pool. MemoryStreams
                will be disposed when no longer needed and can be returned to the pool.
            </param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.Dispose">
            <summary>
                Disposes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Uri,System.Threading.CancellationToken)">
            <summary>
                Connect with default options
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Uri,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with options specified
            </summary>
            <param name="uri">The WebSocket uri to connect to (e.g. ws://example.com or wss://example.com for SSL)</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket instance</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.IO.Stream,System.String,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Connect with a stream that has already been opened and HTTP websocket upgrade request sent
                This function will check the handshake response from the server and proceed if successful
                Use this function if you have specific requirements to open a conenction like using special http headers and
                cookies
                You will have to build your own HTTP websocket upgrade request
                You may not even choose to use TCP/IP and this function will allow you to do that
            </summary>
            <param name="responseStream">The full duplex response stream from the server</param>
            <param name="secWebSocketKey">The secWebSocketKey you used in the handshake request</param>
            <param name="options">The WebSocket client options</param>
            <param name="token">The optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ConnectAsync(System.Guid,System.IO.Stream,System.String,System.TimeSpan,System.String,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Connects the guid
            </summary>
            <param name="guid">The guid</param>
            <param name="responseStream">The response stream</param>
            <param name="secWebSocketKey">The sec web socket key</param>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="secWebSocketExtensions">The sec web socket extensions</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="token">The token</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException">Handshake unexpected failure </exception>
            <returns>A task containing the web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetSubProtocolFromHeader(System.String)">
            <summary>
                Gets the sub protocol from header using the specified response
            </summary>
            <param name="response">The response</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ThrowIfInvalidAcceptString(System.Guid,System.String,System.String)">
            <summary>
                Throws the if invalid accept string using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="response">The response</param>
            <param name="secWebSocketKey">The sec web socket key</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketHandshakeFailedException"></exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ThrowIfInvalidResponseCode(System.String)">
            <summary>
                Throws the if invalid response code using the specified response header
            </summary>
            <param name="responseHeader">The response header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException"></exception>
            <exception cref="T:Alis.Core.Network.Exceptions.InvalidHttpResponseCodeException">null null </exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.TlsAuthenticateAsClient(System.Net.Security.SslStream,System.String)">
            <summary>
                Override this if you need more fine grained control over the TLS handshake like setting the SslProtocol or adding a
                client certificate
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetStream(System.Guid,System.Boolean,System.Boolean,System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
                Override this if you need more control over how the stream used for the websocket is created. It does not event
                need to be a TCP stream
            </summary>
            <param name="loggingGuid">For logging purposes only</param>
            <param name="isSecure">Make a secure connection</param>
            <param name="noDelay">
                Set to true to send a message immediately with the least amount of latency (typical usage for
                chat)
            </param>
            <param name="host">The destination host (can be an IP address)</param>
            <param name="port">The destination port</param>
            <param name="cancellationToken">Used to cancel the request</param>
            <returns>A connected and open stream</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.ValidateServerCertificate(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
                Invoked by the RemoteCertificateValidationDelegate
                If you want to ignore certificate errors (for debugging) then return true
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.GetAdditionalHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
                Gets the additional headers using the specified additional headers
            </summary>
            <param name="additionalHeaders">The additional headers</param>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientFactory.PerformHandshake(System.Guid,System.Uri,System.IO.Stream,Alis.Core.Network.WebSocketClientOptions,System.Threading.CancellationToken)">
            <summary>
                Performs the handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="uri">The uri</param>
            <param name="stream">The stream</param>
            <param name="options">The options</param>
            <param name="token">The token</param>
            <returns>A task containing the web socket</returns>
        </member>
        <member name="T:Alis.Core.Network.WebSocketClientOptions">
            <summary>
                Client WebSocket init options
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketClientOptions.#ctor">
            <summary>
                Initialises a new instance of the WebSocketClientOptions class
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.KeepAliveInterval">
            <summary>
                How often to send ping requests to the Server
                This is done to prevent proxy servers from closing your connection
                The default is TimeSpan.Zero meaning that it is disabled.
                WebSocket servers usually send ping messages so it is not normally necessary for the client to send them (hence the
                TimeSpan.Zero default)
                You can manually control ping pong messages using the PingPongManager class.
                If you do that it is advisible to set this KeepAliveInterval to zero for the WebSocketClientFactory
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.NoDelay">
            <summary>
                Set to true to send a message immediately with the least amount of latency (typical usage for chat)
                This will disable Nagle's algorithm which can cause high tcp latency for small packets sent infrequently
                However, if you are streaming large packets or sending large numbers of small packets frequently it is advisable to
                set NoDelay to false
                This way data will be bundled into larger packets for better throughput
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.AdditionalHttpHeaders">
            <summary>
                Add any additional http headers to this dictionary
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.IncludeExceptionInCloseResponse">
            <summary>
                Include the full exception (with stack trace) in the close response
                when an exception is encountered and the WebSocket connection is closed
                The default is false
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketExtensions">
            <summary>
                WebSocket Extensions as an HTTP header value
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketClientOptions.SecWebSocketProtocol">
            <summary>
                A comma separated list of sub protocols in preference order (first one being the most preferred)
                The server will return the first supported sub protocol (or none if none are supported)
                Can be null
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketHttpContext">
            <summary>
                The WebSocket HTTP Context used to initiate a WebSocket handshake
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketHttpContext.#ctor(System.Boolean,System.Collections.Generic.IList{System.String},System.String,System.String,System.IO.Stream)">
            <summary>
                Initialises a new instance of the WebSocketHttpContext class
            </summary>
            <param name="isWebSocketRequest">True if this is a valid WebSocket request</param>
            <param name="webSocketRequestedProtocols"></param>
            <param name="httpHeader">The raw http header extracted from the stream</param>
            <param name="path">The Path extracted from the http header</param>
            <param name="stream">The stream AFTER the header has already been read</param>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.IsWebSocketRequest">
            <summary>
                True if this is a valid WebSocket request
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.WebSocketRequestedProtocols">
            <summary>
                Gets the value of the web socket requested protocols
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.HttpHeader">
            <summary>
                The raw http header extracted from the stream
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.Path">
            <summary>
                The Path extracted from the http header
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketHttpContext.Stream">
            <summary>
                The stream AFTER the header has already been read
            </summary>
        </member>
        <member name="T:Alis.Core.Network.WebSocketServerFactory">
            <summary>
                Web socket server factory used to open web socket server connections
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketServerFactory._bufferFactory">
            <summary>
                The buffer factory
            </summary>
        </member>
        <member name="F:Alis.Core.Network.WebSocketServerFactory._bufferPool">
            <summary>
                The buffer pool
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.#ctor">
            <summary>
                Initialises a new instance of the WebSocketServerFactory class without caring about internal buffers
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.#ctor(System.Func{System.IO.MemoryStream})">
            <summary>
                Initialises a new instance of the WebSocketClientFactory class with control over internal buffer creation
            </summary>
            <param name="bufferFactory"></param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.ReadHttpHeaderFromStreamAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Reads a http header information from a stream and decodes the parts relating to the WebSocket protocot upgrade
            </summary>
            <param name="stream">The network stream</param>
            <param name="token">The optional cancellation token</param>
            <returns>Http data read from the stream</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with default options
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.AcceptWebSocketAsync(Alis.Core.Network.WebSocketHttpContext,Alis.Core.Network.WebSocketServerOptions,System.Threading.CancellationToken)">
            <summary>
                Accept web socket with options specified
                Call ReadHttpHeaderFromStreamAsync first to get WebSocketHttpContext
            </summary>
            <param name="context">The http context used to initiate this web socket request</param>
            <param name="options">The web socket options</param>
            <param name="token">The optional cancellation token</param>
            <returns>A connected web socket</returns>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.CheckWebSocketVersion(System.String)">
            <summary>
                Checks the web socket version using the specified http header
            </summary>
            <param name="httpHeader">The http header</param>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException"></exception>
            <exception cref="T:Alis.Core.Network.Exceptions.WebSocketVersionNotSupportedException">Cannot find "Sec-WebSocket-Version" in http header</exception>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerFactory.PerformHandshakeAsync(System.Guid,System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
                Performs the handshake using the specified guid
            </summary>
            <param name="guid">The guid</param>
            <param name="httpHeader">The http header</param>
            <param name="subProtocol">The sub protocol</param>
            <param name="stream">The stream</param>
            <param name="token">The token</param>
            <exception cref="T:Alis.Core.Network.Exceptions.SecWebSocketKeyMissingException">Unable to read "Sec-WebSocket-Key" from http header</exception>
        </member>
        <member name="T:Alis.Core.Network.WebSocketServerOptions">
            <summary>
                Server WebSocket init options
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor">
            <summary>
                Initialises a new instance of the WebSocketServerOptions class
            </summary>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor(System.Double,System.Boolean,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.WebSocketServerOptions" /> class
            </summary>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="includeExceptionInCloseResponse">The include exception in close response</param>
            <param name="subProtocol">The sub protocol</param>
        </member>
        <member name="M:Alis.Core.Network.WebSocketServerOptions.#ctor(System.TimeSpan,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Network.WebSocketServerOptions" /> class
            </summary>
            <param name="keepAliveInterval">The keep alive interval</param>
            <param name="subProtocol">The sub protocol</param>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.KeepAliveInterval">
            <summary>
                How often to send ping requests to the Client
                The default is 60 seconds
                This is done to prevent proxy servers from closing your connection
                A timespan of zero will disable the automatic ping pong mechanism
                You can manually control ping pong messages using the PingPongManager class.
                If you do that it is advisable to set this KeepAliveInterval to zero in the WebSocketServerFactory
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.IncludeExceptionInCloseResponse">
            <summary>
                Include the full exception (with stack trace) in the close response
                when an exception is encountered and the WebSocket connection is closed
                The default is false
            </summary>
        </member>
        <member name="P:Alis.Core.Network.WebSocketServerOptions.SubProtocol">
            <summary>
                Specifies the sub protocol to send back to the client in the opening handshake
                Can be null (the most common use case)
                The client can specify multiple preferred protocols in the opening handshake header
                The server should use the first supported one or set this to null if none of the requested sub protocols are
                supported
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.AabbHelper">
            <summary>
                The aabb helper class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.AabbHelper.ComputeEdgeAabb(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the edge aabb using the specified start
            </summary>
            <param name="start">The start</param>
            <param name="end">The end</param>
            <param name="transform">The transform</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.AabbHelper.ComputeCircleAabb(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the circle aabb using the specified pos
            </summary>
            <param name="pos">The pos</param>
            <param name="radius">The radius</param>
            <param name="transform">The transform</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.AabbHelper.ComputePolygonAabb(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the polygon aabb using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="transform">The transform</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1">
            <summary>
                A dynamic tree arranges data in a binary tree to accelerate queries such as volume queries and ray casts.
                Leafs are proxies with an AABB. In the tree we expand the proxy AABB by Settings.b2_fatAABBFactor so that the proxy
                AABB is bigger than the client object. This allows the client object to move by small amounts without triggering a
                tree
                update. Nodes are pooled and relocatable, so we use node indices rather than pointers.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.NullNode">
            <summary>
                The null node
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.queryStack">
            <summary>
                The stack
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.raycastStack">
            <summary>
                The stack
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.freeList">
            <summary>
                The free list
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.nodeCapacity">
            <summary>
                The node capacity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.nodeCount">
            <summary>
                The node count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.nodes">
            <summary>
                The nodes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.root">
            <summary>
                The root
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.#ctor">
            <summary>Constructing the tree initializes the node pool.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.Height">
            <summary>Compute the height of the binary tree in O(N) time. Should not be called often.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.AreaRatio">
            <summary>Get the ratio of the sum of the node areas to the root area.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.Balance">
            <summary>
                Get the maximum balance of an node in the tree. The balance is the difference in height of the two children of
                a node.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.CreateProxy(Alis.Core.Physic.Shared.Aabb@,`0)">
            <summary>
                Create a proxy in the tree as a leaf node. We return the index of the node instead of a pointer so that we can
                grow the node pool.
            </summary>
            <param name="aabb">The AABB.</param>
            <param name="userData">The user data.</param>
            <returns>Index of the created proxy</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.DestroyProxy(System.Int32)">
            <summary>Destroy a proxy. This asserts if the id is invalid.</summary>
            <param name="proxyId">The proxy id.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.MoveProxy(System.Int32,Alis.Core.Physic.Shared.Aabb@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Move a proxy with a AABB. If the proxy has moved outside of its fattened AABB, then the proxy is
                removed from the tree and re-inserted. Otherwise the function returns immediately.
            </summary>
            <param name="proxyId">The proxy id.</param>
            <param name="aabb">The AABB.</param>
            <param name="displacement">The displacement.</param>
            <returns>true if the proxy was re-inserted.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.WasMoved(System.Int32)">
            <summary>
                Describes whether this instance was moved
            </summary>
            <param name="proxyId">The proxy id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ClearMoved(System.Int32)">
            <summary>
                Clears the moved using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.GetUserData(System.Int32)">
            <summary>
                Gets the user data using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
            <returns>The</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.GetFatAabb(System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Get the fat AABB for a proxy.</summary>
            <param name="proxyId">The proxy id.</param>
            <param name="fatAabb">The fat AABB.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.Query(System.Func{System.Int32,System.Boolean},Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied
                AABB.
            </summary>
            <param name="callback">The callback.</param>
            <param name="aabb">The AABB.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.RayCast(System.Func{Alis.Core.Physic.Collision.RayCast.RayCastInput,System.Int32,System.Single},Alis.Core.Physic.Collision.RayCast.RayCastInput@)">
            <summary>
            Ray-cast against the proxies in the tree. This relies on the callback to perform an exact ray-cast in the case
            where the proxy contains a Shape. The callback also performs any collision filtering. This has performance
            roughly equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree.
            </summary>
            <param name="callback">A callback class that is called for each proxy that is hit by the ray.</param>
            <param name="input">The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.CalculateNormalizedRayDirection(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Calculates the normalized ray direction using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.CalculateAbsVector(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Calculates the abs vector using the specified vector
            </summary>
            <param name="vector">The vector</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.CalculateSegmentAabb(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
            Calculates the segment aabb using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="maxFraction">The max fraction</param>
            <returns>The aabb</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.IsAabbOverlap(Alis.Core.Physic.Shared.Aabb,Alis.Core.Physic.Shared.Aabb)">
            <summary>
            Describes whether this instance is aabb overlap
            </summary>
            <param name="aabb1">The aabb</param>
            <param name="aabb2">The aabb</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.IsSeparationValid(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Shared.Aabb)">
            <summary>
            Describes whether this instance is separation valid
            </summary>
            <param name="r">The </param>
            <param name="p1">The </param>
            <param name="aabb">The aabb</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.HandleLeafNode(System.Func{Alis.Core.Physic.Collision.RayCast.RayCastInput,System.Int32,System.Single},Alis.Core.Physic.Collision.RayCast.RayCastInput,System.Single,System.Int32)">
            <summary>
            Handles the leaf node using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="input">The input</param>
            <param name="maxFraction">The max fraction</param>
            <param name="nodeId">The node id</param>
            <returns>The max fraction</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.AllocateNode">
            <summary>
                Allocates the node
            </summary>
            <returns>The node id</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.FreeNode(System.Int32)">
            <summary>
                Frees the node using the specified node id
            </summary>
            <param name="nodeId">The node id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.InsertLeaf(System.Int32)">
            <summary>
                Inserts the leaf using the specified leaf
            </summary>
            <param name="leaf">The leaf</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.RemoveLeaf(System.Int32)">
            <summary>
                Removes the leaf using the specified leaf
            </summary>
            <param name="leaf">The leaf</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.BalanceTo(System.Int32)">
            <summary>Perform a left or right rotation if node A is imbalanced.</summary>
            <param name="iA"></param>
            <returns>the new root index.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ComputeHeight(System.Int32)">
            <summary>Compute the height of a sub-tree.</summary>
            <param name="nodeId">The node id to use as parent.</param>
            <returns>The height of the tree.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ComputeHeight">
            <summary>Compute the height of the entire tree.</summary>
            <returns>The height of the tree.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ValidateStructure(System.Int32)">
            <summary>
                Validates the structure using the specified index
            </summary>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ValidateMetrics(System.Int32)">
            <summary>
                Validates the metrics using the specified index
            </summary>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.Validate">
            <summary>Validate this tree. For testing.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.RebuildBottomUp">
            <summary>Build an optimal tree. Very expensive. For testing.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTree`1.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Shift the origin of the nodes</summary>
            <param name="newOrigin">The displacement to use.</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase">
            <summary>
                The broad-phase is used for computing pairs and performing volume queries and ray casts. This broad-phase does
                not persist pairs. Instead, this reports potentially new pairs. It is up to the client to consume the new pairs and
                to
                track subsequent overlap.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.NullProxy">
            <summary>
                The null proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.queryCallback">
            <summary>
                The query callback
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.tree">
            <summary>
                The fixture proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.moveBuffer">
            <summary>
                The move buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.moveCapacity">
            <summary>
                The move capacity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.moveCount">
            <summary>
                The move count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.pairBuffer">
            <summary>
                The pair buffer
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.pairCapacity">
            <summary>
                The pair capacity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.pairCount">
            <summary>
                The pair count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.proxyCount">
            <summary>
                The proxy count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.queryProxyId">
            <summary>
                The query proxy id
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.#ctor">
            <summary>Constructs a new broad phase based on the dynamic tree implementation</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.TreeQuality">
            <summary>Get the tree quality based on the area of the tree.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.TreeHeight">
            <summary>Gets the height of the tree.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.ProxyCount">
            <summary>Get the number of proxies.</summary>
            <value>The proxy count.</value>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.AddProxy(Alis.Core.Physic.Dynamics.FixtureProxy@)">
            <summary>Create a proxy with an initial AABB. Pairs are not reported until UpdatePairs is called.</summary>
            <param name="proxy">The user data.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.RemoveProxy(System.Int32)">
            <summary>Destroy a proxy. It is up to the client to remove any pairs.</summary>
            <param name="proxyId">The proxy id.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.MoveProxy(System.Int32,Alis.Core.Physic.Shared.Aabb@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Call MoveProxy as many times as you like, then when you are done call UpdatePairs to finalized the proxy pairs
                (for your time step).
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.TouchProxy(System.Int32)">
            <summary>Call to trigger a re-processing of it's pairs on the next call to UpdatePairs.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.GetFatAabb(System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Get the AABB for a proxy.</summary>
            <param name="proxyId">The proxy id.</param>
            <param name="aabb">The AABB.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.GetProxy(System.Int32)">
            <summary>Get user data from a proxy. Returns null if the id is invalid.</summary>
            <param name="proxyId">The proxy id.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.TestOverlap(System.Int32,System.Int32)">
            <summary>Test overlap of fat AABBs.</summary>
            <param name="proxyIdA">The proxy id A.</param>
            <param name="proxyIdB">The proxy id B.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.UpdatePairs(Alis.Core.Physic.Collision.Handlers.BroadphaseHandler)">
            <summary>Update the pairs. This results in pair callbacks. This can only add pairs.</summary>
            <param name="callback">The callback.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.Query(System.Func{System.Int32,System.Boolean},Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Query an AABB for overlapping proxies. The callback class is called for each proxy that overlaps the supplied
                AABB.
            </summary>
            <param name="callback">The callback.</param>
            <param name="aabb">The AABB.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.RayCast(System.Func{Alis.Core.Physic.Collision.RayCast.RayCastInput,System.Int32,System.Single},Alis.Core.Physic.Collision.RayCast.RayCastInput@)">
            <summary>
                Ray-cast against the proxies in the tree. This relies on the callback to perform a exact ray-cast in the case
                were the proxy contains a shape. The callback also performs the any collision filtering. This has performance
                roughly
                equal to k * log(n), where k is the number of collisions and n is the number of proxies in the tree.
            </summary>
            <param name="callback">A callback class that is called for each proxy that is hit by the ray.</param>
            <param name="input">The ray-cast input data. The ray extends from p1 to p1 + maxFraction * (p2 - p1).</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Shift the world origin. Useful for large worlds.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.BufferMove(System.Int32)">
            <summary>
                Buffers the move using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.UnBufferMove(System.Int32)">
            <summary>
                Uns the buffer move using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.DynamicTreeBroadPhase.QueryCallback(System.Int32)">
            <summary>This is called from DynamicTree.Query when we are gathering pairs.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Broadphase.IBroadPhase">
            <summary>
                The broad phase interface
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.ProxyCount">
            <summary>
                Gets the value of the proxy count
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.UpdatePairs(Alis.Core.Physic.Collision.Handlers.BroadphaseHandler)">
            <summary>
                Updates the pairs using the specified callback
            </summary>
            <param name="callback">The callback</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.TestOverlap(System.Int32,System.Int32)">
            <summary>
                Describes whether this instance test overlap
            </summary>
            <param name="proxyIdA">The proxy id</param>
            <param name="proxyIdB">The proxy id</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.AddProxy(Alis.Core.Physic.Dynamics.FixtureProxy@)">
            <summary>
                Adds the proxy using the specified proxy
            </summary>
            <param name="proxy">The proxy</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.RemoveProxy(System.Int32)">
            <summary>
                Removes the proxy using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.MoveProxy(System.Int32,Alis.Core.Physic.Shared.Aabb@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Moves the proxy using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
            <param name="aabb">The aabb</param>
            <param name="displacement">The displacement</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.GetProxy(System.Int32)">
            <summary>
                Gets the proxy using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
            <returns>The fixture proxy</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.TouchProxy(System.Int32)">
            <summary>
                Touches the proxy using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.GetFatAabb(System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Gets the fat aabb using the specified proxy id
            </summary>
            <param name="proxyId">The proxy id</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.Query(System.Func{System.Int32,System.Boolean},Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Queries the callback
            </summary>
            <param name="callback">The callback</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.RayCast(System.Func{Alis.Core.Physic.Collision.RayCast.RayCastInput,System.Int32,System.Single},Alis.Core.Physic.Collision.RayCast.RayCastInput@)">
            <summary>
                Rays the cast using the specified callback
            </summary>
            <param name="callback">The callback</param>
            <param name="input">The input</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.IBroadPhase.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Shifts the origin using the specified new origin
            </summary>
            <param name="newOrigin">The new origin</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Broadphase.Pair">
            <summary>
                The pair
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.Pair.ProxyIdA">
            <summary>
                The proxy id
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.Pair.ProxyIdB">
            <summary>
                The proxy id
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Broadphase.TreeNode`1">
            <summary>A node in the dynamic tree. The client does not interact with this directly.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.Aabb">
            <summary>Enlarged AABB</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.Child1">
            <summary>
                The child
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.Child2">
            <summary>
                The child
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.Height">
            <summary>
                The height
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.Moved">
            <summary>
                The moved
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.ParentOrNext">
            <summary>
                The parent or next
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.UserData">
            <summary>
                The user data
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Broadphase.TreeNode`1.IsLeaf">
            <summary>
                Describes whether this instance is leaf
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.Contact">
            <summary>
                The class manages contact between two shapes. A contact exists for each overlapping AABB in the broad-phase
                (except if filtered). Therefore a contact object may exist that has no contact points.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.Edge">
            <summary>
                The edge shape
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.Registers">
            <summary>
                The not supported
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.fixtureA">
            <summary>
                The fixture
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.fixtureB">
            <summary>
                The fixture
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.friction">
            <summary>
                The friction
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.manifold">
            <summary>
                The manifold
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.next">
            <summary>
                The next
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.prev">
            <summary>
                The prev
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.restitution">
            <summary>
                The restitution
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.restitutionThreshold">
            <summary>
                The restitution threshold
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.tangentSpeed">
            <summary>
                The tangent speed
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.Contact.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.#ctor(Alis.Core.Physic.Dynamics.Fixture,System.Int32,Alis.Core.Physic.Dynamics.Fixture,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.ContactSystem.Contact" /> class
            </summary>
            <param name="fA">The </param>
            <param name="indexA">The index</param>
            <param name="fB">The </param>
            <param name="indexB">The index</param>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.NodeA">
            <summary>
                The contact edge
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.NodeB">
            <summary>
                The contact edge
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Toi">
            <summary>
                The toi
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.ToiCount">
            <summary>
                The toi count
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Manifold">
            <summary>Get the contact manifold. Do not modify the manifold unless you understand the internals of Box2D.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Friction">
            <summary>
                Gets or sets the value of the friction
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Restitution">
            <summary>
                Gets or sets the value of the restitution
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.RestitutionThreshold">
            <summary>
                Gets or sets the value of the restitution threshold
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.TangentSpeed">
            <summary>Get or set the desired tangent speed for a conveyor belt behavior. In meters per second.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.FixtureA">
            <summary>
                Gets the value of the fixture a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.FixtureB">
            <summary>
                Gets the value of the fixture b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.ChildIndexA">
            <summary>Get the child primitive index for fixture A.</summary>
            <value>The child index A.</value>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.ChildIndexB">
            <summary>Get the child primitive index for fixture B.</summary>
            <value>The child index B.</value>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Enabled">
            <summary>
                Enable/disable this contact.The contact is only disabled for the current time step (or sub-step in continuous
                collisions).
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Next">
            <summary>
                Gets the value of the next
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.Previous">
            <summary>
                Gets the value of the previous
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.IsTouching">
            <summary>
                Gets the value of the is touching
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.IslandFlag">
            <summary>
                Gets the value of the island flag
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.ToiFlag">
            <summary>
                Gets the value of the toi flag
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.Contact.FilterFlag">
            <summary>
                Gets the value of the filter flag
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.ResetRestitution">
            <summary>
                Resets the restitution
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.ResetRestitutionThreshold">
            <summary>
                Resets the restitution threshold
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.ResetFriction">
            <summary>
                Resets the friction
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.GetWorldManifold(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Aspect.Math.Vector.Vector2}@)">
            <summary>Gets the world manifold.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.Reset(Alis.Core.Physic.Dynamics.Fixture,System.Int32,Alis.Core.Physic.Dynamics.Fixture,System.Int32)">
            <summary>
                Resets the f a
            </summary>
            <param name="fA">The </param>
            <param name="indexA">The index</param>
            <param name="fB">The </param>
            <param name="indexB">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.Update(Alis.Core.Physic.Collision.ContactSystem.ContactManager)">
            <summary>
                Update the contact manifold and touching status. Note: do not assume the fixture AABBs are overlapping or are
                valid.
            </summary>
            <param name="contactManager">The contact manager.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.Evaluate(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@)">
            <summary>Evaluate this contact with your own manifold and transforms.</summary>
            <param name="manifold">The manifold.</param>
            <param name="transformA">The first transform.</param>
            <param name="transformB">The second transform.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.Create(Alis.Core.Physic.Dynamics.Fixture,System.Int32,Alis.Core.Physic.Dynamics.Fixture,System.Int32)">
            <summary>
                Creates the fixture a
            </summary>
            <param name="fixtureA">The fixture</param>
            <param name="indexA">The index</param>
            <param name="fixtureB">The fixture</param>
            <param name="indexB">The index</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.Destroy">
            <summary>
                Destroys this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.ClearFlags">
            <summary>
                Clears the flags
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.Contact.InvalidateToi">
            <summary>
                Invalidates the toi
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactEdge">
            <summary>
                A contact edge is used to connect bodies and contacts together in a contact graph where each body is a node
                and each contact is an edge. A contact edge belongs to a doubly linked list maintained in each attached body. Each
                contact has two contact nodes, one for each attached body.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactEdge.Contact">
            <summary>The contact</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactEdge.Next">
            <summary>The next contact edge in the body's contact list</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactEdge.Other">
            <summary>Provides quick access to the other body attached.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactEdge.Prev">
            <summary>The previous contact edge in the body's contact list</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactFeature">
            <summary>The features that intersect to form the contact point This must be 4 bytes or less.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeature.IndexA">
            <summary>Feature index on ShapeA</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeature.IndexB">
            <summary>Feature index on ShapeB</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeature.TypeA">
            <summary>The feature type on ShapeA</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeature.TypeB">
            <summary>The feature type on ShapeB</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactFeatureType">
            <summary>
                The contact feature type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeatureType.Vertex">
            <summary>
                The vertex contact feature type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFeatureType.Face">
            <summary>
                The face contact feature type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactFlags">
            <summary>
                The contact flags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.None">
            <summary>
                The unknown contact flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.IslandFlag">
            <summary>Used when crawling contact graph when forming islands.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.TouchingFlag">
            <summary>Set when the shapes are touching.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.EnabledFlag">
            <summary>This contact can be disabled (by user)</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.FilterFlag">
            <summary>This contact needs filtering because a fixture filter was changed.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.BulletHitFlag">
            <summary>This bullet contact had a TOI event</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactFlags.ToiFlag">
            <summary>This contact has a valid TOI in m_toi</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactId">
            <summary>Contact ids to facilitate warm starting.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactId.ContactFeature">
            <summary>The features that intersect to form the contact point</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactId.Key">
            <summary>Used to quickly compare contact ids.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactManager">
            <summary>
                The contact manager class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.Current">
            <summary>
                The current instance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.contactList">
            <summary>
                The contact list
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.ContactPool">
            <summary>
                The contact
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.onBroadphaseCollision">
            <summary>Fires when the broadphase detects that two Fixtures are close to each other.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.BeginContact">
            <summary>Fires when a contact is created</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.contactCounter">
            <summary>
                The contact count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.ContactFilter">
            <summary>The filter used by the contact manager.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.EndContact">
            <summary>Fires when a contact is deleted</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.lastMinAlpha">
            <summary>
                The last min alpha
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.PostSolve">
            <summary>Fires after the solver has run</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactManager.PreSolve">
            <summary>Fires before the solver runs</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.#ctor(Alis.Core.Physic.Collision.Broadphase.IBroadPhase)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.ContactSystem.ContactManager" /> class
            </summary>
            <param name="broadPhase">The broad phase</param>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.ContactManager.BroadPhase">
            <summary>
                Gets the value of the broad phase
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.ContactSystem.ContactManager.ContactCount">
            <summary>
                Gets the value of the contact count
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.AddPair(Alis.Core.Physic.Dynamics.FixtureProxy@,Alis.Core.Physic.Dynamics.FixtureProxy@)">
            <summary>
                Adds the pair using the specified proxy a
            </summary>
            <param name="proxyA">The proxy</param>
            <param name="proxyB">The proxy</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.FindNewContacts">
            <summary>
                Finds the new contacts
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.Remove(Alis.Core.Physic.Collision.ContactSystem.Contact)">
            <summary>
                Removes the c
            </summary>
            <param name="c">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.Collide">
            <summary>
                This is the top level collision call for the time step. Here all the narrow phase collision is processed for the
                world contact list.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.GetTheMinContact(System.Single)">
            <summary>
                Gets the the min contact using the specified min alpha
            </summary>
            <param name="minAlpha">The min alpha</param>
            <returns>The contact</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.ShouldCollide(Alis.Core.Physic.Dynamics.Fixture,Alis.Core.Physic.Dynamics.Fixture)">
            <summary>
                Describes whether should collide
            </summary>
            <param name="fixtureA">The fixture</param>
            <param name="fixtureB">The fixture</param>
            <returns>The collide</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.ClearFlags">
            <summary>
                Clears the flags
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.InvalidateToi">
            <summary>
                Invalidates the toi
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.ContactSystem.ContactManager.CalculateMinAlpha">
            <summary>
                Calculates the min alpha
            </summary>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.ContactSystem.ContactType">
            <summary>
                The contact type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.NotSupported">
            <summary>
                The not supported contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.Polygon">
            <summary>
                The polygon contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.PolygonAndCircle">
            <summary>
                The polygon and circle contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.Circle">
            <summary>
                The circle contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.EdgeAndPolygon">
            <summary>
                The edge and polygon contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.EdgeAndCircle">
            <summary>
                The edge and circle contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.ChainAndPolygon">
            <summary>
                The chain and polygon contact type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.ContactSystem.ContactType.ChainAndCircle">
            <summary>
                The chain and circle contact type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.DistanceGjk">
            <summary>
                The Gilbert distance algorithm that provides the distance between shapes. Using Voronoi
                regions and Barycentric coordinates.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceGjk.GjkCalls">
            <summary>
                The number of calls made to the ComputeDistance() function. Note: This is only activated when
                Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceGjk.GjkIter">
            <summary>
                The number of iterations that was made on the last call to ComputeDistance(). Note: This is only activated
                when Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceGjk._gjkMaxIter">
            <summary>
                The maximum number of iterations calls to the Distance() function. Note: This is only activated when
                Settings.EnableDiagnostics = true
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.ComputeDistance(Alis.Core.Physic.Collision.Distance.DistanceInput@,Alis.Core.Physic.Collision.Distance.DistanceOutput@,Alis.Core.Physic.Collision.NarrowPhase.SimplexCache@)">
            <summary>
                Computes the distance using the specified input
            </summary>
            <param name="input">The input</param>
            <param name="output">The output</param>
            <param name="cache">The cache</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.ShapeCast(Alis.Core.Physic.Collision.Distance.ShapeCastInput@,Alis.Core.Physic.Collision.Distance.ShapeCastOutput@)">
            <summary>
                Perform a linear shape cast of shape B moving and shape A fixed. Determines the hit point, normal, and
                translation fraction.
            </summary>
            <returns>true if hit, false if there is no hit or an initial overlap</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.InitializeOutput(Alis.Core.Physic.Collision.Distance.ShapeCastOutput@)">
            <summary>
            Initializes the output using the specified output
            </summary>
            <param name="output">The output</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.CalculateRadius(Alis.Core.Physic.Collision.Distance.DistanceProxy)">
            <summary>
            Calculates the radius using the specified proxy
            </summary>
            <param name="proxy">The proxy</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.InitializeSimplex">
            <summary>
            Initializes the simplex
            </summary>
            <returns>The simplex</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.IterateUntilConverged(Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,Alis.Core.Physic.Collision.NarrowPhase.Simplex@,System.Single)">
            <summary>
            Describes whether iterate until converged
            </summary>
            <param name="proxyA">The proxy</param>
            <param name="proxyB">The proxy</param>
            <param name="xfA">The xf</param>
            <param name="xfB">The xf</param>
            <param name="r">The </param>
            <param name="n">The </param>
            <param name="lambda">The lambda</param>
            <param name="simplex">The simplex</param>
            <param name="radius">The radius</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.ComputeV(Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,Alis.Core.Physic.Collision.NarrowPhase.Simplex@,System.Single)">
            <summary>
            Computes the v using the specified input
            </summary>
            <param name="proxyA">The proxy</param>
            <param name="proxyB">The proxy</param>
            <param name="xfA">The xf</param>
            <param name="xfB">The xf</param>
            <param name="r">The </param>
            <param name="n">The </param>
            <param name="lambda">The lambda</param>
            <param name="simplex">The simplex</param>
            <param name="radius">The radius</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.ComputeSupport(Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
            Computes the support using the specified proxy a
            </summary>
            <param name="proxyA">The proxy</param>
            <param name="proxyB">The proxy</param>
            <param name="xfA">The xf</param>
            <param name="xfB">The xf</param>
            <param name="r">The </param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.IsConverged(Alis.Core.Aspect.Math.Vector.Vector2,System.Single@,System.Single)">
            <summary>
            Describes whether is converged
            </summary>
            <param name="v">The </param>
            <param name="lambda">The lambda</param>
            <param name="radius">The radius</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.IsNewDirectionNeeded(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,System.Single)">
            <summary>
            Describes whether is new direction needed
            </summary>
            <param name="n">The </param>
            <param name="r">The </param>
            <param name="lambda">The lambda</param>
            <param name="radius">The radius</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.UpdateSimplex(Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,Alis.Core.Physic.Collision.NarrowPhase.Simplex@,System.Single)">
            <summary>
            Updates the simplex using the specified input
            </summary>
            <param name="proxyA">The proxy</param>
            <param name="proxyB">The proxy</param>
            <param name="xfA">The xf</param>
            <param name="xfB">The xf</param>
            <param name="r">The </param>
            <param name="v">The </param>
            <param name="n">The </param>
            <param name="lambda">The lambda</param>
            <param name="simplex">The simplex</param>
            <param name="radius">The radius</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceGjk.CalculateOutput(Alis.Core.Physic.Collision.Distance.ShapeCastOutput@,Alis.Core.Physic.Collision.NarrowPhase.Simplex@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single)">
            <summary>
            Calculates the output using the specified output
            </summary>
            <param name="output">The output</param>
            <param name="simplex">The simplex</param>
            <param name="r">The </param>
            <param name="lambda">The lambda</param>
            <param name="n">The </param>
            <param name="radiusA">The radius</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.DistanceInput">
            <summary>Input for Distance.ComputeDistance(). You have to option to use the shape radii in the computation.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceInput.ProxyA">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceInput.ProxyB">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceInput.TransformA">
            <summary>
                The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceInput.TransformB">
            <summary>
                The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceInput.UseRadii">
            <summary>
                The use radii
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.DistanceOutput">
            <summary>Output for Distance.ComputeDistance().</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceOutput.Distance">
            <summary>
                The distance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceOutput.Iterations">
            <summary>Number of GJK iterations used</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceOutput.PointA">
            <summary>Closest point on shapeA</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceOutput.PointB">
            <summary>Closest point on shapeB</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.DistanceProxy">
            <summary>A distance proxy is used by the GJK algorithm. It encapsulates any shape.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceProxy.Radius">
            <summary>
                The radius
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.DistanceProxy.Vertices">
            <summary>
                The vertices
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Physic.Collision.Shapes.Shape,System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Distance.DistanceProxy" /> class
            </summary>
            <param name="shape">The shape</param>
            <param name="index">The index</param>
            <exception cref="T:System.NotSupportedException"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceProxy.#ctor(Alis.Core.Aspect.Math.Vector.Vector2[],System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Distance.DistanceProxy" /> class
            </summary>
            <param name="vertices">The vertices</param>
            <param name="radius">The radius</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceProxy.GetSupport(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the supporting vertex index in the given direction.</summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Distance.DistanceProxy.GetVertex(System.Int32)">
            <summary>
                Gets the vertex using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The vector</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.ShapeCastInput">
            <summary>Input parameters for b2ShapeCast</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastInput.ProxyA">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastInput.ProxyB">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastInput.TransformA">
            <summary>
                The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastInput.TransformB">
            <summary>
                The transform
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastInput.TranslationB">
            <summary>
                The translation
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Distance.ShapeCastOutput">
            <summary>Output results for b2ShapeCast</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastOutput.Point">
            <summary>
                The point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastOutput.Normal">
            <summary>
                The normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastOutput.Lambda">
            <summary>
                The lambda
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Distance.ShapeCastOutput.Iterations">
            <summary>
                The iterations
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Filtering.Category">
            <summary>
                The category enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.None">
            <summary>
                The none category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.All">
            <summary>
                The all category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat1">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat2">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat3">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat4">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat5">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat6">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat7">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat8">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat9">
            <summary>
                The cat category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat10">
            <summary>
                The cat 10 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat11">
            <summary>
                The cat 11 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat12">
            <summary>
                The cat 12 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat13">
            <summary>
                The cat 13 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat14">
            <summary>
                The cat 14 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat15">
            <summary>
                The cat 15 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat16">
            <summary>
                The cat 16 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat17">
            <summary>
                The cat 17 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat18">
            <summary>
                The cat 18 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat19">
            <summary>
                The cat 19 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat20">
            <summary>
                The cat 20 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat21">
            <summary>
                The cat 21 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat22">
            <summary>
                The cat 22 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat23">
            <summary>
                The cat 23 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat24">
            <summary>
                The cat 24 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat25">
            <summary>
                The cat 25 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat26">
            <summary>
                The cat 26 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat27">
            <summary>
                The cat 27 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat28">
            <summary>
                The cat 28 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat29">
            <summary>
                The cat 29 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat30">
            <summary>
                The cat 30 category
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Filtering.Category.Cat31">
            <summary>
                The cat 31 category
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Filtering.Filter">
            <summary>
                The filter class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Filtering.Filter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Filtering.Filter" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Filtering.Filter.#ctor(System.Int16,Alis.Core.Physic.Collision.Filtering.Category,Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Filtering.Filter" /> class
            </summary>
            <param name="group">The group</param>
            <param name="category">The category</param>
            <param name="mask">The mask</param>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Filtering.Filter.Group">
            <summary>
                Collision groups allow a certain group of objects to never collide(negative) or always collide (positive).
                Zero means no collision group. Non-zero group filtering always wins against the mask bits.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Filtering.Filter.Category">
            <summary>The collision category bits. Normally you would just set one bit.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Filtering.Filter.CategoryMask">
            <summary>The collision mask bits. This states the categories that this shape would accept for collision.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.AfterCollisionHandler">
            <summary>
                The after collision handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.BeforeCollisionHandler">
            <summary>
                The before collision handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.BeginContactHandler">
            <summary>This delegate is called when a contact is created</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.BroadphaseHandler">
            <summary>
                The broadphase handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.CollisionFilterHandler">
            <summary>
                The collision filter handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.EndContactHandler">
            <summary>This delegate is called when a contact is deleted</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.OnCollisionHandler">
            <summary>
                The on collision handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Handlers.OnSeparationHandler">
            <summary>
                The on separation handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.ClipVertex">
            <summary>Used for computing contact manifolds.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ClipVertex.Id">
            <summary>
                The id
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ClipVertex.V">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.CollideCircle">
            <summary>
                The collide circle class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideCircle.CollideCircles(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>Compute the collision manifold between two circles.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideCircle.CollidePolygonAndCircle(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>Compute the collision manifold between a polygon and a circle.</summary>
            <param name="manifold">The manifold.</param>
            <param name="polygonA">The polygon A.</param>
            <param name="xfA">The transform of A.</param>
            <param name="circleB">The circle B.</param>
            <param name="xfB">The transform of B.</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge">
            <summary>
                The collide edge class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.CollideEdgeAndCircle(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.CircleShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>
            Collides the edge and circle using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="transformA">The transform</param>
            <param name="circleB">The circle</param>
            <param name="transformB">The transform</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.HandleRegionAB(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Handles the region ab using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="edgeStart">The edge start</param>
            <param name="edgeEnd">The edge end</param>
            <param name="q">The </param>
            <param name="radiusSum">The radius sum</param>
            <param name="offset">The offset</param>
            <param name="circlePosition">The circle position</param>
            <param name="edgeNormal">The edge normal</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.ComputeCirclePositionInEdgeFrame(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
            Computes the circle position in edge frame using the specified transform a
            </summary>
            <param name="transformA">The transform</param>
            <param name="transformB">The transform</param>
            <param name="circlePosition">The circle position</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.HandleRegionA(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Handles the region a using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="edgeStart">The edge start</param>
            <param name="q">The </param>
            <param name="radiusSum">The radius sum</param>
            <param name="circlePosition">The circle position</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.HandleRegionB(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Handles the region b using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="edgeEnd">The edge end</param>
            <param name="q">The </param>
            <param name="radiusSum">The radius sum</param>
            <param name="circlePosition">The circle position</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.SetManifoldForCircle(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Sets the manifold for circle using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="contactPoint">The contact point</param>
            <param name="circlePosition">The circle position</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.SetManifoldForEdge(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Sets the manifold for edge using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="edgeStart">The edge start</param>
            <param name="edgeNormal">The edge normal</param>
            <param name="circlePosition">The circle position</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.CollideEdgeAndPolygon(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.EdgeShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Collides the edge and polygon using the specified manifold
            </summary>
            <param name="manifold">The manifold</param>
            <param name="edgeA">The edge</param>
            <param name="xfA">The xf</param>
            <param name="polygonB">The polygon</param>
            <param name="xfB">The xf</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.ComputeEdgeSeparation(Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon@,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Computes the edge separation using the specified polygon b
            </summary>
            <param name="polygonB">The polygon</param>
            <param name="v1">The </param>
            <param name="normal1">The normal</param>
            <returns>The axis</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.ComputePolygonSeparation(Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon@,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Computes the polygon separation using the specified polygon b
            </summary>
            <param name="polygonB">The polygon</param>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <returns>The axis</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon">
            <summary>
                The temp polygon
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon" /> class
            </summary>
            <param name="count">The count</param>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon.Vertices">
            <summary>
                The vertices
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon.Normals">
            <summary>
                The normals
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.CollideEdge.TempPolygon.Count">
            <summary>
                The count
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.CollidePolygon">
            <summary>
                The collide polygon class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollidePolygon.CollidePolygons(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>Compute the collision manifold between two polygons.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollidePolygon.FindMaxSeparation(System.Int32@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>Find the max separation between poly1 and poly2 using edge normals from poly1.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.CollidePolygon.FindIncidentEdge(Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Physic.Collision.NarrowPhase.ClipVertex}@,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.Shapes.PolygonShape,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Finds the incident edge using the specified c
            </summary>
            <param name="c">The </param>
            <param name="poly1">The poly</param>
            <param name="xf1">The xf</param>
            <param name="edge1">The edge</param>
            <param name="poly2">The poly</param>
            <param name="xf2">The xf</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.Collision">
            <summary>Collision methods</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Collision.TestOverlap(Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Physic.Collision.Shapes.Shape,System.Int32,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@)">
            <summary>Test overlap between the two shapes.</summary>
            <param name="shapeA">The first shape.</param>
            <param name="indexA">The index for the first shape.</param>
            <param name="shapeB">The second shape.</param>
            <param name="indexB">The index for the second shape.</param>
            <param name="xfA">The transform for the first shape.</param>
            <param name="xfB">The transform for the seconds shape.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Collision.GetPointStates(Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Physic.Collision.NarrowPhase.PointState}@,Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Physic.Collision.NarrowPhase.PointState}@,Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Physic.Collision.NarrowPhase.Manifold@)">
            <summary>
                Gets the point states using the specified state 1
            </summary>
            <param name="state1">The state</param>
            <param name="state2">The state</param>
            <param name="manifold1">The manifold</param>
            <param name="manifold2">The manifold</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Collision.ClipSegmentToLine(Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Physic.Collision.NarrowPhase.ClipVertex}@,Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Physic.Collision.NarrowPhase.ClipVertex}@,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Int32)">
            <summary>Clipping for contact manifolds.</summary>
            <param name="vOut">The v out.</param>
            <param name="vIn">The v in.</param>
            <param name="normal">The normal.</param>
            <param name="offset">The offset.</param>
            <param name="vertexIndexA">The vertex index A.</param>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.EpAxis">
            <summary>This structure is used to keep track of the best separating axis.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxis.Normal">
            <summary>
                The normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxis.Index">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxis.Separation">
            <summary>
                The separation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxis.Type">
            <summary>
                The type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.EpAxisType">
            <summary>
                The ep axis type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxisType.Unknown">
            <summary>
                The unknown ep axis type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxisType.EdgeA">
            <summary>
                The edge ep axis type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.EpAxisType.EdgeB">
            <summary>
                The edge ep axis type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.Manifold">
            <summary>
                A manifold for two touching convex Shapes.
                Box2D supports multiple types of contact:
                - Clip point versus plane with radius
                - Point versus point with radius (circles)
                The local point usage depends on the manifold type:
                - ShapeType.Circles: the local center of circleA
                - SeparationFunction.FaceA: the center of faceA
                - SeparationFunction.FaceB: the center of faceB
                Similarly the local normal usage:
                - ShapeType.Circles: not used
                - SeparationFunction.FaceA: the normal on polygonA
                - SeparationFunction.FaceB: the normal on polygonB
                We store contacts in this way so that position correction can
                account for movement, which is critical for continuous physics.
                All contact scenarios must be expressed in one of these types.
                This structure is stored across time steps, so we keep it small.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Manifold.LocalNormal">
            <summary>Not use for Type.SeparationFunction.Points</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Manifold.LocalPoint">
            <summary>Usage depends on manifold type</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Manifold.PointCount">
            <summary>The number of manifold points</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Manifold.Points">
            <summary>The points of contact</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Manifold.Type">
            <summary>
                The type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.ManifoldPoint">
            <summary>
                A manifold point is a contact point belonging to a contact
                manifold. It holds details related to the geometry and dynamics
                of the contact points.
                The local point usage depends on the manifold type:
                -ShapeType.Circles: the local center of circleB
                -SeparationFunction.FaceA: the local center of cirlceB or the clip point of polygonB
                -SeparationFunction.FaceB: the clip point of polygonA
                This structure is stored across time steps, so we keep it small.
                Note: the impulses are used for internal caching and may not
                provide reliable contact forces, especially for high speed collisions.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldPoint.Id">
            <summary>Uniquely identifies a contact point between two Shapes</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldPoint.LocalPoint">
            <summary>Usage depends on manifold type</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldPoint.NormalImpulse">
            <summary>The non-penetration impulse</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldPoint.TangentImpulse">
            <summary>The friction impulse</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.ManifoldType">
            <summary>
                The manifold type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldType.Circles">
            <summary>
                The circles manifold type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldType.FaceA">
            <summary>
                The face manifold type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ManifoldType.FaceB">
            <summary>
                The face manifold type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.PointState">
            <summary>This is used for determining the state of contact points.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.PointState.Null">
            <summary>Point does not exist</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.PointState.Add">
            <summary>Point was added in the update</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.PointState.Persist">
            <summary>Point persisted across the update</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.PointState.Remove">
            <summary>Point was removed in the update</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace">
            <summary>Reference face used for clipping</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.I1">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.I2">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.V1">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.V2">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.Normal">
            <summary>
                The normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.SideNormal1">
            <summary>
                The side normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.SideOffset1">
            <summary>
                The side offset
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.SideNormal2">
            <summary>
                The side normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.ReferenceFace.SideOffset2">
            <summary>
                The side offset
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.Simplex">
            <summary>
                The simplex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Simplex.Count">
            <summary>
                The count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.Simplex.V">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.ReadCache(Alis.Core.Physic.Collision.NarrowPhase.SimplexCache@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.Distance.DistanceProxy@,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Reads the cache using the specified cache
            </summary>
            <param name="cache">The cache</param>
            <param name="proxyA">The proxy</param>
            <param name="transformA">The transform</param>
            <param name="proxyB">The proxy</param>
            <param name="transformB">The transform</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.WriteCache(Alis.Core.Physic.Collision.NarrowPhase.SimplexCache@)">
            <summary>
                Writes the cache using the specified cache
            </summary>
            <param name="cache">The cache</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.GetSearchDirection">
            <summary>
                Gets the search direction
            </summary>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.GetClosestPoint">
            <summary>
                Gets the closest point
            </summary>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.GetWitnessPoints(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Gets the witness points using the specified p a
            </summary>
            <param name="pA">The </param>
            <param name="pB">The </param>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.GetMetric">
            <summary>
                Gets the metric
            </summary>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.Solve2">
            <summary>
                Solves the 2
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.Simplex.Solve3">
            <summary>
                Solves the 3
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.SimplexCache">
            <summary>Used to warm start ComputeDistance. Set count to zero on first call.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexCache.Count">
            <summary>Length or area</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexCache.IndexA">
            <summary>Vertices on shape A</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexCache.IndexB">
            <summary>Vertices on shape B</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexCache.Metric">
            <summary>
                The metric
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex">
            <summary>
                The simplex vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.A">
            <summary>Barycentric coordinate for closest point</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.IndexA">
            <summary>wA index</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.IndexB">
            <summary>wB index</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.W">
            <summary>wB - wA</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.Wa">
            <summary>Support point in proxyA</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.NarrowPhase.SimplexVertex.Wb">
            <summary>Support point in proxyB</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.NarrowPhase.WorldManifold">
            <summary>
                The world manifold class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.NarrowPhase.WorldManifold.Initialize(Alis.Core.Physic.Collision.NarrowPhase.Manifold@,Alis.Core.Aspect.Math.Transform@,System.Single,Alis.Core.Aspect.Math.Transform@,System.Single,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Physic.Shared.Optimization.FixedArray2{Alis.Core.Aspect.Math.Vector.Vector2}@,Alis.Core.Physic.Shared.Optimization.FixedArray2{System.Single}@)">
            <summary>
                Evaluate the manifold with supplied transforms. This assumes modest motion from the original state. This does
                not change the point count, impulses, etc. The radii must come from the Shapes that generated the manifold.
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.RayCast.RayCastInput">
            <summary>Ray-cast input data.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.RayCast.RayCastInput.Fraction">
            <summary>
                The ray extends from p1 to p1 + maxFraction * (p2 - p1). If you supply a max fraction of 1, the ray extends
                from p1 to p2. A max fraction of 0.5 makes the ray go from p1 and half way to p2.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.RayCast.RayCastInput.Point1">
            <summary>The starting point of the ray.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.RayCast.RayCastInput.Point2">
            <summary>The ending point of the ray.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.RayCast.RayCastOutput">
            <summary>Ray-cast output data.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.RayCast.RayCastOutput.Fraction">
            <summary>
                The ray hits at p1 + fraction * (p2 - p1), where p1 and p2 come from RayCastInput. Contains the actual
                fraction of the ray where it has the intersection point.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.RayCast.RayCastOutput.Normal">
            <summary>The normal of the face of the shape the ray has hit.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.RayCastHelper">
            <summary>
                The ray cast helper class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.RayCastHelper.RayCastEdge(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Boolean,Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
             <summary>
                 Describes whether ray cast edge
            
              p = p1 + t * d
              v = v1 + s * e
              p1 + t * d = v1 + s * e
              s * e - t * d = p1 - v1
             </summary>
             <param name="start">The start</param>
             <param name="end">The end</param>
             <param name="oneSided">The one sided</param>
             <param name="input">The input</param>
             <param name="transform">The transform</param>
             <param name="output">The output</param>
             <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.RayCastHelper.RayCastCircle(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single,Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether ray cast circle
            </summary>
            <param name="pos">The pos</param>
            <param name="radius">The radius</param>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.RayCastHelper.RayCastPolygon(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether ray cast polygon
            </summary>
            <param name="vertices">The vertices</param>
            <param name="normals">The normals</param>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.ChainShape">
            <summary>
                A chain shape is a free form sequence of line segments. The chain has one-sided collision, with the surface
                normal pointing to the right of the edge. This provides a counter-clockwise winding like the polygon shape.
                Connectivity information is used to create smooth collisions. Warning: the chain will not collide properly if there
                are
                self-intersections.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ChainShape.nextVertex">
            <summary>
                The next vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ChainShape.prevVertex">
            <summary>
                The next vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ChainShape.vertices">
            <summary>
                The vertices
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor(Alis.Core.Physic.Shared.Vertices,System.Boolean)">
            <summary>Create a new ChainShape from the vertices.</summary>
            <param name="vertices">The vertices to use. Must contain 2 or more vertices.</param>
            <param name="createLoop">
                Set to true to create a closed loop. It connects the first vertex to the last, and
                automatically adjusts connectivity to create smooth collisions along the chain.
            </param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.ChainShape" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.ChainShape.Vertices">
            <summary>The vertices. These are not owned/freed by the chain Shape.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.ChainShape.ChildCount">
            <summary>Edge count = vertex count - 1</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.ChainShape.PrevVertex">
            <summary>Establish connectivity to a vertex that precedes the first vertex. Don't call this for loops.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.ChainShape.NextVertex">
            <summary>Establish connectivity to a vertex that follows the last vertex. Don't call this for loops.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(Alis.Core.Physic.Collision.Shapes.EdgeShape,System.Int32)">
            <summary>
                Gets the child edge using the specified edge
            </summary>
            <param name="edge">The edge</param>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.GetChildEdge(System.Int32)">
            <summary>
                Gets the child edge using the specified index
            </summary>
            <param name="index">The index</param>
            <returns>The edge shape</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance test point
            </summary>
            <param name="transform">The transform</param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether this instance ray cast
            </summary>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the aabb using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.ComputeProperties">
            <summary>
                Computes the properties
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.ChainShape.Clone">
            <summary>
                Clones this instance
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.CircleShape">
            <summary>A circle shape.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.CircleShape.Positionprivate">
            <summary>
                The position
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.#ctor(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Create a new circle with the desired radius and density.</summary>
            <param name="radius">The radius of the circle.</param>
            <param name="density">The density of the circle.</param>
            <param name="position">Position of the shape</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.#ctor(System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.CircleShape" /> class
            </summary>
            <param name="density">The density</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.CircleShape" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.CircleShape.ChildCount">
            <summary>
                Gets the value of the child count
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.CircleShape.Position">
            <summary>Get or set the position of the circle</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance test point
            </summary>
            <param name="transform">The transform</param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether this instance ray cast
            </summary>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the aabb using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.ComputeProperties">
            <summary>
                Computes the properties
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.ComputeMass">
            <summary>
                Computes the mass
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.ComputeInertia">
            <summary>
                Computes the inertia
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.CircleShape.Clone">
            <summary>
                Clones this instance
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.EdgeShape">
            <summary>
                A line segment (edge) shape. These can be connected in chains or loops to other edge shapes. Edges created
                independently are two-sided and do no provide smooth movement across junctions.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.EdgeShape.oneSided">
            <summary>
                The one sided
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex0">
            <summary>
                The vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex1">
            <summary>
                The vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex2">
            <summary>
                The vertex
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.EdgeShape.vertex3">
            <summary>
                The vertex
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Create a new EdgeShape with the specified start and end. This edge supports two-sided collision.</summary>
            <param name="start">The start of the edge.</param>
            <param name="end">The end of the edge.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Create a new EdgeShape with ghost vertices for smooth collision. This edge only supports one-sided collision.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.EdgeShape" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.ChildCount">
            <summary>
                Gets the value of the child count
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.OneSided">
            <summary>Is true if the edge is connected to an adjacent vertex before vertex 1.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex0">
            <summary>Optional adjacent vertices. These are used for smooth collision.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex3">
            <summary>Optional adjacent vertices. These are used for smooth collision.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex1">
            <summary>These are the edge vertices</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.EdgeShape.Vertex2">
            <summary>These are the edge vertices</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.SetOneSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Sets the one sided using the specified v 0
            </summary>
            <param name="v0">The </param>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <param name="v3">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.SetTwoSided(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Sets the two sided using the specified start
            </summary>
            <param name="start">The start</param>
            <param name="end">The end</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance test point
            </summary>
            <param name="transform">The transform</param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether this instance ray cast
            </summary>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>
                Computes the aabb using the specified transform
            </summary>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="aabb">The aabb</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.ComputeProperties">
            <summary>
                Computes the properties
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.EdgeShape.Clone">
            <summary>
                Clones this instance
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.MassData">
            <summary>This holds the mass data computed for a shape.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.MassData" /> class
            </summary>
            <param name="area">The area</param>
            <param name="inertia">The inertia</param>
            <param name="mass">The mass</param>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.MassData.Area">
            <summary>The area of the shape</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.MassData.Centroid">
            <summary>The position of the shape's centroid relative to the shape's origin.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.MassData.Inertia">
            <summary>The rotational inertia of the shape about the local origin.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.MassData.Mass">
            <summary>The mass of the shape, usually in kilograms.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.op_Equality(Alis.Core.Physic.Collision.Shapes.MassData,Alis.Core.Physic.Collision.Shapes.MassData)">
            <summary>The equal operator</summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.op_Inequality(Alis.Core.Physic.Collision.Shapes.MassData,Alis.Core.Physic.Collision.Shapes.MassData)">
            <summary>The not equal operator</summary>
            <param name="left"></param>
            <param name="right"></param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.Equals(Alis.Core.Physic.Collision.Shapes.MassData)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.Equals(System.Object)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.MassData.GetHashCode">
            <summary>
                Gets the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.PolygonShape">
            <summary>Represents a simple non-self intersecting convex polygon. Create a convex hull from the given array of points.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.PolygonShape.NormalsPrivate">
            <summary>
                The normals
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.PolygonShape.VerticesPrivate">
            <summary>
                The vertices
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.#ctor(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.PolygonShape" /> class.</summary>
            <param name="vertices">The vertices.</param>
            <param name="density">The density.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.#ctor(System.Single)">
            <summary>Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.PolygonShape" /> class.</summary>
            <param name="density">The density.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.PolygonShape" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.PolygonShape.Vertices">
            <summary>
                Create a convex hull from the given array of local points. The number of vertices must be in the range [3,
                Settings.MaxPolygonVertices]. Warning: the points may be re-ordered, even if they form a convex polygon Warning:
                collinear points are handled but not removed. Collinear points may lead to poor stacking behavior.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.PolygonShape.Normals">
            <summary>
                Gets the value of the normals
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.PolygonShape.ChildCount">
            <summary>
                Gets the value of the child count
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.SetVertices(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Sets the vertices using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <exception cref="T:System.InvalidOperationException">Thrown when polygon is degenerate or has less than 3 vertices</exception>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.CheckVerticesValidity(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Checks the vertices validity using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <exception cref="T:System.InvalidOperationException">You can't create a polygon with less than 3 vertices</exception>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.RemoveDuplicateVertices(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Removes the duplicate vertices using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The vector array</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.FindRightmostVertex(Alis.Core.Aspect.Math.Vector.Vector2[],System.Int32)">
            <summary>
            Finds the rightmost vertex using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="numberOfVertices">The number of vertices</param>
            <returns>The rightmost vertex index</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.ComputeConvexHull(Alis.Core.Aspect.Math.Vector.Vector2[],System.Int32,System.Int32)">
            <summary>
            Computes the convex hull using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="numberOfVertices">The number of vertices</param>
            <param name="rightmostVertexIndex">The rightmost vertex index</param>
            <returns>The int array</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.CopyVerticesAndComputeNormals(Alis.Core.Aspect.Math.Vector.Vector2[],System.Int32[])">
            <summary>
            Copies the vertices and compute normals using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="hull">The hull</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.SetAsBox(System.Single,System.Single)">
            <summary>
                Sets the as box using the specified hx
            </summary>
            <param name="hx">The hx</param>
            <param name="hy">The hy</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.SetAsBox(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Sets the as box using the specified hx
            </summary>
            <param name="hx">The hx</param>
            <param name="hy">The hy</param>
            <param name="center">The center</param>
            <param name="angle">The angle</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.ComputeProperties">
            <summary>
                Computes the properties
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance test point
            </summary>
            <param name="transform">The transform</param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>
                Describes whether this instance ray cast
            </summary>
            <param name="input">The input</param>
            <param name="transform">The transform</param>
            <param name="childIndex">The child index</param>
            <param name="output">The output</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Given a transform, compute the associated axis aligned bounding box for a child shape.</summary>
            <param name="transform">The world transform of the shape.</param>
            <param name="childIndex">The child shape index.</param>
            <param name="aabb">The AABB results.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.PolygonShape.Clone">
            <summary>
                Clones this instance
            </summary>
            <returns>The clone</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.Shape">
            <summary>
                A shape is used for collision detection. You can create a shape however you like. Shapes used for simulation
                in World are created automatically when a Fixture is created. Shapes may encapsulate a one or more child shapes.
                A shape is 2D geometrical object, such as a circle or polygon.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.Shape.DensityPrivate">
            <summary>
                The density
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.Shape.MassDataPrivate">
            <summary>
                The mass data
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.Shape.RadiusPrivate">
            <summary>
                The radius
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.Shape.ShapeTypePrivate">
            <summary>
                The shape type
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.#ctor(Alis.Core.Physic.Collision.Shapes.ShapeType,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Collision.Shapes.Shape" /> class
            </summary>
            <param name="type">The type</param>
            <param name="radius">The radius</param>
            <param name="density">The density</param>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.Shape.ShapeType">
            <summary>Get the type of this shape.</summary>
            <value>The type of the shape.</value>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.Shape.ChildCount">
            <summary>Get the number of child primitives.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.Shape.Radius">
            <summary>Radius of the Shape Changing the radius causes a recalculation of shape properties.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Collision.Shapes.Shape.Density">
            <summary>Gets or sets the density. Changing the density causes a recalculation of shape properties.</summary>
            <value>The density.</value>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.GetMassData(Alis.Core.Physic.Collision.Shapes.MassData@)">
            <summary>
                Contains the properties of the shape such as:
                - Area of the shape
                - Centroid
                - Inertia
                - Mass
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.Clone">
            <summary>Clone the concrete shape</summary>
            <returns>A clone of the shape</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.TestPoint(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Test a point for containment in this shape. Note: This only works for convex shapes.</summary>
            <param name="transform">The shape world transform.</param>
            <param name="point">A point in world coordinates.</param>
            <returns>True if the point is inside the shape</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Collision.RayCast.RayCastOutput@)">
            <summary>Cast a ray against a child shape.</summary>
            <param name="input">The ray-cast input parameters.</param>
            <param name="transform">The transform to be applied to the shape.</param>
            <param name="childIndex">The child shape index.</param>
            <param name="output">The ray-cast results.</param>
            <returns>True if the ray-cast hits the shape</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.ComputeAabb(Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Given a transform, compute the associated axis aligned bounding box for a child shape.</summary>
            <param name="transform">The world transform of the shape.</param>
            <param name="childIndex">The child shape index.</param>
            <param name="aabb">The AABB results.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.Shapes.Shape.ComputeProperties">
            <summary>
                Compute the mass properties of this shape using its dimensions and density. The inertia tensor is computed
                about the local origin, not the centroid.
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.Shapes.ShapeType">
            <summary>
                The shape type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.Unknown">
            <summary>
                The unknown shape type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.Circle">
            <summary>
                The circle shape type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.Edge">
            <summary>
                The edge shape type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.Polygon">
            <summary>
                The polygon shape type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.Chain">
            <summary>
                The chain shape type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.Shapes.ShapeType.TypeCount">
            <summary>
                The type count shape type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TestPointHelper">
            <summary>
                The test point helper class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TestPointHelper.TestPointCircle(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Describes whether test point circle
            </summary>
            <param name="pos">The pos</param>
            <param name="radius">The radius</param>
            <param name="point">The point</param>
            <param name="transform">The transform</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TestPointHelper.TestPointPolygon(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Describes whether test point polygon
            </summary>
            <param name="vertices">The vertices</param>
            <param name="normals">The normals</param>
            <param name="point">The point</param>
            <param name="transform">The transform</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.SeparationFunction">
            <summary>
                The separation function class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.SeparationFunction.Initialize(Alis.Core.Physic.Collision.NarrowPhase.SimplexCache@,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,System.Single,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Physic.Collision.TOI.SeparationFunctionType@)">
            <summary>
                Initializes the cache
            </summary>
            <param name="cache">The cache</param>
            <param name="proxyA">The proxy</param>
            <param name="sweepA">The sweep</param>
            <param name="proxyB">The proxy</param>
            <param name="sweepB">The sweep</param>
            <param name="t1">The </param>
            <param name="axis">The axis</param>
            <param name="localPoint">The local point</param>
            <param name="type">The type</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.SeparationFunction.FindMinSeparation(System.Int32@,System.Int32@,System.Single,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Physic.Collision.TOI.SeparationFunctionType)">
            <summary>
                Finds the min separation using the specified index a
            </summary>
            <param name="indexA">The index</param>
            <param name="indexB">The index</param>
            <param name="t">The </param>
            <param name="proxyA">The proxy</param>
            <param name="sweepA">The sweep</param>
            <param name="proxyB">The proxy</param>
            <param name="sweepB">The sweep</param>
            <param name="axis">The axis</param>
            <param name="localPoint">The local point</param>
            <param name="type">The type</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.SeparationFunction.Evaluate(System.Int32,System.Int32,System.Single,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,Alis.Core.Physic.Collision.Distance.DistanceProxy,Alis.Core.Physic.Collision.TOI.Sweep@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Physic.Collision.TOI.SeparationFunctionType)">
            <summary>
                Evaluates the index a
            </summary>
            <param name="indexA">The index</param>
            <param name="indexB">The index</param>
            <param name="t">The </param>
            <param name="proxyA">The proxy</param>
            <param name="sweepA">The sweep</param>
            <param name="proxyB">The proxy</param>
            <param name="sweepB">The sweep</param>
            <param name="axis">The axis</param>
            <param name="localPoint">The local point</param>
            <param name="type">The type</param>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.SeparationFunctionType">
            <summary>
                The separation function type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.SeparationFunctionType.Points">
            <summary>
                The points separation function type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.SeparationFunctionType.FaceA">
            <summary>
                The face separation function type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.SeparationFunctionType.FaceB">
            <summary>
                The face separation function type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.Sweep">
            <summary>
                This describes the motion of a body/shape for TOI computation. Shapes are defined with respect to the body
                origin, which may no coincide with the center of mass. However, to support dynamics we must interpolate the center
                of
                mass position.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.A">
            <summary>World angles</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.A0">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.Alpha0">
            <summary>Fraction of the current time step in the range [0,1] c0 and a0 are the positions at alpha0.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.C">
            <summary>Center world positions</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.C0">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.Sweep.LocalCenter">
            <summary>Local center of mass position</summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.Sweep.GetTransform(Alis.Core.Aspect.Math.Transform@,System.Single)">
            <summary>Get the interpolated transform at a specific time.</summary>
            <param name="xfb">The transform.</param>
            <param name="beta">beta is a factor in [0,1], where 0 indicates alpha0.</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.Sweep.Advance(System.Single)">
            <summary>Advance the sweep forward, yielding a new initial state.</summary>
            <param name="alpha">new initial time</param>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.Sweep.Normalize">
            <summary>Normalize the angles.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.TimeOfImpact">
            <summary>
                The time of impact class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.TimeOfImpact.ToiCalls">
            <summary>
                The toi max iters
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.TimeOfImpact.ToiIters">
            <summary>
                The toi max iters
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.TimeOfImpact.ToiMaxIters">
            <summary>
                The toi max iters
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.TimeOfImpact.ToiRootIters">
            <summary>
                The toi max root iters
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.TimeOfImpact.ToiMaxRootIters">
            <summary>
                The toi max root iters
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Collision.TOI.TimeOfImpact.CalculateTimeOfImpact(Alis.Core.Physic.Collision.TOI.ToiInput@,Alis.Core.Physic.Collision.TOI.ToiOutput@)">
            <summary>
                Compute the upper bound on time before two shapes penetrate. Time is represented as a fraction between
                [0,tMax]. This uses a swept separating axis and may miss some intermediate, non-tunneling collision. If you change
                the
                time interval, you should call this function again. Note: use Distance() to compute the contact point and normal at
                the
                time of impact.
            </summary>
            <param name="input">The input.</param>
            <param name="output">The output.</param>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.ToiInput">
            <summary>Input parameters for CalculateTimeOfImpact</summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiInput.ProxyA">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiInput.ProxyB">
            <summary>
                The proxy
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiInput.SweepA">
            <summary>
                The sweep
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiInput.SweepB">
            <summary>
                The sweep
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiInput.Max">
            <summary>
                The max
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.ToiOutput">
            <summary>
                The toi output
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutput.State">
            <summary>
                The state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutput.T">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Collision.TOI.ToiOutputState">
            <summary>
                The toi output state enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutputState.Unknown">
            <summary>
                The unknown toi output state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutputState.Failed">
            <summary>
                The failed toi output state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutputState.Overlapped">
            <summary>
                The overlapped toi output state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutputState.Touching">
            <summary>
                The touching toi output state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Collision.TOI.ToiOutputState.Seperated">
            <summary>
                The seperated toi output state
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Config.Settings">
            <summary>
                The settings class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.ManifoldPoints">
            <summary>The maximum number of contact points between two convex shapes. DO NOT CHANGE THIS VALUE!</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.EnableSubStepping">
            <summary>Enable or disable sub stepping. Used for debugging.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.BlockSolve">
            <summary>Enable or disable the block contact solver. Used for debugging.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.SkipSanityChecks">
            <summary>
                Set this to true to skip sanity checks in the engine. This will speed up the tools by removing the overhead of
                the checks, but you will need to handle checks yourself where it is needed.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.UseConvexHullPolygons">
            <summary>
                If true, it will run a GiftWrap convex hull on all polygon inputs. This makes for a more stable engine when
                given random input, but if speed of the creation of polygons are more important, you might want to set this to
                false.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.UseFpeCollisionCategories">
            <summary>
                Velcro Physics has a different way of filtering fixtures than Box2d. We have both FPE and Box2D filtering in
                the engine. If you are upgrading from earlier versions of FPE, set this to true and
                DefaultFixtureCollisionCategories
                to Category.All.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.DefaultFixtureCollisionCategories">
            <summary>
                This is used by the Fixture constructor as the default value for Fixture.CollisionCategories member. Note that
                you may need to change this depending on the setting of UseFPECollisionCategories, above.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.DefaultFixtureCollidesWith">
            <summary>This is used by the Fixture constructor as the default value for Fixture.CollidesWith member.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.DefaultFixtureIgnoreCcdWith">
            <summary>This is used by the Fixture constructor as the default value for Fixture.IgnoreCCDWith member.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.DefaultCollisionGroup">
            <summary>
                Set the default collision group
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.GjkIterations">
            <summary>Defines the maximum number of iterations made by the GJK algorithm.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AabbExtension">
            <summary>
                This is used to fatten AABBs in the dynamic tree. This allows proxies to move by a small amount without
                triggering a tree adjustment. This is in meters.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AabbMultiplier">
            <summary>
                This is used to fatten AABBs in the dynamic tree. This is used to predict the future position based on the
                current displacement. This is a dimensionless multiplier.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.LinearSlop">
            <summary>
                A small length used as a collision and constraint tolerance. Usually it is chosen to be numerically
                significant, but visually insignificant.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AngularSlop">
            <summary>
                A small angle used as a collision and constraint tolerance. Usually it is chosen to be numerically
                significant, but visually insignificant.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.SubSteps">
            <summary>Maximum number of sub-steps per contact in continuous physics simulation.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.ToiContacts">
            <summary>Maximum number of contacts to be handled to solve a TOI impact.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.LinearCorrection">
            <summary>The maximum linear position correction used when solving constraints. This helps to prevent overshoot.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AngularCorrection">
            <summary>The maximum angular position correction used when solving constraints. This helps to prevent overshoot.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.Translation">
            <summary>
                The maximum linear velocity of a body. This limit is very large and is used to prevent numerical problems. You
                shouldn't need to adjust this.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.Rotation">
            <summary>
                The maximum angular velocity of a body. This limit is very large and is used to prevent numerical problems.
                You shouldn't need to adjust this.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.Baumgarte">
            <summary>
                This scale factor controls how fast overlap is resolved. Ideally this would be 1 so that overlap is removed in
                one time step. However using values close to 1 often lead to overshoot.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.ToiBaumgarte">
            <summary>
                The toi baumgarte
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.TimeToSleep">
            <summary>The time that a body must be still before it will go to sleep.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.LinearSleepTolerance">
            <summary>A body cannot sleep if its linear velocity is above this tolerance.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AngularSleepTolerance">
            <summary>A body cannot sleep if its angular velocity is above this tolerance.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.AutoClearForces">
            <summary>
                By default, forces are cleared automatically after each call to Step. The default behavior is modified with
                this setting. The purpose of this setting is to support sub-stepping. Sub-stepping is often used to maintain a
                fixed
                sized time step under a variable frame-rate. When you perform sub-stepping you should disable auto clearing of
                forces
                and instead call ClearForces after all sub-steps are complete in one pass of your game loop.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.PolygonVertices">
            <summary>The maximum number of vertices on a convex polygon.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.PolygonRadius">
            <summary>
                The radius of the polygon/edge shape skin. This should not be modified. Making this smaller means polygons
                will have an insufficient buffer for continuous collision. Making it larger may create artifacts for vertex
                collision.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.MixFriction">
            <summary>
                Gets called when there is a collision between 2 fixtures. The first two parameters are the friction values of
                either fixture. The return value should be the desired friction value of the collection.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.MixRestitution">
            <summary>
                Gets called when there is a collision between 2 fixtures. The first two parameters are the restitution values
                of either fixture. The return value should be the desired restitution value of the collection.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Config.Settings.MixRestitutionThreshold">
            <summary>
                The default mix restitution threshold
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Config.Settings.DefaultMixFriction(System.Single,System.Single)">
            <summary>
                Friction mixing law. The idea is to allow either fixture to drive the friction to zero. For example, anything
                slides on ice.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Config.Settings.DefaultMixRestitution(System.Single,System.Single)">
            <summary>
                Restitution mixing law. The idea is allow for anything to bounce off an inelastic surface. For example, a
                superball bounces on anything.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Config.Settings.DefaultMixRestitutionThreshold(System.Single,System.Single)">
            <summary>Restitution mixing law. This picks the lowest value.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Body">
            <summary>
                The body class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.angularVelocity">
            <summary>
                The angular velocity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.inertia">
            <summary>
                The inertia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.linearVelc">
            <summary>
                The linear velocity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.OnCollision">
            <summary>
                Fires when two shapes collide and a contact is created between them. Note that the first fixture argument is
                always the fixture that the delegate is subscribed to.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.OnSeparation">
            <summary>
                Fires when two shapes separate and a contact is removed between them. Note: This can in some cases be called
                multiple times, as a fixture can have multiple contacts. Note The first fixture argument is always the fixture that
                the
                delegate is subscribed to.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.Type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Body.Xf">
            <summary>
                The xf
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Dynamics.BodyType,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Body" /> class
            </summary>
            <param name="position">The position</param>
            <param name="linearVelocity">The linear velocity</param>
            <param name="bodyType">The body type</param>
            <param name="angle">The angle</param>
            <param name="angularVelocity">The angular velocity</param>
            <param name="linearDamping">The linear damping</param>
            <param name="angularDamping">The angular damping</param>
            <param name="allowSleep">The allow sleep</param>
            <param name="awake">The awake</param>
            <param name="fixedRotation">The fixed rotation</param>
            <param name="isBullet">The is bullet</param>
            <param name="enabled">The enabled</param>
            <param name="gravityScale">The gravity scale</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Flags">
            <summary>
                The flags
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Force">
            <summary>
                The force
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.InvI">
            <summary>
                The inv
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.InvMass">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Sweep">
            <summary>
                The sweep
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Torque">
            <summary>
                The torque
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.ControllerFilter">
            <summary>
                Gets or sets the value of the controller filter
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.PhysicsLogicFilter">
            <summary>
                Gets or sets the value of the physics logic filter
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.SleepTime">
            <summary>
                Gets or sets the value of the sleep time
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IslandIndex">
            <summary>
                Gets or sets the value of the island index
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.GravityScale">
            <summary>
                Scale the gravity applied to this body. Defaults to 1. A value of 2 means double the gravity is applied to
                this body.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Revolutions">
            <summary>Gets the total number revolutions the body has made.</summary>
            <value>The revolutions.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.BodyType">
            <summary>Gets or sets the body type. Warning: Calling this mid-update might cause a crash.</summary>
            <value>The type of body.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.LinearVelocity">
            <summary>Get or sets the linear velocity of the center of mass.</summary>
            <value>The linear velocity.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.AngularVelocity">
            <summary>Gets or sets the angular velocity. Radians/second.</summary>
            <value>The angular velocity.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.LinearDamping">
            <summary>Gets or sets the linear damping.</summary>
            <value>The linear damping.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.AngularDamping">
            <summary>Gets or sets the angular damping.</summary>
            <value>The angular damping.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsBullet">
            <summary>Gets or sets a value indicating whether this body should be included in the CCD solver.</summary>
            <value><c>true</c> if this instance is included in CCD; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.SleepingAllowed">
            <summary>You can disable sleeping on this body. If you disable sleeping, the body will be woken.</summary>
            <value><c>true</c> if sleeping is allowed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Awake">
            <summary>Set the sleep state of the body. A sleeping body has very low CPU cost.</summary>
            <value><c>true</c> if awake; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Enabled">
            <summary>
                Set the active state of the body. An inactive body is not simulated and cannot be collided with or woken up.
                If you pass a flag of true, all fixtures will be added to the broad-phase. If you pass a flag of false, all
                fixtures
                will be removed from the broad-phase and all contacts will be destroyed. Fixtures and joints are otherwise
                unaffected.
                You may continue to create/destroy fixtures and joints on inactive bodies. Fixtures on an inactive body are
                implicitly
                inactive and will not participate in collisions, ray-casts, or queries. Joints connected to an inactive body are
                implicitly inactive. An inactive body is still owned by a b2World object and remains in the body list.
            </summary>
            <value><c>true</c> if active; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.FixedRotation">
            <summary>Set this body to have fixed rotation. This causes the mass to be reset.</summary>
            <value><c>true</c> if it has fixed rotation; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.FixtureList">
            <summary>Gets all the fixtures attached to this body.</summary>
            <value>The fixture list.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.JointList">
            <summary>Get the list of all joints attached to this body.</summary>
            <value>The joint list.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.ContactList">
            <summary>
                Get the list of all contacts attached to this body. Warning: this list changes during the time step and you
                may miss some collisions if you don't use ContactListener.
            </summary>
            <value>The contact list.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Position">
            <summary>Get the world body origin position.</summary>
            <returns>Return the world position of the body's origin.</returns>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Rotation">
            <summary>Get the angle in radians.</summary>
            <returns>Return the current world rotation angle in radians.</returns>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsIsland">
            <summary>
                Gets the value of the is island
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsStatic">
            <summary>
                Gets the value of the is static
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsKinematic">
            <summary>
                Gets the value of the is kinematic
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsDynamic">
            <summary>
                Gets the value of the is dynamic
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.WorldCenter">
            <summary>Get the world position of the center of mass.</summary>
            <value>The world position.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.LocalCenter">
            <summary>Get the local position of the center of mass.</summary>
            <value>The local position.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Mass">
            <summary>Gets or sets the mass. Usually in kilograms (kg).</summary>
            <value>The mass.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Inertia">
            <summary>Get or set the rotational inertia of the body about the local origin. usually in kg-m^2.</summary>
            <value>The inertia.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Restitution">
            <summary>
                Sets the value of the restitution
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.Friction">
            <summary>
                Sets the value of the friction
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.CollisionCategories">
            <summary>
                Sets the value of the collision categories
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.CollidesWith">
            <summary>
                Sets the value of the collides with
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IgnoreCcdWith">
            <summary>
                Body objects can define which categories of bodies they wish to ignore CCD with. This allows certain bodies to
                be configured to ignore CCD with objects that aren't a penetration problem due to the way content has been
                prepared.
                This is compared against the other Body's fixture CollisionCategories within World.SolveTOI().
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.CollisionGroup">
            <summary>
                Sets the value of the collision group
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IsSensor">
            <summary>
                Sets the value of the is sensor
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Body.IgnoreCcd">
            <summary>
                Gets or sets the value of the ignore ccd
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetMassData(Alis.Core.Physic.Collision.Shapes.MassData@)">
            <summary>
                Gets the mass data using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ResetDynamics">
            <summary>Resets the dynamics of this body. Sets torque, force and linear/angular velocity to 0</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.AddFixture(Alis.Core.Physic.Dynamics.Fixture)">
            <summary>
                Creates a fixture and attach it to this body. If the density is non-zero, this function automatically updates
                the mass of the body. Contacts are not created until the next time step. Warning: This function is locked during
                callbacks.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.AddFixture(Alis.Core.Physic.Collision.Shapes.Shape)">
            <summary>
                Creates a fixture and attach it to this body. If the density is non-zero, this function automatically updates
                the mass of the body. Contacts are not created until the next time step. Warning: This function is locked during
                callbacks.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.RemoveFixture(Alis.Core.Physic.Dynamics.Fixture)">
            <summary>
                Destroy a fixture. This removes the fixture from the broad-phase and destroys all contacts associated with
                this fixture. This will automatically adjust the mass of the body if the body is dynamic and the fixture has
                positive
                density. All fixtures attached to a body are implicitly destroyed when the body is destroyed. Warning: This
                function is
                locked during callbacks.
            </summary>
            <param name="fixture">The fixture to be removed.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.SetTransform(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies.
                Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">The world position of the body's local origin.</param>
            <param name="rotation">The world rotation in radians.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.SetTransform(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single)">
            <summary>
                Set the position of the body's origin and rotation. This breaks any contacts and wakes the other bodies.
                Manipulating a body's transform may cause non-physical behavior.
            </summary>
            <param name="position">The world position of the body's local origin.</param>
            <param name="rotation">The world rotation in radians.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetTransform(Alis.Core.Aspect.Math.Transform@)">
            <summary>Get the body transform for the body's origin.</summary>
            <param name="transform">The transform of the body's origin.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyForce(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque
                and affect the angular velocity. This wakes up the body.
            </summary>
            <param name="force">The world force vector, usually in Newtons (N).</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyForce(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Applies a force at the center of mass.</summary>
            <param name="force">The force.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyForce(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Applies a force at the center of mass.</summary>
            <param name="force">The force.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyForce(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Apply a force at a world point. If the force is not applied at the center of mass, it will generate a torque
                and affect the angular velocity. This wakes up the body.
            </summary>
            <param name="force">The world force vector, usually in Newtons (N).</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyTorque(System.Single)">
            <summary>Apply a torque. This affects the angular velocity without affecting the linear velocity of the center of mass.</summary>
            <param name="torque">The torque about the z-axis (out of the screen), usually in N-m.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyLinearImpulse(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body.</summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyLinearImpulse(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if
                the point of application is not at the center of mass. This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyLinearImpulse(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Apply an impulse at a point. This immediately modifies the velocity. This wakes up the body.</summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyLinearImpulse(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Apply an impulse at a point. This immediately modifies the velocity. It also modifies the angular velocity if
                the point of application is not at the center of mass. This wakes up the body.
            </summary>
            <param name="impulse">The world impulse vector, usually in N-seconds or kg-m/s.</param>
            <param name="point">The world position of the point of application.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ApplyAngularImpulse(System.Single)">
            <summary>Apply an angular impulse.</summary>
            <param name="impulse">The angular impulse in units of kg*m*m/s.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ResetMassData">
            <summary>
                This resets the mass properties to the sum of the mass properties of the fixtures. This normally does not need
                to be called unless you called SetMassData to override the mass and you later want to reset the mass.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetWorldPoint(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Get the world coordinates of a point given the local coordinates.</summary>
            <param name="localPoint">A point on the body measured relative the body's origin.</param>
            <returns>The same point expressed in world coordinates.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetWorldPoint(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the world coordinates of a point given the local coordinates.</summary>
            <param name="localPoint">A point on the body measured relative the body's origin.</param>
            <returns>The same point expressed in world coordinates.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetWorldVector(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Get the world coordinates of a vector given the local coordinates. Note that the vector only takes the
                rotation into account, not the position.
            </summary>
            <param name="localVector">A vector fixed in the body.</param>
            <returns>The same vector expressed in world coordinates.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetWorldVector(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the world coordinates of a vector given the local coordinates.</summary>
            <param name="localVector">A vector fixed in the body.</param>
            <returns>The same vector expressed in world coordinates.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLocalPoint(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Gets a local point relative to the body's origin given a world point. Note that the vector only takes the
                rotation into account, not the position.
            </summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The corresponding local point relative to the body's origin.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLocalPoint(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Gets a local point relative to the body's origin given a world point.</summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The corresponding local point relative to the body's origin.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLocalVector(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the
                position.
            </summary>
            <param name="worldVector">A vector in world coordinates.</param>
            <returns>The corresponding local vector.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLocalVector(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Gets a local vector given a world vector. Note that the vector only takes the rotation into account, not the
                position.
            </summary>
            <param name="worldVector">A vector in world coordinates.</param>
            <returns>The corresponding local vector.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLinearVelocityFromWorldPoint(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the world linear velocity of a world point attached to this body.</summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLinearVelocityFromWorldPoint(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Get the world linear velocity of a world point attached to this body.</summary>
            <param name="worldPoint">A point in world coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLinearVelocityFromLocalPoint(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the world velocity of a local point.</summary>
            <param name="localPoint">A point in local coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.GetLinearVelocityFromLocalPoint(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Get the world velocity of a local point.</summary>
            <param name="localPoint">A point in local coordinates.</param>
            <returns>The world velocity of a point.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.SynchronizeFixtures">
            <summary>
                Synchronizes the fixtures
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.SynchronizeTransform">
            <summary>
                Synchronizes the transform
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ShouldCollide(Alis.Core.Physic.Dynamics.Body)">
            <summary>This is used to prevent connected bodies from colliding. It may lie, depending on the collideConnected flag.</summary>
            <param name="other">The other body.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ClearFlags">
            <summary>
                Initializes a new instance of the <see cref="M:Alis.Core.Physic.Dynamics.Body.ClearFlags" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.Advance(System.Single)">
            <summary>
                Advances the alpha
            </summary>
            <param name="alpha">The alpha</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.ClearForces">
            <summary>
                Clears the forces
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.CheckOutRange">
            <summary>
                Checks the out range
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Body.SetAlphaToZero">
            <summary>
                Sets the alpha to zero
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.BodyFlags">
            <summary>
                The body flags enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.None">
            <summary>
                The unknown body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.IslandFlag">
            <summary>
                The island flag body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.AwakeFlag">
            <summary>
                The awake flag body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.AutoSleepFlag">
            <summary>
                The auto sleep flag body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.BulletFlag">
            <summary>
                The bullet flag body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.FixedRotationFlag">
            <summary>
                The fixed rotation flag body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.Enabled">
            <summary>
                The enabled body flags
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyFlags.IgnoreCcd">
            <summary>
                The ignore ccd body flags
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.BodyHelper">
            <summary>
                The body helper class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BodyHelper.AdvanceBody(Alis.Core.Physic.Collision.ContactSystem.ContactManager,Alis.Core.Physic.Dynamics.Solver.Island,Alis.Core.Physic.Collision.ContactSystem.Contact,System.Single)">
            <summary>
                Advances the body using the specified contact manager
            </summary>
            <param name="contactManager">The contact manager</param>
            <param name="island">The island</param>
            <param name="minContact">The min contact</param>
            <param name="minAlpha">The min alpha</param>
            <returns>The bodies</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.BodyType">
            <summary>The body type.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyType.Static">
            <summary>Zero velocity, may be manually moved. Note: even static bodies have mass.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyType.Kinematic">
            <summary>Zero mass, non-zero velocity set by user, moved by solver</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BodyType.Dynamic">
            <summary>Positive mass, non-zero velocity determined by forces, moved by solver</summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.BreakableBody">
            <summary>A type of body that supports multiple fixtures that can break apart.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BreakableBody.world">
            <summary>
                The world
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BreakableBody.angularVelocitiesCache">
            <summary>
                The angular velocities cache
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BreakableBody.break">
            <summary>
                The break
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.BreakableBody.velocitiesCache">
            <summary>
                The vector
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.#ctor(Alis.Core.Physic.World,System.Collections.Generic.ICollection{Alis.Core.Physic.Shared.Vertices},System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.BreakableBody" /> class
            </summary>
            <param name="world">The world</param>
            <param name="parts">The parts</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.#ctor(Alis.Core.Physic.World,System.Collections.Generic.IEnumerable{Alis.Core.Physic.Collision.Shapes.Shape},Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.BreakableBody" /> class
            </summary>
            <param name="world">The world</param>
            <param name="shapes">The shapes</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.BreakableBody.Strength">
            <summary>The force needed to break the body apart. Default: 500</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.BreakableBody.Broken">
            <summary>
                Gets or sets the value of the broken
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.BreakableBody.MainBody">
            <summary>
                Gets the value of the main body
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.BreakableBody.Parts">
            <summary>
                Gets the value of the parts
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.PostSolve(Alis.Core.Physic.Collision.ContactSystem.Contact,Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint)">
            <summary>
                Posts the solve using the specified contact
            </summary>
            <param name="contact">The contact</param>
            <param name="impulse">The impulse</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.Decompose">
            <summary>
                Decomposes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.BreakableBody.Break">
            <summary>
                Breaks this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Fixture">
            <summary>
                A fixture is used to attach a Shape to a body for collision detection. A fixture inherits its transform from
                its parent. Fixtures hold additional non-geometric data such as friction, collision filters, etc. Fixtures are
                created
                via Body.CreateFixture. Warning: You cannot reuse fixtures.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.AfterCollision">
            <summary>Fires after two shapes has collided and are solved. This gives you a chance to get the impact force.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.BeforeCollision">
            <summary>
                Fires when two fixtures are close to each other. Due to how the broadphase works, this can be quite inaccurate
                as shapes are approximated using AABBs.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.CollidesWithprivate">
            <summary>
                The collides with
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.CollisionCategoriesprivate">
            <summary>
                The collision categories
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.CollisionGroupPrivate">
            <summary>
                The collision group
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.IsSensorPrivate">
            <summary>
                The is sensor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.OnCollision">
            <summary>
                Fires when two shapes collide and a contact is created between them. Note that the first fixture argument is
                always the fixture that the delegate is subscribed to.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Fixture.OnSeparation">
            <summary>
                Fires when two shapes separate and a contact is removed between them. Note: This can in some cases be called
                multiple times, as a fixture can have multiple contacts. Note The first fixture argument is always the fixture that
                the
                delegate is subscribed to.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.#ctor(Alis.Core.Physic.Collision.Shapes.Shape,Alis.Core.Physic.Collision.Filtering.Filter,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Fixture" /> class
            </summary>
            <param name="shape">The shape</param>
            <param name="filter">The filter</param>
            <param name="friction">The friction</param>
            <param name="restitution">The restitution</param>
            <param name="restitutionThreshold">The restitution threshold</param>
            <param name="isSensor">The is sensor</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Filter">
            <summary>Contact filtering data.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.IgnoreCcdWith">
            <summary>
                Gets or sets the value of the ignore ccd with
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Proxies">
            <summary>
                Gets the value of the proxies
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.ProxyCount">
            <summary>
                Gets the value of the proxy count
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.RestitutionThreshold">
            <summary>Get or set the restitution threshold. This will _not_ change the restitution threshold of existing contacts.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.CollisionGroup">
            <summary>
                Defaults to 0 If Settings.UseFPECollisionCategories is set to false: Collision groups allow a certain group of
                objects to never collide (negative) or always collide (positive). Zero means no collision group. Non-zero group
                filtering always wins against the mask bits. If Settings.UseFPECollisionCategories is set to true: If 2 fixtures
                are in
                the same collision group, they will not collide.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.CollidesWith">
            <summary>
                Defaults to Category.All The collision mask bits. This states the categories that this fixture would accept
                for collision. Use Settings.UseFPECollisionCategories to change the behavior.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.CollisionCategories">
            <summary>
                The collision categories this fixture is a part of. If Settings.UseFPECollisionCategories is set to false:
                Defaults to Category.Cat1 If Settings.UseFPECollisionCategories is set to true: Defaults to Category.All
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Shape">
            <summary>
                Get the child Shape. You can modify the child Shape, however you should not change the number of vertices
                because this will crash some collision caching mechanisms.
            </summary>
            <value>The shape.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.IsSensor">
            <summary>Gets or sets a value indicating whether this fixture is a sensor.</summary>
            <value><c>true</c> if this instance is a sensor; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Body">
            <summary>Get the parent body of this fixture. This is null if the fixture is not attached.</summary>
            <value>The body.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Friction">
            <summary>Set the coefficient of friction. This will _not_ change the friction of existing contacts.</summary>
            <value>The friction.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Fixture.Restitution">
            <summary>Set the coefficient of restitution. This will not change the restitution of existing contacts.</summary>
            <value>The restitution.</value>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.Refilter">
            <summary>
                Contacts are persistent and will keep being persistent unless they are flagged for filtering. This methods
                flags all contacts associated with the body for filtering.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.TestPoint(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Test a point for containment in this fixture.</summary>
            <param name="point">A point in world coordinates.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastOutput@,Alis.Core.Physic.Collision.RayCast.RayCastInput@,System.Int32)">
            <summary>Cast a ray against this Shape.</summary>
            <param name="output">The ray-cast results.</param>
            <param name="input">The ray-cast input parameters.</param>
            <param name="childIndex">Index of the child.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.GetAabb(Alis.Core.Physic.Shared.Aabb@,System.Int32)">
            <summary>
                Get the fixture's AABB. This AABB may be enlarge and/or stale. If you need a more accurate AABB, compute it
                using the Shape and the body transform.
            </summary>
            <param name="aabb">The AABB.</param>
            <param name="childIndex">Index of the child.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.Destroy">
            <summary>
                Destroys this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.CreateProxies(Alis.Core.Physic.Collision.Broadphase.IBroadPhase,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Creates the proxies using the specified broad phase
            </summary>
            <param name="broadPhase">The broad phase</param>
            <param name="xf">The xf</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.DestroyProxies(Alis.Core.Physic.Collision.Broadphase.IBroadPhase)">
            <summary>
                Destroys the proxies using the specified broad phase
            </summary>
            <param name="broadPhase">The broad phase</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Fixture.Synchronize(Alis.Core.Physic.Collision.Broadphase.IBroadPhase,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Synchronizes the broad phase
            </summary>
            <param name="broadPhase">The broad phase</param>
            <param name="transform1">The transform</param>
            <param name="transform2">The transform</param>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.FixtureProxy">
            <summary>This proxy is used internally to connect fixtures to the broad-phase.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.FixtureProxy.Aabb">
            <summary>
                The aabb
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.FixtureProxy.ChildIndex">
            <summary>
                The child index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.FixtureProxy.Fixture">
            <summary>
                The fixture
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.FixtureProxy.ProxyId">
            <summary>
                The proxy id
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.BodyHandler">
            <summary>
                The body handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.ControllerHandler">
            <summary>
                The controller handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.FixtureHandler">
            <summary>
                The fixture handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.JointHandler">
            <summary>
                The joint handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.PostSolveHandler">
            <summary>
                The post solve handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Handlers.PreSolveHandler">
            <summary>
                The pre solve handler
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.AngleJoint">
            <summary>Maintains a fixed angle between two bodies</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.AngleJoint.bias">
            <summary>
                The bias
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.AngleJoint.jointError">
            <summary>
                The joint error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.AngleJoint.massFactor">
            <summary>
                The mass factor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.AngleJoint.targetAngle">
            <summary>
                The target angle
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.AngleJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.TargetAngle">
            <summary>The desired angle between BodyA and BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.BiasFactor">
            <summary>Gets or sets the bias factor. Defaults to 0.2</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.Impulse">
            <summary>Gets or sets the maximum impulse. Defaults to float.MaxValue</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.AngleJoint.Softness">
            <summary>Gets or sets the softness of the joint. Defaults to 0</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.AngleJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.DistanceJoint">
            <summary>
                A distance joint constrains two points on two bodies to remain at a fixed distance from each other. You can
                view this as a massless, rigid rod.
                1-D constrained system
                m (v2 - v1) = lambda
                v2 + (beta/h) * x1 + gamma * lambda = 0, gamma has units of inverse mass.
                x2 = x1 + h * v2
                1-D mass-damper-spring system
                m (v2 - v1) + h * d * v2 + h * k *
                C = norm(p2 - p1) - L
                u = (p2 - p1) / norm(p2 - p1)
                dot = dot(u, v2 + cross(w2, r2) - v1 - cross(w1, r1))
                J = [-u -cross(r1, u) u cross(r2, u)]
                K = J * invM * JT
                = invMass1 + invI1 * cross(r1, u)^2 + invMass2 + invI2 * cross(r2, u)^2
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.lengthPrivate">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.bias">
            <summary>
                The bias
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.currentLength">
            <summary>
                The current length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.damping">
            <summary>
                The damping
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.gamma">
            <summary>
                The gamma
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.localAnchorA">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.localAnchorB">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.lowerImpulse">
            <summary>
                The lower impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.maxLength">
            <summary>
                The max length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.minLength">
            <summary>
                The min length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.softMass">
            <summary>
                The soft mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.stiffness">
            <summary>
                The stiffness
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.u">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.upperImpulse">
            <summary>
                The upper impulse
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.DistanceJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="length">The length</param>
            <param name="minLength">The min length</param>
            <param name="maxLength">The max length</param>
            <param name="stiffness">The stiffness</param>
            <param name="damping">The damping</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                This requires defining an anchor point on both bodies and the non-zero length of the distance joint. If you
                don't supply a length, the local anchor points is used so that the initial configuration can violate the constraint
                slightly. This helps when saving and loading a game. Warning Do not use a zero or short length.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchorA">The first body anchor</param>
            <param name="anchorB">The second body anchor</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.LocalAnchorA">
            <summary>The local anchor point relative to bodyA's origin.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.LocalAnchorB">
            <summary>The local anchor point relative to bodyB's origin.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.WorldAnchorA">
            <summary>The anchor on <see cref="P:Alis.Core.Physic.Dynamics.Joints.Joint.BodyA" /> in world coordinates</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.WorldAnchorB">
            <summary>The anchor on <see cref="P:Alis.Core.Physic.Dynamics.Joints.Joint.BodyB" /> in world coordinates</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.Stiffness">
            <summary>Set/get the linear stiffness in N/m</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.Damping">
            <summary>Set/get linear damping in N*s/m</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.MinLength">
            <summary>Minimum length. Clamped to a stable minimum value.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.Length">
            <summary>Maximum length. Must be greater than or equal to the minimum length.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.GetReactionForce(System.Single)">
            <summary>Get the reaction force given the inverse time step. Unit is N.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.GetReactionTorque(System.Single)">
            <summary>Get the reaction torque given the inverse time step. Unit is N*m. This is always zero for a distance joint.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.DistanceJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint">
             <summary>
                 A mouse joint is used to make a point on a body track a specified world point. This a soft constraint with a
                 maximum force. This allows the constraint to stretch and without applying huge forces. NOTE: this joint is not
                 documented in the manual because it was developed to be used in the testbed. If you want to learn how to use the
                 mouse
                 joint, look at the testbed.
            
              p = attached point, m = mouse point
              C = p - m
              cDot = v
                   = v + cross(w, r)
              J = [I r_skew]
              Identity used:
              w k % (rx i + ry j) = w * (-ry i + rx j)
             </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.beta">
            <summary>
                The beta
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.c">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.gamma">
            <summary>
                The gamma
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.targetB">
            <summary>
                The target
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="target">The target</param>
            <param name="maxForce">The max force</param>
            <param name="stiffness">The stiffness</param>
            <param name="damping">The damping</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>This requires a world target point, tuning parameters, and the time step.</summary>
            <param name="body">The body.</param>
            <param name="target">The target.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.LocalAnchorA">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.WorldAnchorA">
            <summary>Use this to update the target point.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.Force">
            <summary>
                The maximum constraint force that can be exerted to move the candidate body. Usually you will express as some
                multiple of the weight (multiplier * mass * gravity). Set/get the maximum force in Newtons.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.Stiffness">
            <summary>Set/get the linear stiffness in N/m</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.Damping">
            <summary>Set/get linear damping in N*s/m</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Shifts the origin using the specified new origin
            </summary>
            <param name="newOrigin">The new origin</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FixedMouseJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.FrictionJoint">
            <summary>
                Friction joint. This is used for top-down friction. It provides 2D translational friction and angular
                friction.
             Point-to-point constraint
             cDot = v2 - v1
                  = v2 + cross(w2, r2) - v1 - cross(w1, r1)
             J = [-I -r1_skew I r2_skew ]
             Identity used:
             w k % (rx i + ry j) = w * (-ry i + rx j)
            
             Angle constraint
             cDot = w2 - w1
             J = [0 0 -1 0 0 1]
             K = invI1 + invI2
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.angularImpulse">
            <summary>
                The angular impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.angularMass">
            <summary>
                The angular mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.linearImpulse">
            <summary>
                The linear impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.linearMass">
            <summary>
                The linear mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.FrictionJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="maxForce">The max force</param>
            <param name="maxTorque">The max torque</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>Constructor for FrictionJoint.</summary>
            <param name="bodyA"></param>
            <param name="bodyB"></param>
            <param name="anchor"></param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.Force">
            <summary>The maximum friction force in N.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.Torque">
            <summary>The maximum friction torque in N-m.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
            Solves the velocity constraints using the specified data.
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.SolveAngularFriction(System.Single@,System.Single@,System.Single,System.Single,System.Single)">
            <summary>
            Solves the angular friction using the specified v a
            </summary>
            <param name="wA">The </param>
            <param name="wB">The </param>
            <param name="iA">The </param>
            <param name="iB">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.SolveLinearFriction(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Solves the linear friction using the specified v a
            </summary>
            <param name="vA">The </param>
            <param name="wA">The </param>
            <param name="vB">The </param>
            <param name="wB">The </param>
            <param name="mA">The </param>
            <param name="mB">The </param>
            <param name="iA">The </param>
            <param name="iB">The </param>
            <param name="h">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.FrictionJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.GearJoint">
            <summary>
                A gear joint is used to connect two joints together. Either joint can be a revolute or prismatic joint. You specify
                a
                gear ratio to bind the motions together:
                <![CDATA[coordinate1 + ratio * coordinate2 = ant]]>
                The ratio can be negative or positive. If one joint is a revolute joint and the other joint is a prismatic joint,
                then
                the ratio will have units of length or units of 1/length. Warning: You have to manually destroy the gear joint if
                jointA or jointB is destroyed.
                Gear Joint:
                C0 = (coordinate1 + ratio * coordinate2)_initial
                C = (coordinate1 + ratio * coordinate2) - C0 = 0
                J = [J1 ratio * J2]
                K = J * invM * JT
                = J1 * invM1 * J1T + ratio * ratio * J2 * invM2 * J2T
                Revolute:
                coordinate = rotation
                Cdo = angularVelocity
                J = [0 0 1]
                K = J * invM * JT = invI
                Prismatic:
                coordinate = dot(p - pg, ug)
                Cdo = dot(v + cross(w, r), ug)
                J = [ug cross(r, ug)]
                K = J * invM * JT = invMass + invI * cross(r, ug)^2
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.bodyC">
            <summary>
                The body
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.bodyD">
            <summary>
                The body
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.constant">
            <summary>
                The constant
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jointA">
            <summary>
                The joint
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jointB">
            <summary>
                The joint
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAnchorA">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAnchorB">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAnchorC">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAnchorD">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAxisC">
            <summary>
                The local axis
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.localAxisD">
            <summary>
                The local axis
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.referenceAngleA">
            <summary>
                The reference angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.referenceAngleB">
            <summary>
                The reference angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.typeA">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.typeB">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.iA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.iB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.iC">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.iD">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.indexC">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.indexD">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jvAc">
            <summary>
                The jv bd
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jvBd">
            <summary>
                The jv bd
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jwA">
            <summary>
                The jw
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jwB">
            <summary>
                The jw
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jwC">
            <summary>
                The jw
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.jwD">
            <summary>
                The jw
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.lcA">
            <summary>
                The lc
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.lcB">
            <summary>
                The lc
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.lcC">
            <summary>
                The lc
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.lcD">
            <summary>
                The lc
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.mA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.mB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.mC">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.mD">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.GearJoint.ratio">
            <summary>
                The ratio
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Physic.Dynamics.Joints.Joint,Alis.Core.Physic.Dynamics.Joints.Joint,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.GearJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="jointA">The joint</param>
            <param name="jointB">The joint</param>
            <param name="ratio">The ratio</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.Joint,Alis.Core.Physic.Dynamics.Joints.Joint,System.Single)">
            <summary>
                Requires two existing revolute or prismatic joints (any combination will work). The provided joints must
                attach a dynamic body to a static body.
            </summary>
            <param name="jointA">The first joint.</param>
            <param name="jointB">The second joint.</param>
            <param name="ratio">The ratio.</param>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.GearJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.GearJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.GearJoint.Ratio">
            <summary>The gear ratio.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.GearJoint.JointA">
            <summary>The first revolute/prismatic joint attached to the gear joint.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.GearJoint.JointB">
            <summary>The second revolute/prismatic joint attached to the gear joint.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.GearJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.Joint">
            <summary>
                The joint class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint._jointType">
            <summary>
                The joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.bodyA">
            <summary>Indicate if this join is enabled or not. Disabling a joint means it is still in the simulation, but inactive.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.bodyB">
            <summary>
                The body
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.breakpoint">
            <summary>
                The breakpoint
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.collideConnected">
            <summary>
                The collide connected
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.enabled">
            <summary>
                The enabled
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.Joint.userData">
            <summary>
                The user data
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.#ctor(Alis.Core.Physic.Dynamics.Joints.JointType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.Joint" /> class
            </summary>
            <param name="jointType">The joint type</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.Joint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType)">
            <summary>Constructor for fixed joint</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.Joint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The type</param>
            <param name="collideConnected">The collide connected</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.EdgeA">
            <summary>
                The joint edge
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.EdgeB">
            <summary>
                The joint edge
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.IslandFlag">
            <summary>
                The island flag
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.JointType">
            <summary>Gets or sets the type of the joint.</summary>
            <value>The type of the joint.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.Enabled">
            <summary>
                Gets or sets the value of the enabled
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.BodyA">
            <summary>Get the first body attached to this joint.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.BodyB">
            <summary>Get the second body attached to this joint.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.WorldAnchorA">
            <summary>
                Get the anchor point on bodyA in world coordinates. On some joints, this value indicate the anchor point
                within the world.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.WorldAnchorB">
            <summary>
                Get the anchor point on bodyB in world coordinates. On some joints, this value indicate the anchor point
                within the world.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.UserData">
            <summary>Set the user data pointer.</summary>
            <value>The data.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.CollideConnected">
            <summary>Set this flag to true if the attached bodies should collide.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.Joint.Breakpoint">
            <summary>
                The Breakpoint simply indicates the maximum Value the JointError can be before it breaks. The default value is
                float.MaxValue, which means it never breaks.
            </summary>
        </member>
        <member name="E:Alis.Core.Physic.Dynamics.Joints.Joint.Broke">
            <summary>Fires when the joint is broken.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.GetReactionForce(System.Single)">
            <summary>Get the reaction force on body at the joint anchor in Newtons.</summary>
            <param name="invDt">The inverse delta time.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.GetReactionTorque(System.Single)">
            <summary>Get the reaction torque on the body at the joint anchor in N*m.</summary>
            <param name="invDt">The inverse delta time.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Shift the origin for any points stored in world coordinates.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.WakeBodies">
            <summary>
                Wakes the bodies
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.IsFixedType">
            <summary>Return true if the joint is a fixed type.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.Validate(System.Single)">
            <summary>
                Validates the inv dt
            </summary>
            <param name="invDt">The inv dt</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>Solves the position constraints.</summary>
            <param name="data"></param>
            <returns>returns true if the position errors are within tolerance.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.Joint.DisableIslandFlag">
            <summary>
                Disables the island flag
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.JointEdge">
            <summary>
                A joint edge is used to connect bodies and joints together in a joint graph where each body is a node and each
                joint is an edge. A joint edge belongs to a doubly linked list maintained in each attached body. Each joint has two
                joint nodes, one for each attached body.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointEdge.Joint">
            <summary>The joint.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointEdge.Next">
            <summary>The next joint edge in the body's joint list.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointEdge.Other">
            <summary>Provides quick access to the other body attached.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointEdge.Prev">
            <summary>The previous joint edge in the body's joint list.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.JointType">
            <summary>
                The joint type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Unknown">
            <summary>
                The unknown joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Revolute">
            <summary>
                The revolute joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Prismatic">
            <summary>
                The prismatic joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Distance">
            <summary>
                The distance joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Pulley">
            <summary>
                The pulley joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Gear">
            <summary>
                The gear joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Wheel">
            <summary>
                The wheel joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Weld">
            <summary>
                The weld joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Friction">
            <summary>
                The friction joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Motor">
            <summary>
                The motor joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.Angle">
            <summary>
                The angle joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedMouse">
            <summary>
                The fixed mouse joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedRevolute">
            <summary>
                The fixed revolute joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedDistance">
            <summary>
                The fixed distance joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedLine">
            <summary>
                The fixed line joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedPrismatic">
            <summary>
                The fixed prismatic joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedAngle">
            <summary>
                The fixed angle joint type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.JointType.FixedFriction">
            <summary>
                The fixed friction joint type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.LimitState">
            <summary>
                The limit state enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.LimitState.Inactive">
            <summary>
                The inactive limit state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.LimitState.AtLower">
            <summary>
                The at lower limit state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.LimitState.AtUpper">
            <summary>
                The at upper limit state
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.LimitState.Equal">
            <summary>
                The equal limit state
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.MotorJoint">
            <summary>
                A motor joint is used to control the relative motion between two bodies. A typical usage is to control the
                movement of a dynamic body with respect to the ground.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.angularError">
            <summary>
                The angular error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.angularImpulse">
            <summary>
                The angular impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.angularMass">
            <summary>
                The angular mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.angularOffset">
            <summary>
                The angular offset
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.correctionFactor">
            <summary>
                The correction factor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.linearError">
            <summary>
                The linear error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.linearImpulse">
            <summary>
                The linear impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.linearMass">
            <summary>
                The linear mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.linearOffset">
            <summary>
                The linear offset
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.maxForce">
            <summary>
                The max force
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.maxTorque">
            <summary>
                The max torque
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.MotorJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.MotorJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="linearOffset">The linear offset</param>
            <param name="angularOffset">The angular offset</param>
            <param name="maxForce">The max force</param>
            <param name="maxTorque">The max torque</param>
            <param name="correctionFactor">The correction factor</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,System.Boolean)">
            <summary>Constructor for MotorJoint.</summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.Force">
            <summary>Get/set the maximum friction force in N.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.Torque">
            <summary>Get/set the maximum friction torque in N*m.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.CorrectionFactor">
            <summary>
                Get/set the position correction factor in the range [0,1].
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.LinearOffset">
            <summary>The linear (translation) offset.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.MotorJoint.AngularOffset">
            <summary>Get or set the angular offset.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.MotorJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint">
            <summary>
                A prismatic joint. This joint provides one degree of freedom: translation along an axis fixed in bodyA.
                Relative rotation is prevented. You can use a joint limit to restrict the range of motion and a joint motor to
                drive
                the motion or to model joint friction.
                Linear constraint (point-to-line)
                d = p2 - p1 = x2 + r2 - x1 - r1
                C = dot(perp, d)
                Cdo = dot(d, cross(w1, perp)) + dot(perp, v2 + cross(w2, r2) - v1 - cross(w1, r1))
                = -dot(perp, v1) - dot(cross(d + r1, perp), w1) + dot(perp, v2) + dot(cross(r2, perp), v2)
                J = [-perp, -cross(d + r1, perp), perp, cross(r2,perp)]
                Angular constraint
                C = a2 - a1 + a_initial
                Cdo = w2 - w1
                J = [0 0 -1 0 0 1]
                K = J * invM * JT
                J = [-a -s1 a s2]
                [0  -1  0  1]
                a = perp
                s1 = cross(d + r1, a) = cross(p2 - x1, a)
                s2 = cross(r2, a) = cross(p2 - x2, a)
                Motor/Limit linear constraint
                C = dot(ax1, d)
                Cdo = -dot(ax1, v1) - dot(cross(d + r1, ax1), w1) + dot(ax1, v2) + dot(cross(r2, ax1), v2)
                J = [-ax1 -cross(d+r1,ax1) ax1 cross(r2,ax1)]
                Predictive limit is applied even when the limit is not active.
                Prevents a constraint speed that can lead to a constraint error in one time step.
                Want C2 = C1 + h * Cdo >= 0
                Or:
                Cdo + C1/h >= 0
                I do not apply a negative constraint error because that is handled in position correction.
                So:
                Cdo + max(C1, 0)/h >= 0
                Block Solver
                We develop a block solver that includes the angular and linear constraints. This makes the limit stiffer.
                The Jacobin has 2 rows:
                J = [-uT -s1 uT s2] /// linear
                [0   -1   0  1] /// angular
                u = perp
                s1 = cross(d + r1, u), s2 = cross(r2, u)
                a1 = cross(d + r1, v), a2 = cross(r2, v)
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.a1">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.a2">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.axialMass">
            <summary>
                The axial mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.axis">
            <summary>
                The perp
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.perp">
            <summary>
                The perp
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.enableLimit">
            <summary>
                The enable limit
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.enableMotor">
            <summary>
                The enable motor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.k">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.localYAxisA">
            <summary>
                The local axis
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.lowerImpulse">
            <summary>
                The lower impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.lowerTranslation">
            <summary>
                The lower translation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.maxMotorForce">
            <summary>
                The max motor force
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.motorImpulse">
            <summary>
                The motor impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.motorSpeed">
            <summary>
                The motor speed
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.s1">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.s2">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.translation">
            <summary>
                The translation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.upperImpulse">
            <summary>
                The upper impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.upperTranslation">
            <summary>
                The upper translation
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                This requires defining a line of motion using an axis and an anchor point. The definition uses local anchor
                points and a local axis so that the initial configuration can violate the constraint slightly. The joint
                translation is
                zero when the local anchor points coincide in world space. Using local anchors and a local axis helps when saving
                and
                loading a game.
            </summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second body anchor.</param>
            <param name="axis">The axis.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchor">The anchor</param>
            <param name="axis">The axis</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Boolean,System.Single,System.Single,System.Boolean,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="localAxisA">The local axis</param>
            <param name="referenceAngle">The reference angle</param>
            <param name="enableLimit">The enable limit</param>
            <param name="lowerTranslation">The lower translation</param>
            <param name="upperTranslation">The upper translation</param>
            <param name="enableMotor">The enable motor</param>
            <param name="maxMotorForce">The max motor force</param>
            <param name="motorSpeed">The motor speed</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.JointTranslation">
            <summary>Get the current joint translation, usually in meters.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.JointSpeed">
            <summary>Get the current joint translation speed, usually in meters per second.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LimitEnabled">
            <summary>Is the joint limit enabled?</summary>
            <value><c>true</c> if [limit enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LowerLimit">
            <summary>Get the lower joint limit, usually in meters.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.UpperLimit">
            <summary>Get the upper joint limit, usually in meters.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.MotorEnabled">
            <summary>Is the joint motor enabled?</summary>
            <value><c>true</c> if [motor enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.MotorSpeed">
            <summary>Set the motor speed, usually in meters per second.</summary>
            <value>The speed.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.MotorForce">
            <summary>Set the maximum motor force, usually in N.</summary>
            <value>The force.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LocalXAxisA">
            <summary>The local joint axis relative to bodyA.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.LocalYAxisA">
            <summary>
                Gets the value of the local y axis a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.ReferenceAngle">
            <summary>Get the reference angle.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.GetMotorForce(System.Single)">
            <summary>Get the current motor force given the inverse time step, usually in N.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.SetLimits(System.Single,System.Single)">
            <summary>Set the joint limits, usually in meters.</summary>
            <param name="lower">The lower limit</param>
            <param name="upper">The upper limit</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
                A velocity based solver computes reaction forces(impulses) using the velocity constraint solver. Under this
                context,
                the position solver is not there to resolve forces. It is only there to cope with integration error.
                Therefore, the pseudo impulses in the position solver do not have any physical meaning. Thus it is okay if they
                suck.
                We could take the active state from the velocity solver. However, the joint might push past the limit when the
                velocity
                solver indicates the limit is inactive.
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PrismaticJoint.Initialize(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Initializes the local anchor a
            </summary>
            <param name="vector2AnchorA">The local anchor</param>
            <param name="vector2AnchorB">The local anchor</param>
            <param name="vector2Axis">The axis</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.PulleyJoint">
             <summary>
                 The pulley joint is connected to two bodies and two fixed world points. The pulley supports a ratio such that:
                 <![CDATA[length1 + ratio * length2 <= constant]]>
                 Yes, the force transmitted is scaled by the ratio. Warning: the pulley joint can get a bit squirrelly by itself.
                 They
                 often work better when combined with prismatic joints. You should also cover the the anchor points with static
                 shapes
                 to prevent one side from going to zero length.
            
               Pulley:
              length1 = norm(p1 - s1)
              length2 = norm(p2 - s2)
              C0 = (length1 + ratio * length2)_initial
              C = C0 - (length1 + ratio * length2)
             u1 = (p1 - s1) / norm(p1 - s1)
             u2 = (p2 - s2) / norm(p2 - s2)
             cDot = -dot(u1, v1 + cross(w1, r1)) - ratio * dot(u2, v2 + cross(w2, r2))
             J = -[u1 cross(r1, u1) ratio * u2  ratio * cross(r2, u2)]
              K = J * invM * JT
                = invMass1 + invI1 * cross(r1, u1)^2 + ratio^2 * (invMass2 + invI2 * cross(r2, u2)^2)
             </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.constant">
            <summary>
                The constant
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.lengthA">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.lengthB">
            <summary>
                The length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.localAnchorA">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.localAnchorB">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.ratio">
            <summary>
                The ratio
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.uA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.uB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.worldAnchorA">
            <summary>
                The world anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.worldAnchorB">
            <summary>
                The world anchor
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.PulleyJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="groundAnchorA">The ground anchor</param>
            <param name="groundAnchorB">The ground anchor</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="lengthA">The length</param>
            <param name="lengthB">The length</param>
            <param name="ratio">The ratio</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Boolean)">
            <summary>Constructor for PulleyJoint.</summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The anchor on the first body.</param>
            <param name="anchorB">The anchor on the second body.</param>
            <param name="worldAnchorA">The world anchor for the first body.</param>
            <param name="worldAnchorB">The world anchor for the second body.</param>
            <param name="ratio">The ratio.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.WorldAnchorA">
            <summary>Get the first world anchor.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.WorldAnchorB">
            <summary>Get the second world anchor.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.LengthA">
            <summary>Get the current length of the segment attached to BodyA.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.LengthB">
            <summary>Get the current length of the segment attached to BodyB.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.CurrentLengthA">
            <summary>The current length between the anchor point on BodyA and WorldAnchorA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.CurrentLengthB">
            <summary>The current length between the anchor point on BodyB and WorldAnchorB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.Ratio">
            <summary>Get the pulley ratio.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.ShiftOrigin(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Shifts the origin using the specified new origin
            </summary>
            <param name="newOrigin">The new origin</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.PulleyJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint">
            <summary>
                A revolute joint constrains to bodies to share a common point while they are free to rotate about the point.
                The relative rotation about the shared point is the joint angle. You can limit the relative rotation with a joint
                limit
                that specifies a lower and upper angle. You can use a motor to drive the relative rotation about the shared point.
                A
                maximum motor torque is provided so that infinite forces are not generated.
             Point-to-point constraint
             C = p2 - p1
             dot = v2 - v1
                  = v2 + cross(w2, r2) - v1 - cross(w1, r1)
             J = [-I -r1_skew I r2_skew ]
             Identity used:
             w k % (rx i + ry j) = w * (-ry i + rx j)
            
             Motor constraint
             dot = w2 - w1
             J = [0 0 -1 0 0 1]
             K = invI1 + invI2
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.angle">
            <summary>
                The angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.axialMass">
            <summary>
                The axial mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.enableLimit">
            <summary>
                The enable limit
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.enableMotor">
            <summary>
                The enable motor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.k">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.lowerAngle">
            <summary>
                The lower angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.lowerImpulse">
            <summary>
                The lower impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.maxMotorTorque">
            <summary>
                The max motor torque
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.motorImpulse">
            <summary>
                The motor impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.motorSpeed">
            <summary>
                The motor speed
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.upperAngle">
            <summary>
                The upper angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.upperImpulse">
            <summary>
                The upper impulse
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="referenceAngle">The reference angle</param>
            <param name="lowerAngle">The lower angle</param>
            <param name="upperAngle">The upper angle</param>
            <param name="motorTorque">The motor torque</param>
            <param name="motorSpeed">The motor speed</param>
            <param name="enableLimit">The enable limit</param>
            <param name="enableMotor">The enable motor</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>Constructor of RevoluteJoint.</summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second anchor.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>Constructor of RevoluteJoint.</summary>
            <param name="bodyA">The first body.</param>
            <param name="bodyB">The second body.</param>
            <param name="anchor">The shared anchor.</param>
            <param name="useWorldCoordinates"></param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.EnableLimit">
            <summary>A flag to enable joint limits.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.EnableMotor">
            <summary>A flag to enable the joint motor.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.LowerAngle">
            <summary>The lower angle for the joint limit (radians).</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.UpperAngle">
            <summary>The upper angle for the joint limit (radians).</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.ReferenceAngle">
            <summary>The reference angle computed as BodyB angle minus BodyA angle.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.JointAngle">
            <summary>Get the current joint angle in radians.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.JointSpeed">
            <summary>Get the current joint angle speed in radians per second.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.LimitEnabled">
            <summary>Is the joint limit enabled?</summary>
            <value><c>true</c> if [limit enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.LowerLimit">
            <summary>Get the lower joint limit in radians.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.UpperLimit">
            <summary>Get the upper joint limit in radians.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.MotorEnabled">
            <summary>Is the joint motor enabled?</summary>
            <value><c>true</c> if [motor enabled]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.MotorSpeed">
            <summary>Get or set the motor speed in radians per second.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.MotorTorque">
            <summary>Get or set the maximum motor torque, usually in N-m.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.SetLimits(System.Single,System.Single)">
            <summary>Set the joint limits, usually in meters.</summary>
            <param name="lower">The lower limit</param>
            <param name="upper">The upper limit</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.GetMotorTorque(System.Single)">
            <summary>Gets the motor torque in N-m.</summary>
            <param name="invDt">The inverse delta time</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.RevoluteJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.WeldJoint">
            <summary>
                A weld joint essentially glues two bodies together. A weld joint may distort somewhat because the island
                constraint solver is approximate. The joint is soft constraint based, which means the two bodies will move relative
                to
                each other, when a force is applied. To combine two bodies in a rigid fashion, combine the fixtures to a single
                body
                instead.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.referenceAngle">
            <summary>
                The reference angle
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.bias">
            <summary>
                The bias
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.damping">
            <summary>
                The damping
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.gamma">
            <summary>
                The gamma
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.localAnchorA">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.localAnchorB">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.rA">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.rB">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WeldJoint.stiffness">
            <summary>
                The stiffness
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.WeldJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="referenceAngle">The reference angle</param>
            <param name="stiffness">The stiffness</param>
            <param name="damping">The damping</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                You need to specify an anchor point where they are attached. The position of the anchor point is important for
                computing the reaction torque.
            </summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchorA">The first body anchor.</param>
            <param name="anchorB">The second body anchor.</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.ReferenceAngle">
            <summary>The bodyB angle minus bodyA angle in the reference state (radians).</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.Stiffness">
            <summary>
                The frequency of the joint. A higher frequency means a stiffer joint, but a too high value can cause the joint
                to oscillate. Default is 0, which means the joint does no spring calculations.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WeldJoint.Damping">
            <summary>
                The damping on the joint. The damping is only used when the joint has a frequency (> 0). A higher value means
                more damping.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WeldJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Joints.WheelJoint">
            <summary>
                A wheel joint. This joint provides two degrees of freedom: translation along an axis fixed in bodyA and
                rotation in the plane. In other words, it is a point to line constraint with a rotational motor and a linear
                spring/damper. The spring/damper is initialized upon creation. This joint is designed for vehicle suspensions.
                Linear constraint (point-to-line)
                d = pB - pA = xB + rB - xA - rA
                C = dot(ay, d)
                Cdo = dot(d, cross(wA, ay)) + dot(ay, vB + cross(wB, rB) - vA - cross(wA, rA))
                = -dot(ay, vA) - dot(cross(d + rA, ay), wA) + dot(ay, vB) + dot(cross(rB, ay), vB)
                J = [-ay, -cross(d + rA, ay), ay, cross(rB, ay)]
                Spring linear constraint
                C = dot(ax, d)
                Cdo = = -dot(ax, vA) - dot(cross(d + rA, ax), wA) + dot(ax, vB) + dot(cross(rB, ax), vB)
                J = [-ax -cross(d+rA, ax) ax cross(rB, ax)]
                Motor rotational constraint
                Cdo = wB - wA
                J = [0 0 -1 0 0 1]
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localXAxisA">
            <summary>
                The local axis
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localYAxisA">
            <summary>
                The local axis
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.ax">
            <summary>
                The ay
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.ay">
            <summary>
                The ay
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.axialMass">
            <summary>
                The axial mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.bias">
            <summary>
                The bias
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.damping">
            <summary>
                The damping
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.enableLimit">
            <summary>
                The enable limit
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.enableMotor">
            <summary>
                The enable motor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.gamma">
            <summary>
                The gamma
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.impulse">
            <summary>
                The impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.indexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.indexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.invIa">
            <summary>
                The inv ia
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.invIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.invMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.invMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localAnchorA">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localAnchorB">
            <summary>
                The local anchor
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.localCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.lowerImpulse">
            <summary>
                The lower impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.lowerTranslation">
            <summary>
                The lower translation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.mass">
            <summary>
                The mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.maxMotorTorque">
            <summary>
                The max motor torque
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.motorImpulse">
            <summary>
                The motor impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.motorMass">
            <summary>
                The motor mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.motorSpeed">
            <summary>
                The motor speed
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.sAx">
            <summary>
                The bx
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.sBx">
            <summary>
                The bx
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.sAy">
            <summary>
                The by
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.sBy">
            <summary>
                The by
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.springImpulse">
            <summary>
                The spring impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.springMass">
            <summary>
                The spring mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.stiffness">
            <summary>
                The stiffness
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.translation">
            <summary>
                The translation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.upperImpulse">
            <summary>
                The upper impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Joints.WheelJoint.upperTranslation">
            <summary>
                The upper translation
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>Constructor for WheelJoint</summary>
            <param name="bodyA">The first body</param>
            <param name="bodyB">The second body</param>
            <param name="anchor">The anchor point</param>
            <param name="axis">The axis</param>
            <param name="useWorldCoordinates">Set to true if you are using world coordinates as anchors.</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.#ctor(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.JointType,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean,System.Single,System.Single,System.Boolean,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Joints.WheelJoint" /> class
            </summary>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointType">The joint type</param>
            <param name="collideConnected">The collide connected</param>
            <param name="localAnchorA">The local anchor</param>
            <param name="localAnchorB">The local anchor</param>
            <param name="localAxisA">The local axis</param>
            <param name="enableLimit">The enable limit</param>
            <param name="lowerTranslation">The lower translation</param>
            <param name="upperTranslation">The upper translation</param>
            <param name="enableMotor">The enable motor</param>
            <param name="maxMotorTorque">The max motor torque</param>
            <param name="motorSpeed">The motor speed</param>
            <param name="stiffness">The stiffness</param>
            <param name="damping">The damping</param>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.LocalXAxisA">
            <summary>
                Gets the value of the local x axis a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.LocalYAxisA">
            <summary>
                Gets the value of the local y axis a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.LocalAnchorA">
            <summary>The local anchor point on BodyA</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.LocalAnchorB">
            <summary>The local anchor point on BodyB</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.WorldAnchorA">
            <summary>
                Gets or sets the value of the world anchor a
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.WorldAnchorB">
            <summary>
                Gets or sets the value of the world anchor b
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.MotorSpeed">
            <summary>The desired motor speed in radians per second.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.MotorTorque">
            <summary>The maximum motor torque, usually in N-m.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.JointTranslation">
            <summary>Gets the translation along the axis</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.JointLinearSpeed">
            <summary>
                Gets the value of the joint linear speed
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.JointAngle">
            <summary>
                Gets the value of the joint angle
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.JointAngularSpeed">
            <summary>Gets the angular velocity of the joint</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.MotorEnabled">
            <summary>Enable/disable the joint motor.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.UpperLimit">
            <summary>
                Gets or sets the value of the upper limit
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.LowerLimit">
            <summary>
                Gets or sets the value of the lower limit
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.EnableLimit">
            <summary>
                Gets or sets the value of the enable limit
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.Damping">
            <summary>
                Gets or sets the value of the damping
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Joints.WheelJoint.Stiffness">
            <summary>
                Gets or sets the value of the stiffness
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.SetLimits(System.Single,System.Single)">
            <summary>
                Sets the limits using the specified lower
            </summary>
            <param name="lower">The lower</param>
            <param name="upper">The upper</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.GetMotorTorque(System.Single)">
            <summary>Gets the torque of the motor</summary>
            <param name="invDt">inverse delta time</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.GetReactionForce(System.Single)">
            <summary>
                Gets the reaction force using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.GetReactionTorque(System.Single)">
            <summary>
                Gets the reaction torque using the specified inv dt
            </summary>
            <param name="invDt">The inv dt</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.InitVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Inits the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.SolveVelocityConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Solves the velocity constraints using the specified data
            </summary>
            <param name="data">The data</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Joints.WheelJoint.SolvePositionConstraints(Alis.Core.Physic.Dynamics.Solver.SolverData@)">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <param name="data">The data</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Profile">
            <summary>
                The profile
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.Step">
            <summary>
                The time it takes to complete the full World.Step()
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.Collide">
            <summary>
                The time it takes to find collisions in the CollisionManager
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.Solve">
            <summary>
                The time it takes to solve integration of velocities, constraints and integrate positions
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.SolveInit">
            <summary>
                Timings from the island solver. The time it takes to initialize velocity constraints.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.SolveVelocity">
            <summary>
                Timings from the island solver. It includes the time it takes to solve joint velocity constraints.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.SolvePosition">
            <summary>
                Timings from the island solver. In includes the time it takes to solve join positions.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.Broadphase">
            <summary>
                The time it takes for the broad-phase to update
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.SolveToi">
            <summary>
                The time it takes for the time-of-impact solver
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.AddRemoveTime">
            <summary>
                Time it takes to process newly added and removed bodies/joints/controllers from the world
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.NewContactsTime">
            <summary>
                The time it takes for the contact manager to find new contacts in the world
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.ControllersUpdateTime">
            <summary>
                The time it takes to update controller logic
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Profile.BreakableBodies">
            <summary>
                The time it takes to update breakable bodies
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint">
            <summary>
                The contact position constraint class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.LocalPoints">
            <summary>
                The max manifold points
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.IndexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.IndexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.InvIa">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.InvIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.InvMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.InvMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.LocalCenterA">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.LocalCenterB">
            <summary>
                The local center
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.LocalNormal">
            <summary>
                The local normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.LocalPoint">
            <summary>
                The local point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.PointCount">
            <summary>
                The point count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.RadiusA">
            <summary>
                The radius
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.RadiusB">
            <summary>
                The radius
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint.Type">
            <summary>
                The type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.ContactSolver">
            <summary>
                The contact solver class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.contacts">
            <summary>
                The contacts
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.count">
            <summary>
                The count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.positionConstraints">
            <summary>
                The position constraints
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.positions">
            <summary>
                The positions
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.step">
            <summary>
                The step
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.velocities">
            <summary>
                The velocities
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactSolver.VelocityConstraints">
            <summary>
                The velocity constraints
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.Reset(Alis.Core.Aspect.Time.TimeStep,System.Int32,System.Collections.Generic.List{Alis.Core.Physic.Collision.ContactSystem.Contact},System.Collections.Generic.List{Alis.Core.Physic.Dynamics.Solver.Position},System.Collections.Generic.List{Alis.Core.Physic.Dynamics.Solver.Velocity})">
            <summary>
                Resets the step
            </summary>
            <param name="stepParam">The step</param>
            <param name="countParam">The count</param>
            <param name="contactList">The contacts</param>
            <param name="positionList">The positions</param>
            <param name="velocitiesList">The velocities</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.InitializeVelocityConstraints">
            <summary>Initialize position dependent portions of the velocity constraints.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.WarmStart">
            <summary>
                Warms the start
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.SolveVelocityConstraints">
            <summary>
                Solves the velocity constraints
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.StoreImpulses">
            <summary>
                Stores the impulses
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.SolvePositionConstraints">
            <summary>
                Describes whether this instance solve position constraints
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactSolver.SolveToiPositionConstraints(System.Int32,System.Int32)">
            <summary>
                Describes whether this instance solve toi position constraints
            </summary>
            <param name="toiIndexA">The toi index</param>
            <param name="toiIndexB">The toi index</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint">
            <summary>
                The contact velocity constraint class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.Points">
            <summary>
                The max manifold points
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.ContactIndex">
            <summary>
                The contact index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.Friction">
            <summary>
                The friction
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.IndexA">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.IndexB">
            <summary>
                The index
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.InvIa">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.InvIb">
            <summary>
                The inv ib
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.InvMassA">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.InvMassB">
            <summary>
                The inv mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.K">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.Normal">
            <summary>
                The normal
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.NormalMass">
            <summary>
                The normal mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.PointCount">
            <summary>
                The point count
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.Restitution">
            <summary>
                The restitution
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.TangentSpeed">
            <summary>
                The tangent speed
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.Threshold">
            <summary>
                The threshold
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint" /> class
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.Island">
            <summary>This is an internal class.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.AngTolSqr">
            <summary>
                The angular sleep tolerance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.LinTolSqr">
            <summary>
                The linear sleep tolerance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.bodies">
            <summary>
                The bodies
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.contacts">
            <summary>
                The contacts
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.contactSolver">
            <summary>
                The contact solver
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.joints">
            <summary>
                The joints
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.positions">
            <summary>
                The positions
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Island.velocities">
            <summary>
                The velocities
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Dynamics.Solver.Island.TimeStepSolveToi">
            <summary>
                Gets or sets the value of the step
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Solve(Alis.Core.Aspect.Time.TimeStep,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean,Alis.Core.Physic.Collision.ContactSystem.ContactManager,System.Collections.Generic.List{Alis.Core.Physic.Dynamics.Body})">
            <summary>
                Solves the step
            </summary>
            <param name="step">The step</param>
            <param name="gravity">The gravity</param>
            <param name="allowSleep">The allow sleep</param>
            <param name="contactManager">The contact manager</param>
            <param name="bodiesOfWorld">The bodies of world</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.SolveToi(System.Single,Alis.Core.Aspect.Time.TimeStep,System.Int32,System.Int32,Alis.Core.Physic.Collision.ContactSystem.ContactManager)">
            <summary>
                Solves the toi using the specified min alpha
            </summary>
            <param name="minAlpha">The min alpha</param>
            <param name="subStep">The sub step</param>
            <param name="toiIndexA">The toi index</param>
            <param name="toiIndexB">The toi index</param>
            <param name="contactManager">The contact manager</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Add(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Adds the body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Add(Alis.Core.Physic.Collision.ContactSystem.Contact)">
            <summary>
                Adds the contact
            </summary>
            <param name="contact">The contact</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Add(Alis.Core.Physic.Dynamics.Joints.Joint)">
            <summary>
                Adds the joint
            </summary>
            <param name="joint">The joint</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.Report(System.Collections.Generic.List{Alis.Core.Physic.Dynamics.Solver.ContactVelocityConstraint},Alis.Core.Physic.Collision.ContactSystem.ContactManager)">
            <summary>
                Reports the constraints
            </summary>
            <param name="constraints">The constraints</param>
            <param name="contactManager">The contact manager</param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Island.SynchronizeBodies">
            <summary>
                Synchronizes the bodies
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.Position">
            This is an internal structure.
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Position.A">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Position.C">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Position.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.Position" /> class
            </summary>
            <param name="c">The </param>
            <param name="a">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Position.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.Position" /> class
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.PositionSolverManifold">
            <summary>
                The position solver manifold class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.PositionSolverManifold.Initialize(Alis.Core.Physic.Dynamics.Solver.ContactPositionConstraint,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,System.Int32,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@)">
            <summary>
                Initializes the pc
            </summary>
            <param name="pc">The pc</param>
            <param name="xfA">The xf</param>
            <param name="xfB">The xf</param>
            <param name="index">The index</param>
            <param name="normal">The normal</param>
            <param name="point">The point</param>
            <param name="separation">The separation</param>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.SolverData">
            <summary>
                The solver data
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.SolverData.Step">
            <summary>
                The step
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.SolverData.Positions">
            <summary>
                The positions
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.SolverData.Velocities">
            <summary>
                The velocities
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.Velocity">
            This is an internal structure.
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Velocity.V">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.Velocity.W">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Velocity.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.Velocity" /> class
            </summary>
            <param name="v">The </param>
            <param name="w">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Velocity.#ctor(System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.Velocity" /> class
            </summary>
            <param name="w">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Dynamics.Solver.Velocity.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Dynamics.Solver.Velocity" /> class
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint">
            <summary>
                The velocity constraint point class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.NormalImpulse">
            <summary>
                The normal impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.NormalMass">
            <summary>
                The normal mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.Ra">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.Rb">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.TangentImpulse">
            <summary>
                The tangent impulse
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.TangentMass">
            <summary>
                The tangent mass
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Dynamics.Solver.VelocityConstraintPoint.VelocityBias">
            <summary>
                The velocity bias
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller">
            <summary>
                The controller class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData" />
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.Enabled">
            <summary>
                The enabled
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.World">
            <summary>
                The world
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.#ctor(Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller" /> class
            </summary>
            <param name="controllerType">The controller type</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.IsActiveOn(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Describes whether this instance is active on
            </summary>
            <param name="body">The body</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller.Update(System.Single)">
            <summary>
                Updates the dt
            </summary>
            <param name="dt">The dt</param>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerFilter">
            <summary>
                The controller filter
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerFilter.ControllerFlags">
            <summary>
                The controller flags
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerFilter.IgnoreController(Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType)">
            <summary>Ignores the controller. The controller has no effect on this body.</summary>
            <param name="controller">The controller type.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerFilter.RestoreController(Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType)">
            <summary>Restore the controller. The controller affects this body.</summary>
            <param name="controller">The controller type.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerFilter.IsControllerIgnored(Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType)">
            <summary>Determines whether this body ignores the specified controller.</summary>
            <param name="controller">The controller type.</param>
            <returns><c>true</c> if the body has the specified flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType">
            <summary>
                The controller type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType.GravityController">
            <summary>
                The gravity controller controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType.VelocityLimitController">
            <summary>
                The velocity limit controller controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType.AbstractForceController">
            <summary>
                The abstract force controller controller type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.ControllerBase.ControllerType.BuoyancyController">
            <summary>
                The buoyancy controller controller type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController">
            <summary>
                The gravity controller class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller" />
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.#ctor(System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController" /> class
            </summary>
            <param name="strength">The strength</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.#ctor(System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController" /> class
            </summary>
            <param name="strength">The strength</param>
            <param name="maxRadius">The max radius</param>
            <param name="minRadius">The min radius</param>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.MinRadius">
            <summary>
                Gets or sets the value of the min radius
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.Radius">
            <summary>
                Gets or sets the value of the max radius
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.Strength">
            <summary>
                Gets or sets the value of the strength
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.GravityType">
            <summary>
                Gets or sets the value of the gravity type
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.Bodies">
            <summary>
                Gets or sets the value of the bodies
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.Points">
            <summary>
                Gets or sets the value of the points
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.Update(System.Single)">
            <summary>
                Updates the dt
            </summary>
            <param name="dt">The dt</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.AddBody(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Adds the body using the specified body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityController.AddPoint(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Adds the point using the specified point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityType">
            <summary>
                The gravity type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityType.Linear">
            <summary>
                The linear gravity type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Gravity.GravityType.DistanceSquared">
            <summary>
                The distance squared gravity type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController">
            <summary>
                Put a limit on the linear (translation - the move speed) and angular (rotation) velocity of bodies added to
                this controller.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.bodies">
            <summary>
                The body
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.LimitAngularVelocity">
            <summary>
                The limit angular velocity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.LimitLinearVelocity">
            <summary>
                The limit linear velocity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.maxAngularSqared">
            <summary>
                The max angular sqared
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.maxAngularVelocity">
            <summary>
                The max angular velocity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.maxLinearSqared">
            <summary>
                The max linear sqared
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.maxLinearVelocity">
            <summary>
                The max linear velocity
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController" /> class. Sets the max linear velocity
                to Settings.MaxTranslation Sets the max angular velocity to Settings.MaxRotation
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.#ctor(System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController" /> class. Pass in 0 or float.MaxValue to
                disable the limit. maxAngularVelocity = 0 will disable the angular velocity limit.
            </summary>
            <param name="maxLinearVelocity">The max linear velocity.</param>
            <param name="maxAngularVelocity">The max angular velocity.</param>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.AngularVelocity">
            <summary>Gets or sets the max angular velocity.</summary>
            <value>The max angular velocity.</value>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.LinearVelocity">
            <summary>Gets or sets the max linear velocity.</summary>
            <value>The max linear velocity.</value>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.Update(System.Single)">
            <summary>
                Updates the dt
            </summary>
            <param name="dt">The dt</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.AddBody(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Adds the body using the specified body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Velocity.VelocityLimitController.RemoveBody(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Removes the body using the specified body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController">
            <summary>
                The abstract force controller class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller" />
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes">
            <summary>Modes for Decay. Actual Decay must be implemented in inheriting classes</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes.None">
            <summary>
                The none decay modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes.Step">
            <summary>
                The step decay modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes.Linear">
            <summary>
                The linear decay modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes.InverseSquare">
            <summary>
                The inverse square decay modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayModes.Curve">
            <summary>
                The curve decay modes
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ForceTypes">
            <summary>
                Forcetypes are used in the decay math to properly get the distance. They are also used to draw a
                representation in DebugView
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ForceTypes.Point">
            <summary>
                The point force types
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ForceTypes.Line">
            <summary>
                The line force types
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ForceTypes.Area">
            <summary>
                The area force types
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingModes">
            <summary>
                Timing Modes Switched: Standard on/off mode using the baseclass enabled property Triggered: When the Trigger()
                method is called the force is active for a specified Impulse Length Curve: Still to be defined. The basic idea is
                having a Trigger combined with a curve for the strength
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingModes.Switched">
            <summary>
                The switched timing modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingModes.Triggered">
            <summary>
                The triggered timing modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingModes.Curve">
            <summary>
                The curve timing modes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayCurve">
            <summary>Curve to be used for Decay in Curve mode</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.StrengthCurve">
            <summary>
                Curve used by Curve Mode as an animated multiplier for the force strength. Only positions between 0 and 1 are
                considered as that range is stretched to have ImpulseLength.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ForceType">
            <summary>The Forcetype of the instance</summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.#ctor(Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingModes)">
            <summary>Overloaded Contstructor with supplying Timing Mode</summary>
            <param name="mode"></param>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Strength">
            <summary>Global Strength of the force to be applied</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Position">
            <summary>Position of the Force. Can be ignored (left at (0,0) for forces that are not position-dependent</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.MaximumSpeed">
            <summary>Maximum speed of the bodies. Bodies that are travelling faster are supposed to be ignored</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.TimingMode">
            <summary>Timing Mode of the force instance</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ImpulseTime">
            <summary>Time of the current impulse. Incremented in update till ImpulseLength is reached</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ImpulseLength">
            <summary>Length of a triggered impulse. Used in both Triggered and Curve Mode</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Triggered">
            <summary>Indicating if we are currently during an Impulse (Triggered and Curve Mode)</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Variation">
            <summary>Variation of the force applied to each body affected !! Must be used in inheriting classes properly !!</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayMode">
            <summary>See DecayModes</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayStart">
            <summary>Start of the distance based Decay. To set a non decaying area</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.DecayEnd">
            <summary>Maximum distance a force should be applied</summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.GetDecayMultiplier(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Calculate the Decay for a given body. Meant to ease force development and stick to the DRY principle and
                provide unified and predictable decay math.
            </summary>
            <param name="body">The body to calculate decay for</param>
            <returns>A multiplier to multiply the force with to add decay support in inheriting classes</returns>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Trigger">
            <summary>Triggers the trigger modes (Trigger and Curve)</summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.Update(System.Single)">
            <summary>Inherited from Controller Depending on the TimingMode perform timing logic and call ApplyForce()</summary>
            <param name="dt"></param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.AbstractForceController.ApplyForce(System.Single,System.Single)">
            <summary>Apply the force supplying strength which is modified in Update() according to the TimingMode</summary>
            <param name="dt"></param>
            <param name="strength">The strength</param>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType">
            <summary>
                Defines how the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> value is determined for position before first point or after the end
                point on the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" />.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType.Constant">
            <summary>
                The value of <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> will be evaluated as first point for positions before the beginning and end
                point for positions after the end.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType.Cycle">
            <summary>The positions will wrap around from the end to beginning of the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> for determined the value.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType.CycleOffset">
            <summary>
                The positions will wrap around from the end to beginning of the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" />. The value will be offset
                by the difference between the values of first and end <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> multiplied by the wrap amount. If the
                position is before the beginning of the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> the difference will be subtracted from its value;
                otherwise the difference will be added.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType.Oscillate">
            <summary>
                The value at the end of the <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> act as an offset from the same side of the
                <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" /> toward the opposite side.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveLoopType.Linear">
            <summary>The linear interpolation will be performed for determined the value.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent">
            <summary>
                Defines the different tangent types to be calculated for <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> points in a
                <see cref="N:Alis.Core.Physic.Extensions.Controllers.Wind.Curve" />.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent.Flat">
            <summary>The tangent which always has a value equal to zero.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent.Linear">
            <summary>
                The tangent which contains a difference between current tangent value and the tangent value from the previous
                <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" />.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent.Smooth">
            <summary>
                The smoouth tangent which contains the inflection between <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentIn" /> and
                <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentOut" /> by taking into account the values of both neighbors of the
                <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" />.
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.Controllers.Wind.SimpleWindForce">
            <summary>
                Reference implementation for forces based on AbstractForceController It supports all features provided by the
                base class and illustrates proper usage as an easy to understand example. As a side-effect it is a nice and easy to
                use
                wind force for your projects
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.SimpleWindForce.Direction">
            <summary>Direction of the windforce</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.SimpleWindForce.Divergence">
            <summary>The amount of Direction randomization. Allowed range is 0-1.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Extensions.Controllers.Wind.SimpleWindForce.IgnorePosition">
            <summary>
                Ignore the position and apply the force. If off only in the "front" (relative to position and direction) will
                be affected
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.Controllers.Wind.SimpleWindForce.ApplyForce(System.Single,System.Single)">
            <summary>
                Applies the force using the specified dt
            </summary>
            <param name="dt">The dt</param>
            <param name="strength">The strength</param>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData">
            <summary>Contains filter data that can determine whether an object should be processed or not.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.DisabledOnCategories">
            <summary>Disable the logic on specific categories. Category.None by default.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.DisabledOnGroup">
            <summary>Disable the logic on specific groups</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.EnabledOnCategories">
            <summary>Enable the logic on specific categories Category.All by default.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.EnabledOnGroup">
            <summary>Enable the logic on specific groups.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.IsActiveOn(Alis.Core.Physic.Dynamics.Body)">
            <summary></summary>
            <param name="body"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.AddDisabledCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Adds the category.</summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.RemoveDisabledCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Removes the category.</summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.IsInDisabledCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Determines whether this body ignores the the specified controller.</summary>
            <param name="category">The category.</param>
            <returns><c>true</c> if the object has the specified category; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.AddEnabledCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Adds the category.</summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.RemoveEnabledCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Removes the category.</summary>
            <param name="category">The category.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData.IsInEnabledInCategory(Alis.Core.Physic.Collision.Filtering.Category)">
            <summary>Determines whether this body ignores the the specified controller.</summary>
            <param name="category">The category.</param>
            <returns><c>true</c> if the object has the specified category; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic">
            <summary>
                The physics logic class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.FilterData" />
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic.type">
            <summary>
                The type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic.World">
            <summary>
                The world
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic.#ctor(Alis.Core.Physic.World,Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic" /> class
            </summary>
            <param name="world">The world</param>
            <param name="type">The type</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogic.IsActiveOn(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Describes whether this instance is active on
            </summary>
            <param name="body">The body</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicFilter">
            <summary>
                The physics logic filter
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicFilter.ControllerIgnores">
            <summary>
                The controller ignores
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicFilter.IgnorePhysicsLogic(Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType)">
            <summary>Ignores the controller. The controller has no effect on this body.</summary>
            <param name="type">The logic type.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicFilter.RestorePhysicsLogic(Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType)">
            <summary>Restore the controller. The controller affects this body.</summary>
            <param name="type">The logic type.</param>
        </member>
        <member name="M:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicFilter.IsPhysicsLogicIgnored(Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType)">
            <summary>Determines whether this body ignores the specified controller.</summary>
            <param name="type">The logic type.</param>
            <returns><c>true</c> if the body has the specified flag; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType">
            <summary>
                The physics logic type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.PhysicsLogicType.Explosion">
            <summary>
                The explosion physics logic type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.ShapeData">
            <summary>
                The shape data
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.ShapeData.Body">
            <summary>
                The body
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.ShapeData.Max">
            <summary>
                The max
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Extensions.PhysicsLogics.PhysicsLogicBase.ShapeData.Min">
            <summary>
                The min
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Factories.BodyFactory">
            <summary>
                The body factory class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateBody(Alis.Core.Physic.World,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType)">
            <summary>
                Creates the body using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateEdge(Alis.Core.Physic.World,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Object)">
            <summary>
                Creates the edge using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="start">The start</param>
            <param name="end">The end</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateChainShape(Alis.Core.Physic.World,Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,System.Object)">
            <summary>
                Creates the chain shape using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="vertices">The vertices</param>
            <param name="position">The position</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateLoopShape(Alis.Core.Physic.World,Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,System.Object)">
            <summary>
                Creates the loop shape using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="vertices">The vertices</param>
            <param name="position">The position</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateRectangle(Alis.Core.Physic.World,System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the rectangle using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Height must be more than 0 meters</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Width must be more than 0 meters</exception>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateCircle(Alis.Core.Physic.World,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the circle using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="radius">The radius</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateEllipse(Alis.Core.Physic.World,System.Single,System.Single,System.Int32,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the ellipse using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="xRadius">The radius</param>
            <param name="yRadius">The radius</param>
            <param name="edges">The edges</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreatePolygon(Alis.Core.Physic.World,Alis.Core.Physic.Shared.Vertices,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the polygon using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="vertices">The vertices</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateCompoundPolygon(Alis.Core.Physic.World,System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices},System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the compound polygon using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="list">The list</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateGear(Alis.Core.Physic.World,System.Single,System.Int32,System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the gear using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="radius">The radius</param>
            <param name="numberOfTeeth">The number of teeth</param>
            <param name="tipPercentage">The tip percentage</param>
            <param name="toothHeight">The tooth height</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateCapsule(Alis.Core.Physic.World,System.Single,System.Single,System.Int32,System.Single,System.Int32,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the capsule using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="height">The height</param>
            <param name="topRadius">The top radius</param>
            <param name="topEdges">The top edges</param>
            <param name="bottomRadius">The bottom radius</param>
            <param name="bottomEdges">The bottom edges</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateCapsule(Alis.Core.Physic.World,System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the capsule using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="height">The height</param>
            <param name="endRadius">The end radius</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateRoundedRectangle(Alis.Core.Physic.World,System.Single,System.Single,System.Single,System.Single,System.Int32,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the rounded rectangle using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="xRadius">The radius</param>
            <param name="yRadius">The radius</param>
            <param name="segments">The segments</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateLineArc(Alis.Core.Physic.World,System.Single,System.Int32,System.Single,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the line arc using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="radians">The radians</param>
            <param name="sides">The sides</param>
            <param name="radius">The radius</param>
            <param name="closed">The closed</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateSolidArc(Alis.Core.Physic.World,System.Single,System.Single,System.Int32,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,Alis.Core.Physic.Dynamics.BodyType,System.Object)">
            <summary>
                Creates the solid arc using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="density">The density</param>
            <param name="radians">The radians</param>
            <param name="sides">The sides</param>
            <param name="radius">The radius</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="bodyType">The body type</param>
            <param name="userData">The user data</param>
            <returns>The body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateBreakableBody(Alis.Core.Physic.World,Alis.Core.Physic.Shared.Vertices,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Creates the breakable body using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="vertices">The vertices</param>
            <param name="density">The density</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <returns>The breakable body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateBreakableBody(Alis.Core.Physic.World,System.Collections.Generic.IEnumerable{Alis.Core.Physic.Collision.Shapes.Shape},Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Creates the breakable body using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="shapes">The shapes</param>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <returns>The breakable body</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.BodyFactory.CreateFromDef(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Creates the from def using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="def">The def</param>
            <returns>The body</returns>
        </member>
        <member name="T:Alis.Core.Physic.Factories.FixtureFactory">
            <summary>An easy to use factory for creating bodies</summary>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachEdge(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the edge using the specified start
            </summary>
            <param name="start">The start</param>
            <param name="end">The end</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachChainShape(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the chain shape using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachLoopShape(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the loop shape using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachRectangle(System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the rectangle using the specified width
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="density">The density</param>
            <param name="offset">The offset</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachCircle(System.Single,System.Single,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the circle using the specified radius
            </summary>
            <param name="radius">The radius</param>
            <param name="density">The density</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Radius must be more than 0 meters</exception>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachCircle(System.Single,System.Single,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,System.Object)">
            <summary>
                Attaches the circle using the specified radius
            </summary>
            <param name="radius">The radius</param>
            <param name="density">The density</param>
            <param name="body">The body</param>
            <param name="offset">The offset</param>
            <param name="userData">The user data</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Radius must be more than 0 meters</exception>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachPolygon(Alis.Core.Physic.Shared.Vertices,System.Single,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the polygon using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="density">The density</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <exception cref="T:System.ArgumentOutOfRangeException">Too few points to be a polygon</exception>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachEllipse(System.Single,System.Single,System.Int32,System.Single,Alis.Core.Physic.Dynamics.Body,System.Object)">
            <summary>
                Attaches the ellipse using the specified x radius
            </summary>
            <param name="xRadius">The radius</param>
            <param name="yRadius">The radius</param>
            <param name="edges">The edges</param>
            <param name="density">The density</param>
            <param name="body">The body</param>
            <param name="userData">The user data</param>
            <exception cref="T:System.ArgumentOutOfRangeException">X-radius must be more than 0</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">Y-radius must be more than 0</exception>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachCompoundPolygon(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices},System.Single,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Attaches the compound polygon using the specified list
            </summary>
            <param name="list">The list</param>
            <param name="density">The density</param>
            <param name="body">The body</param>
            <returns>The res</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachLineArc(System.Single,System.Int32,System.Single,System.Boolean,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Attaches the line arc using the specified radians
            </summary>
            <param name="radians">The radians</param>
            <param name="sides">The sides</param>
            <param name="radius">The radius</param>
            <param name="closed">The closed</param>
            <param name="body">The body</param>
            <returns>The fixture</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.AttachSolidArc(System.Single,System.Single,System.Int32,System.Single,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Attaches the solid arc using the specified density
            </summary>
            <param name="density">The density</param>
            <param name="radians">The radians</param>
            <param name="sides">The sides</param>
            <param name="radius">The radius</param>
            <param name="body">The body</param>
            <returns>A list of fixture</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.FixtureFactory.CreateFromDef(Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Fixture)">
            <summary>
                Creates the from def using the specified body
            </summary>
            <param name="body">The body</param>
            <param name="fixture">The fixture def</param>
            <returns>The fixture</returns>
        </member>
        <member name="T:Alis.Core.Physic.Factories.JointFactory">
            <summary>An easy to use factory for using joints.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateMotorJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,System.Boolean)">
            <summary>
                Creates the motor joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateWeldJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the weld joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchorA">The anchor</param>
            <param name="anchorB">The anchor</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The weld joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreatePrismaticJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the prismatic joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchor">The anchor</param>
            <param name="axis">The axis</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateAngleJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Creates the angle joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <returns>The angle joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateGearJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Joints.Joint,Alis.Core.Physic.Dynamics.Joints.Joint,System.Single)">
            <summary>
                Creates the gear joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="jointA">The joint</param>
            <param name="jointB">The joint</param>
            <param name="ratio">The ratio</param>
            <returns>The gear joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreatePulleyJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Boolean)">
            <summary>
                Creates the pulley joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchorA">The anchor</param>
            <param name="anchorB">The anchor</param>
            <param name="worldAnchorA">The world anchor</param>
            <param name="worldAnchorB">The world anchor</param>
            <param name="ratio">The ratio</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The pulley joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateFixedMouseJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Creates the fixed mouse joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="body">The body</param>
            <param name="worldAnchor">The world anchor</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateRevoluteJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the revolute joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchorA">The anchor</param>
            <param name="anchorB">The anchor</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateRevoluteJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Creates the revolute joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchor">The anchor</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateWheelJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the wheel joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchor">The anchor</param>
            <param name="axis">The axis</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateWheelJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Creates the wheel joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="axis">The axis</param>
            <returns>The wheel joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateDistanceJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the distance joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchorA">The anchor</param>
            <param name="anchorB">The anchor</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The distance joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateDistanceJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Creates the distance joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <returns>The distance joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateFrictionJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Creates the friction joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <param name="anchor">The anchor</param>
            <param name="useWorldCoordinates">The use world coordinates</param>
            <returns>The friction joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateFrictionJoint(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Body,Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Creates the friction joint using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="bodyA">The body</param>
            <param name="bodyB">The body</param>
            <returns>The friction joint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Factories.JointFactory.CreateFromDef(Alis.Core.Physic.World,Alis.Core.Physic.Dynamics.Joints.Joint)">
            <summary>
                Creates the from def using the specified world
            </summary>
            <param name="world">The world</param>
            <param name="def">The def</param>
            <returns>The joint</returns>
        </member>
        <member name="T:Alis.Core.Physic.Figure.FigureBase">
            <summary>
                The figure base class
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Figure.Rectangle">
            <summary>
                The rectangle class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Figure.FigureBase" />
        </member>
        <member name="M:Alis.Core.Physic.Figure.Rectangle.#ctor(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Dynamics.BodyType,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Figure.Rectangle" /> class
            </summary>
            <param name="width">The width</param>
            <param name="height">The height</param>
            <param name="position">The position</param>
            <param name="linearVelocity">The linear velocity</param>
            <param name="bodyType">The body type</param>
            <param name="angle">The angle</param>
            <param name="angularVelocity">The angular velocity</param>
            <param name="linearDamping">The linear damping</param>
            <param name="angularDamping">The angular damping</param>
            <param name="allowSleep">The allow sleep</param>
            <param name="awake">The awake</param>
            <param name="fixedRotation">The fixed rotation</param>
            <param name="isBullet">The is bullet</param>
            <param name="enabled">The enabled</param>
            <param name="gravityScale">The gravity scale</param>
        </member>
        <member name="T:Alis.Core.Physic.Figure.Square">
            <summary>
                The square class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Figure.FigureBase" />
        </member>
        <member name="T:Alis.Core.Physic.Shared.Aabb">
            <summary>An axis aligned bounding box.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Aabb.LowerBound">
            <summary>The lower vertex</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Aabb.UpperBound">
            <summary>The upper vertex</summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Aabb" /> class
            </summary>
            <param name="min">The min</param>
            <param name="max">The max</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Aabb" /> class
            </summary>
            <param name="center">The center</param>
            <param name="width">The width</param>
            <param name="height">The height</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.#ctor(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Aabb" /> class
            </summary>
            <param name="min">The min</param>
            <param name="max">The max</param>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Width">
            <summary>
                Gets the value of the width
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Height">
            <summary>
                Gets the value of the height
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Center">
            <summary>Get the center of the AABB.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Extents">
            <summary>Get the extents of the AABB (half-widths).</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Perimeter">
            <summary>Get the perimeter length</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Vertices">
            <summary>Gets the vertices of the AABB.</summary>
            <value>The corners of the AABB</value>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Q1">
            <summary>First quadrant</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Q2">
            <summary>Second quadrant</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Q3">
            <summary>Third quadrant</summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Aabb.Q4">
            <summary>Forth quadrant</summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.IsValid">
            <summary>Verify that the bounds are sorted. And the bounds are valid numbers (not NaN).</summary>
            <returns><c>true</c> if this instance is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.Combine(Alis.Core.Physic.Shared.Aabb@)">
            <summary>Combine an AABB into this one.</summary>
            <param name="aabb">The AABB.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.Combine(Alis.Core.Physic.Shared.Aabb@,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Combine two AABBs into this one.</summary>
            <param name="aabb1">The aabb1.</param>
            <param name="aabb2">The aabb2.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.Contains(Alis.Core.Physic.Shared.Aabb@)">
            <summary>Does this AABB contain the provided AABB.</summary>
            <param name="aabb">The AABB.</param>
            <returns><c>true</c> if it contains the specified AABB; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.Contains(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Determines whether the AABB contains the specified point.</summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if it contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.TestOverlap(Alis.Core.Physic.Shared.Aabb@,Alis.Core.Physic.Shared.Aabb@)">
            <summary>Test if the two AABBs overlap.</summary>
            <param name="a">The first AABB.</param>
            <param name="b">The second AABB.</param>
            <returns>True if they are overlapping.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Aabb.RayCast(Alis.Core.Physic.Collision.RayCast.RayCastInput@,Alis.Core.Physic.Collision.RayCast.RayCastOutput@,System.Boolean)">
            <summary>Raycast against this AABB using the specified points and maxfraction (found in input)</summary>
            <param name="input">The parameters for the raycast.</param>
            <param name="output">The results of the raycast.</param>
            <param name="doInteriorCheck"></param>
            <returns>True if the ray intersects the AABB</returns>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Contracts.Contract">
            <summary>
                The contract class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.RequireNotNull(System.Object,System.String)">
            <summary>
                Requires the not null using the specified obj
            </summary>
            <param name="obj">The obj</param>
            <param name="message">The message</param>
            <exception cref="T:Alis.Core.Physic.Shared.Contracts.RequiredException"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.Requires(System.Boolean,System.String)">
            <summary>
                Requireses the condition
            </summary>
            <param name="condition">The condition</param>
            <param name="message">The message</param>
            <exception cref="T:Alis.Core.Physic.Shared.Contracts.RequiredException"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.Warn(System.Boolean,System.String)">
            <summary>
                Warns the condition
            </summary>
            <param name="condition">The condition</param>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.Ensures(System.Boolean,System.String)">
            <summary>
                Ensureses the condition
            </summary>
            <param name="condition">The condition</param>
            <param name="message">The message</param>
            <exception cref="T:Alis.Core.Physic.Shared.Contracts.EnsuresException"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.RequireForAll``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
                Requires the for all using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <param name="check">The check</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.Fail(System.String)">
            <summary>
                Fails the message
            </summary>
            <param name="message">The message</param>
            <exception cref="T:Alis.Core.Physic.Shared.Contracts.RequiredException"></exception>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.Contract.BuildMessage(System.String,System.String)">
            <summary>
                Builds the message using the specified type
            </summary>
            <param name="type">The type</param>
            <param name="message">The message</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Contracts.EnsuresException">
            <summary>
                The ensures exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.EnsuresException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Contracts.EnsuresException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Contracts.RequiredException">
            <summary>
                The required exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Physic.Shared.Contracts.RequiredException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Contracts.RequiredException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Optimization.FixedArray2`1">
            <summary>
                The fixed array
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.Value0">
            <summary>
                The value
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.Value1">
            <summary>
                The value
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.Item(System.Int32)">
            <summary>
                The index
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.GetEnumerator">
            <summary>
                Gets the enumerator
            </summary>
            <returns>An enumerator of t</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the enumerator
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.IndexOf(`0)">
            <summary>
                Indexes the of using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray2`1.Enumerate">
            <summary>
                Enumerates this instance
            </summary>
            <returns>An enumerable of t</returns>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Optimization.FixedArray3`1">
            <summary>
                The fixed array
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Value0">
            <summary>
                The value
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Value1">
            <summary>
                The value
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Value2">
            <summary>
                The value
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Item(System.Int32)">
            <summary>
                The index
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.GetEnumerator">
            <summary>
                Gets the enumerator
            </summary>
            <returns>An enumerator of t</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the enumerator
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.IndexOf(`0)">
            <summary>
                Indexes the of using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.FixedArray3`1.Enumerate">
            <summary>
                Enumerates this instance
            </summary>
            <returns>An enumerable of t</returns>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Optimization.IPoolable`1">
            <summary>
                The poolable interface
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="M:Alis.Core.Physic.Shared.Optimization.IPoolable`1.Reset">
            <summary>
                Resets this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Shared.PolygonError">
            <summary>
                The polygon error enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.NoError">
            <summary>There were no errors in the polygon</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.InvalidAmountOfVertices">
            <summary>Polygon must have between 3 and Settings.MaxPolygonVertices vertices.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.NotSimple">
            <summary>Polygon must be simple. This means no overlapping edges.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.NotCounterClockWise">
            <summary>Polygon must have a counter clockwise winding.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.NotConvex">
            <summary>The polygon is concave, it needs to be convex.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.AreaTooSmall">
            <summary>Polygon area is too small.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.PolygonError.SideTooSmall">
            <summary>The polygon has a side that is too short.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Pool`1">
            <summary>
                The pool class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Pool`1.objectCreator">
            <summary>
                The object creator
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Pool`1.objectReset">
            <summary>
                The object reset
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Shared.Pool`1.queue">
            <summary>
                The queue
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Pool`1.#ctor(System.Func{`0},System.Action{`0},System.Int32,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Pool`1" /> class
            </summary>
            <param name="objectCreator">The object creator</param>
            <param name="objectReset">The object reset</param>
            <param name="capacity">The capacity</param>
            <param name="preCreateInstances">The pre create instances</param>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Pool`1.LeftInPool">
            <summary>
                Gets the value of the left in pool
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Pool`1.GetFromPool(System.Boolean)">
            <summary>
                Gets the from pool using the specified reset
            </summary>
            <param name="reset">The reset</param>
            <returns>The obj</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Pool`1.GetManyFromPool(System.Int32)">
            <summary>
                Gets the many from pool using the specified count
            </summary>
            <param name="count">The count</param>
            <returns>An enumerable of t</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Pool`1.ReturnToPool(`0,System.Boolean)">
            <summary>
                Returns the to pool using the specified obj
            </summary>
            <param name="obj">The obj</param>
            <param name="reset">The reset</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Pool`1.ReturnToPool(System.Collections.Generic.IEnumerable{`0},System.Boolean)">
            <summary>
                Returns the to pool using the specified objs
            </summary>
            <param name="objs">The objs</param>
            <param name="reset">The reset</param>
        </member>
        <member name="T:Alis.Core.Physic.Shared.Vertices">
            <summary>
                The vertices class
            </summary>
            <seealso cref="T:System.Collections.Generic.List`1" />
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Vertices" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Vertices" /> class
            </summary>
            <param name="capacity">The capacity</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.#ctor(System.Collections.Generic.IEnumerable{Alis.Core.Aspect.Math.Vector.Vector2})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Shared.Vertices" /> class
            </summary>
            <param name="vertices">The vertices</param>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Vertices.AttachedToBody">
            <summary>
                Gets or sets the value of the attached to body
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Shared.Vertices.Holes">
            <summary>
                You can add holes to this collection. It will get respected by some of the triangulation algorithm, but
                otherwise not used.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.NextIndex(System.Int32)">
            <summary>Gets the next index. Used for iterating all the edges with wrap-around.</summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.NextVertex(System.Int32)">
            <summary>Gets the next vertex. Used for iterating all the edges with wrap-around.</summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.PreviousIndex(System.Int32)">
            <summary>Gets the previous index. Used for iterating all the edges with wrap-around.</summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.PreviousVertex(System.Int32)">
            <summary>Gets the previous vertex. Used for iterating all the edges with wrap-around.</summary>
            <param name="index">The current index</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.GetSignedArea">
            <summary>Gets the signed area. If the area is less than 0, it indicates that the polygon is clockwise winded.</summary>
            <returns>The signed area</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.GetArea">
            <summary>Gets the area.</summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.GetCentroid">
            <summary>Gets the centroid.</summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.GetAabb">
            <summary>Returns an AABB that fully contains this polygon.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Translates the vertices with the specified vector.</summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Translate(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Translates the vertices with the specified vector.</summary>
            <param name="value">The vector.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Scales the vertices with the specified vector.</summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Scale(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Scale the vertices with the specified vector.</summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Rotate(System.Single)">
            <summary>
                Rotate the vertices with the defined value in radians. Warning: Using this method on an active set of vertices
                of a Body, will cause problems with collisions. Use Body.Rotation instead.
            </summary>
            <param name="value">The amount to rotate by in radians.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.IsConvex">
            <summary>
                Determines whether the polygon is convex. O(n^2) running time. Assumptions: - The polygon is in counter
                clockwise order - The polygon has no overlapping edges
            </summary>
            <returns><c>true</c> if it is convex; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.IsCounterClockWise">
            <summary>
                Indicates if the vertices are in counter clockwise order. Warning: If the area of the polygon is 0, it is
                unable to determine the winding.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.ForceCounterClockWise">
            <summary>Forces the vertices to be counter clock wise order.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.IsSimple">
            <summary>Checks if the vertices forms an simple polygon by checking for edge crossings.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.CheckPolygon">
            <summary>
                Checks if the polygon is valid for use in the engine. Performs a full check, for simplicity, convexity,
                orientation, minimum angle, and volume. From Eric Jordan's convex decomposition library
            </summary>
            <returns>PolygonError.NoError if there were no error.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.ProjectToAxis(Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@,System.Single@)">
            <summary>Projects to axis.</summary>
            <param name="axis">The axis.</param>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.PointInPolygon(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Winding number test for a point in a polygon.</summary>
            See more info about the algorithm here: http://softsurfer.com/Archive/algorithm_0103/algorithm_0103.htm
            <param name="point">The point to be tested.</param>
            <returns>
                -1 if the winding number is zero and the point is outside the polygon, 1 if the point is inside the polygon,
                and 0 if the point is on the polygons edge.
            </returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.CalculateWindingNumber(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Calculates the winding number using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The winding number</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.IsPointOnEdge(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Describes whether this instance is point on edge
            </summary>
            <param name="point">The point</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.IsEdgeIntersectingRay(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Describes whether this instance is edge intersecting ray
            </summary>
            <param name="point">The point</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.DetermineWindingDirection(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Determines the winding direction using the specified point
            </summary>
            <param name="point">The point</param>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.PointInPolygonAngle(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Compute the sum of the angles made between the test point and each pair of points making up the polygon. If
                this sum is 2pi then the point is an interior point, if 0 then the point is an exterior point. ref:
                http://ozviz.wasp.uwa.edu.au/~pbourke/geometry/insidepoly/  - Solution 2
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Transform(Alis.Core.Aspect.Math.Matrix.Matrix4X4F@)">
            <summary>Transforms the polygon using the defined matrix.</summary>
            <param name="transform">The matrix to use as transformation.</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Transform(Alis.Core.Aspect.Math.Vector.Vector2[],Alis.Core.Aspect.Math.Matrix.Matrix4X4F@,Alis.Core.Aspect.Math.Vector.Vector2[])">
            <summary>
                Transforms the source array
            </summary>
            <param name="sourceArray">The source array</param>
            <param name="matrix">The matrix</param>
            <param name="destinationArray">The destination array</param>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.Transform(Alis.Core.Aspect.Math.Vector.Vector2[],System.Int32,Alis.Core.Aspect.Math.Matrix.Matrix4X4F@,Alis.Core.Aspect.Math.Vector.Vector2[],System.Int32,System.Int32)">
            <summary>
                Transforms the source array
            </summary>
            <param name="sourceArray">The source array</param>
            <param name="sourceIndex">The source index</param>
            <param name="matrix">The matrix</param>
            <param name="destinationArray">The destination array</param>
            <param name="destinationIndex">The destination index</param>
            <param name="length">The length</param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException">Destination array length is lesser than destinationIndex + length</exception>
            <exception cref="T:System.ArgumentException">Source array length is lesser than sourceIndex + length</exception>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.FlipHorizontally">
            <summary>
                Flips the horizontally
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.FlipVertically">
            <summary>
                Flips the vertically
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Shared.Vertices.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.ConvexHull.ChainHull">
            <summary>
                Andrew's Monotone Chain Convex Hull algorithm. Used to get the convex hull of a point cloud.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.ConvexHull.ChainHull.PointComparerPrivate">
            <summary>
                The point comparer
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.ChainHull.GetConvexHull(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Returns the convex hull from the given vertices.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.ChainHull.SortVerticesByX(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Sorts the vertices by x using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The sorted</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.ChainHull.ComputeHull(Alis.Core.Physic.Shared.Vertices,System.Boolean)">
            <summary>
            Computes the hull using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="lowerHull">The lower hull</param>
            <returns>The hull</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.ChainHull.IsLeftOfLine(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Describes whether is left of line
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.ChainHull.CombineHulls(Alis.Core.Aspect.Math.Vector.Vector2[],Alis.Core.Aspect.Math.Vector.Vector2[])">
            <summary>
            Combines the hulls using the specified lower hull
            </summary>
            <param name="lowerHull">The lower hull</param>
            <param name="upperHull">The upper hull</param>
            <returns>The result</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.ConvexHull.GiftWrap">
            <summary>
                Giftwrap convex hull algorithm. O(n * h) time complexity, where n is the number of points and h is the number
                of points on the convex hull. See http://en.wikipedia.org/wiki/Gift_wrapping_algorithm for more details.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.GiftWrap.GetConvexHull(Alis.Core.Physic.Shared.Vertices)">
            <summary>Returns the convex hull from the given vertices.</summary>
            <param name="vertices">The vertices.</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.ConvexHull.Melkman">
            <summary>
                Creates a convex hull.
                Note:
                1. Vertices must be of a simple polygon, i.e. edges do not overlap.
                2. Melkman does not work on point clouds
            </summary>
            <remarks>
                Implemented using Melkman's Convex Hull Algorithm - O(n) time complexity.
                Reference: http://www.ams.sunysb.edu/~jsbm/courses/345/melkman.pdf
            </remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.Melkman.GetConvexHull(Alis.Core.Physic.Shared.Vertices)">
            <summary>Returns a convex hull from the given vertices.</summary>
            <returns>A convex hull in counter clockwise winding order.</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.ConvexHull.PointComparer">
            <summary>
                The point comparer class
            </summary>
            <seealso cref="T:System.Collections.Generic.Comparer`1" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.ConvexHull.PointComparer.Compare(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Compares the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError">
            <summary>
                The poly clip error enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError.None">
            <summary>
                The none poly clip error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError.DegeneratedOutput">
            <summary>
                The degenerated output poly clip error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError.NonSimpleInput">
            <summary>
                The non simple input poly clip error
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError.BrokenResult">
            <summary>
                The broken result poly clip error
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType">
            <summary>
                The poly clip type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType.Intersect">
            <summary>
                The intersect poly clip type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType.Union">
            <summary>
                The union poly clip type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType.Difference">
            <summary>
                The difference poly clip type
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Cutting.YuPengClipper">
            <summary>
                The yu peng clipper class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Cutting.YuPengClipper.ClipperEpsilonSquared">
            <summary>
                The clipper epsilon squared
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Union(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError@)">
            <summary>
                Unions the polygon 1
            </summary>
            <param name="polygon1">The polygon</param>
            <param name="polygon2">The polygon</param>
            <param name="error">The error</param>
            <returns>A list of vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Difference(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError@)">
            <summary>
                Differences the polygon 1
            </summary>
            <param name="polygon1">The polygon</param>
            <param name="polygon2">The polygon</param>
            <param name="error">The error</param>
            <returns>A list of vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Intersect(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError@)">
            <summary>
                Intersects the polygon 1
            </summary>
            <param name="polygon1">The polygon</param>
            <param name="polygon2">The polygon</param>
            <param name="error">The error</param>
            <returns>A list of vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Execute(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType,Alis.Core.Physic.Tools.Cutting.Simple.PolyClipError@)">
            <summary>
                Implements "A new algorithm for Boolean operations on general polygons" available here:
                http://liama.ia.ac.cn/wiki/_media/user:dong:dong_cg_05.pdf Merges two polygons, a subject and a clip with the
                specified
                operation. Polygons may not be self-intersecting. Warning: May yield incorrect results or even crash if polygons
                contain collinear points.
            </summary>
            <param name="subject">The subject polygon.</param>
            <param name="clip">The clip polygon, which is added, substracted or intersected with the subject</param>
            <param name="clipType">The operation to be performed. Either Union, Difference or Intersection.</param>
            <param name="error">The error generated (if any)</param>
            <returns>
                A list of closed polygons, which make up the result of the clipping operation. Outer contours are ordered
                counter clockwise, holes are ordered clockwise.
            </returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.CalculateIntersections(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices@,Alis.Core.Physic.Shared.Vertices@)">
            <summary>Calculates all intersections between two polygons.</summary>
            <param name="polygon1">The first polygon.</param>
            <param name="polygon2">The second polygon.</param>
            <param name="slicedPoly1">Returns the first polygon with added intersection points.</param>
            <param name="slicedPoly2">Returns the second polygon with added intersection points.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.CalculateSimplicalChain(Alis.Core.Physic.Shared.Vertices,System.Collections.Generic.List{System.Single}@,System.Collections.Generic.List{Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge}@)">
            <summary>Calculates the simplical chain corresponding to the input polygon.</summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.CalculateResultChain(System.Collections.Generic.List{System.Single},System.Collections.Generic.List{Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge},System.Collections.Generic.List{System.Single},System.Collections.Generic.List{Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge},Alis.Core.Physic.Tools.Cutting.Simple.PolyClipType,System.Collections.Generic.List{Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge}@)">
            <summary>
                Calculates the characteristics function for all edges of the given simplical chains and builds the result
                chain.
            </summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.BuildPolygonsFromChain(System.Collections.Generic.List{Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge},System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices}@)">
            <summary>Calculates the polygon(s) from the result simplical chain.</summary>
            <remarks>Used by method <c>Execute()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.CalculateBeta(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge,System.Single)">
            <summary>Needed to calculate the characteristics function of a simplex.</summary>
            <remarks>Used by method <c>CalculateEdgeCharacter()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.GetAlpha(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Needed for sorting multiple intersections points on the same edge.</summary>
            <remarks>Used by method <c>CalculateIntersections()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.CalculateSimplexCoefficient(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the coefficient of a simplex.</summary>
            <remarks>Used by method <c>CalculateSimplicalChain()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.PointInSimplex(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge)">
            <summary>Winding number test for a point in a simplex.</summary>
            <param name="point">The point to be tested.</param>
            <param name="edge">The edge that the point is tested against.</param>
            <returns>False if the winding number is even and the point is outside the simplex and True otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.PointOnLineSegment(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Tests if a point lies on a line segment.</summary>
            <remarks>Used by method <c>CalculateBeta()</c>.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.VectorEqual(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether vector equal
            </summary>
            <param name="vec1">The vec</param>
            <param name="vec2">The vec</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge">
            <summary>Specifies an Edge. Edges are used to represent simplicies in simplical chains</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge" /> class
            </summary>
            <param name="edgeStart">The edge start</param>
            <param name="edgeEnd">The edge end</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.EdgeStart">
            <summary>
                Gets or sets the value of the edge start
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.EdgeEnd">
            <summary>
                Gets or sets the value of the edge end
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.GetCenter">
            <summary>
                Gets the center
            </summary>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.Equals(System.Object)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.Equals(Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="e">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Cutting.YuPengClipper.Edge.GetHashCode">
            <summary>
                Gets the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.PathGenerator.LinkFactory">
            <summary>
                The link factory class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.LinkFactory.CreateChain(Alis.Core.Physic.World,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Int32,System.Single,System.Boolean)">
            <summary>Creates a chain.</summary>
            <param name="world">The world.</param>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="linkWidth">The width.</param>
            <param name="linkHeight">The height.</param>
            <param name="numberOfLinks">The number of links.</param>
            <param name="linkDensity">The link density.</param>
            <param name="attachRopeJoint">
                Creates a rope joint between start and end. This enforces the length of the rope. Said in
                another way: it makes the rope less bouncy.
            </param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.PathGenerator.Path">
            <summary>
                Path: Very similar to Vertices, but this class contains vectors describing control points on a Catmull-Rom
                curve.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.PathGenerator.Path.controlPoints">
            <summary>All the points that makes up the curve</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.PathGenerator.Path.deltaT">
            <summary>
                The delta
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.#ctor">
            <summary>Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.PathGenerator.Path" /> class.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.#ctor(Alis.Core.Aspect.Math.Vector.Vector2[])">
            <summary>Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.PathGenerator.Path" /> class.</summary>
            <param name="vertices">The vertices to created the path from.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.#ctor(System.Collections.Generic.IList{Alis.Core.Aspect.Math.Vector.Vector2})">
            <summary>Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.PathGenerator.Path" /> class.</summary>
            <param name="vertices">The vertices to created the path from.</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.PathGenerator.Path.Closed">
            <summary>True if the curve is closed.</summary>
            <value><c>true</c> if closed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.NextIndex(System.Int32)">
            <summary>Gets the next index of a controlpoint</summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.PreviousIndex(System.Int32)">
            <summary>Gets the previous index of a controlpoint</summary>
            <param name="index">The index.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.Translate(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Translates the control points by the specified vector.</summary>
            <param name="vector">The vector.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.Scale(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Scales the control points by the specified vector.</summary>
            <param name="value">The Value.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.Rotate(System.Single)">
            <summary>Rotate the control points by the defined value in radians.</summary>
            <param name="value">The amount to rotate by in radians.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.GetVertices(System.Int32)">
            <summary>Returns a set of points defining the curve with the specifed number of divisions between each control point.</summary>
            <param name="divisions">Number of divisions between each control point.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.GetPosition(System.Single)">
            <summary>
                Gets the position using the specified time
            </summary>
            <param name="time">The time</param>
            <exception cref="T:System.Exception">You need at least 2 control points to calculate a position.</exception>
            <returns>The temp</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.CatmullRom(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Catmulls the rom using the specified value 1
            </summary>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="amount">The amount</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.GetPositionNormal(System.Single)">
            <summary>Gets the normal for the given time.</summary>
            <param name="time">The time</param>
            <returns>The normal.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.Add(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Adds the point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.Remove(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Removes the point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.RemoveAt(System.Int32)">
            <summary>
                Removes the at using the specified index
            </summary>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.GetLength">
            <summary>
                Gets the length
            </summary>
            <returns>The length</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.Path.SubdivideEvenly(System.Int32)">
            <summary>
                Subdivides the evenly using the specified divisions
            </summary>
            <param name="divisions">The divisions</param>
            <returns>The verts</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.PathGenerator.PathManager">
            <summary>An easy to use manager for creating paths.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.ConvertPathToEdges(Alis.Core.Physic.Tools.PathGenerator.Path,Alis.Core.Physic.Dynamics.Body,System.Int32)">
            <summary>Convert a path into a set of edges and attaches them to the specified body. Note: use only for static edges.</summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="subdivisions">The subdivisions.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.ConvertPathToPolygon(Alis.Core.Physic.Tools.PathGenerator.Path,Alis.Core.Physic.Dynamics.Body,System.Single,System.Int32)">
            <summary>Convert a closed path into a polygon. Convex decomposition is automatically performed.</summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="density">The density.</param>
            <param name="subdivisions">The subdivisions.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.EvenlyDistributeShapesAlongPath(Alis.Core.Physic.World,Alis.Core.Physic.Tools.PathGenerator.Path,System.Collections.Generic.IEnumerable{Alis.Core.Physic.Collision.Shapes.Shape},Alis.Core.Physic.Dynamics.BodyType,System.Int32,System.Object)">
            <summary>Duplicates the given Body along the given path for approximately the given copies.</summary>
            <param name="world">The world.</param>
            <param name="path">The path.</param>
            <param name="shapes">The shapes.</param>
            <param name="type">The type.</param>
            <param name="copies">The copies.</param>
            <param name="userData"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.EvenlyDistributeShapesAlongPath(Alis.Core.Physic.World,Alis.Core.Physic.Tools.PathGenerator.Path,Alis.Core.Physic.Collision.Shapes.Shape,Alis.Core.Physic.Dynamics.BodyType,System.Int32,System.Object)">
            <summary>Duplicates the given Body along the given path for approximately the given copies.</summary>
            <param name="world">The world.</param>
            <param name="path">The path.</param>
            <param name="shape">The shape.</param>
            <param name="type">The type.</param>
            <param name="copies">The copies.</param>
            <param name="userData">The user data.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.MoveBodyOnPath(Alis.Core.Physic.Tools.PathGenerator.Path,Alis.Core.Physic.Dynamics.Body,System.Single,System.Single,System.Single)">
            <summary>Moves the given body along the defined path.</summary>
            <param name="path">The path.</param>
            <param name="body">The body.</param>
            <param name="time">The time.</param>
            <param name="strength">The strength.</param>
            <param name="timeStep">The time step.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PathGenerator.PathManager.AttachBodiesWithRevoluteJoint(Alis.Core.Physic.World,System.Collections.Generic.List{Alis.Core.Physic.Dynamics.Body},Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean,System.Boolean)">
            <summary>Attaches the bodies with revolute joints.</summary>
            <param name="world">The world.</param>
            <param name="bodies">The bodies.</param>
            <param name="localAnchorA">The local anchor A.</param>
            <param name="localAnchorB">The local anchor B.</param>
            <param name="connectFirstAndLast">if set to <c>true</c> [connect first and last].</param>
            <param name="collideConnected">if set to <c>true</c> [collide connected].</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner">
            <summary>
                Combines a list of triangles into a list of convex polygons. Starts with a seed triangle, keep adding
                triangles to it until you can't add any more without making the polygon non-convex.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.PolygonTriangles(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices},System.Int32,System.Single)">
            <summary>
            Combine a list of triangles into a list of convex polygons. Note: This only works on triangles.
            </summary>
            <param name="triangles">The triangles.</param>
            <param name="maxPolys">The max number of polygons to return.</param>
            <param name="tolerance">The tolerance</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.InitializeCoveredFlags(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices})">
            <summary>
            Initializes the covered flags using the specified triangles
            </summary>
            <param name="triangles">The triangles</param>
            <returns>The covered</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.HasUncoveredTriangles(System.Boolean[])">
            <summary>
            Describes whether has uncovered triangles
            </summary>
            <param name="covered">The covered</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.FindFirstUncoveredTriangle(System.Boolean[],System.Int32)">
            <summary>
            Finds the first uncovered triangle using the specified covered
            </summary>
            <param name="covered">The covered</param>
            <param name="triangleCount">The triangle count</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.GetValidTriangleIndex(System.Int32,System.Int32)">
            <summary>
            Gets the valid triangle index using the specified index
            </summary>
            <param name="index">The index</param>
            <param name="triangleCount">The triangle count</param>
            <returns>The index</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.CreatePolygonFromTriangle(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Creates the polygon from triangle using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
            <returns>The poly</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.IsDegenerateTriangle(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Describes whether is degenerate triangle
            </summary>
            <param name="triangle">The triangle</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.SimplifyAndAddPolygon(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices},Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
            Simplifies the and add polygon using the specified polys
            </summary>
            <param name="polys">The polys</param>
            <param name="poly">The poly</param>
            <param name="tolerance">The tolerance</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.RemoveEmptyCollections(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices})">
            <summary>
            Removes the empty collections using the specified polys
            </summary>
            <param name="polys">The polys</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.AddTriangle(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Adds the triangle using the specified t
            </summary>
            <param name="t">The triangle to add</param>
            <param name="vertices">The vertices</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.FindFirstAndSecondVertices(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Finds the first and second vertices using the specified t
            </summary>
            <param name="t">The </param>
            <param name="vertices">The vertices</param>
            <param name="firstP">The first</param>
            <param name="firstT">The first</param>
            <param name="secondP">The second</param>
            <param name="secondT">The second</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.FindTipIndex(System.Int32,System.Int32)">
            <summary>
            Finds the tip index using the specified first t
            </summary>
            <param name="firstT">The first</param>
            <param name="secondT">The second</param>
            <returns>The tip</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimpleCombiner.CreateResultVertices(Alis.Core.Physic.Shared.Vertices,System.Int32,System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Creates the result vertices using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="firstP">The first</param>
            <param name="tipT">The tip</param>
            <param name="t">The </param>
            <returns>The result</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools">
            <summary>Provides a set of tools to simplify polygons in various ways.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.CollinearSimplify(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Removes all collinear points on the polygon.</summary>
            <param name="vertices">The polygon that needs simplification.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A simplified polygon.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.DouglasPeuckerSimplify(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
                Douglas Peucker polygon simplification algorithm. This is the general recursive version that does not
                use the speed-up technique by using the man convex hull. If you pass in 0, it will remove all collinear points.
            </summary>
            <returns>The simplified polygon</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.SimplifySection(Alis.Core.Physic.Shared.Vertices,System.Int32,System.Int32,System.Boolean[],System.Single)">
            <summary>
                Simplifies the section using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="i">The </param>
            <param name="j">The </param>
            <param name="usePoint">The use point</param>
            <param name="distanceTolerance">The distance tolerance</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.MergeParallelEdges(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Merges all parallel edges in the list of vertices</summary>
            <param name="vertices">The vertices.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.CalculateEdgesToMerge(Alis.Core.Physic.Shared.Vertices,System.Single,System.Boolean[],System.Int32@)">
            <summary>
            Calculates the edges to merge using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="tolerance">The tolerance</param>
            <param name="mergeMe">The merge me</param>
            <param name="newNVertices">The new vertices</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.CreateNewVerticesList(Alis.Core.Physic.Shared.Vertices,System.Boolean[],System.Int32)">
            <summary>
            Creates the new vertices list using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="mergeMe">The merge me</param>
            <param name="newNVertices">The new vertices</param>
            <returns>The new vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.MergeIdenticalPoints(Alis.Core.Physic.Shared.Vertices)">
            <summary>Merges the identical points in the polygon.</summary>
            <param name="vertices">The vertices.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.ReduceByDistance(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Reduces the polygon by distance.</summary>
            <param name="vertices">The vertices.</param>
            <param name="distance">The distance between points. Points closer than this will be removed.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.ReduceByNth(Alis.Core.Physic.Shared.Vertices,System.Int32)">
            <summary>Reduces the polygon by removing the Nth vertex in the vertices list.</summary>
            <param name="vertices">The vertices.</param>
            <param name="nth">The Nth point to remove. Example: 5.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.PolygonManipulation.SimplifyTools.ReduceByArea(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
                Simplify the polygon by removing all points that in pairs of 3 have an area less than the tolerance. Pass in 0
                as tolerance, and it will only remove collinear points.
            </summary>
            <param name="vertices"></param>
            <param name="areaTolerance"></param>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException">
            <summary>
            The data size exception class
            </summary>
            <seealso cref="T:System.Exception"/>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.DataSizeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException"/> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.TextureTools.TextureConverter">
            <summary>
                The texture converter class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ClosePixelsLength">
            <summary>
                The close pixels length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ClosePixels">
            <summary>This array is meant to be read-only. It's not because it is accessed very frequently.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.alphaTolerance">
            <summary>
                The alpha tolerance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.data">
            <summary>
                The data
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.dataLength">
            <summary>
                The data length
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.height">
            <summary>
                The height
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.holeDetection">
            <summary>
                The hole detection
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.hullTolerance">
            <summary>
                The hull tolerance
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.multipartDetection">
            <summary>
                The multipart detection
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.polygonDetectionType">
            <summary>
                The polygon detection type
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.tempIsSolidX">
            <summary>
                The temp is solid
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.tempIsSolidY">
            <summary>
                The temp is solid
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.transform">
            <summary>
                The identity
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.TextureConverter.width">
            <summary>
                The width
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.TextureTools.TextureConverter" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.#ctor(System.Nullable{System.Byte},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Alis.Core.Aspect.Math.Matrix.Matrix4X4F})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.TextureTools.TextureConverter" /> class
            </summary>
            <param name="alphaTolerance">The alpha tolerance</param>
            <param name="hullTolerance">The hull tolerance</param>
            <param name="holeDetection">The hole detection</param>
            <param name="multipartDetection">The multipart detection</param>
            <param name="transform">The transform</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.#ctor(System.UInt32[],System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.TextureTools.TextureConverter" /> class
            </summary>
            <param name="data">The data</param>
            <param name="width">The width</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.#ctor(System.UInt32[],System.Int32,System.Nullable{System.Byte},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Alis.Core.Aspect.Math.Matrix.Matrix4X4F})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.TextureTools.TextureConverter" /> class
            </summary>
            <param name="data">The data</param>
            <param name="width">The width</param>
            <param name="alphaTolerance">The alpha tolerance</param>
            <param name="hullTolerance">The hull tolerance</param>
            <param name="holeDetection">The hole detection</param>
            <param name="multipartDetection">The multipart detection</param>
            <param name="transform">The transform</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.PolygonDetectionType">
            <summary>Get or set the polygon detection type.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.HoleDetection">
            <summary>Will detect texture 'holes' if set to true. Slows down the detection. Default is false.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.MultipartDetection">
            <summary>Will detect texture multiple 'solid' isles if set to true. Slows down the detection. Default is false.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.Transform">
            <summary>Can be used for scaling.</summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.AlphaTolerance">
            <summary>
                Alpha (coverage) tolerance. Default is 20: Every pixel with a coverage value equal or greater to 20 will be
                counts as solid.
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.TextureTools.TextureConverter.HullTolerance">
            <summary>Default is 1.5f.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.Initialize(System.UInt32[],System.Nullable{System.Int32},System.Nullable{System.Byte},System.Nullable{System.Single},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Alis.Core.Aspect.Math.Matrix.Matrix4X4F})">
            <summary>
                Initializes the data
            </summary>
            <param name="dataLocal">The data</param>
            <param name="widthLocal">The width</param>
            <param name="alphaToleranceLocal">The alpha tolerance</param>
            <param name="hullToleranceLocal">The hull tolerance</param>
            <param name="holeDetectionLocal">The hole detection</param>
            <param name="multipartDetectionLocal">The multipart detection</param>
            <param name="transformLocal">The transform</param>
            <exception cref="T:System.ArgumentNullException">'data' can't be null if 'width' is set.</exception>
            <exception cref="T:System.ArgumentNullException">'width' can't be null if 'data' is set.</exception>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SetTextureData(System.UInt32[],System.Int32)">
            <summary>
                Sets the texture data using the specified data
            </summary>
            <param name="dataLocal">The data</param>
            <param name="widthLocal">The width</param>
            <exception cref="T:System.ArgumentNullException">'data' can't be null.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                'data' length can't be less then 4. Your texture must be at least 2 x 2
                pixels in size.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                'width' can't be less then 2. Your texture must be at least 2 x 2 pixels
                in size.
            </exception>
            <exception cref="T:System.ArgumentException">'width' has an invalid value.</exception>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32)">
            <summary>Detects the vertices of the supplied texture data. (PolygonDetectionType.Integrated)</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32,System.Boolean)">
            <summary>Detects the vertices of the supplied texture data.</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DetectVertices(System.UInt32[],System.Int32,System.Single,System.Byte,System.Boolean,System.Boolean)">
            <summary>Detects the vertices of the supplied texture data.</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <param name="hullTolerance">The hull tolerance.</param>
            <param name="alphaTolerance">The alpha tolerance.</param>
            <param name="multiPartDetection">if set to <c>true</c> it will perform multi part detection.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DetectVertices">
            <summary>
            Detects the vertices of the texture.
            </summary>
            <returns>The detected polygons.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.CreateInitialPolygon(System.Nullable{Alis.Core.Aspect.Math.Vector.Vector2}@)">
            <summary>
            Creates the initial polygon using the specified polygon entrance
            </summary>
            <param name="polygonEntrance">The polygon entrance</param>
            <returns>The polygon</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.CreateNextPolygon(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Creates the next polygon using the specified entrance
            </summary>
            <param name="entrance">The entrance</param>
            <returns>The vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ProcessHolePolygon(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Processes the hole polygon using the specified polygon
            </summary>
            <param name="polygon">The polygon</param>
            <param name="holeEntrance">The hole entrance</param>
            <param name="holePolygon">The hole polygon</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.PostProcessPolygons(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices}@)">
            <summary>
            Posts the process polygons using the specified detected polygons
            </summary>
            <param name="detectedPolygons">The detected polygons</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ValidateInput">
            <summary>
            Validates the input
            </summary>
            <exception cref="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException">'data' can't be null. You have to use SetTextureData(uint[] data, int width) before calling this method.</exception>
            <exception cref="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException">'data' length can't be less than 4. Your texture must be at least 2 x 2 pixels in size. You have to use SetTextureData(uint[] data, int width) before calling this method.</exception>
            <exception cref="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException">'width' can't be less than 2. Your texture must be at least 2 x 2 pixels in size. You have to use SetTextureData(uint[] data, int width) before calling this method.</exception>
            <exception cref="T:Alis.Core.Physic.Tools.TextureTools.DataSizeException">'width' has an invalid value. You have to use SetTextureData(uint[] data, int width) before calling this method.</exception>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ApplyTriangulationCompatibleWinding(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices}@)">
            <summary>
                Applies the triangulation compatible winding using the specified detected polygons
            </summary>
            <param name="detectedPolygons">The detected polygons</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.ApplyTransform(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices}@)">
            <summary>
                Applies the transform using the specified detected polygons
            </summary>
            <param name="detectedPolygons">The detected polygons</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchHoleEntrance(Alis.Core.Physic.Shared.Vertices,System.Nullable{Alis.Core.Aspect.Math.Vector.Vector2})">
            <summary>
                Function to search for an entrance point of a hole in a polygon. It searches the polygon from top to bottom
                between the polygon edges.
            </summary>
            <param name="polygon">The polygon to search in.</param>
            <param name="lastHoleEntrance">The last entrance point.</param>
            <returns>The next holes entrance point. Null if there are no holes.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DistanceToHullAcceptableHoles(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Describes whether this instance distance to hull acceptable holes
            </summary>
            <param name="polygon">The polygon</param>
            <param name="point">The point</param>
            <param name="higherDetail">The higher detail</param>
            <exception cref="T:System.ArgumentNullException">'polygon' can't be null.</exception>
            <exception cref="T:System.ArgumentException">'polygon.MainPolygon.Count' can't be less then 3.</exception>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.DistanceToHullAcceptable(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean)">
            <summary>
                Describes whether this instance distance to hull acceptable
            </summary>
            <param name="polygon">The polygon</param>
            <param name="point">The point</param>
            <param name="higherDetail">The higher detail</param>
            <exception cref="T:System.ArgumentNullException">'polygon' can't be null.</exception>
            <exception cref="T:System.ArgumentException">'polygon.Count' can't be less then 3.</exception>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.InPolygon(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether this instance in polygon
            </summary>
            <param name="polygon">The polygon</param>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.GetTopMostVertex(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Gets the top most vertex using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The top most</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.GetTopMostCoord(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Gets the top most coord using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The return value</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.GetBottomMostCoord(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Gets the bottom most coord using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The return value</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchCrossingEdgesHoles(Alis.Core.Physic.Shared.Vertices,System.Int32)">
            <summary>
                Searches the crossing edges holes using the specified polygon
            </summary>
            <param name="polygon">The polygon</param>
            <param name="y">The </param>
            <exception cref="T:System.ArgumentNullException">'polygon' can't be null.</exception>
            <exception cref="T:System.ArgumentException">'polygon.MainPolygon.Count' can't be less then 3.</exception>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchCrossingEdges(Alis.Core.Physic.Shared.Vertices,System.Int32)">
            <summary>Searches the polygon for the x coordinates of the edges that cross the specified y coordinate.</summary>
            <param name="polygon">Polygon to search in.</param>
            <param name="y">Y coordinate to check for edges.</param>
            <returns>Descending sorted list of x coordinates of edges that cross the specified y coordinate.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SplitPolygonEdge(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2,System.Int32@)">
            <summary>
                Describes whether this instance split polygon edge
            </summary>
            <param name="polygon">The polygon</param>
            <param name="coordInsideThePolygon">The coord inside the polygon</param>
            <param name="vertex2Index">The vertex index</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.CreateSimplePolygon(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary></summary>
            <param name="entrance"></param>
            <param name="last"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchNearPixels(System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance search near pixels
            </summary>
            <param name="searchingForSolidPixel">The searching for solid pixel</param>
            <param name="current">The current</param>
            <param name="foundPixel">The found pixel</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.IsNearPixel(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance is near pixel
            </summary>
            <param name="current">The current</param>
            <param name="near">The near</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchHullEntrance(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance search hull entrance
            </summary>
            <param name="entrance">The entrance</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchNextHullEntrance(System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices},Alis.Core.Aspect.Math.Vector.Vector2,System.Nullable{Alis.Core.Aspect.Math.Vector.Vector2}@)">
            <summary>Searches for the next shape.</summary>
            <param name="detectedPolygons">Already detected polygons.</param>
            <param name="start">Search start coordinate.</param>
            <param name="entrance">Returns the found entrance coordinate. Null if no other shapes found.</param>
            <returns>True if a new shape was found.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.GetNextHullPoint(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance get next hull point
            </summary>
            <param name="last">The last</param>
            <param name="current">The current</param>
            <param name="next">The next</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.SearchForOutstandingVertex(Alis.Core.Physic.Shared.Vertices,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance search for outstanding vertex
            </summary>
            <param name="hullArea">The hull area</param>
            <param name="outstanding">The outstanding</param>
            <returns>The found</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.GetIndexOfFirstPixelToCheck(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Gets the index of first pixel to check using the specified last
            </summary>
            <param name="last">The last</param>
            <param name="current">The current</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.IsSolid(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance is solid
            </summary>
            <param name="v">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.IsSolid(System.Int32@,System.Int32@)">
            <summary>
                Describes whether this instance is solid
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.IsSolid(System.Int32@)">
            <summary>
                Describes whether this instance is solid
            </summary>
            <param name="index">The index</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.TextureTools.TextureConverter.InBounds(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Describes whether this instance in bounds
            </summary>
            <param name="coord">The coord</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.TextureTools.VerticesDetectionType">
            <summary>The detection type affects the resulting polygon data.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.VerticesDetectionType.Integrated">
            <summary>Holes are integrated into the main polygon.</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.TextureTools.VerticesDetectionType.Separated">
            <summary>The data of the main polygon and hole polygons is returned separately.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer">
            <summary>
                Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)
                Properties:
                - Tries to decompose using polygons instead of triangles.
                - Tends to produce optimal results with low processing time.
                - Running time is O(nr), n = number of vertices, r = reflex vertices.
                - Does not support holes.
                For more information about this algorithm, see http://mnbayazit.com/406/bayazit
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.ConvexPartition(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Decompose the polygon into several smaller non-concave polygon. If the polygon is already convex, it will
                return the original polygon, unless it is over Settings.MaxPolygonVertices.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.TriangulatePolygon(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Triangulates the polygon using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The list</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.At(System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Ats the i
            </summary>
            <param name="i">The </param>
            <param name="vertices">The vertices</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.Copy(System.Int32,System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Copies the i
            </summary>
            <param name="i">The </param>
            <param name="j">The </param>
            <param name="vertices">The vertices</param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.CanSee(System.Int32,System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Describes whether can see
            </summary>
            <param name="i">The </param>
            <param name="j">The </param>
            <param name="vertices">The vertices</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.Reflex(System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Describes whether reflex
            </summary>
            <param name="i">The </param>
            <param name="vertices">The vertices</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.Right(System.Int32,Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Describes whether right
            </summary>
            <param name="i">The </param>
            <param name="vertices">The vertices</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.Left(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether left
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.LeftOn(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether left on
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.Right(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether right
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.RightOn(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether right on
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Bayazit.BayazitDecomposer.SquareDist(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Squares the dist using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.CdtDecomposer">
            <summary>
                2D constrained Delaunay triangulation algorithm.
                Based on the paper "Sweep-line algorithm for constrained Delaunay triangulation" by V. Domiter and and B. Zalik
                Properties:
                - Creates triangles with a large interior angle.
                - Supports holes
                - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
                - Running time is O(n^2), n = number of vertices.
                - Does not care about winding order.
                Source: http://code.google.com/p/poly2tri/
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.CdtDecomposer.ConvexPartition(Alis.Core.Physic.Shared.Vertices)">
            <summary>Decompose the polygon into several smaller non-concave polygon.</summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle">
            <summary>
                The delaunay triangle class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.EdgeIsConstrained">
            <summary>Neighbor pointers. Flags to determine if an edge is a Delauney edge</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.EdgeIsDelaunay">
            <summary>Flags to determine if an edge is a Constrained edge</summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Neighbors">
            <summary>
                The neighbors
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Points">
            <summary>Has this triangle been marked as an interior triangle?</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.#ctor(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle" /> class
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="p3">The </param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.IsInterior">
            <summary>
                Gets or sets the value of the is interior
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.IndexOf(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Indexes the of using the specified p
            </summary>
            <param name="p">The </param>
            <exception cref="T:System.Exception">Calling index with a point that doesn't exist in triangle</exception>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.IndexCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Indexes the cw using the specified p
            </summary>
            <param name="p">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.IndexCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Indexes the ccw using the specified p
            </summary>
            <param name="p">The </param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Contains(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance contains
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Contains(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint)">
            <summary>
                Describes whether this instance contains
            </summary>
            <param name="e">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Contains(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance contains
            </summary>
            <param name="p">The </param>
            <param name="q">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkNeighbor(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>Update neighbor pointers</summary>
            <param name="p1">Point 1 of the shared edge</param>
            <param name="p2">Point 2 of the shared edge</param>
            <param name="t">This triangle's new neighbor</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkNeighbor(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>Exhaustive search to update neighbor pointers</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.ClearNeighbors">
            <summary>
                Clears the neighbors
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.ClearNeighbor(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Clears the neighbor using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Clear">
            <summary>Clears all references to all other triangles and points</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.OppositePoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <param name="t">Opposite triangle</param>
            <param name="p">The point in t that isn't shared between the triangles</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.NeighborCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Neighbors the cw using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The delaunay triangle</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.NeighborCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Neighbors the ccw using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The delaunay triangle</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.NeighborAcross(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Neighbors the across using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The delaunay triangle</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.PointCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Points the ccw using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The triangulation point</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.PointCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Points the cw using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The triangulation point</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.RotateCw">
            <summary>
                Rotates the cw
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Legalize(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>Legalize triangle by rotating clockwise around oPoint</summary>
            <param name="oPoint">The origin point to rotate around</param>
            <param name="nPoint">???</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkNeighborEdges">
            <summary>Finalize edge marking</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkEdge(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Marks the edge using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkEdge(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle})">
            <summary>
                Marks the edge using the specified t list
            </summary>
            <param name="tList">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkConstrainedEdge(System.Int32)">
            <summary>
                Marks the constrained edge using the specified index
            </summary>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkConstrainedEdge(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint)">
            <summary>
                Marks the constrained edge using the specified edge
            </summary>
            <param name="edge">The edge</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.MarkConstrainedEdge(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>Mark edge as constrained</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Area">
            <summary>
                Areas this instance
            </summary>
            <returns>The double</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.Centroid">
            <summary>
                Centroids this instance
            </summary>
            <returns>The triangulation point</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.EdgeIndex(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>Get the index of the neighbor that shares this edge (or -1 if it isn't shared)</summary>
            <returns>index of the shared edge or -1 if edge isn't shared</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetConstrainedEdgeCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get constrained edge ccw
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetConstrainedEdgeCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get constrained edge cw
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetConstrainedEdgeAcross(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get constrained edge across
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetConstrainedEdgeCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the constrained edge ccw using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetConstrainedEdgeCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the constrained edge cw using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetConstrainedEdgeAcross(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the constrained edge across using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetDelaunayEdgeCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get delaunay edge ccw
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetDelaunayEdgeCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get delaunay edge cw
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.GetDelaunayEdgeAcross(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether this instance get delaunay edge across
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetDelaunayEdgeCcw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the delaunay edge ccw using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetDelaunayEdgeCw(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the delaunay edge cw using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle.SetDelaunayEdgeAcross(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,System.Boolean)">
            <summary>
                Sets the delaunay edge across using the specified p
            </summary>
            <param name="p">The </param>
            <param name="ce">The ce</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront">
            @author Thomas Åhlen (thahlen@gmail.com)
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.Head">
            <summary>
                The head
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.Search">
            <summary>
                The search
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.Tail">
            <summary>
                The tail
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.#ctor(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront" /> class
            </summary>
            <param name="head">The head</param>
            <param name="tail">The tail</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.AddNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Adds the node using the specified node
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.RemoveNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Removes the node using the specified node
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.FindSearchNode(System.Double)">
            <summary>
                MM:  This seems to be used by LocateNode to guess a position in the implicit linked list of
                AdvancingFrontNodes near x Removed an overload that depended on this being exact
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.LocateNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>We use a balancing tree to locate a node smaller or equal to given key value</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.LocateNode(System.Double)">
            <summary>
                Locates the node using the specified x
            </summary>
            <param name="x">The </param>
            <returns>The advancing front node</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFront.LocatePoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>This implementation will use simple node traversal algorithm to find a point on the front</summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode">
            <summary>
                The advancing front node class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.Point">
            <summary>
                The point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.Value">
            <summary>
                The value
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.Next">
            <summary>
                The next
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.Prev">
            <summary>
                The prev
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.Triangle">
            <summary>
                The triangle
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.#ctor(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode" /> class
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.HasNext">
            <summary>
                Gets the value of the has next
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode.HasPrev">
            <summary>
                Gets the value of the has prev
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep">
            <summary>
                The dt sweep class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.PiDiv2">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Pi3Div4">
            <summary>
                The pi
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Triangulate(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext)">
            <summary>Triangulate simple polygon with holes</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Sweep(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext)">
            <summary>Start sweeping the Y-sorted point set from bottom to top</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FinalizationConvexHull(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext)">
            <summary>If this is a Delaunay Triangulation of a point set we need to fill so the triangle mesh gets a ConvexHull</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.TurnAdvancingFrontConvex(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>We will traverse the entire advancing front and fill it to form a convex hull.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FinalizationPolygon(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext)">
            <summary>
                Finalization the polygon using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.PointEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Find closes node to the left of the new point and create a new triangle. If needed new holes and basins will
                be filled to.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.NewFrontTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>Creates a new front triangle and legalize it</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.EdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Edges the event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillRightConcaveEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the right concave edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillRightConvexEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the right convex edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillRightBelowEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the right below edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillRightAboveEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the right above edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillLeftConvexEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the left convex edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillLeftConcaveEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the left concave edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillLeftBelowEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the left below edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillLeftAboveEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills the left above edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="edge">The edge</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.IsEdgeSideOfTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether is edge side of triangle
            </summary>
            <param name="triangle">The triangle</param>
            <param name="ep">The ep</param>
            <param name="eq">The eq</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.EdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Edges the event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="ep">The ep</param>
            <param name="eq">The eq</param>
            <param name="triangle">The triangle</param>
            <param name="point">The point</param>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.PointOnEdgeException">EdgeEvent - Point on constrained edge not supported yet</exception>
            <exception cref="T:Alis.Core.Aspect.Base.Exceptions.PointOnEdgeException">EdgeEvent - Point on constrained edge not supported yet</exception>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FlipEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
            Flips the edge event using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="ep">The ep</param>
            <param name="eq">The eq</param>
            <param name="t">The </param>
            <param name="p">The </param>
            <exception cref="T:System.Exception">Intersecting Constraints</exception>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.RotateSharedEdge(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
            Rotates the shared edge using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
            <param name="t">The </param>
            <param name="p">The </param>
            <param name="ot">The ot</param>
            <param name="op">The op</param>
            <param name="ep">The ep</param>
            <param name="eq">The eq</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.NextFlipPoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                When we need to traverse from one triangle to the next we need the point in current triangle that is the
                opposite point to the next triangle.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.NextFlipTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Orientation,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                After a flip we have two triangles and know that only one will still be intersecting the edge. So decide which
                to continue with and legalize the other
            </summary>
            <param name="tcx"></param>
            <param name="o">should be the result of an TriangulationUtil.orient2d( eq, op, ep )</param>
            <param name="t">triangle 1</param>
            <param name="ot">triangle 2</param>
            <param name="p">a point shared by both triangles</param>
            <param name="op">another point shared by both triangles</param>
            <returns>returns the triangle still intersecting the edge</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FlipScanEdgeEvent(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Scan part of the FlipScan algorithm When a triangle pair isn't flippable we will scan for the next point that
                is inside the flip triangle scan area. When found we generate a new flipEdgeEvent
            </summary>
            <param name="tcx"></param>
            <param name="ep">last point on the edge we are traversing</param>
            <param name="eq">first point on the edge we are traversing</param>
            <param name="flipTriangle">the current triangle sharing the point eq with edge</param>
            <param name="t"></param>
            <param name="p"></param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillAdvancingFront(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>Fills holes in the Advancing Front</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.LargeHole_DontFill(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Describes whether large hole dont fill
            </summary>
            <param name="node">The node</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.AngleExceeds90Degrees(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether angle exceeds 90 degrees
            </summary>
            <param name="origin">The origin</param>
            <param name="pa">The pa</param>
            <param name="pb">The pb</param>
            <returns>The exceeds 90 degrees</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.AngleExceedsPlus90DegreesOrIsNegative(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether angle exceeds plus 90 degrees or is negative
            </summary>
            <param name="origin">The origin</param>
            <param name="pa">The pa</param>
            <param name="pb">The pb</param>
            <returns>The exceeds plus 90 degrees or is negative</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Angle(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Angles the origin
            </summary>
            <param name="origin">The origin</param>
            <param name="pa">The pa</param>
            <param name="pb">The pb</param>
            <returns>The angle</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillBasin(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Fills a basin that has formed on the Advancing Front to the right of given node. First we decide a left,bottom
                and right node that forms the boundaries of the basin. Then we do a fill.
            </summary>
            <param name="tcx"></param>
            <param name="node">starting node, this or next node will be left node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.FillBasinReq(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>Recursive algorithm to fill a Basin with triangles</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.IsShallow(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Describes whether is shallow
            </summary>
            <param name="tcx">The tcx</param>
            <param name="node">The node</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.HoleAngle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>???</summary>
            <param name="node">middle node</param>
            <returns>the angle between 3 front nodes</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.BasinAngle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>The basin angle is decided against the horizontal line [1,0]</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Fill(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>Adds a triangle to the advancing front to fill a hole.</summary>
            <param name="tcx"></param>
            <param name="node">middle node, that is the bottom of the hole</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.Legalize(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
            Determines if a triangle is legalized and legalizes it if needed.
            </summary>
            <param name="tcx">The sweep context.</param>
            <param name="t">The triangle to check and legalize.</param>
            <returns>True if the triangle was legalized, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.HandleEdgeIsConstrained(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,System.Int32,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,System.Int32)">
            <summary>
            Handles the edge is constrained using the specified t
            </summary>
            <param name="t">The </param>
            <param name="edgeIndex">The edge index</param>
            <param name="ot">The ot</param>
            <param name="oppositeIndex">The opposite index</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.TryLegalizeTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
            Describes whether try legalize triangle
            </summary>
            <param name="tcx">The tcx</param>
            <param name="t">The </param>
            <param name="ot">The ot</param>
            <param name="p">The </param>
            <param name="op">The op</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.ShouldNotLegalize(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,System.Int32)">
            <summary>
            Checks if an edge should not be legalized.
            </summary>
            <param name="ot">The neighboring triangle.</param>
            <param name="oi">The index of the opposite point.</param>
            <returns>True if the edge should not be legalized, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.IsInsideCirCircle(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
            Checks if a point is inside the cir circle of a triangle.
            </summary>
            <param name="p">The point to check.</param>
            <param name="a">The first triangle vertex.</param>
            <param name="b">The second triangle vertex.</param>
            <param name="c">The third triangle vertex.</param>
            <returns>True if the point is inside the cir circle, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweep.RotateTrianglePair(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Rotates a triangle pair one vertex CW
                n2                    n2
                Position +-----+             Position +-----+
                | t  /|               |\  t |
                |   / |               | \   |
                n1|  /  |n3           n1|  \  |n3
                | /   |    after CW   |   \ |
                |/ oT |               | oT \|
                +-----+ oP            +-----+
                n4                    n4
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint">
            <summary>
                The dt sweep constraint class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationConstraint" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint.#ctor(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>Give two points in any order. Will always be ordered so that q.y > p.y and q.x > p.x if same y value</summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext">
            @author Thomas Åhlén, thahlen@gmail.com
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.Alpha">
            <summary>
                The alpha
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.Basin">
            <summary>
                The dt sweep basin
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.comparator">
            <summary>
                The dt sweep point comparator
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.EdgeEvent">
            <summary>
                The dt sweep edge event
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.AFront">
            <summary>
                The front
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.Head">
            <summary>
                Gets or sets the value of the head
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.Tail">
            <summary>
                Gets or sets the value of the tail
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.RemoveFromList(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Removes the from list using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.MeshClean(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Meshes the clean using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.MeshCleanReq(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Meshes the clean req using the specified triangle
            </summary>
            <param name="triangle">The triangle</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.AddNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Adds the node using the specified node
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.RemoveNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.AdvancingFrontNode)">
            <summary>
                Removes the node using the specified node
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.LocateNode(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Locates the node using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The advancing front node</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.CreateAdvancingFront">
            <summary>
                Creates the advancing front
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.MapTriangleToNodes(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>Try to map a node to all sides of this triangle that don't have a neighbor.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable)">
            <summary>
                Prepares the triangulation using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.FinalizeTriangulation">
            <summary>
                Finalizes the triangulation
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.NewConstraint(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                News the constraint using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The triangulation constraint</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin">
            <summary>
                The dt sweep basin class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin.BottomNode">
            <summary>
                The bottom node
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin.LeftHighest">
            <summary>
                The left highest
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin.LeftNode">
            <summary>
                The left node
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin.RightNode">
            <summary>
                The right node
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepBasin.Width">
            <summary>
                The width
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepEdgeEvent">
            <summary>
                The dt sweep edge event class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepEdgeEvent.ConstrainedEdge">
            <summary>
                The constrained edge
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepContext.DtSweepEdgeEvent.Right">
            <summary>
                The right
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepPointComparator">
            <summary>
                The dt sweep point comparator class
            </summary>
            <seealso cref="T:System.Collections.Generic.IComparer`1" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepPointComparator.Compare(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Compares the p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable">
            <summary>
                The triangulatable interface
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.Points">
            <summary>
                Gets the value of the points
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.Triangles">
            <summary>
                Gets the value of the triangles
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.TriangulationMode">
            <summary>
                Gets the value of the triangulation mode
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext)">
            <summary>
                Prepares the triangulation using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.AddTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Adds the triangle using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.AddTriangles(System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle})">
            <summary>
                Adds the triangles using the specified list
            </summary>
            <param name="list">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable.ClearTriangles">
            <summary>
                Clears the triangles
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Orientation">
            <summary>
                The orientation enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Orientation.Cw">
            <summary>
                The cw orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Orientation.Ccw">
            <summary>
                The ccw orientation
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Orientation.Collinear">
            <summary>
                The collinear orientation
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon">
            <summary>
                The polygon class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable" />
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.PointsPrivate">
            <summary>
                The triangulation point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.HolesPrivate">
            <summary>
                The holes
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.LastPrivate">
            <summary>
                The last
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.SteinerPointsPrivate">
            <summary>
                The steiner points
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.TrianglesPrivate">
            <summary>
                The triangles
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.#ctor(System.Collections.Generic.IList{Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint})">
            <summary>Create a polygon from a list of at least 3 points with no duplicates.</summary>
            <param name="points">A list of unique points</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.#ctor(System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint})">
            <summary>Create a polygon from a list of at least 3 points with no duplicates.</summary>
            <param name="points">A list of unique points.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.Holes">
            <summary>
                Gets the value of the holes
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.TriangulationMode">
            <summary>
                Gets the value of the triangulation mode
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.Points">
            <summary>
                Gets the value of the points
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.Triangles">
            <summary>
                Gets the value of the triangles
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Adds the triangle using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddTriangles(System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle})">
            <summary>
                Adds the triangles using the specified list
            </summary>
            <param name="list">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.ClearTriangles">
            <summary>
                Clears the triangles
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext)">
            <summary>Creates constraints and populates the context with points</summary>
            <param name="tcx">The context</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddSteinerPoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Adds the steiner point using the specified point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddSteinerPoints(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint})">
            <summary>
                Adds the steiner points using the specified points
            </summary>
            <param name="points">The points</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.ClearSteinerPoints">
            <summary>
                Clears the steiner points
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddHole(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon)">
            <summary>Add a hole to the polygon.</summary>
            <param name="poly">A subtraction polygon fully contained inside this polygon.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.InsertPointAfter(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint)">
            <summary>Inserts newPoint after point.</summary>
            <param name="point">The point to insert after in the polygon</param>
            <param name="newPoint">The point to insert into the polygon</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddPoints(System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint})">
            <summary>Inserts list (after last point in polygon?)</summary>
            <param name="list"></param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.AddPoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint)">
            <summary>Adds a point after the last in the polygon.</summary>
            <param name="p">The point to add</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon.RemovePoint(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint)">
            <summary>Removes a point from the polygon.</summary>
            <param name="p"></param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint">
            <summary>
                The polygon point class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint" /> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint.Next">
            <summary>
                Gets or sets the value of the next
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonPoint.Previous">
            <summary>
                Gets or sets the value of the previous
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet">
            <summary>
                The polygon set class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet.#ctor(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet" /> class
            </summary>
            <param name="poly">The poly</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet.PolygonsList">
            <summary>
                The polygon
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet.Polygons">
            <summary>
                Gets the value of the polygons
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.PolygonSet.Add(Alis.Core.Physic.Tools.Triangulation.Delaunay.Polygon.Polygon)">
            <summary>
                Adds the p
            </summary>
            <param name="p">The </param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet">
            <summary>
                The constrained point set class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet" />
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.constrainedPointList">
            <summary>
                The constrained point list
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.#ctor(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint},System.Int32[])">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet" /> class
            </summary>
            <param name="points">The points</param>
            <param name="index">The index</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.#ctor(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint},System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint})">
            @param points - A list of all points in PointSet
            @param constraints - Pairs of two points defining a constraint, all points
            <b>must</b>
            be part of given PointSet!
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.EdgeIndex">
            <summary>
                Gets or sets the value of the edge index
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.TriangulationMode">
            <summary>
                Gets the value of the triangulation mode
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.ConstrainedPointSet.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext)">
            <summary>
                Prepares the triangulation using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet">
            <summary>
                The point set class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.#ctor(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint})">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet" /> class
            </summary>
            <param name="points">The points</param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.Points">
            <summary>
                Gets or sets the value of the points
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.Triangles">
            <summary>
                Gets or sets the value of the triangles
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.TriangulationMode">
            <summary>
                Gets the value of the triangulation mode
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.AddTriangle(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle)">
            <summary>
                Adds the triangle using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.AddTriangles(System.Collections.Generic.IEnumerable{Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.DelaunayTriangle})">
            <summary>
                Adds the triangles using the specified list
            </summary>
            <param name="list">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.ClearTriangles">
            <summary>
                Clears the triangles
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Sets.PointSet.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext)">
            <summary>
                Prepares the triangulation using the specified tcx
            </summary>
            <param name="tcx">The tcx</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationConstraint">
            <summary>
                The triangulation constraint class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationConstraint.P">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationConstraint.Q">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext">
            <summary>
                The triangulation context class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Points">
            <summary>
                The triangulation point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Triangles">
            <summary>
                The delaunay triangle
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext" /> class
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.TriangulationMode">
            <summary>
                Gets or sets the value of the triangulation mode
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Triangulatable">
            <summary>
                Gets or sets the value of the triangulatable
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Terminated">
            <summary>
                Gets or sets the value of the terminated
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.StepCount">
            <summary>
                Gets or sets the value of the step count
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.IsDebugEnabled">
            <summary>
                Gets or sets the value of the is debug enabled
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Done">
            <summary>
                Dones this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.PrepareTriangulation(Alis.Core.Physic.Tools.Triangulation.Delaunay.ITriangulatable)">
            <summary>
                Prepares the triangulation using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.NewConstraint(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                News the constraint using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The triangulation constraint</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Update(System.String)">
            <summary>
                Updates the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationContext.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationMode">
            <summary>
                The triangulation mode enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationMode.Unconstrained">
            <summary>
                The unconstrained triangulation mode
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationMode.Constrained">
            <summary>
                The constrained triangulation mode
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationMode.Polygon">
            <summary>
                The polygon triangulation mode
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint">
            <summary>
                The triangulation point class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.X">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.Y">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint" /> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.Edges">
            <summary>
                Gets or sets the value of the edges
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.Xf">
            <summary>
                Gets or sets the value of the xf
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.Yf">
            <summary>
                Gets or sets the value of the yf
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.HasEdges">
            <summary>
                Gets the value of the has edges
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.ToString">
            <summary>
                Returns the string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint.AddEdge(Alis.Core.Physic.Tools.Triangulation.Delaunay.Delaunay.Sweep.DtSweepConstraint)">
            <summary>
                Adds the edge using the specified e
            </summary>
            <param name="e">The </param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationUtil">
            @author Thomas Åhlén, thahlen@gmail.com
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationUtil.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationUtil.SmartIncircle(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Requirements:
                1. a,b and c form a triangle.
                2. a and d is know to be on opposite side of bc
                <code>
                           a
                           +
                          / \
                         /   \
                       b/     \c
                       +-------+ 
                      /    B    \  
                     /           \ 
            </code>
                Facts:
                d has to be in area B to have a chance to be inside the circle formed by a,b and c
                d is outside B if orient2d(a,b,d) or orient2d(c,a,d) is CW
                This preknowledge gives us a way to optimize the incircle test
            </summary>
            <param name="pa">triangle point, opposite d</param>
            <param name="pb">triangle point</param>
            <param name="pc">triangle point</param>
            <param name="pd">point opposite a</param>
            <returns>true if d is inside circle, false if on circle edge</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationUtil.InScanArea(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            <summary>
                Describes whether in scan area
            </summary>
            <param name="pa">The pa</param>
            <param name="pb">The pb</param>
            <param name="pc">The pc</param>
            <param name="pd">The pd</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationUtil.Orient2d(Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint,Alis.Core.Physic.Tools.Triangulation.Delaunay.TriangulationPoint)">
            Forumla to calculate signed area
            Positive if CCW
            Negative if CW
            0 if collinear
            A[P1,P2,P3]  =  (x1*y2 - y1*x2) + (x2*y3 - y2*x3) + (x3*y1 - y3*x1)
            =  (x1-x3)*(y2-y3) - (y1-y3)*(x2-x3)
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PointGenerator">
            <summary>
                The point generator class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PointGenerator.UniformDistribution(System.Int32,System.Double)">
            <summary>
                Uniforms the distribution using the specified n
            </summary>
            <param name="n">The </param>
            <param name="scale">The scale</param>
            <returns>The points</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PointGenerator.UniformGrid(System.Int32,System.Double)">
            <summary>
                Uniforms the grid using the specified n
            </summary>
            <param name="n">The </param>
            <param name="scale">The scale</param>
            <returns>The points</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PolygonGenerator">
            <summary>
                The polygon generator class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PolygonGenerator.RandomCircleSweep(System.Double,System.Int32)">
            <summary>
                Randoms the circle sweep using the specified scale
            </summary>
            <param name="scale">The scale</param>
            <param name="vertexCount">The vertex count</param>
            <returns>The polygon polygon</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Delaunay.Util.PolygonGenerator.RandomCircleSweep2(System.Double,System.Int32)">
            <summary>
                Randoms the circle sweep 2 using the specified scale
            </summary>
            <param name="scale">The scale</param>
            <param name="vertexCount">The vertex count</param>
            <returns>The polygon polygon</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer">
            <summary>
                Convex decomposition algorithm using ear clipping
                Properties:
                - Only works on simple polygons.
                - Does not support holes.
                - Running time is O(n^2), n = number of vertices.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.ConvexPartition(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
                Decompose the polygon into several smaller non-concave polygon. Each resulting polygon will have no more than
                Settings.MaxPolygonVertices vertices.
            </summary>
            <param name="vertices">The vertices.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.TriangulatePolygon(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
            Triangulates a polygon using the ear-clipping algorithm.
            Returns a list of triangles.
            </summary>
            <remarks>Only works on simple polygons.</remarks>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.TriangulatePinchedPolygon(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>
            Triangulates the pinched polygon using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="tolerance">The tolerance</param>
            <exception cref="T:Alis.Core.Physic.Tools.Triangulation.EarClip.TriangulateException">Can't triangulate your polygon.</exception>
            <returns>A list of vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.TriangulateRegularPolygon(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Triangulates the regular polygon using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <returns>The results</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.FindEar(System.Single[],System.Single[],System.Int32)">
            <summary>
            Finds the ear using the specified x rem
            </summary>
            <param name="xRem">The rem</param>
            <param name="yRem">The rem</param>
            <param name="vNum">The num</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.ClipEar(System.Int32,System.Single[]@,System.Single[]@,System.Int32,System.Collections.Generic.List{Alis.Core.Physic.Shared.Vertices})">
            <summary>
            Clips the ear using the specified ear index
            </summary>
            <param name="earIndex">The ear index</param>
            <param name="xRem">The rem</param>
            <param name="yRem">The rem</param>
            <param name="vNum">The num</param>
            <param name="results">The results</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.GenerateTrianglesFromBuffer(System.Single[],System.Single[],System.Int32)">
            <summary>
            Generates the triangles from buffer using the specified x rem
            </summary>
            <param name="xRem">The rem</param>
            <param name="yRem">The rem</param>
            <param name="vNum">The num</param>
            <returns>The triangles</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.ResolvePinchPoint(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices@,Alis.Core.Physic.Shared.Vertices@,System.Single)">
            <summary>
            Finds and fixes "pinch points," points where two polygon vertices are at the same point.
            </summary>
            <param name="pin">The pin.</param>
            <param name="poutA">The pout A.</param>
            <param name="poutB">The pout B.</param>
            <param name="tolerance">The tolerance for point comparison.</param>
            <returns>True if a pinch point is found and resolved, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.FindPinchPoint(Alis.Core.Physic.Shared.Vertices,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Finds a pinch point in the vertices.
            </summary>
            <param name="vertices">The vertices to search.</param>
            <param name="tolerance">The tolerance for point comparison.</param>
            <param name="pinchIndexA">The index of the first vertex in the pinch point.</param>
            <param name="pinchIndexB">The index of the second vertex in the pinch point.</param>
            <returns>True if a pinch point is found, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.IsPinchPoint(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
            Determines if two vertices form a pinch point within the given tolerance.
            </summary>
            <param name="vertexA">The first vertex.</param>
            <param name="vertexB">The second vertex.</param>
            <param name="tolerance">The tolerance for point comparison.</param>
            <returns>True if the vertices form a pinch point, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.SplitVertices(Alis.Core.Physic.Shared.Vertices,System.Int32,System.Int32,Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Splits the vertices at the pinch point.
            </summary>
            <param name="pin">The vertices to split.</param>
            <param name="pinchIndexA">The index of the first vertex in the pinch point.</param>
            <param name="pinchIndexB">The index of the second vertex in the pinch point.</param>
            <param name="poutA">The output vertices A.</param>
            <param name="poutB">The output vertices B.</param>
            <returns>True if the vertices are split successfully, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.RemainderLocal(System.Int32,System.Int32)">
            <summary>
            Calculates the remainder of division, handling negative values correctly.
            </summary>
            <param name="dividend">The dividend.</param>
            <param name="divisor">The divisor.</param>
            <returns>The remainder of the division.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.EarClipDecomposer.IsEar(System.Int32,System.Single[],System.Single[],System.Int32)">
            <summary>Checks if vertex i is the tip of an ear in polygon defined by xv[] and  yv[].</summary>
            <param name="i">The i.</param>
            <param name="xv">The xv.</param>
            <param name="yv">The yv.</param>
            <param name="xvLength">Length of the xv.</param>
            <remarks>Assumes clockwise orientation of polygon.</remarks>
            <returns><c>true</c> if the specified i is ear; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.EarClip.Triangle">
            <summary>
                The triangle class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Shared.Vertices" />
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.Triangle.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.EarClip.Triangle" /> class
            </summary>
            <param name="x1">The </param>
            <param name="y1">The </param>
            <param name="x2">The </param>
            <param name="y2">The </param>
            <param name="x3">The </param>
            <param name="y3">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.Triangle.IsInside(System.Single,System.Single)">
            <summary>
                Describes whether this instance is inside
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.EarClip.TriangulateException">
            <summary>
            The triangulate exception class
            </summary>
            <seealso cref="T:System.Exception"/>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.EarClip.TriangulateException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.EarClip.TriangulateException"/> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer">
            <summary>
                Convex decomposition algorithm created by unknown
                Properties:
                - No support for holes
                - Very fast
                - Only works on simple polygons
                - Only works on counter clockwise polygons
                More information: http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer._tmpA">
            <summary>
                The tmp
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer._tmpB">
            <summary>
                The tmp
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer._tmpC">
            <summary>
                The tmp
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer.ConvexPartition(Alis.Core.Physic.Shared.Vertices)">
            <summary>
                Decompose the polygon into triangles.
                Properties:
                - Only works on counter clockwise polygons
            </summary>
            <param name="vertices">The list of points describing the polygon</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer.InsideTriangle(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Check if the point Position is inside the triangle defined by the points A, B, C</summary>
            <param name="a">The A point.</param>
            <param name="b">The B point.</param>
            <param name="c">The C point.</param>
            <param name="p">The point to be tested.</param>
            <returns>True if the point is inside the triangle</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.FlipCode.FlipcodeDecomposer.Snip(Alis.Core.Physic.Shared.Vertices,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])">
            <summary>Cut a the contour and add a triangle into V to describe the location of the cut</summary>
            <param name="contour">The list of points defining the polygon</param>
            <param name="u">The index of the first point</param>
            <param name="v">The index of the second point</param>
            <param name="w">The index of the third point</param>
            <param name="n">The number of elements in the array.</param>
            <param name="vv">The array to populate with indicies of triangles.</param>
            <returns>True if a triangle was found</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge">
            <summary>
                The edge class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.B">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.MPoints">
            <summary>
                The points
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.P">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.Q">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.Slope">
            <summary>
                The slope
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.Above">
            <summary>
                The above
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.Below">
            <summary>
                The below
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge" /> class
            </summary>
            <param name="p">The </param>
            <param name="q">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.IsAbove(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance is above
            </summary>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.IsBelow(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance is below
            </summary>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Edge.AddMpoint(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Adds the mpoint using the specified point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain">
            <summary>
                The monotone mountain class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.PiSlop">
            <summary>
                The pi slop
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.convexPoints">
            <summary>
                The convex points
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.monoPoly">
            <summary>
                The mono poly
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Triangles">
            <summary>
                The triangles
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.head">
            <summary>
                The head
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.positive">
            <summary>
                The positive
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.size">
            <summary>
                The size
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.tail">
            <summary>
                The tail
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Add(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Adds the point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Remove(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Removes the point
            </summary>
            <param name="point">The point</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Process">
            <summary>
                Processes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Triangulate">
            <summary>
                Triangulates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Valid(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance valid
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.GenMonoPoly">
            <summary>
                Gens the mono poly
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.Angle(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Angles the p
            </summary>
            <param name="p">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.AngleSign">
            <summary>
                Describes whether this instance angle sign
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.MonotoneMountain.IsConvex(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance is convex
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Node">
            <summary>
                The node class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.ParentList">
            <summary>
                The parent list
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.LeftChild">
            <summary>
                The left child
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.RightChild">
            <summary>
                The right child
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Node,Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Node" /> class
            </summary>
            <param name="left">The left</param>
            <param name="right">The right</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.Locate(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Locates the s
            </summary>
            <param name="edge">The </param>
            <returns>The sink</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Node.Replace(Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Replaces the node
            </summary>
            <param name="node">The node</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Point">
            <summary>
                The point class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.X">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Next">
            <summary>
                The prev
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Prev">
            <summary>
                The prev
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.#ctor(System.Single,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Point" /> class
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Cross(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Crosses the p
            </summary>
            <param name="p">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Dot(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Dots the p
            </summary>
            <param name="p">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Neq(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance neq
            </summary>
            <param name="p">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Point.Orient2D(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Orients the 2 d using the specified pb
            </summary>
            <param name="pb">The pb</param>
            <param name="pc">The pc</param>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph">
            <summary>
                The query graph class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.head">
            <summary>
                The head
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph" /> class
            </summary>
            <param name="head">The head</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Locate(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Locates the edge
            </summary>
            <param name="edge">The edge</param>
            <returns>The trapezoid</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.FollowEdge(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Follows the edge using the specified edge
            </summary>
            <param name="edge">The edge</param>
            <returns>The trapezoids</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Replace(Alis.Core.Physic.Tools.Triangulation.Seidel.Sink,Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Replaces the sink
            </summary>
            <param name="sink">The sink</param>
            <param name="node">The node</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Case1(Alis.Core.Physic.Tools.Triangulation.Seidel.Sink,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid[])">
            <summary>
                Cases the 1 using the specified sink
            </summary>
            <param name="sink">The sink</param>
            <param name="edge">The edge</param>
            <param name="tList">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Case2(Alis.Core.Physic.Tools.Triangulation.Seidel.Sink,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid[])">
            <summary>
                Cases the 2 using the specified sink
            </summary>
            <param name="sink">The sink</param>
            <param name="edge">The edge</param>
            <param name="tList">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Case3(Alis.Core.Physic.Tools.Triangulation.Seidel.Sink,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid[])">
            <summary>
                Cases the 3 using the specified sink
            </summary>
            <param name="sink">The sink</param>
            <param name="edge">The edge</param>
            <param name="tList">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.QueryGraph.Case4(Alis.Core.Physic.Tools.Triangulation.Seidel.Sink,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid[])">
            <summary>
                Cases the 4 using the specified sink
            </summary>
            <param name="sink">The sink</param>
            <param name="edge">The edge</param>
            <param name="tList">The list</param>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.SeidelDecomposer">
            <summary>
                Convex decomposition algorithm created by Raimund Seidel
                Properties:
                - Decompose the polygon into trapezoids, then triangulate.
                - To use the trapezoid data, use ConvexPartitionTrapezoid()
                - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
                - Running time is O(n log n), n = number of vertices.
                - Running time is almost linear for most simple polygons.
                - Does not care about winding order.
                For more information, see Raimund Seidel's paper "A simple and fast incremental randomized
                algorithm for computing trapezoidal decompositions and for triangulating polygons"
                See also: "Computational Geometry", 3rd edition, by Mark de Berg et al, Chapter 6.2
                "Computational Geometry in C", 2nd edition, by Joseph O'Rourke
                Original code from the Poly2Tri project by Mason Green.
                http://code.google.com/p/poly2tri/source/browse?repo=archive#hg/scala/src/org/poly2tri/seidel
                This implementation is from Dec 14, 2010
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.SeidelDecomposer.ConvexPartition(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Decompose the polygon into several smaller non-concave polygons.</summary>
            <param name="vertices">The polygon to decompose.</param>
            <param name="sheer">The sheer to use if you get bad results, try using a higher value.</param>
            <returns>A list of triangles</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.SeidelDecomposer.ConvexPartitionTrapezoid(Alis.Core.Physic.Shared.Vertices,System.Single)">
            <summary>Decompose the polygon into several smaller non-concave polygons.</summary>
            <param name="vertices">The polygon to decompose.</param>
            <param name="sheer">The sheer to use if you get bad results, try using a higher value.</param>
            <returns>A list of trapezoids</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink">
            <summary>
                The sink class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Node" />
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink.Trapezoid">
            <summary>
                The trapezoid
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink" /> class
            </summary>
            <param name="trapezoid">The trapezoid</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink.Isink(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Isinks the trapezoid
            </summary>
            <param name="trapezoid">The trapezoid</param>
            <returns>The sink</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Sink.Locate(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Locates the edge
            </summary>
            <param name="edge">The edge</param>
            <returns>The sink</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid">
            <summary>
                The trapezoid class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.Bottom">
            <summary>
                The bottom
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.LeftPoint">
            <summary>
                The left point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.Top">
            <summary>
                The top
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.Inside">
            <summary>
                The inside
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.LowerLeft">
            <summary>
                The lower left
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.LowerRight">
            <summary>
                The lower right
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.RightPoint">
            <summary>
                The right point
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.Sink">
            <summary>
                The sink
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.UpperLeft">
            <summary>
                The upper left
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.UpperRight">
            <summary>
                The upper right
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid" /> class
            </summary>
            <param name="leftPoint">The left point</param>
            <param name="rightPoint">The right point</param>
            <param name="top">The top</param>
            <param name="bottom">The bottom</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.UpdateLeft(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Updates the left using the specified ul
            </summary>
            <param name="ul">The ul</param>
            <param name="ll">The ll</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.UpdateRight(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Updates the right using the specified ur
            </summary>
            <param name="ur">The ur</param>
            <param name="lr">The lr</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.UpdateLeftRight(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Updates the left right using the specified ul
            </summary>
            <param name="ul">The ul</param>
            <param name="ll">The ll</param>
            <param name="ur">The ur</param>
            <param name="lr">The lr</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.TrimNeighbors">
            <summary>
                Trims the neighbors
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.Contains(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Describes whether this instance contains
            </summary>
            <param name="point">The point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.GetVertices">
            <summary>
                Gets the vertices
            </summary>
            <returns>The verts</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.LineIntersect(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,System.Single)">
            <summary>
                Lines the intersect using the specified edge
            </summary>
            <param name="edge">The edge</param>
            <param name="x">The </param>
            <returns>The point</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid.AddPoints">
            <summary>
                Adds the points
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap">
            <summary>
                The trapezoidal map class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Map">
            <summary>
                The map
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.margin">
            <summary>
                The margin
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.bCross">
            <summary>
                The cross
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.cross">
            <summary>
                The cross
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Clear">
            <summary>
                Clears this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Case1(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Cases the 1 using the specified t
            </summary>
            <param name="t">The </param>
            <param name="e">The </param>
            <returns>The trapezoids</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Case2(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Cases the 2 using the specified t
            </summary>
            <param name="t">The </param>
            <param name="e">The </param>
            <returns>The trapezoids</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Case3(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Cases the 3 using the specified t
            </summary>
            <param name="t">The </param>
            <param name="e">The </param>
            <returns>The trapezoids</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.Case4(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid,Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Cases the 4 using the specified t
            </summary>
            <param name="t">The </param>
            <param name="e">The </param>
            <returns>The trapezoids</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.BoundingBox(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Edge})">
            <summary>
            Boundings the box using the specified edges
            </summary>
            <param name="edges">The edges</param>
            <returns>The trapezoid</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.CalculateMaxPoint(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Edge})">
            <summary>
            Calculates the max point using the specified edges
            </summary>
            <param name="edges">The edges</param>
            <returns>The max</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.CalculateMinPoint(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Edge})">
            <summary>
            Calculates the min point using the specified edges
            </summary>
            <param name="edges">The edges</param>
            <returns>The min</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.UpdateMaxPoint(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
            Updates the max point using the specified current max
            </summary>
            <param name="currentMax">The current max</param>
            <param name="point">The point</param>
            <returns>The point</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.TrapezoidalMap.UpdateMinPoint(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
            Updates the min point using the specified current min
            </summary>
            <param name="currentMin">The current min</param>
            <param name="point">The point</param>
            <returns>The point</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator">
            <summary>
                The triangulator class
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.boundingBox">
            <summary>
                The bounding box
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.edgeList">
            <summary>
                The edge list
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.queryGraph">
            <summary>
                The query graph
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.sheer">
            <summary>
                The sheer
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.trapezoidalMap">
            <summary>
                The trapezoidal map
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.Trapezoids">
            <summary>
                The trapezoids
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.Triangles">
            <summary>
                The triangles
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.xMonoPoly">
            <summary>
                The mono poly
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.#ctor(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Point},System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator" /> class
            </summary>
            <param name="polyLine">The poly line</param>
            <param name="sheer">The sheer</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.Process">
            <summary>
            Processes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.ProcessEdges">
            <summary>
            Processes the edges
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.RemoveTrapezoidFromMap(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
            Removes the trapezoid from map using the specified trapezoid
            </summary>
            <param name="trapezoid">The trapezoid</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.AddNewTrapezoidsToMap(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid[])">
            <summary>
            Adds the new trapezoids to map using the specified new trapezoids
            </summary>
            <param name="newTrapezoids">The new trapezoids</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.MarkOutsideTrapezoids">
            <summary>
            Marks the outside trapezoids
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.CollectInteriorTrapezoids">
            <summary>
            Collects the interior trapezoids
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.CreateMountains">
            <summary>
                Creates the mountains
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.MarkOutside(Alis.Core.Physic.Tools.Triangulation.Seidel.Trapezoid)">
            <summary>
                Marks the outside using the specified t
            </summary>
            <param name="t">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.InitEdges(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Point})">
            <summary>
                Inits the edges using the specified points
            </summary>
            <param name="points">The points</param>
            <returns>A list of edge</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.OrderSegments(System.Collections.Generic.List{Alis.Core.Physic.Tools.Triangulation.Seidel.Edge})">
            <summary>
                Orders the segments using the specified edge input
            </summary>
            <param name="edgeInput">The edge input</param>
            <returns>The edges</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.Shuffle``1(System.Collections.Generic.IList{``0})">
            <summary>
                Shuffles the list
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="list">The list</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.Triangulator.ShearTransform(Alis.Core.Physic.Tools.Triangulation.Seidel.Point)">
            <summary>
                Shears the transform using the specified point
            </summary>
            <param name="point">The point</param>
            <returns>The point</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.XNode">
            <summary>
                The node class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Node" />
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.XNode.point">
            <summary>
                The point
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.XNode.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Point,Alis.Core.Physic.Tools.Triangulation.Seidel.Node,Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.XNode" /> class
            </summary>
            <param name="point">The point</param>
            <param name="lChild">The child</param>
            <param name="rChild">The child</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.XNode.Locate(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Locates the edge
            </summary>
            <param name="edge">The edge</param>
            <returns>The sink</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.Seidel.YNode">
            <summary>
                The node class
            </summary>
            <seealso cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.Node" />
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.Seidel.YNode.edge">
            <summary>
                The edge
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.YNode.#ctor(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge,Alis.Core.Physic.Tools.Triangulation.Seidel.Node,Alis.Core.Physic.Tools.Triangulation.Seidel.Node)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.Tools.Triangulation.Seidel.YNode" /> class
            </summary>
            <param name="edge">The edge</param>
            <param name="lChild">The child</param>
            <param name="rChild">The child</param>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.Seidel.YNode.Locate(Alis.Core.Physic.Tools.Triangulation.Seidel.Edge)">
            <summary>
                Locates the edge
            </summary>
            <param name="edge">The edge</param>
            <returns>The sink</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.Triangulate">
            <summary>
            The triangulate class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.Triangulate.ConvexPartition(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm,System.Boolean,System.Single)">
            <summary>
            Convexes the partition using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="algorithm">The algorithm</param>
            <param name="discardAndFixInvalid">The discard and fix invalid</param>
            <param name="tolerance">The tolerance</param>
            <returns>The results</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.Triangulate.ValidateCounterClockwise(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm)">
            <summary>
            Describes whether validate counter clockwise
            </summary>
            <param name="vertices">The vertices</param>
            <param name="algorithm">The algorithm</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.Triangulate.GetConvexPartition(Alis.Core.Physic.Shared.Vertices,Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm,System.Single)">
            <summary>
            Gets the convex partition using the specified vertices
            </summary>
            <param name="vertices">The vertices</param>
            <param name="algorithm">The algorithm</param>
            <param name="tolerance">The tolerance</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <returns>A list of vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.Triangulate.ValidatePolygon(Alis.Core.Physic.Shared.Vertices)">
            <summary>
            Describes whether validate polygon
            </summary>
            <param name="polygon">The polygon</param>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm">
            <summary>
                The triangulation algorithm enum
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.Earclip">
            <summary>
                Convex decomposition algorithm using ear clipping
                Properties:
                - Only works on simple polygons.
                - Does not support holes.
                - Running time is O(n^2), n = number of vertices.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.Bayazit">
            <summary>
                Convex decomposition algorithm created by Mark Bayazit (http://mnbayazit.com/)
                Properties:
                - Tries to decompose using polygons instead of triangles.
                - Tends to produce optimal results with low processing time.
                - Running time is O(nr), n = number of vertices, r = reflex vertices.
                - Does not support holes.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.Flipcode">
            <summary>
                Convex decomposition algorithm created by unknown
                Properties:
                - No support for holes
                - Very fast
                - Only works on simple polygons
                - Only works on counter clockwise polygons
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.Seidel">
            <summary>
                Convex decomposition algorithm created by Raimund Seidel
                Properties:
                - Decompose the polygon into trapezoids, then triangulate.
                - To use the trapezoid data, use ConvexPartitionTrapezoid()
                - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
                - Running time is O(n log n), n = number of vertices.
                - Running time is almost linear for most simple polygons.
                - Does not care about winding order.
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.SeidelTrapezoids">
            <summary>
                The seidel trapezoids triangulation algorithm
            </summary>
        </member>
        <member name="F:Alis.Core.Physic.Tools.Triangulation.TriangulationBase.TriangulationAlgorithm.Delauny">
            <summary>
                2D constrained Delaunay triangulation algorithm.
                Based on the paper "Sweep-line algorithm for constrained Delaunay triangulation" by V. Domiter and and B. Zalik
                Properties:
                - Creates triangles with a large interior angle.
                - Supports holes
                - Generate a lot of garbage due to incapsulation of the Poly2Tri library.
                - Running time is O(n^2), n = number of vertices.
                - Does not care about winding order.
            </summary>
        </member>
        <member name="T:Alis.Core.Physic.Utilities.Line">
            <summary>
            The line class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.DistanceBetweenPointAndLineSegment(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Distances the between point and line segment using the specified point
            </summary>
            <param name="point">The point</param>
            <param name="start">The start</param>
            <param name="end">The end</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.LineIntersect2(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
            Describes whether line intersect 2
            </summary>
            <param name="a0">The </param>
            <param name="a1">The </param>
            <param name="b0">The </param>
            <param name="b1">The </param>
            <param name="intersectionPoint">The intersection point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.LineIntersect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
            Lines the intersect using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <param name="q1">The </param>
            <param name="q2">The </param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.LineIntersect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Boolean,System.Boolean,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
            Describes whether line intersect
            </summary>
            <param name="point1">The point</param>
            <param name="point2">The point</param>
            <param name="point3">The point</param>
            <param name="point4">The point</param>
            <param name="firstIsSegment">The first is segment</param>
            <param name="secondIsSegment">The second is segment</param>
            <param name="intersectionPoint">The intersection point</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.IsDenominatorZero(System.Single)">
            <summary>
            Describes whether is denominator zero
            </summary>
            <param name="denom">The denom</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.CalculateUa(System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
            Calculates the ua using the specified a
            </summary>
            <param name="a">The </param>
            <param name="c">The </param>
            <param name="d">The </param>
            <param name="point1">The point</param>
            <param name="point3">The point</param>
            <param name="denom">The denom</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.CalculateUb(System.Single,System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
            Calculates the ub using the specified b
            </summary>
            <param name="b">The </param>
            <param name="d">The </param>
            <param name="a">The </param>
            <param name="point1">The point</param>
            <param name="point3">The point</param>
            <param name="denom">The denom</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.IsInRange(System.Single,System.Boolean)">
            <summary>
            Describes whether is in range
            </summary>
            <param name="value">The value</param>
            <param name="isSegment">The is segment</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.CalculateIntersectionPoint(Alis.Core.Aspect.Math.Vector.Vector2,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the intersection point using the specified point 1
            </summary>
            <param name="point1">The point</param>
            <param name="ua">The ua</param>
            <param name="b">The </param>
            <param name="d">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.LineSegmentVerticesIntersect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Collections.Generic.List{Alis.Core.Aspect.Math.Vector.Vector2})">
            <summary>
            Lines the segment vertices intersect using the specified point 1
            </summary>
            <param name="point1">The point</param>
            <param name="point2">The point</param>
            <param name="vertices">The vertices</param>
            <returns>The intersection points</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Line.LineSegmentAabbIntersect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Physic.Shared.Aabb)">
            <summary>
            Lines the segment aabb intersect using the specified point 1
            </summary>
            <param name="point1">The point</param>
            <param name="point2">The point</param>
            <param name="aabb">The aabb</param>
            <returns>A list of vector 2</returns>
        </member>
        <member name="T:Alis.Core.Physic.Utilities.MathUtils">
            <summary>
                The math utils class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Perform the cross product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Perform the cross product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Perform the cross product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Perform the cross product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Perform the cross product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Abs(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Abses the v
            </summary>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Abs(System.Single)">
            <summary>
                Abses the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the a
            </summary>
            <param name="a">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Muls the a
            </summary>
            <param name="a">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the t
            </summary>
            <param name="T">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Muls the t
            </summary>
            <param name="T">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the t using the specified a
            </summary>
            <param name="a">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Muls the t using the specified a
            </summary>
            <param name="a">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the t using the specified t
            </summary>
            <param name="T">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Muls the t using the specified t
            </summary>
            <param name="T">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Matrix.Matrix2X2F@,Alis.Core.Aspect.Math.Matrix.Matrix2X2F@)">
            <summary>
                Muls the t using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Matrix.Matrix3X3F,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Multiply a matrix times a vector.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Transform,Alis.Core.Aspect.Math.Transform)">
            <summary>
                Muls the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@,Alis.Core.Aspect.Math.Transform@)">
            <summary>
                Muls the t using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Swap``1(``0@,``0@)">
            <summary>
                Swaps the a
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="a">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul22(Alis.Core.Aspect.Math.Matrix.Matrix3X3F,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Multiply a matrix times a vector.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Rotation)">
            <summary>Multiply two rotations: q * r</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Transform,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the t using the specified t
            </summary>
            <param name="T">The </param>
            <param name="v">The </param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Rotation)">
            <summary>Transpose multiply two rotations: qT * r</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Transform,Alis.Core.Aspect.Math.Transform)">
            <summary>
                Muls the t using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The </returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Rotate a vector</summary>
            <param name="q">The rotation matrix</param>
            <param name="v">The value</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Inverse rotate a vector</summary>
            <param name="q">The rotation matrix</param>
            <param name="v">The value</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Skew(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Get the skew vector such that dot(skew_vec, other) == cross(vec, other)</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.IsValid(System.Single)">
            <summary>This function is used to ensure that a floating point number is not a NaN or infinity.</summary>
            <param name="x">The x.</param>
            <returns><c>true</c> if the specified x is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.IsValid(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Describes whether is valid
            </summary>
            <param name="x">The </param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>
                Clamps the a
            </summary>
            <param name="a">The </param>
            <param name="low">The low</param>
            <param name="high">The high</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Clamp(System.Single,System.Single,System.Single)">
            <summary>
                Clamps the a
            </summary>
            <param name="a">The </param>
            <param name="low">The low</param>
            <param name="high">The high</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Clamp(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Clamps the a
            </summary>
            <param name="a">The </param>
            <param name="low">The low</param>
            <param name="high">The high</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single@)">
            <summary>
                Crosses the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <param name="c">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.VectorAngle(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Return the angle between two vectors on a plane The angle is from vector 1 to vector 2, positive anticlockwise
                The result is between -pi -> pi
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Dot(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Perform the dot product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Dot(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Perform the dot product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Dot(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Perform the dot product on two vectors.</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.VectorAngle(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Vectors the angle using the specified p 1
            </summary>
            <param name="p1">The </param>
            <param name="p2">The </param>
            <returns>The double</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Area(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a positive number if c is to the left of the line going from a to b.</summary>
            <returns>Positive number if point is left, negative if point is right, and 0 if points are collinear.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Area(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>Returns a positive number if c is to the left of the line going from a to b.</summary>
            <returns>Positive number if point is left, negative if point is right, and 0 if points are collinear.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.IsCollinear(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@,System.Single)">
            <summary>Determines if three vertices are collinear (ie. on a straight line)</summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cross(System.Single,Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Crosses the s
            </summary>
            <param name="s">The </param>
            <param name="a">The </param>
            <param name="b">The </param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.FloatEquals(System.Single,System.Single)">
            <summary>
                Describes whether float equals
            </summary>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.FloatEquals(System.Single,System.Single,System.Single)">
            <summary>Checks if a floating point Value is equal to another, within a certain tolerance.</summary>
            <returns>True if the values are "equal", false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.FloatInRange(System.Single,System.Single,System.Single)">
            <summary>Checks if a floating point Value is within a specified range of values (inclusive).</summary>
            <param name="value">The Value to check.</param>
            <param name="min">The minimum Value.</param>
            <param name="max">The maximum Value.</param>
            <returns>True if the Value is within the range specified, false otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Mul(Alis.Core.Aspect.Math.Rotation@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the rot
            </summary>
            <param name="rotation">The rot</param>
            <param name="axis">The axis</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.MulT(Alis.Core.Aspect.Math.Rotation@,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Muls the t using the specified rot
            </summary>
            <param name="rotation">The rot</param>
            <param name="axis">The axis</param>
            <returns>The vector</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Distance(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Distances the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Distance(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Distances the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector2@,Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Distances the squared using the specified a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Max(System.Single,System.Single)">
            <summary>
                Maxes the value a
            </summary>
            <param name="valueA">The value</param>
            <param name="valueB">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Max(System.Int32,System.Int32)">
            <summary>
                Maxes the value a
            </summary>
            <param name="valueA">The value</param>
            <param name="valueB">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Min(System.Single,System.Single)">
            <summary>
                Mins the value a
            </summary>
            <param name="valueA">The value</param>
            <param name="valueB">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Min(System.Int32,System.Int32)">
            <summary>
                Mins the value a
            </summary>
            <param name="valueA">The value</param>
            <param name="valueB">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Sign(System.Single)">
            <summary>
                Signs the value
            </summary>
            <param name="value">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Normalize(Alis.Core.Aspect.Math.Vector.Vector2@)">
            <summary>
                Convert this vector into a unit vector. Returns the length.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Sqrt(System.Single)">
            <summary>
                Sqrts the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Cosf(System.Single)">
            <summary>
                Cosfs the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Sinf(System.Single)">
            <summary>
                Sinfs the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Ceil(System.Single)">
            <summary>
                Ceils the log
            </summary>
            <param name="log">The log</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.MathUtils.Log(System.Single)">
            <summary>
                Logs the log
            </summary>
            <param name="log">The log</param>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Physic.Utilities.Polygon">
            <summary>
                The polygon utils class
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateRectangle(System.Single,System.Single)">
            <summary>Build vertices to represent an axis-aligned box.</summary>
            <param name="hx">the half-width.</param>
            <param name="hy">the half-height.</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateRectangle(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Build vertices to represent an oriented box.</summary>
            <param name="hx">the half-width.</param>
            <param name="hy">the half-height.</param>
            <param name="center">the center of the box in local coordinates.</param>
            <param name="angle">the rotation of the box in local coordinates.</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateRoundedRectangle(System.Single,System.Single,System.Single,System.Single,System.Int32)">
            <summary>Creates a rounded rectangle with the specified width and height.</summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="xRadius">The rounding X radius.</param>
            <param name="yRadius">The rounding Y radius.</param>
            <param name="segments">The number of segments to subdivide the edges.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateLine(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Set this as a single edge.</summary>
            <param name="start">The first point.</param>
            <param name="end">The second point.</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateCircle(System.Single,System.Int32)">
            <summary>Creates a circle with the specified radius and number of edges.</summary>
            <param name="radius">The radius.</param>
            <param name="numberOfEdges">The number of edges. The more edges, the more it resembles a circle</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateEllipse(System.Single,System.Single,System.Int32)">
            <summary>Creates a ellipse with the specified width, height and number of edges.</summary>
            <param name="xRadius">Width of the ellipse.</param>
            <param name="yRadius">Height of the ellipse.</param>
            <param name="numberOfEdges">The number of edges. The more edges, the more it resembles an ellipse</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateArc(System.Single,System.Int32,System.Single)">
            <summary>
                Creates the arc using the specified radians
            </summary>
            <param name="radians">The radians</param>
            <param name="sides">The sides</param>
            <param name="radius">The radius</param>
            <returns>The vertices</returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateCapsule(System.Single,System.Single,System.Int32)">
            <summary>
                Creates an capsule with the specified height, radius and number of edges. A capsule has the same form as a
                pill capsule.
            </summary>
            <param name="height">Height (inner height + 2 * radius) of the capsule.</param>
            <param name="endRadius">Radius of the capsule ends.</param>
            <param name="edges">The number of edges of the capsule ends. The more edges, the more it resembles an capsule</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateCapsule(System.Single,System.Single,System.Int32,System.Single,System.Int32)">
            <summary>
                Creates an capsule with the specified  height, radius and number of edges. A capsule has the same form as a
                pill capsule.
            </summary>
            <param name="height">Height (inner height + radii) of the capsule.</param>
            <param name="topRadius">Radius of the top.</param>
            <param name="topEdges">The number of edges of the top. The more edges, the more it resembles an capsule</param>
            <param name="bottomRadius">Radius of bottom.</param>
            <param name="bottomEdges">The number of edges of the bottom. The more edges, the more it resembles an capsule</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreateGear(System.Single,System.Int32,System.Single,System.Single)">
            <summary>Creates a gear shape with the specified radius and number of teeth.</summary>
            <param name="radius">The radius.</param>
            <param name="numberOfTeeth">The number of teeth.</param>
            <param name="tipPercentage">The tip percentage.</param>
            <param name="toothHeight">Height of the tooth.</param>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreatePolygon(System.UInt32[],System.Int32)">
            <summary>Detects the vertices by analyzing the texture data.</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreatePolygon(System.UInt32[],System.Int32,System.Boolean)">
            <summary>Detects the vertices by analyzing the texture data.</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Physic.Utilities.Polygon.CreatePolygon(System.UInt32[],System.Int32,System.Single,System.Byte,System.Boolean,System.Boolean)">
            <summary>Detects the vertices by analyzing the texture data.</summary>
            <param name="data">The texture data.</param>
            <param name="width">The texture width.</param>
            <param name="hullTolerance">The hull tolerance.</param>
            <param name="alphaTolerance">The alpha tolerance.</param>
            <param name="multiPartDetection">if set to <c>true</c> it will perform multi part detection.</param>
            <param name="holeDetection">if set to <c>true</c> it will perform hole detection.</param>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Physic.World">
            <summary>The world class manages all physics entities, dynamic simulation, and asynchronous queries.</summary>
        </member>
        <member name="F:Alis.Core.Physic.World.island">
            <summary>
                The island
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.#ctor(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Physic.World" /> class
            </summary>
            <param name="gravity">The gravity</param>
        </member>
        <member name="P:Alis.Core.Physic.World.BreakableBodies">
            <summary>
                The breakable body
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.Gravity">
            <summary>
                Gets the value of the gravity
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.Bodies">
            <summary>
                Gets or sets the value of the bodies
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.Joints">
            <summary>
                Gets or sets the value of the joints
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.Controllers">
            <summary>
                Gets the value of the controllers
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.ContactManager">
            <summary>
                Gets or sets the value of the contact manager
            </summary>
        </member>
        <member name="P:Alis.Core.Physic.World.TimeStepGlobal">
            <summary>
                Gets or sets the value of the step
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.AddBody(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Adds the body using the specified body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:Alis.Core.Physic.World.RemoveBody(Alis.Core.Physic.Dynamics.Body)">
            <summary>
                Removes the body using the specified body
            </summary>
            <param name="body">The body</param>
        </member>
        <member name="M:Alis.Core.Physic.World.AddBreakableBody(Alis.Core.Physic.Dynamics.BreakableBody)">
            <summary>
                Adds the breakable body using the specified breakable body
            </summary>
            <param name="breakableBody">The breakable body</param>
        </member>
        <member name="M:Alis.Core.Physic.World.RemoveBreakableBody(Alis.Core.Physic.Dynamics.BreakableBody)">
            <summary>
                Removes the breakable body using the specified breakable body
            </summary>
            <param name="breakableBody">The breakable body</param>
        </member>
        <member name="M:Alis.Core.Physic.World.AddJoint(Alis.Core.Physic.Dynamics.Joints.Joint)">
            <summary>
                Adds the joint using the specified joint
            </summary>
            <param name="joint">The joint</param>
        </member>
        <member name="M:Alis.Core.Physic.World.RemoveJoint(Alis.Core.Physic.Dynamics.Joints.Joint)">
            <summary>
                Removes the joint using the specified joint
            </summary>
            <param name="joint">The joint</param>
        </member>
        <member name="M:Alis.Core.Physic.World.AddController(Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller)">
            <summary>
                Adds the controller using the specified controller
            </summary>
            <param name="controller">The controller</param>
        </member>
        <member name="M:Alis.Core.Physic.World.RemoveController(Alis.Core.Physic.Extensions.Controllers.ControllerBase.Controller)">
            <summary>
                Removes the controller using the specified controller
            </summary>
            <param name="controller">The controller</param>
        </member>
        <member name="M:Alis.Core.Physic.World.Step(System.Single,System.Int32,System.Int32)">
            <summary>
                Steps the dt
            </summary>
            <param name="dt">The dt</param>
            <param name="velocityIterations">The velocity iterations</param>
            <param name="positionIterations">The position iterations</param>
        </member>
        <member name="M:Alis.Core.Physic.World.FindNewContacts">
            <summary>
                Finds the new contacts
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.UpdateTimeStep(System.Single,System.Int32,System.Int32)">
            <summary>
                Updates the time step using the specified dt
            </summary>
            <param name="dt">The dt</param>
            <param name="velocityIterations">The velocity iterations</param>
            <param name="positionIterations">The position iterations</param>
        </member>
        <member name="M:Alis.Core.Physic.World.UpdateControllers(System.Single)">
            <summary>
                Updates the controllers using the specified dt
            </summary>
            <param name="dt">The dt</param>
        </member>
        <member name="M:Alis.Core.Physic.World.CollideContacts">
            <summary>
                Collides the contacts
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.UpdateInvertedDeltaTime">
            <summary>
                Updates the inverted delta time using the specified dt
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.UpdateBreakableBodies">
            <summary>
                Updates the breakable bodies
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.Solve">
            <summary>
                Solves the step
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.SolveToi">
            <summary>
                Solves the toi
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.SetAlphaToZeroForFastMovingBodies">
            <summary>
                Sets the alpha to zero for fast moving bodies
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.InvalidateContactToi">
            <summary>
                Invalidates the contact to is
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.SolveToiEvents">
            <summary>
                Solves the TOI (Time of Impact) events.
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.IsMinAlphaGreaterThanEpsilon(System.Single)">
            <summary>
                Describes whether this instance is min alpha greater than epsilon
            </summary>
            <param name="minAlpha">The min alpha</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Physic.World.SolveToiIsland(System.Single,System.Int32,System.Int32)">
            <summary>
                Solves the toi island using the specified min alpha
            </summary>
            <param name="minAlpha">The min alpha</param>
            <param name="islandIndexA">The island index</param>
            <param name="islandIndexB">The island index</param>
        </member>
        <member name="M:Alis.Core.Physic.World.SynchronizeIslandBodies">
            <summary>
                Synchronizes the island bodies
            </summary>
        </member>
        <member name="M:Alis.Core.Physic.World.ClearForces">
            <summary>
                Clear all forces
            </summary>
        </member>
        <member name="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve">
            <summary>
                Contains a collection of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> points in 2D space and provides methods for evaluating
                features of the curve they define.
            </summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.#ctor">
            <summary>Constructs a curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.IsConstant">
            <summary>Returns <c>true</c> if this curve is constant (has zero or one points); <c>false</c> otherwise.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.PreLoop">
            <summary>Defines how to handle weighting values that are less than the first control point in the curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.PostLoop">
            <summary>Defines how to handle weighting values that are greater than the last control point in the curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.Keys">
            <summary>The collection of curve keys.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.Clone">
            <summary>Creates a copy of this curve.</summary>
            <returns>A copy of this curve.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.Evaluate(System.Single)">
            <summary>
            Evaluate the value at a position of this <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" />.
            </summary>
            <param name="position">The position on this <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" />.</param>
            <returns>Value at the position on this <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" />.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.HandlePositionBeforeCurve(System.Single,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>
            Handles the position before curve using the specified position
            </summary>
            <param name="position">The position</param>
            <param name="first">The first</param>
            <param name="last">The last</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.HandlePositionAfterCurve(System.Single,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>
            Handles the position after curve using the specified position
            </summary>
            <param name="position">The position</param>
            <param name="first">The first</param>
            <param name="last">The last</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.HandleLooping(System.Single,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,System.Int32)">
            <summary>
            Handles the looping using the specified virtual pos
            </summary>
            <param name="virtualPos">The virtual pos</param>
            <param name="first">The first</param>
            <param name="last">The last</param>
            <param name="cycle">The cycle</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.ComputeTangents(Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent)">
            <summary>Computes tangents for all keys in the collection.</summary>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.ComputeTangents(Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent,Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent)">
            <summary>Computes tangents for all keys in the collection.</summary>
            <param name="tangentInType">The tangent in-type. <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentIn" /> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentOut" /> for more details.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.ComputeTangent(System.Int32,Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent)">
            <summary>Computes tangent for the specific key in the collection.</summary>
            <param name="keyIndex">The index of a key in the collection.</param>
            <param name="tangentType">The tangent type for both in and out.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.ComputeTangent(System.Int32,Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent,Alis.Core.Physic.Extensions.Controllers.Wind.Curve.CurveTangent)">
            <summary>Computes tangent for the specific key in the collection.</summary>
            <param name="keyIndex">The index of key in the collection.</param>
            <param name="tangentInType">The tangent in-type. <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentIn" /> for more details.</param>
            <param name="tangentOutType">The tangent out-type. <see cref="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentOut" /> for more details.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.GetNumberOfCycle(System.Single)">
            <summary>
                Gets the number of cycle using the specified position
            </summary>
            <param name="position">The position</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve.GetCurvePosition(System.Single)">
            <summary>
                Gets the curve position using the specified position
            </summary>
            <param name="position">The position</param>
            <returns>The float</returns>
        </member>
        <member name="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveContinuity">
            <summary>Defines the continuity of keys on a <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" />.</summary>
        </member>
        <member name="F:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveContinuity.Smooth">
            <summary>Interpolation can be used between this key and the next.</summary>
        </member>
        <member name="F:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveContinuity.Step">
            <summary>Interpolation cannot be used. A position between the two points returns this point.</summary>
        </member>
        <member name="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey">
            <summary>Key point on the <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" />.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.#ctor">
            <summary>Creates a new instance of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> class with position: 0 and value: 0.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.#ctor(System.Single,System.Single)">
            <summary>Creates a new instance of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> class.</summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a new instance of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> class.</summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.#ctor(System.Single,System.Single,System.Single,System.Single,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveContinuity)">
            <summary>Creates a new instance of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> class.</summary>
            <param name="position">Position on the curve.</param>
            <param name="value">Value of the control point.</param>
            <param name="tangentIn">Tangent approaching point from the previous point on the curve.</param>
            <param name="tangentOut">Tangent leaving point toward next point on the curve.</param>
            <param name="continuity">Indicates whether the curve is discrete or continuous.</param>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Continuity">
            <summary>
                Gets or sets the indicator whether the segment between this point and the next point on the curve is discrete
                or continuous.
            </summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Position">
            <summary>Gets a position of the key on the curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentIn">
            <summary>Gets or sets a tangent when approaching this point from the previous point on the curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.TangentOut">
            <summary>Gets or sets a tangent when leaving this point to the next point on the curve.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Value">
            <summary>Gets a value of this point.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.CompareTo(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>
                Compares the to using the specified other
            </summary>
            <param name="other">The other</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Equals(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.op_Inequality(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Compares whether two <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instances are not equal.</summary>
            <param name="value1"><see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instance on the left of the not equal sign.</param>
            <param name="value2"><see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instance on the right of the not equal sign.</param>
            <returns><c>true</c> if the instances are not equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.op_Equality(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey,Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Compares whether two <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instances are equal.</summary>
            <param name="value1"><see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instance on the left of the equal sign.</param>
            <param name="value2"><see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> instance on the right of the equal sign.</param>
            <returns><c>true</c> if the instances are equal; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Clone">
            <summary>Creates a copy of this key.</summary>
            <returns>A copy of this key.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.Equals(System.Object)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey.GetHashCode">
            <summary>
                Gets the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection">
            <summary>The collection of the <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> elements and a part of the <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.Curve" /> class.</summary>
        </member>
        <member name="F:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.keys">
            <summary>
                The keys
            </summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.#ctor">
            <summary>Creates a new instance of <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection" /> class.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Item(System.Int32)">
            <summary>Indexer.</summary>
            <param name="index">The index of key in this collection.</param>
            <returns><see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey" /> at <paramref name="index" /> position.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Gets the enumerator
            </summary>
            <returns>The enumerator</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Add(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Adds a key to this collection.</summary>
            <param name="item">New key for the collection.</param>
            <exception cref="T:System.ArgumentNullException">Throws if <paramref name="item" /> is null.</exception>
            <remarks>The new key would be added respectively to a position of that key and the position of other keys.</remarks>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Clear">
            <summary>Removes all keys from this collection.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Contains(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Determines whether this collection contains a specific key.</summary>
            <param name="item">The key to locate in this collection.</param>
            <returns><c>true</c> if the key is found; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.CopyTo(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey[],System.Int32)">
            <summary>Copies the keys of this collection to an array, starting at the array index provided.</summary>
            <param name="array">Destination array where elements will be copied.</param>
            <param name="arrayIndex">The zero-based index in the array to start copying from.</param>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the collection.</summary>
            <returns>An enumerator for the <see cref="T:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection" />.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Remove(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Removes specific element.</summary>
            <param name="item">The element</param>
            <returns>
                <c>true</c> if item is successfully removed; <c>false</c> otherwise. This method also returns <c>false</c> if
                item was not found.
            </returns>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Count">
            <summary>Returns the count of keys in this collection.</summary>
        </member>
        <member name="P:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.IsReadOnly">
            <summary>Returns false because it is not a read-only collection.</summary>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.Clone">
            <summary>Creates a copy of this collection.</summary>
            <returns>A copy of this collection.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.IndexOf(Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKey)">
            <summary>Finds element in the collection and returns its index.</summary>
            <param name="item">Element for the search.</param>
            <returns>Index of the element; or -1 if item is not found.</returns>
        </member>
        <member name="M:Alis.Core.Systems.Physics2D.Config.Extensions.Controllers.Wind.Curve.CurveKeyCollection.RemoveAt(System.Int32)">
            <summary>Removes element at the specified index.</summary>
            <param name="index">The index which element will be removed.</param>
        </member>
        <member name="T:Alis.Core.Plugin.IPlugin">
            <summary>
                The plugin interface
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.IPlugin.Initialize">
            <summary>
                Initializes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.IPlugin.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.IPlugin.Render">
            <summary>
                Renders this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.IPlugin.Shutdown">
            <summary>
                Shutdowns this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Plugin.PluginManager">
            <summary>
                The plugin manager class
            </summary>
            <seealso cref="T:System.IDisposable" />
        </member>
        <member name="F:Alis.Core.Plugin.PluginManager.loadedAssemblies">
            <summary>
                The loaded assemblies
            </summary>
        </member>
        <member name="F:Alis.Core.Plugin.PluginManager.loadedPlugins">
            <summary>
                The loaded plugins
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Plugin.PluginManager" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.Dispose">
            <summary>
                Disposes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.LoadPlugins(System.String)">
            <summary>
                Loads the plugins using the specified plugins directory
            </summary>
            <param name="pluginsDirectory">The plugins directory</param>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.GetPlatformFolder">
            <summary>
                Gets the platform folder
            </summary>
            <exception cref="T:System.NotSupportedException">Unsupported platform. Plugins will not be loaded.</exception>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.ValidatePluginsDirectory(System.String)">
            <summary>
                Validates the plugins directory using the specified directory
            </summary>
            <param name="directory">The directory</param>
            <exception cref="T:System.IO.DirectoryNotFoundException">Plugins directory '{directory}' does not exist.</exception>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.GetPluginFiles(System.String)">
            <summary>
                Gets the plugin files using the specified directory
            </summary>
            <param name="directory">The directory</param>
            <returns>The string array</returns>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.LoadPluginFromFile(System.String)">
            <summary>
                Loads the plugin from file using the specified plugin file
            </summary>
            <param name="pluginFile">The plugin file</param>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.IsPluginFile(System.String)">
            <summary>
                Describes whether this instance is plugin file
            </summary>
            <param name="filePath">The file path</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.UnloadPlugins">
            <summary>
                Unloads the plugins
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.IsRunningOniOS">
            <summary>
                Describes whether this instance is running oni os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.IsRunningOnAndroid">
            <summary>
                Describes whether this instance is running on android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.Initialize">
            <summary>
                Initializes this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.Update">
            <summary>
                Updates this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.Render">
            <summary>
                Renders this instance
            </summary>
        </member>
        <member name="M:Alis.Core.Plugin.PluginManager.Shutdown">
            <summary>
                Shutdowns this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.AlisObject">
            <summary>
                The object base class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Name">
            <summary>
                The name
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.Tag">
            <summary>
                The tag
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Base.AlisObject.IsActive">
            <summary>
                Gets or sets the value of the is active
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode(System.Object)">
            <summary>
                The object base class
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.Equals(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.GetHashCode">
            <summary>
                Get hash code
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.AlisObject.ToString">
            <summary>
                To string
            </summary>
            <returns></returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Attributes.SuppressUnmanagedCodeSecurityAttribute">
            <summary>Allows managed code to call into unmanaged code without a stack walk. This class cannot be inherited.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass">
            <summary>
                The embedded dll class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.ExtractEmbeddedDlls(System.String,System.Collections.Generic.Dictionary{System.ValueTuple{System.Runtime.InteropServices.OSPlatform,System.Runtime.InteropServices.Architecture},System.String},System.Reflection.Assembly)">
            <summary>
            Extracts the embedded dlls using the specified dll name
            </summary>
            <param name="dllName">The dll name</param>
            <param name="dllBytes">The dll bytes</param>
            <param name="assembly">The assembly</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.GetDllExtension">
            <summary>
                Gets the dll extension
            </summary>
            <exception cref="T:System.PlatformNotSupportedException">Unsupported platform.</exception>
            <returns>The string</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.GetCurrentPlatform">
            <summary>
                Gets the platform
            </summary>
            <exception cref="T:System.PlatformNotSupportedException">Unsupported platform.</exception>
            <returns>The os platform</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.ExtractZipFile(System.String,System.String,System.IO.MemoryStream)">
            <summary>
            Extracts the zip file using the specified file path
            </summary>
            <param name="filePath">The file path</param>
            <param name="fileName">The file name</param>
            <param name="zipData">The zip data</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.LoadResource(System.String,System.Reflection.Assembly)">
            <summary>
            Loads the resource using the specified resource name
            </summary>
            <param name="resourceName">The resource name</param>
            <param name="assembly">The assembly</param>
            <returns>The memory stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsRunningOniOS">
            <summary>
                Describes whether is running oni os
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsRunningOnAndroid">
            <summary>
                Describes whether is running on android
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsiOsSpecificConditionMet">
            <summary>
                Describes whether isi os specific condition met
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Dll.EmbeddedDllClass.IsAndroidSpecificConditionMet">
            <summary>
                Describes whether is android specific condition met
            </summary>
            <returns>The bool</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException">
            <summary>
                Exception thrown by SFML whenever loading a resource fails
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor">
            <summary>
                Default constructor (unknown error)
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.Exception)">
            <summary>
                Failure to load a resource from memory
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.LoadingFailedException.#ctor(System.String,System.String,System.Exception)">
            <summary>
                Failure to load a resource from a file
            </summary>
            <param name="resourceName">Name of the resource</param>
            <param name="filename">Path of the file</param>
            <param name="innerException">Exception which is the cause ofthe current exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Exceptions.PointOnEdgeException">
            <summary>
                The point on edge exception class
            </summary>
            <seealso cref="T:System.NotImplementedException" />
        </member>
        <member name="M:Alis.Core.Aspect.Base.Exceptions.PointOnEdgeException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Base.Exceptions.PointOnEdgeException" /> class
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Mapping.Button">
            <summary>
                The button enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.A">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.B">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.Y">
            <summary>
                The  button
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Button.X">
            <summary>
                The  button
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Mapping.Key">
            <summary>
                The key enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Unknown">
            <summary>Unhandled key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.A">
            <summary>The A key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.B">
            <summary>The B key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.C">
            <summary>The C key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.D">
            <summary>The D key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.E">
            <summary>The E key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F">
            <summary>The F key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.G">
            <summary>The G key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.H">
            <summary>The H key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.I">
            <summary>The I key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.J">
            <summary>The J key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.K">
            <summary>The K key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.L">
            <summary>The L key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.M">
            <summary>The M key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.N">
            <summary>The N key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.O">
            <summary>The O key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.P">
            <summary>The P key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Q">
            <summary>The Q key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.R">
            <summary>The R key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.S">
            <summary>The S key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.T">
            <summary>The T key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.U">
            <summary>The U key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.V">
            <summary>The V key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.W">
            <summary>The W key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.X">
            <summary>The X key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Y">
            <summary>The Y key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Z">
            <summary>The Z key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num0">
            <summary>The 0 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num1">
            <summary>The 1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num2">
            <summary>The 2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num3">
            <summary>The 3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num4">
            <summary>The 4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num5">
            <summary>The 5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num6">
            <summary>The 6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num7">
            <summary>The 7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num8">
            <summary>The 8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Num9">
            <summary>The 9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Escape">
            <summary>The Escape key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LControl">
            <summary>The left Control key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LShift">
            <summary>The left Shift key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LAlt">
            <summary>The left Alt key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LSystem">
            <summary>The left OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RControl">
            <summary>The right Control key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RShift">
            <summary>The right Shift key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RAlt">
            <summary>The right Alt key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RSystem">
            <summary>The right OS specific key: window (Windows and Linux), apple (MacOS X), ...</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Menu">
            <summary>The Menu key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.LBracket">
            <summary>The [ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.RBracket">
            <summary>The ] key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Semicolon">
            <summary>The ; key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Comma">
            <summary>The , key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Period">
            <summary>The . key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Quote">
            <summary>The ' key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Slash">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Backslash">
            <summary>The \ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Tilde">
            <summary>The ~ key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Equal">
            <summary>The = key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Hyphen">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Space">
            <summary>The Space key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Enter">
            <summary>The Return key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Backspace">
            <summary>The Backspace key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Tab">
            <summary>The Tabulation key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.PageUp">
            <summary>The Page up key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.PageDown">
            <summary>The Page down key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.End">
            <summary>The End key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Home">
            <summary>The Home key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Insert">
            <summary>The Insert key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Delete">
            <summary>The Delete key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Add">
            <summary>The + key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Subtract">
            <summary>The - key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Multiply">
            <summary>The * key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Divide">
            <summary>The / key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Left">
            <summary>Left arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Right">
            <summary>Right arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Up">
            <summary>Up arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Down">
            <summary>Down arrow</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad0">
            <summary>The numpad 0 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad1">
            <summary>The numpad 1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad2">
            <summary>The numpad 2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad3">
            <summary>The numpad 3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad4">
            <summary>The numpad 4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad5">
            <summary>The numpad 5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad6">
            <summary>The numpad 6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad7">
            <summary>The numpad 7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad8">
            <summary>The numpad 8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Numpad9">
            <summary>The numpad 9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F1">
            <summary>The F1 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F2">
            <summary>The F2 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F3">
            <summary>The F3 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F4">
            <summary>The F4 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F5">
            <summary>The F5 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F6">
            <summary>The F6 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F7">
            <summary>The F7 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F8">
            <summary>The F8 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F9">
            <summary>The F9 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F10">
            <summary>The F10 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F11">
            <summary>The F11 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F12">
            <summary>The F12 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F13">
            <summary>The F13 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F14">
            <summary>The F14 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.F15">
            <summary>The F15 key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.Pause">
            <summary>The Pause key</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Mapping.Key.KeyCount">
            <summary>The total number of keyboard keys</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Base.Settings.Csfml">
            <summary>
                The csfml class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Audio">
            <summary>
                The audio
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Graphics">
            <summary>
                The graphics
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.System">
            <summary>
                The system
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Base.Settings.Csfml.Window">
            <summary>
                The window
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Data.AssetManager">
            <summary>
                The example class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Data.AssetManager.AssetPath">
            <summary>
                The application data
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.#cctor">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Data.AssetManager" /> class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Data.AssetManager.Find(System.String)">
            <summary>
                Finds the asset name
            </summary>
            <param name="assetName">The asset name</param>
            <returns>The string</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuild`1">
            <summary>
                The build interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuild`1.Build">
            <summary>
                Builds this instance
            </summary>
            <returns>The origin</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.IBuilder`1">
            <summary>
                The builder interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.IBuilder`1.Builder">
            <summary>
                Builders
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAdd`3">
            <summary>
                The add interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAdd`3.Add``1(`2)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2">
            <summary>
                The add animation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddAnimation`2.AddAnimation(`1)">
            <summary>
                Adds the animation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddComponent`2">
            <summary>
                The add component class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(System.Func{``0,`1})">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddComponent`2.AddComponent``1(``0)">
            <summary>
                Adds the component using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAddFrame`2">
            <summary>
                The add frame interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAddFrame`2.AddFrame(`1)">
            <summary>
                Adds the frame using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2">
            <summary>
                The angular velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAngularVelocity`2.AngularVelocity(`1)">
            <summary>
                Angular the velocity using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAudio`2">
            <summary>
                The audio interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAudio`2.Audio(`1)">
            <summary>
                Audioes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAuthor`2">
            <summary>
                The author interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAuthor`2.Author(`1)">
            <summary>
                Authors the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2">
            <summary>
                The auto tilling interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IAutoTilling`2.AutoTilling(`1)">
            <summary>
                Autoes the tilling using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBackground`2">
            <summary>
                The background interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBackground`2.Background(`1)">
            <summary>
                Backgrounds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IBodyType`2">
            <summary>
                The body type interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IBodyType`2.BodyType(`1)">
            <summary>
                Bodies the type using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IConfiguration`2">
            <summary>
                The configuration interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IConfiguration`2.Configuration(`1)">
            <summary>
                Configurations the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ICreate`2">
            <summary>
                The create interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ICreate`2.Create(`1)">
            <summary>
                Creates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDebug`2">
            <summary>
                The debug interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDebug`2.Debug(`1)">
            <summary>
                Debugs the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDelete`1">
            <summary>
                The delete interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDelete`1.Delete">
            <summary>
                Deletes this instance
            </summary>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDensity`2">
            <summary>
                The density interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDensity`2.Density(`1)">
            <summary>
                Densities the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDepth`2">
            <summary>
                The depth interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDepth`2.Depth(`1)">
            <summary>
                Depths the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IDescription`2">
            <summary>
                The description interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IDescription`2.Description(`1)">
            <summary>
                Descriptions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFile`2">
            <summary>
                The file interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFile`2.File(`1)">
            <summary>
                Files the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFilePath`2">
            <summary>
                The file path interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFilePath`2.FilePath(`1)">
            <summary>
                Files the path using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2">
            <summary>
                The fixed rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFixedRotation`2.FixedRotation(`1)">
            <summary>
                Fixeds the rotation using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IFriction`2">
            <summary>
                The friction interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IFriction`2.Friction(`1)">
            <summary>
                Frictions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGeneral`2">
            <summary>
                The general interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGeneral`2.General(`1)">
            <summary>
                Generals the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGraphic`2">
            <summary>
                The graphic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGraphic`2.Graphic(`1)">
            <summary>
                Graphics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravity`3">
            <summary>
                The gravity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravity`3.Gravity(`1,`2)">
            <summary>
                Gravities the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IGravityScale`2">
            <summary>
                The gravity scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IGravityScale`2.GravityScale(`1)">
            <summary>
                Gravities the scale using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IHas`2">
            <summary>
                The has interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IHas`2.Has(`1)">
            <summary>
                Hases the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIcon`2">
            <summary>
                The icon interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIcon`2.Icon(`1)">
            <summary>
                Icons the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIs`3">
            <summary>
                The is interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIs`3.Is``1(`2)">
            <summary>
                Ises the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsActive`2">
            <summary>
                The is active interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsActive`2.IsActive(`1)">
            <summary>
                Ises the active using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2">
            <summary>
                The is dynamic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic">
            <summary>
                Ises the dynamic
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsDynamic`2.IsDynamic(`1)">
            <summary>
                Ises the dynamic using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsStatic`2">
            <summary>
                The is static interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic">
            <summary>
                Ises the static
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsStatic`2.IsStatic(`1)">
            <summary>
                Ises the static using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2">
            <summary>
                The is trigger interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger">
            <summary>
                Ises the trigger
            </summary>
            <returns>The builder</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IIsTrigger`2.IsTrigger(`1)">
            <summary>
                Ises the trigger using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3">
            <summary>
                The linear velocity interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ILinearVelocity`3.LinearVelocity(`1,`2)">
            <summary>
                Linears the velocity using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManager`3">
            <summary>
                The manager interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManager`3.Manager``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IManagerOf`3">
            <summary>
                The manager of interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IManagerOf`3.ManagerOf``1(`2)">
            <summary>
                Managers the of using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMass`2">
            <summary>
                The mass interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMass`2.Mass(`1)">
            <summary>
                Masses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IMute`2">
            <summary>
                The mute interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IMute`2.Mute(`1)">
            <summary>
                Mutes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IName`2">
            <summary>
                The name interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IName`2.Name(`1)">
            <summary>
                Names the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IOrder`2">
            <summary>
                The order interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IOrder`2.Order(`1)">
            <summary>
                Orders the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPhysic`2">
            <summary>
                The physic interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPhysic`2.Physic(`1)">
            <summary>
                Physics the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2">
            <summary>
                The play on awake interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPlayOnAwake`2.PlayOnAwake(`1)">
            <summary>
                Plays the on awake using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IPosition2D`3">
            <summary>
                The position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IPosition2D`3.Position(`1,`2)">
            <summary>
                Positions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3">
            <summary>
                The relative position interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRelativePosition`3.RelativePosition(`1,`2)">
            <summary>
                Relatives the position using the specified x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IResolution`3">
            <summary>
                The resolution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IResolution`3.Resolution(`1,`2)">
            <summary>
                Resolutions the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRestitution`2">
            <summary>
                The restitution interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRestitution`2.Restitution(`1)">
            <summary>
                Restitutions the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRotation`2">
            <summary>
                The rotation interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRotation`2.Rotation(`1)">
            <summary>
                Rotations the angle
            </summary>
            <param name="angle">The angle</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IRun">
            <summary>
                The run interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IRun.Run">
            <summary>
                Runs this instance
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScale2D`3">
            <summary>
                The scale interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScale2D`3.Scale(`1,`2)">
            <summary>
                Scales the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IScreenMode`2">
            <summary>
                The screen mode interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IScreenMode`2.ScreenMode(`1)">
            <summary>
                Screens the mode using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISet`3">
            <summary>
                The set interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISet`3.Set``1(`2)">
            <summary>
                Sets the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2">
            <summary>
                The set audio clip interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetAudioClip`2.SetAudioClip(`1)">
            <summary>
                Sets the audio clip using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetMax`3">
            <summary>
                The set max interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetMax`3.SetMax``1(`2)">
            <summary>
                Sets the max using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISetTexture`2">
            <summary>
                The texture interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISetTexture`2.SetTexture(`1)">
            <summary>
                Textures the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISettings`2">
            <summary>
                The settings interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISettings`2.Settings(`1)">
            <summary>
                Settingses the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISize`3">
            <summary>
                The size interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISize`3.Size(`1,`2)">
            <summary>
                Sizes the x
            </summary>
            <param name="x">The </param>
            <param name="y">The </param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISpeed`2">
            <summary>
                The speed interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISpeed`2.Speed(`1)">
            <summary>
                Speeds the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2">
            <summary>
                The splash screen interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ISplashScreen`2.SplashScreen(`1)">
            <summary>
                Splashes the screen using the specified value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IStyle`2">
            <summary>
                The style interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IStyle`2.Style(`1)">
            <summary>
                Styles the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITime`2">
            <summary>
                The time interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITime`2.Time(`1)">
            <summary>
                Times the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.ITransform`2">
            <summary>
                The transform interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.ITransform`2.Transform(`1)">
            <summary>
                Transforms the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IUpdate`2">
            <summary>
                The update interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IUpdate`2.Update(`1)">
            <summary>
                Updates the obj
            </summary>
            <param name="obj">The obj</param>
            <returns>The</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IVolume`2">
            <summary>
                The volume interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IVolume`2.Volume(`1)">
            <summary>
                Volumes the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWhere`2">
            <summary>
                The where interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWhere`2.Where(`1)">
            <summary>Wheres the specified value.</summary>
            <param name="value">The value.</param>
            <returns>
                <br />
            </returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWindow`2">
            <summary>
                The window interface
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWindow`2.Window(`1)">
            <summary>
                Windows the value
            </summary>
            <param name="value">The value</param>
            <returns>The builder</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWith`3">
            <summary>
                Simple comment
            </summary>
            <typeparam name="TBuilder">the builder</typeparam>
            <typeparam name="TArgument">the argument</typeparam>
            <typeparam name="TType"></typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWith`3.With``1(`2)">
            <summary>Withes the specified value.</summary>
            <param name="value">The value.</param>
            <returns>Return that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithName`2">
            <summary>Define the word "Name" </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithName`2.WithName(`1)">
            <summary>Withes the name.</summary>
            <param name="value">The value.</param>
            <returns>Return the value that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Fluent.Words.IWithTag`2">
            <summary>
                Define the word "Tag"
            </summary>
            <typeparam name="TBuilder">The type of the uilder.</typeparam>
            <typeparam name="TArgument">The type of the rgument.</typeparam>
        </member>
        <member name="M:Alis.Core.Aspect.Fluent.Words.IWithTag`2.WithTag(`1)">
            <summary>Withes the tag.</summary>
            <param name="value">The value.</param>
            <returns>return the object that you want.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleController">
            <summary>
                The console controller class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleController.Print(Alis.Core.Aspect.Logging.Message)">
            <summary>
                Prints the to console using the specified message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.ConsoleLogConfig">
            <summary>
                The console log config class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.InfoMessageColor">
            <summary>
                Info text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.LogMessageColor">
            <summary>
                Log text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.TraceMessageColor">
            <summary>
                Trace text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.WarningMessageColor">
            <summary>
                Warning text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ErrorMessageColor">
            <summary>
                Error text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.ExceptionMessageColor">
            <summary>
                Exception text color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.ConsoleLogConfig.EventMessageColor">
            <summary>
                Event text color
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.ConsoleLogConfig.GetColorMessageByType(Alis.Core.Aspect.Logging.MessageType)">
            <summary>
                Gets the color message by type using the specified message type
            </summary>
            <param name="messageType">The message type</param>
            <exception cref="T:System.ArgumentOutOfRangeException">null</exception>
            <returns>The console color</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.FileController">
            <summary>
                The file controller class
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Logger">
            <summary>
                The logger class
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Logger.LogLevel">
            <summary>
                The normal
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace">
            <summary>
                Traces the message
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Trace(System.String)">
            <summary>
                Traces the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info">
            <summary>
                Info
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Info(System.String)">
            <summary>
                Info the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Log(System.String)">
            <summary>
                Logs the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event(System.String)">
            <summary>
                Events the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Event">
            <summary>
                Events
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Warning(System.String)">
            <summary>
                Warnings the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Error(System.String)">
            <summary>
                Errors the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.String)">
            <summary>
                Exceptions the message
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Logger.Exception(System.Exception)">
            <summary>
                Exceptions the exception
            </summary>
            <param name="exception">The exception</param>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.LogLevel">
            <summary>
                The log level enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Trace">
            <summary>
                The trace log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Info">
            <summary>
                The info log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Event">
            <summary>
                The event log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Log">
            <summary>
                The log log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Normal">
            <summary>
                The normal log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Warning">
            <summary>
                The warning log level
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.LogLevel.Critical">
            <summary>
                The critical log level
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.Message">
            <summary>
                The message class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Logging.Message.#ctor(Alis.Core.Aspect.Logging.MessageType,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Logging.Message" /> class
            </summary>
            <param name="messageType">The message type</param>
            <param name="content">The content</param>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.DateTime">
            <summary>
                Gets or sets the value of the date time
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.MessageType">
            <summary>
                Gets or sets the value of the message type
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Level">
            <summary>
                Gets or sets the value of the level
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Content">
            <summary>
                Gets or sets the value of the content
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.StackTrace">
            <summary>
                Gets or sets the value of the stack trace
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Method">
            <summary>
                Gets or sets the value of the method
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.File">
            <summary>
                Gets or sets the value of the file
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Logging.Message.Line">
            <summary>
                Gets or sets the value of the line
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Logging.MessageType">
            <summary>
                The message type enum
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Trace">
            <summary>
                The trace message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Info">
            <summary>
                The info message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Log">
            <summary>
                The log message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Event">
            <summary>
                The event message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Warning">
            <summary>
                The warning message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Error">
            <summary>
                The error message type
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Logging.MessageType.Exception">
            <summary>
                The exception message type
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Definition.Color">
            <summary>
            The color
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Definition.Color.R">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Definition.Color.G">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Definition.Color.B">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Definition.Color.A">
            <summary>
            The 
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Definition.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Definition.Color"/> class
            </summary>
            <param name="r">The </param>
            <param name="g">The </param>
            <param name="b">The </param>
            <param name="a">The </param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Definition.Color.Black">
            <summary>
            Gets the value of the black
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Definition.Depth">
            <summary>
            The depth
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Definition.Depth.Value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Definition.Depth.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Definition.Depth"/> class
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Definition.IDefinition">
            <summary>
            The definition interface
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.MathF">
            <summary>
                The math class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.E">
            <summary>Represents the natural logarithmic base, specified by the constant, <see langword="e" />.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.Pi">
            <summary>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, p.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.Tau">
            <summary>Represents the number of radians in one turn, specified by the constant, τ.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.MathF.MaxIterations">
            <summary>
                The max iterations
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Sqrt(System.Single)">
            <summary>
                Sqrts the x
            </summary>
            <param name="x">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Abs(System.Single)">
            <summary>
                Abses the value
            </summary>
            <param name="value">The value</param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Cos(System.Single)">
            <summary>
                Coses the x
            </summary>
            <param name="x">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Sin(System.Single)">
            <summary>
                Sins the x
            </summary>
            <param name="x">The </param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.MathF.Acos(System.Single)">
            <summary>
                Acoses the x
            </summary>
            <param name="x">The </param>
            <returns>The angle</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.CanonicalBasis">
            <summary>
                The canonical basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.CanonicalBasis.Row0">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.CanonicalBasis.Row1">
            <summary>
                The row
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.CanonicalBasis.Row2">
            <summary>
                The row
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix2X2F">
            <summary>
                A 2-by-2 matrix. Stored in column-major order.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ex">
            <summary>
                The col
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Ey">
            <summary>
                The col
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Construct this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct this matrix using scalars.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.#ctor(System.Single)">
            <summary>
                Construct this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initialize this matrix using columns.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Set(System.Single)">
            <summary>
                Initialize this matrix using an angle.
                This matrix becomes an orthonormal rotation matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetIdentity">
            <summary>
                Set this to the identity matrix.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.SetZero">
            <summary>
                Set this matrix to all zeros.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetAngle">
            <summary>
                Extract the angle from this matrix (assumed to be a rotation matrix).
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.GetInverse">
            <summary>
                Compute the inverse of this matrix, such that inv(A) * A = identity.
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Solve(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient
                than computing the inverse in one-shot cases.
            </summary>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Identity">
            <summary>
                Gets the value of the identity
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix2X2F,Alis.Core.Aspect.Math.Matrix.Matrix2X2F)">
            <summary>
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix2X2F.Inverse">
            <summary>
                Gets the value of the inverse
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3X2F">
            <summary>
                The matrix 3x class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.RotationEpsilon">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.hash">
            <summary>
                The hash
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.hashCode">
            <summary>
                The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 3x2 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>The multiplicative identify matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.IsIdentity">
            <summary>Gets a value that indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.GetHashCode">
            <summary>
                Gets the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Equals(Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="other">The other</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Equals(System.Object)">
            <summary>
                Describes whether this instance equals
            </summary>
            <param name="obj">The obj</param>
            <returns>The bool</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X2F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_Subtraction(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)" /> method defines the operation of the subtraction operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X2F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.op_UnaryNegation(Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Add(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix from the specified vector scale.</summary>
            <param name="scales">The scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(System.Single,System.Single)">
            <summary>Creates a scaling matrix from the specified X and Y components.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(System.Single,System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix that is offset by a given center point.</summary>
            <param name="xScale">The value to scale by on the X axis.</param>
            <param name="yScale">The value to scale by on the Y axis.</param>
            <param name="centerPoint">The center point.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a scaling matrix from the specified vector scale with an offset from the specified center point.</summary>
            <param name="scales">The scale to use.</param>
            <param name="centerPoint">The center offset.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(System.Single)">
            <summary>Creates a scaling matrix that scales uniformly with the given scale.</summary>
            <param name="scale">The uniform scale to use.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateScale(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Creates a scaling matrix that scales uniformly with the specified scale with an offset from the specified
                center.
            </summary>
            <param name="scale">The uniform scale to use.</param>
            <param name="centerPoint">The center offset.</param>
            <returns>The scaling matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateTranslation(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Creates a translation matrix from the specified 2-dimensional vector.</summary>
            <param name="position">The translation position.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.CreateTranslation(System.Single,System.Single)">
            <summary>Creates a translation matrix from the specified X and Y components.</summary>
            <param name="xPosition">The X position.</param>
            <param name="yPosition">The Y position.</param>
            <returns>The translation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Invert(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F@)">
            <summary>Tries to invert the specified matrix. The return value indicates whether the operation succeeded.</summary>
            <param name="matrix">The matrix to invert.</param>
            <param name="result">When this method returns, contains the inverted matrix if the operation succeeded.</param>
            <returns>
                <see langword="true" /> if <paramref name="matrix" /> was converted successfully; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Lerp(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F,System.Single)">
            <summary>
                Performs a linear interpolation from one matrix to a second matrix based on a value that specifies the
                weighting of the second matrix.
            </summary>
            <param name="matrix1">The first matrix.</param>
            <param name="matrix2">The second matrix.</param>
            <param name="amount">The relative weighting of <paramref name="matrix2" />.</param>
            <returns>The interpolated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Multiplies two matrices together to compute the product.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The product matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Multiply(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,System.Single)">
            <summary>Multiplies a matrix by a float to compute the product.</summary>
            <param name="value1">The matrix to scale.</param>
            <param name="value2">The scaling value to use.</param>
            <returns>The scaled matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Negate(Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Negates the specified matrix by multiplying all its values by -1.</summary>
            <param name="value">The matrix to negate.</param>
            <returns>The negated matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.Subtract(Alis.Core.Aspect.Math.Matrix.Matrix3X2F,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Subtracts each element in a second matrix from its corresponding element in a first matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>
                The matrix containing the values that result from subtracting each element in <paramref name="value2" /> from
                its corresponding element in <paramref name="value1" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.GetDeterminant">
            <summary>Calculates the determinant for this matrix.</summary>
            <returns>The determinant.</returns>
            <remarks>The determinant is calculated by expanding the matrix with a third column whose values are (0,0,1).</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X2F.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as
                <c>{ {M11:1.1 M12:1.2} {M21:2.1 M22:2.2} {M31:3.1 M32:3.2} }</c>.
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> is a struct representing a glsl mat3 value
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ex">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ey">
            <summary>
                The ez
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Ez">
            <summary>
                The ez
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Construct this matrix using columns.</summary>
            <param name="c1">The c1.</param>
            <param name="c2">The c2.</param>
            <param name="c3">The c3.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X3F" /> from its components
            </summary>
            <remarks>
                Arguments are in row-major order
            </remarks>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.array">
            <summary>
                The array
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve33(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Solve22(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Solve A * x = b, where b is a column vector. This is more efficient than computing the inverse in one-shot
                cases. Solve only the upper 2-by-2 matrix equation.
            </summary>
            <param name="b">The b.</param>
            <returns></returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetInverse22(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the inverse of this matrix as a 2-by-2.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.GetSymInverse33(Alis.Core.Aspect.Math.Matrix.Matrix3X3F@)">
            Get the symmetric inverse of this matrix as a 3-by-3.
            Returns the zero matrix if singular.
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Dot(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Dots the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The float</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix3X3F.Cross(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Crosses the a
            </summary>
            <param name="a">The </param>
            <param name="b">The </param>
            <returns>The vector</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F">
            <summary>
                The matrix
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.hash">
            <summary>
                The hash
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.hashCode">
            <summary>
                The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardEpsilon">
            <summary>
                The billboard epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.BillboardMinAngle">
            <summary>
                The pi
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.DecomposeEpsilon">
            <summary>
                The decompose epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M11">
            <summary>The first element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M12">
            <summary>The second element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13">
            <summary>The third element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14">
            <summary>The fourth element of the first row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M21">
            <summary>The first element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M22">
            <summary>The second element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23">
            <summary>The third element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24">
            <summary>The fourth element of the second row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31">
            <summary>The first element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32">
            <summary>The second element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33">
            <summary>The third element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34">
            <summary>The fourth element of the third row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M41">
            <summary>The first element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M42">
            <summary>The second element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43">
            <summary>The third element of the fourth row.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44">
            <summary>The fourth element of the fourth row.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a 4x4 matrix from the specified components.</summary>
            <param name="m11">The value to assign to the first element in the first row.</param>
            <param name="m12">The value to assign to the second element in the first row.</param>
            <param name="m13">The value to assign to the third element in the first row.</param>
            <param name="m14">The value to assign to the fourth element in the first row.</param>
            <param name="m21">The value to assign to the first element in the second row.</param>
            <param name="m22">The value to assign to the second element in the second row.</param>
            <param name="m23">The value to assign to the third element in the second row.</param>
            <param name="m24">The value to assign to the third element in the second row.</param>
            <param name="m31">The value to assign to the first element in the third row.</param>
            <param name="m32">The value to assign to the second element in the third row.</param>
            <param name="m33">The value to assign to the third element in the third row.</param>
            <param name="m34">The value to assign to the fourth element in the third row.</param>
            <param name="m41">The value to assign to the first element in the fourth row.</param>
            <param name="m42">The value to assign to the second element in the fourth row.</param>
            <param name="m43">The value to assign to the third element in the fourth row.</param>
            <param name="m44">The value to assign to the fourth element in the fourth row.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.#ctor(Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Creates a <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object from a specified <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix3X2F" /> object.</summary>
            <param name="value">A 3x2 matrix.</param>
            <remarks>
                This constructor creates a 4x4 matrix whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M13" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M14" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M23" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M24" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M31" />,
                <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M32" />, <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M34" />, and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M43" /> components are
                zero, and whose <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M33" /> and <see cref="F:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.M44" /> components are one.
            </remarks>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Identity">
            <summary>Gets the multiplicative identity matrix.</summary>
            <value>Gets the multiplicative identity matrix.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.IsIdentity">
            <summary>Indicates whether the current matrix is the identity matrix.</summary>
            <value><see langword="true" /> if the current matrix is the identity matrix; otherwise, <see langword="false" />.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Translation">
            <summary>Gets or sets the translation component of this matrix.</summary>
            <value>The translation component of the current instance.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateOrthographicOffCenter(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Creates a customized orthographic projection matrix.</summary>
            <param name="left">The minimum X-value of the view volume.</param>
            <param name="right">The maximum X-value of the view volume.</param>
            <param name="bottom">The minimum Y-value of the view volume.</param>
            <param name="top">The maximum Y-value of the view volume.</param>
            <param name="zNearPlane">The minimum Z-value of the view volume.</param>
            <param name="zFarPlane">The maximum Z-value of the view volume.</param>
            <returns>The orthographic projection matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Addition(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Equality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to care</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>Two matrices are equal if all their corresponding elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.op_Inequality(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether the specified matrices are not equal.</summary>
            <param name="value1">The first matrix to compare.</param>
            <param name="value2">The second matrix to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Add(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Adds each element in one matrix with its corresponding element in a second matrix.</summary>
            <param name="value1">The first matrix.</param>
            <param name="value2">The second matrix.</param>
            <returns>The matrix that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.CreateRotationZ(System.Single)">
            <summary>Creates a matrix for rotating points around the Z axis.</summary>
            <param name="radians">The amount, in radians, by which to rotate around the Z-axis.</param>
            <returns>The rotation matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Transform(Alis.Core.Aspect.Math.Matrix.Matrix4X4F,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms the specified matrix by applying the specified Quaternion rotation.</summary>
            <param name="value">The matrix to transform.</param>
            <param name="rotation">The rotation t apply.</param>
            <returns>The transformed matrix.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Matrix.Matrix4X4F" /> object and the corresponding elements of each matrix are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.Equals(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Returns a value that indicates whether this instance and another 4x4 matrix are equal.</summary>
            <param name="other">The other matrix.</param>
            <returns><see langword="true" /> if the two matrices are equal; otherwise, <see langword="false" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetDeterminant">
            <summary>Calculates the determinant of the current 4x4 matrix.</summary>
            <returns>The determinant.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Matrix.Matrix4X4F.ToString">
            <summary>Returns a string that represents this matrix.</summary>
            <returns>The string representation of this matrix.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as
                <c>
                    { {M11:1.1 M12:1.2 M13:1.3 M14:1.4} {M21:2.1 M22:2.2 M23:2.3 M24:2.4} {M31:3.1 M32:3.2 M33:3.3 M34:3.4}
                    {M41:4.1
                    M42:4.2 M43:4.3 M44:4.4} }
                </c>
                .
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Matrix.VectorBasis">
            <summary>
                The vector basis
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.VectorBasis.Element0">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.VectorBasis.Element1">
            <summary>
                The element
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Matrix.VectorBasis.Element2">
            <summary>
                The element
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Rotation">
            <summary>Rotation</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Sine">
            Sine and cosine
        </member>
        <member name="F:Alis.Core.Aspect.Math.Rotation.Cosine">
            Sine and cosine
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.#ctor(System.Single)">
            <summary>Initialize from an angle in radians</summary>
            <param name="angle">Angle in radians</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.Set(System.Single)">
            <summary>Set using an angle in radians.</summary>
            <param name="angle"></param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.SetIdentity">
            <summary>Set to the identity rotation</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetAngle">
            <summary>Get the angle in radians</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetXAxis">
            <summary>Get the x-axis</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Rotation.GetYAxis">
            <summary>Get the y-axis</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Circle.CircleF">
            <summary>
                The circle
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleF.x">
            <summary>
            The x
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleF.y">
            <summary>
            The y
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleF.r">
            <summary>
            The r
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Circle.CircleI">
            <summary>
                The circle
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleI.x">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleI.y">
            <summary>
            The 
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Circle.CircleI.r">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.IShape">
            <summary>
            The figure interface
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Line.LineF">
            <summary>
            The line
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineF.x1">
            <summary>
            The x1
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineF.y1">
            <summary>
            The y1
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineF.x2">
            <summary>
            The x2
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineF.y2">
            <summary>
            The y2
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Line.LineI">
            <summary>
            The line
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineI.x1">
            <summary>
            The x1
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineI.y1">
            <summary>
            The y1
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineI.x2">
            <summary>
            The x2
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Line.LineI.y2">
            <summary>
            The y2
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Point.PointF">
            <summary>
                The f point
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Point.PointF.x">
            <summary>
                The X
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Point.PointF.y">
            <summary>
                The Y
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Point.PointI">
            <summary>
                The sdl point
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Point.PointI.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Point.PointI.y">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF">
            <summary>
                The sdl f rect
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF.w">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleF.h">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI">
            <summary>
                The sdl rect
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI.w">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Rectangle.RectangleI.h">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Square.SquareF">
            <summary>
                The sdl f rect
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareF.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareF.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareF.w">
            <summary>
                The
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Figure.Square.SquareI">
            <summary>
                The sdl rect
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareI.x">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareI.y">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Figure.Square.SquareI.w">
            <summary>
            The 
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Transform">
            <summary>
                A transform contains translation and rotation. It is used to represent the position and orientation of rigid
                frames.
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Position">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Scale">
            <summary>
                The scale
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Transform.Rotation">
            <summary>
                The
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Rotation,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Transform" /> class
            </summary>
            <param name="position">The position</param>
            <param name="rotation">The rotation</param>
            <param name="scale">The scale</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.SetIdentity">
            <summary>Set this to the identity transform.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Transform.Set(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Set this based on the position and angle.</summary>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Constant">
            <summary>
                The math constants class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Epsilon">
            <summary>
                The epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Euler">
            <summary>
                The euler
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.E">
            <summary>Represents the mathematical constant e(2.71828175).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log10E">
            <summary>Represents the log base ten of e(0.4342945).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Log2E">
            <summary>Represents the log base two of e(1.442695).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Pi">
            <summary>Represents the value of pi(3.14159274).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver2">
            <summary>Represents the value of pi divided by two(1.57079637).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.PiOver4">
            <summary>Represents the value of pi divided by four(0.7853982).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.TwoPi">
            <summary>Represents the value of pi times two(6.28318548).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Constant.Tau">
            <summary>Represents the value of pi times two(6.28318548). This is an alias of TwoPi.</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.HashCode">
            <summary>
                The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.SSeed">
            <summary>
                The generate global seed
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime1">
            <summary>
                The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime2">
            <summary>
                The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime3">
            <summary>
                The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime4">
            <summary>
                The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode.Prime5">
            <summary>
                The prime
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v1">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v2">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v3">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._v4">
            <summary>
                The
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue1">
            <summary>
                The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue2">
            <summary>
                The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._queue3">
            <summary>
                The queue
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.HashCode._length">
            <summary>
                The length
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.GenerateGlobalSeed">
            <summary>
                Generates the global seed
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``1(``0)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <param name="value1">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``2(``0,``1)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``3(``0,``1,``2)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``4(``0,``1,``2,``3)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``5(``0,``1,``2,``3,``4)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``6(``0,``1,``2,``3,``4,``5)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <typeparam name="T7">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <param name="value7">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Combine``8(``0,``1,``2,``3,``4,``5,``6,``7)">
            <summary>
                Combines the value 1
            </summary>
            <typeparam name="T1">The </typeparam>
            <typeparam name="T2">The </typeparam>
            <typeparam name="T3">The </typeparam>
            <typeparam name="T4">The </typeparam>
            <typeparam name="T5">The </typeparam>
            <typeparam name="T6">The </typeparam>
            <typeparam name="T7">The </typeparam>
            <typeparam name="T8">The </typeparam>
            <param name="value1">The value</param>
            <param name="value2">The value</param>
            <param name="value3">The value</param>
            <param name="value4">The value</param>
            <param name="value5">The value</param>
            <param name="value6">The value</param>
            <param name="value7">The value</param>
            <param name="value8">The value</param>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Initialize(System.UInt32@,System.UInt32@,System.UInt32@,System.UInt32@)">
            <summary>
                Initializes the v 1
            </summary>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <param name="v3">The </param>
            <param name="v4">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Round(System.UInt32,System.UInt32)">
            <summary>
                Rounds the hash
            </summary>
            <param name="hash">The hash</param>
            <param name="input">The input</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.QueueRound(System.UInt32,System.UInt32)">
            <summary>
                Queues the round using the specified hash
            </summary>
            <param name="hash">The hash</param>
            <param name="queuedValue">The queued value</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixState(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
            <summary>
                Mixes the state using the specified v 1
            </summary>
            <param name="v1">The </param>
            <param name="v2">The </param>
            <param name="v3">The </param>
            <param name="v4">The </param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.RotateLeft(System.UInt32,System.Int32)">
            <summary>
                Rotates the left using the specified value
            </summary>
            <param name="value">The value</param>
            <param name="offset">The offset</param>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixEmptyState">
            <summary>
                Mixes the empty state
            </summary>
            <returns>The uint</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.MixFinal(System.UInt32)">
            <summary>
                Mixes the final using the specified hash
            </summary>
            <param name="hash">The hash</param>
            <returns>The hash</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add``1(``0)">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add``1(``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
                Adds the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <param name="comparer">The comparer</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.Add(System.Int32)">
            <summary>
                Adds the value
            </summary>
            <param name="value">The value</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.HashCode.ToHashCode">
            <summary>
                Returns the hash code
            </summary>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Helper">
            <summary>Contains commonly used precalculated values and mathematical operations.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Barycentric(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Returns the Cartesian coordinate for one axis of a point that is defined by a given triangle and two
                normalized barycentric (areal) coordinates.
            </summary>
            <param name="value1">The coordinate on one axis of vertex 1 of the defining triangle.</param>
            <param name="value2">The coordinate on the same axis of vertex 2 of the defining triangle.</param>
            <param name="value3">The coordinate on the same axis of vertex 3 of the defining triangle.</param>
            <param name="amount1">
                The normalized barycentric (areal) coordinate b2, equal to the weighting factor for vertex 2, the
                coordinate of which is specified in value2.
            </param>
            <param name="amount2">
                The normalized barycentric (areal) coordinate b3, equal to the weighting factor for vertex 3, the
                coordinate of which is specified in value3.
            </param>
            <returns>Cartesian coordinate of the specified point with respect to the axis being used.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.CatmullRom(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Catmull-Rom interpolation using the specified positions.</summary>
            <param name="value1">The first position in the interpolation.</param>
            <param name="value2">The second position in the interpolation.</param>
            <param name="value3">The third position in the interpolation.</param>
            <param name="value4">The fourth position in the interpolation.</param>
            <param name="amount">Weighting factor.</param>
            <returns>A position that is the result of the Catmull-Rom interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Single,System.Single,System.Single)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Clamp(System.Int32,System.Int32,System.Int32)">
            <summary>Restricts a value to be within a specified range.</summary>
            <param name="value">The value to clamp.</param>
            <param name="min">The minimum value. If <c>value</c> is less than <c>min</c>, <c>min</c> will be returned.</param>
            <param name="max">The maximum value. If <c>value</c> is greater than <c>max</c>, <c>max</c> will be returned.</param>
            <returns>The clamped value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Distance(System.Single,System.Single)">
            <summary>Calculates the absolute value of the difference of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>Distance between the two values.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Hermite(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>Performs a Hermite spline interpolation.</summary>
            <param name="value1">Source position.</param>
            <param name="tangent1">Source tangent.</param>
            <param name="value2">Source position.</param>
            <param name="tangent2">Source tangent.</param>
            <param name="amount">Weighting factor.</param>
            <returns>The result of the Hermite spline interpolation.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)">
            <summary>Linearly interpolates between two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>value1 + (value2 - value1) * amount</code>. Passing amount a value of 0 will cause value1 to be returned, a
                value
                of 1 will cause value2 to be returned. See <see cref="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)" /> for a less efficient version with
                more
                precision around edge cases.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.LerpPrecise(System.Single,System.Single,System.Single)">
            <summary>
                Linearly interpolates between two values. This method is a less efficient, more precise version of
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" />. See remarks for more info.
            </summary>
            <param name="value1">Source value.</param>
            <param name="value2">Destination value.</param>
            <param name="amount">Value between 0 and 1 indicating the weight of value2.</param>
            <returns>Interpolated value.</returns>
            <remarks>
                This method performs the linear interpolation based on the following formula:
                <code>((1 - amount) * value1) + (value2 * amount)</code>. Passing amount a value of 0 will cause value1 to be
                returned,
                a value of 1 will cause value2 to be returned. This method does not have the floating point precision issue that
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> has. i.e. If there is a big gap between value1 and value2 in magnitude (e.g.
                value1=10000000000000000, value2=1), right at the edge of the interpolation range (amount=1),
                <see cref="M:Alis.Core.Aspect.Math.Util.Helper.Lerp(System.Single,System.Single,System.Single)" /> will return 0 (whereas it should return 1). This also holds for value1=10^17,
                value2=10;
                value1=10^18,value2=10^2... so on. For an in depth explanation of the issue, see below references: Relevant
                Wikipedia
                Article: https://en.wikipedia.org/wiki/Linear_interpolation#Programming_language_support Relevant StackOverflow
                Answer:
                http://stackoverflow.com/questions/4353525/floating-point-linear-interpolation#answer-23716956
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Single,System.Single)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Max(System.Int32,System.Int32)">
            <summary>Returns the greater of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The greater value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Single,System.Single)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.Min(System.Int32,System.Int32)">
            <summary>Returns the lesser of two values.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <returns>The lesser value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.SmoothStep(System.Single,System.Single,System.Single)">
            <summary>Interpolates between two values using a cubic equation.</summary>
            <param name="value1">Source value.</param>
            <param name="value2">Source value.</param>
            <param name="amount">Weighting value.</param>
            <returns>Interpolated value.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToDegrees(System.Single)">
            <summary>Converts radians to degrees.</summary>
            <param name="radians">The angle in radians.</param>
            <returns>The angle in degrees.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = 180 / pi</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.ToRadians(System.Single)">
            <summary>Converts degrees to radians.</summary>
            <param name="degrees">The angle in degrees.</param>
            <returns>The angle in radians.</returns>
            <remarks>This method uses double precission internally, though it returns single float Factor = pi / 180</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.WrapAngle(System.Single)">
            <summary>Reduces a given angle to a value between π and -π.</summary>
            <param name="angle">The angle to reduce, in radians.</param>
            <returns>The new angle, in radians.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Helper.IsPowerOfTwo(System.Int32)">
            <summary>Determines if value is powered by two.</summary>
            <param name="value">A value.</param>
            <returns><c>true</c> if <c>value</c> is powered by two; otherwise <c>false</c>.</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.Quaternion">
            <summary>
                The quaternion
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.hash">
            <summary>
                The hash
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.hashCode">
            <summary>
                The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.SlerpEpsilon">
            <summary>
                The slerp epsilon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.X">
            <summary>The X value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Y">
            <summary>The Y value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Z">
            <summary>The Z value of the vector component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.W">
            <summary>The rotation component of the quaternion.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.Quaternion.Count">
            <summary>
                The count
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Constructs a quaternion from the specified components.</summary>
            <param name="x">The value to assign to the X component of the quaternion.</param>
            <param name="y">The value to assign to the Y component of the quaternion.</param>
            <param name="z">The value to assign to the Z component of the quaternion.</param>
            <param name="w">The value to assign to the W component of the quaternion.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.#ctor(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Creates a quaternion from the specified vector and rotation parts.</summary>
            <param name="vectorPart">The vector part of the quaternion.</param>
            <param name="scalarPart">The rotation part of the quaternion.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.Zero">
            <summary>Gets a quaternion that represents a zero.</summary>
            <value>A quaternion whose values are <c>(0, 0, 0, 0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.Identity">
            <summary>Gets a quaternion that represents no rotation.</summary>
            <value>A quaternion whose values are <c>(0, 0, 0, 1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Util.Quaternion.IsIdentity">
            <summary>Gets a value that indicates whether the current instance is the identity quaternion.</summary>
            <value><see langword="true" /> if the current instance is the identity quaternion; otherwise, <see langword="false" />.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Addition(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Adds each element in one quaternion with its corresponding element in a second quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Addition(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the addition operator for
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Division(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides one quaternion by a second quaternion.</summary>
            <param name="value1">The dividend.</param>
            <param name="value2">The divisor.</param>
            <returns>The quaternion that results from dividing <paramref name="value1" /> by <paramref name="value2" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Division(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the division operation for <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Equality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether two quaternions are equal.</summary>
            <param name="value1">The first quaternion to compare.</param>
            <param name="value2">The second quaternion to compare.</param>
            <returns><see langword="true" /> if the two quaternions are equal; otherwise, <see langword="false" />.</returns>
            <remarks>
                Two quaternions are equal if each of their corresponding components is equal.
                The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Equality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the equality operator for
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Inequality(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether two quaternions are not equal.</summary>
            <param name="value1">The first quaternion to compare.</param>
            <param name="value2">The second quaternion to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="value1" /> and <paramref name="value2" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Multiply(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the quaternion that results from multiplying two quaternions together.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The product quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Multiply(Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>
                Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar
                factor.
            </summary>
            <param name="value1">The source quaternion.</param>
            <param name="value2">The scalar value.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Subtraction(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Subtracts each element in a second quaternion from its corresponding element in a first quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>
                The quaternion containing the values that result from subtracting each element in <paramref name="value2" />
                from its corresponding element in <paramref name="value1" />.
            </returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_Subtraction(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the subtraction operator for
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.op_UnaryNegation(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Reverses the sign of each component of the quaternion.</summary>
            <param name="value">The quaternion to negate.</param>
            <returns>The negated quaternion.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Util.Quaternion.op_UnaryNegation(Alis.Core.Aspect.Math.Util.Quaternion)" /> method defines the operation of the unary negation operator for
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Add(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Adds each element in one quaternion with its corresponding element in a second quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The quaternion that contains the summed values of <paramref name="value1" /> and <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Concatenate(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Concatenates two quaternions.</summary>
            <param name="value1">The first quaternion rotation in the series.</param>
            <param name="value2">The second quaternion rotation in the series.</param>
            <returns>
                A new quaternion representing the concatenation of the <paramref name="value1" /> rotation followed by the
                <paramref name="value2" /> rotation.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Conjugate(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the conjugate of a specified quaternion.</summary>
            <param name="value">The quaternion.</param>
            <returns>A new quaternion that is the conjugate of <see langword="value" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromAxisAngle(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Creates a quaternion from a unit vector and an angle to rotate around the vector.</summary>
            <param name="axis">The unit vector to rotate around.</param>
            <param name="angle">The angle, in radians, to rotate around the vector.</param>
            <returns>The newly created quaternion.</returns>
            <remarks>
                <paramref name="axis" /> vector must be normalized before calling this method or the resulting
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> will be incorrect.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromRotationMatrix(Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Creates a quaternion from the specified rotation matrix.</summary>
            <param name="matrix">The rotation matrix.</param>
            <returns>The newly created quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.CreateFromYawPitchRoll(System.Single,System.Single,System.Single)">
            <summary>Creates a new quaternion from the given yaw, pitch, and roll.</summary>
            <param name="yaw">The yaw angle, in radians, around the Y axis.</param>
            <param name="pitch">The pitch angle, in radians, around the X axis.</param>
            <param name="roll">The roll angle, in radians, around the Z axis.</param>
            <returns>The resulting quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Divide(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides one quaternion by a second quaternion.</summary>
            <param name="value1">The dividend.</param>
            <param name="value2">The divisor.</param>
            <returns>The quaternion that results from dividing <paramref name="value1" /> by <paramref name="value2" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Dot(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Calculates the dot product of two quaternions.</summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Inverse(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the inverse of a quaternion.</summary>
            <param name="value">The quaternion.</param>
            <returns>The inverted quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Lerp(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>
                Performs a linear interpolation between two quaternions based on a value that specifies the weighting of the
                second quaternion.
            </summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="amount">The relative weight of <paramref name="quaternion2" /> in the interpolation.</param>
            <returns>The interpolated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Multiply(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns the quaternion that results from multiplying two quaternions together.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>The product quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Multiply(Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>
                Returns the quaternion that results from scaling all the components of a specified quaternion by a scalar
                factor.
            </summary>
            <param name="value1">The source quaternion.</param>
            <param name="value2">The scalar value.</param>
            <returns>The scaled quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Negate(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Reverses the sign of each component of the quaternion.</summary>
            <param name="value">The quaternion to negate.</param>
            <returns>The negated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Normalize(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Divides each component of a specified <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> by its length.</summary>
            <param name="value">The quaternion to normalize.</param>
            <returns>The normalized quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Slerp(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion,System.Single)">
            <summary>Interpolates between two quaternions, using spherical linear interpolation.</summary>
            <param name="quaternion1">The first quaternion.</param>
            <param name="quaternion2">The second quaternion.</param>
            <param name="amount">The relative weight of the second quaternion in the interpolation.</param>
            <returns>The interpolated quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Subtract(Alis.Core.Aspect.Math.Util.Quaternion,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Subtracts each element in a second quaternion from its corresponding element in a first quaternion.</summary>
            <param name="value1">The first quaternion.</param>
            <param name="value2">The second quaternion.</param>
            <returns>
                The quaternion containing the values that result from subtracting each element in <paramref name="value2" />
                from its corresponding element in <paramref name="value1" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Util.Quaternion" /> object and the corresponding components of each matrix are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Equals(Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Returns a value that indicates whether this instance and another quaternion are equal.</summary>
            <param name="other">The other quaternion.</param>
            <returns><see langword="true" /> if the two quaternions are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two quaternions are equal if each of their corresponding components is equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.Length">
            <summary>Calculates the length of the quaternion.</summary>
            <returns>The computed length of the quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.LengthSquared">
            <summary>Calculates the squared length of the quaternion.</summary>
            <returns>The length squared of the quaternion.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.Quaternion.ToString">
            <summary>Returns a string that represents this quaternion.</summary>
            <returns>The string representation of this quaternion.</returns>
            <remarks>
                The numeric values in the returned string are formatted by using the conventions of the current culture. For
                example, for the en-US culture, the returned string might appear as <c>{X:1.1 Y:2.2 Z:3.3 W:4.4}</c>.
            </remarks>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Util.RandomUtils">
            <summary>
                The random utils class
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Util.RandomUtils.Rng">
            <summary>
                The create
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.RandomUtils.GetInt32(System.Int32,System.Int32)">
            <summary>
                Gets the int 32 using the specified min value
            </summary>
            <param name="minValue">The min value</param>
            <param name="maxValue">The max value</param>
            <exception cref="T:System.ArgumentException">minValue must be less than or equal to maxValue.</exception>
            <returns>The int</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Util.RandomUtils.GetInt32(System.Int32)">
            <summary>
                Gets the int 32 using the specified value
            </summary>
            <param name="value">The value</param>
            <exception cref="T:System.ArgumentException">value must be greater than or equal to 0.</exception>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> object whose two elements have the same value.</summary>
            <param name="value">The value to assign to both elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.#ctor(System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> field.</param>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.Zero">
            <summary>Returns a vector whose 2 elements are equal to zero.</summary>
            <value>A vector whose two elements are equal to zero (that is, it returns the vector <c>(0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.One">
            <summary>Gets a vector whose 2 elements are equal to one.</summary>
            <value>A vector whose two elements are equal to one (that is, it returns the vector <c>(1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.UnitX">
            <summary>Gets the vector (1,0).</summary>
            <value>The vector <c>(1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector2.UnitY">
            <summary>Gets the vector (0,1).</summary>
            <value>The vector <c>(0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> objects.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Division(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Division(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> objects are equal if each value in <paramref name="left" /> is equal to the
                corresponding value in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the subtraction operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2)" /> method defines the unary negation operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Abs(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Add(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Clamp(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Distance(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Divide(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Divide(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Dot(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Lerp(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
            <remarks>
                <format type="text/markdown"><![CDATA[
            The behavior of this method changed in .NET 5.0. For more information, see [Behavior change for Vector2.Lerp and Vector4.Lerp](/dotnet/core/compatibility/3.1-5.0#behavior-change-for-vector2lerp-and-vector4lerp).
            ]]></format>
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Max(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Min(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Negate(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Normalize(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Reflect(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Subtract(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Transforms a vector by a specified 3x2 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Transform(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix3X2F)">
            <summary>Transforms a vector normal by the given 3x2 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector2,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least two elements. The method copies the vector's elements starting at
                index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the two vector elements. In
                other words, elements <paramref name="index" /> and <paramref name="index" /> + 1 must already exist in
                <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2" /> object and their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Equals(Alis.Core.Aspect.Math.Vector.Vector2)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.X" /> and <see cref="F:Alis.Core.Aspect.Math.Vector.Vector2.Y" /> elements are equal.</remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.Length">
            <summary>Returns the length of the vector.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector2.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector2.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> is a struct represent a glsl bvec2 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2B.#ctor(System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector2B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Vector2i is an utility class for manipulating 2 dimensional
                vectors with integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.#ctor(System.Int32,System.Int32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; returns the opposite of a vector
            </summary>
            <param name="v">Vector to negate</param>
            <returns>-v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Multiply(System.Int32,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Division(Alis.Core.Aspect.Math.Vector.Vector2I,System.Int32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2I,Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.Equals(Alis.Core.Aspect.Math.Vector.Vector2I)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2I.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2I)~Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2I.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector2U">
            <summary>
                Vector2u is an utility class for manipulating 2 dimensional
                vectors with unsigned integer components
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.#ctor(System.UInt32,System.UInt32)">
            <summary>
                Construct the vector from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator - overload ; subtracts two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 - v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Addition(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator + overload ; add two vectors
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 + v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator * overload ; multiply a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v * x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Multiply(System.UInt32,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator * overload ; multiply a scalar value by a vector
            </summary>
            <param name="x">Scalar value</param>
            <param name="v">Vector</param>
            <returns>x * v</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Division(Alis.Core.Aspect.Math.Vector.Vector2U,System.UInt32)">
            <summary>
                Operator / overload ; divide a vector by a scalar value
            </summary>
            <param name="v">Vector</param>
            <param name="x">Scalar value</param>
            <returns>v / x</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Equality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator == overload ; check vector equality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 == v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector2U,Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Operator != overload ; check vector inequality
            </summary>
            <param name="v1">First vector</param>
            <param name="v2">Second vector</param>
            <returns>v1 != v2</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.ToString">
            <summary>
                Provide a string describing the object
            </summary>
            <returns>String description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(System.Object)">
            <summary>
                Compare vector and object and checks if they are equal
            </summary>
            <param name="obj">Object to check</param>
            <returns>Object and vector are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.Equals(Alis.Core.Aspect.Math.Vector.Vector2U)">
            <summary>
                Compare two vectors and checks if they are equal
            </summary>
            <param name="other">Vector to check</param>
            <returns>Vectors are equal</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.GetHashCode">
            <summary>
                Provide a integer describing the object
            </summary>
            <returns>Integer description of the object</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2I">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector2U.op_Explicit(Alis.Core.Aspect.Math.Vector.Vector2U)~Alis.Core.Aspect.Math.Vector.Vector2">
            <summary>
                Explicit casting to another vector type
            </summary>
            <param name="v">Vector being casted</param>
            <returns>Casting result</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.X">
            <summary>X (horizontal) component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector2U.Y">
            <summary>Y (vertical) component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3">
            <summary>
                The vector
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.hash">
            <summary>
                The hash
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.hashCode">
            <summary>
                The hash code
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.X">
            <summary>The X component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.Y">
            <summary>The Y component of the vector.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3.Z">
            <summary>The Z component of the vector.</summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(System.Single)">
            <summary>Creates a new <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> object whose three elements have the same value.</summary>
            <param name="value">The value to assign to all three elements.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(Alis.Core.Aspect.Math.Vector.Vector2,System.Single)">
            <summary>
                Initializes a new instance of the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> class
            </summary>
            <param name="value">The value</param>
            <param name="z">The </param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.#ctor(System.Single,System.Single,System.Single)">
            <summary>Creates a vector whose elements have the specified values.</summary>
            <param name="x">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.X" /> field.</param>
            <param name="y">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Y" /> field.</param>
            <param name="z">The value to assign to the <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Z" /> field.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.TakeMin(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Store the minimum values of x, y, and z between the two vectors.
            </summary>
            <param name="tv">The Vector3 to perform the TakeMin on.</param>
            <param name="v">Vector to check against.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.TakeMax(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>
                Store the maximum values of x, y, and z between the two vectors.
            </summary>
            <param name="tv">The Vector3 to perform the TakeMax on.</param>
            <param name="v">Vector to check against.</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Get(Alis.Core.Aspect.Math.Vector.Vector3,System.Int32)">
            <summary>
                Provide an accessor for each of the elements of the Vector structure.
            </summary>
            <param name="v">The Vector3 to access.</param>
            <param name="index">The element to access (0 = X, 1 = Y, 2 = Z).</param>
            <returns>The element of the Vector3 as indexed by i.</returns>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.Zero">
            <summary>Gets a vector whose 3 elements are equal to zero.</summary>
            <value>A vector whose three elements are equal to zero (that is, it returns the vector <c>(0,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.One">
            <summary>Gets a vector whose 3 elements are equal to one.</summary>
            <value>A vector whose three elements are equal to one (that is, it returns the vector <c>(1,1,1)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitX">
            <summary>Gets the vector (1,0,0).</summary>
            <value>The vector <c>(1,0,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitY">
            <summary>Gets the vector (0,1,0).</summary>
            <value>The vector <c>(0,1,0)</c>.</value>
        </member>
        <member name="P:Alis.Core.Aspect.Math.Vector.Vector3.UnitZ">
            <summary>Gets the vector (0,0,1).</summary>
            <value>The vector <c>(0,0,1)</c>.</value>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Addition(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the addition operation for <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" />
                objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Division(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from dividing <paramref name="left" /> by <paramref name="right" />.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Division(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="value1">The vector.</param>
            <param name="value2">The scalar value.</param>
            <returns>The result of the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Equality(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether each pair of elements in two specified vectors is equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are equal; otherwise,
                <see langword="false" />.
            </returns>
            <remarks>
                Two <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects are equal if each element in <paramref name="right" /> is equal to the
                corresponding element in <paramref name="right" />.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Inequality(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether two specified vectors are not equal.</summary>
            <param name="left">The first vector to compare.</param>
            <param name="right">The second vector to compare.</param>
            <returns>
                <see langword="true" /> if <paramref name="left" /> and <paramref name="right" /> are not equal; otherwise,
                <see langword="false" />.
            </returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Multiplies the specified vector by the specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Multiplies the scalar value by the specified vector.</summary>
            <param name="left">The vector.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector that results from subtracting <paramref name="right" /> from <paramref name="left" />.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_Subtraction(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the subtraction operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Negates the specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
            <remarks>
                The <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.op_UnaryNegation(Alis.Core.Aspect.Math.Vector.Vector3)" /> method defines the unary negation operation for
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> objects.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Abs(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the absolute values of each of the specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The absolute value vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Add(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Adds two vectors together.</summary>
            <param name="left">The first vector to add.</param>
            <param name="right">The second vector to add.</param>
            <returns>The summed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Clamp(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Restricts a vector between a minimum and a maximum value.</summary>
            <param name="value1">The vector to restrict.</param>
            <param name="min">The minimum value.</param>
            <param name="max">The maximum value.</param>
            <returns>The restricted vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Cross(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Computes the cross product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The cross product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Distance(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Computes the Euclidean distance between the two given points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.DistanceSquared(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the Euclidean distance squared between two specified points.</summary>
            <param name="value1">The first point.</param>
            <param name="value2">The second point.</param>
            <returns>The distance squared.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Divide(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Divides the first vector by the second.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The vector resulting from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Divide(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Divides the specified vector by a specified scalar value.</summary>
            <param name="left">The vector.</param>
            <param name="divisor">The scalar value.</param>
            <returns>The vector that results from the division.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Dot(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the dot product of two vectors.</summary>
            <param name="vector1">The first vector.</param>
            <param name="vector2">The second vector.</param>
            <returns>The dot product.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Lerp(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Performs a linear interpolation between two vectors based on the given weighting.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <param name="amount">A value between 0 and 1 that indicates the weight of <paramref name="value2" />.</param>
            <returns>The interpolated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Max(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the maximum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The maximized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Min(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the minimum of each of the pairs of elements in two specified vectors.</summary>
            <param name="value1">The first vector.</param>
            <param name="value2">The second vector.</param>
            <returns>The minimized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a new vector whose values are the product of each pair of elements in two specified vectors.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The element-wise product vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(Alis.Core.Aspect.Math.Vector.Vector3,System.Single)">
            <summary>Multiplies a vector by a specified scalar.</summary>
            <param name="left">The vector to multiply.</param>
            <param name="right">The scalar value.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Multiply(System.Single,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Multiplies a scalar value by a specified vector.</summary>
            <param name="left">The scaled value.</param>
            <param name="right">The vector.</param>
            <returns>The scaled vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Negate(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Negates a specified vector.</summary>
            <param name="value">The vector to negate.</param>
            <returns>The negated vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Normalize(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector with the same direction as the specified vector, but with a length of one.</summary>
            <param name="value">The vector to normalize.</param>
            <returns>The normalized vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Reflect(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns the reflection of a vector off a surface that has the specified normal.</summary>
            <param name="vector">The source vector.</param>
            <param name="normal">The normal of the surface being reflected off.</param>
            <returns>The reflected vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.SquareRoot(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a vector whose elements are the square root of each of a specified vector's elements.</summary>
            <param name="value">A vector.</param>
            <returns>The square root vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Subtract(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Subtracts the second vector from the first.</summary>
            <param name="left">The first vector.</param>
            <param name="right">The second vector.</param>
            <returns>The difference vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Transform(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector by a specified 4x4 matrix.</summary>
            <param name="position">The vector to transform.</param>
            <param name="matrix">The transformation matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Transform(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Util.Quaternion)">
            <summary>Transforms a vector by the specified Quaternion rotation value.</summary>
            <param name="value">The vector to rotate.</param>
            <param name="rotation">The rotation to apply.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.TransformNormal(Alis.Core.Aspect.Math.Vector.Vector3,Alis.Core.Aspect.Math.Matrix.Matrix4X4F)">
            <summary>Transforms a vector normal by the given 4x4 matrix.</summary>
            <param name="normal">The source vector.</param>
            <param name="matrix">The matrix.</param>
            <returns>The transformed vector.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.CopyTo(System.Single[])">
            <summary>Copies the elements of the vector to a specified array.</summary>
            <param name="array">The destination array.</param>
            <remarks>
                <paramref name="array" /> must have at least three elements. The method copies the vector's elements starting
                at index 0.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.CopyTo(System.Single[],System.Int32)">
            <summary>Copies the elements of the vector to a specified array starting at a specified index position.</summary>
            <param name="array">The destination array.</param>
            <param name="index">The index at which to copy the first element of the vector.</param>
            <remarks>
                <paramref name="array" /> must have a sufficient number of elements to accommodate the three vector elements.
                In other words, elements <paramref name="index" />, <paramref name="index" /> + 1, and <paramref name="index" /> +
                2 must already exist in <paramref name="array" />.
            </remarks>
            <exception cref="T:System.ArgumentNullException"><paramref name="array" /> is <see langword="null" />.</exception>
            <exception cref="T:System.ArgumentException">The number of elements in the current instance is greater than in the array.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
                <paramref name="index" /> is less than zero.
                -or-
                <paramref name="index" /> is greater than or equal to the array length.
            </exception>
            <exception cref="T:System.RankException"><paramref name="array" /> is multidimensional.</exception>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Equals(System.Object)">
            <summary>Returns a value that indicates whether this instance and a specified object are equal.</summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns>
                <see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise,
                <see langword="false" />. If <paramref name="obj" /> is <see langword="null" />, the method returns
                <see langword="false" />.
            </returns>
            <remarks>
                The current instance and <paramref name="obj" /> are equal if <paramref name="obj" /> is a
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3" /> object and their corresponding elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Equals(Alis.Core.Aspect.Math.Vector.Vector3)">
            <summary>Returns a value that indicates whether this instance and another vector are equal.</summary>
            <param name="other">The other vector.</param>
            <returns><see langword="true" /> if the two vectors are equal; otherwise, <see langword="false" />.</returns>
            <remarks>
                Two vectors are equal if their <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.X" />, <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Y" />, and
                <see cref="F:Alis.Core.Aspect.Math.Vector.Vector3.Z" /> elements are equal.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.GetHashCode">
            <summary>Returns the hash code for this instance.</summary>
            <returns>The hash code.</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.Length">
            <summary>Returns the length of this vector object.</summary>
            <returns>The vector's length.</returns>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3.LengthSquared" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.LengthSquared">
            <summary>Returns the length of the vector squared.</summary>
            <returns>The vector's length squared.</returns>
            <remarks>This operation offers better performance than a call to the <see cref="M:Alis.Core.Aspect.Math.Vector.Vector3.Length" /> method.</remarks>
            <altmember cref="M:Alis.Core.Aspect.Math.Vector.Vector3.Length" />
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString">
            <summary>Returns the string representation of the current instance using default formatting.</summary>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using the "G" (general) format
                string and the formatting conventions of the current thread culture. The "&lt;" and "&gt;" characters are used to
                begin and end the string, and the current culture's
                <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed by a space is used to
                separate each element.
            </remarks>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString(System.String)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and the current culture's formatting conventions. The "&lt;" and "&gt;" characters are used to begin and end the
                string, and the current culture's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" />
                property followed by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3.ToString(System.String,System.IFormatProvider)">
            <summary>
                Returns the string representation of the current instance using the specified format string to format
                individual elements and the specified format provider to define culture-specific formatting.
            </summary>
            <param name="format">A standard or custom numeric format string that defines the format of individual elements.</param>
            <param name="formatProvider">A format provider that supplies culture-specific formatting information.</param>
            <returns>The string representation of the current instance.</returns>
            <remarks>
                This method returns a string in which each element of the vector is formatted using <paramref name="format" />
                and <paramref name="formatProvider" />. The "&lt;" and "&gt;" characters are used to begin and end the string, and
                the format provider's <see cref="P:System.Globalization.NumberFormatInfo.NumberGroupSeparator" /> property followed
                by a space is used to separate each element.
            </remarks>
            <related type="Article" href="/dotnet/standard/base-types/standard-numeric-format-strings">
                Standard Numeric Format
                Strings
            </related>
            <related type="Article" href="/dotnet/standard/base-types/custom-numeric-format-strings">Custom Numeric Format Strings</related>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> is a struct represent a glsl bvec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3B.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector3I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> is a struct represent a glsl ivec3 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector3I.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector3I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector3I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4" /> is a struct represent a glsl vec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4.Get(Alis.Core.Aspect.Math.Vector.Vector4,System.Int32)">
            <summary>
                Gets the v
            </summary>
            <param name="v">The </param>
            <param name="index">The index</param>
            <returns>The float</returns>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4B">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> is a struct represent a glsl bvec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4B.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4B" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4B.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Math.Vector.Vector4I">
            <summary>
                <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> is a struct represent a glsl ivec4 value
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Math.Vector.Vector4I.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Construct the <see cref="T:Alis.Core.Aspect.Math.Vector.Vector4I" /> from its coordinates
            </summary>
            <param name="x">X coordinate</param>
            <param name="y">Y coordinate</param>
            <param name="z">Z coordinate</param>
            <param name="w">W coordinate</param>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.X">
            <summary>Horizontal component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Y">
            <summary>Vertical component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.Z">
            <summary>Depth component of the vector</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Math.Vector.Vector4I.W">
            <summary>Projective/Homogenous component of the vector</summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Attributes.NotEmptyAttribute">
            <summary>
                The not empty attribute class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Memory.Attributes.ValidationAttribute" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Attributes.NotEmptyAttribute.Validate(System.Object,System.String)">
            <summary>
                Validates the value
            </summary>
            <param name="value">The value</param>
            <param name="name">The name</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Attributes.NotNullAttribute">
            <summary>
                The not null attribute class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Memory.Attributes.ValidationAttribute" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Attributes.NotNullAttribute.Validate(System.Object,System.String)">
            <summary>
                Validates the value
            </summary>
            <param name="value">The value</param>
            <param name="name">The name</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Attributes.NotZeroAttribute">
            <summary>
                The not null attribute class
            </summary>
            <seealso cref="T:Alis.Core.Aspect.Memory.Attributes.ValidationAttribute" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Attributes.NotZeroAttribute.Validate(System.Object,System.String)">
            <summary>
                Validates the value
            </summary>
            <param name="value">The value</param>
            <param name="name">The name</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Attributes.ValidationAttribute">
            <summary>
                The validation attribute class
            </summary>
            <seealso cref="T:System.Attribute" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Attributes.ValidationAttribute.Validate(System.Object,System.String)">
            <summary>
                Validates the value
            </summary>
            <param name="value">The value</param>
            <param name="name"></param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Exceptions.NotEmptyException">
            <summary>
                The not empty exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Exceptions.NotEmptyException.#ctor(System.String)">
            <summary>
                The constructor
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Exceptions.NotNullException">
            <summary>
                The my exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Exceptions.NotNullException.#ctor(System.String)">
            <summary>
                The constructor
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Exceptions.NotZeroException">
            <summary>
                The not zero exception class
            </summary>
            <seealso cref="T:System.Exception" />
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Exceptions.NotZeroException.#ctor(System.String)">
            <summary>
                The constructor
            </summary>
            <param name="message">The message</param>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream">
            <summary>
                Structure that contains InputStream callbacks
                (directly maps to a CSFML sfInputStream)
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.ReadCallbackType">
            <summary>
                Type of callback to read data from the current stream
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.SeekCallbackType">
            <summary>
                Type of callback to seek the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.TellCallbackType">
            <summary>
                Type of callback to return the current stream's position
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSizeCallbackType">
            <summary>
                Type of callback to return the current stream's size
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Read">
            <summary>
                Function that is called to read data from the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Seek">
            <summary>
                Function that is called to seek the stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.Tell">
            <summary>
                Function that is called to return the positon
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.InputStream.GetSize">
            <summary>
                Function that is called to return the size
            </summary>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor">
            <summary>
                Adapts a System.IO.Stream to be usable as a SFML InputStream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStream">
            <summary>
                The my input stream
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myInputStreamPtr">
            <summary>
                The my input stream ptr
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.myStream">
            <summary>
                The my stream
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.#ctor(System.IO.Stream)">
            <summary>
                Construct from a System.IO.Stream
            </summary>
            <param name="stream">Stream to adapt</param>
        </member>
        <member name="P:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.InputStreamPtr">
            <summary>
                The pointer to the CSFML InputStream structure
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose">
            <summary>
                Explicitly dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Finalize">
            <summary>
                Dispose the object
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Dispose(System.Boolean)">
            <summary>
                Destroy the object
            </summary>
            <param name="disposing">Is the GC disposing the object, or is it an explicit call ?</param>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Read(System.IntPtr,System.Int64,System.IntPtr)">
            <summary>
                Called to read from the stream
            </summary>
            <param name="data">Where to copy the read bytes</param>
            <param name="size">Size to read, in bytes</param>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes read</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Seek(System.Int64,System.IntPtr)">
            <summary>
                Called to set the read position in the stream
            </summary>
            <param name="position">New read position</param>
            <param name="userData">User data -- unused</param>
            <returns>Actual position</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.Tell(System.IntPtr)">
            <summary>
                Get the current read position in the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Current position in the stream</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Streams.SFML.StreamAdaptor.GetSize(System.IntPtr)">
            <summary>
                Called to get the total size of the stream
            </summary>
            <param name="userData">User data -- unused</param>
            <returns>Number of bytes in the stream</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Utf8Manager">
            <summary>
                The utf manager class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Utf8Manager.Utf8ToManaged(System.IntPtr,System.Boolean)">
            <summary>
                Utf the 8 to managed using the specified s
            </summary>
            <param name="s">The </param>
            <param name="freePtr">The free ptr</param>
            <returns>The result</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Utf8Manager.Utf8EncodeHeap(System.String)">
            <summary>
                Utf the 8 encode heap using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The buffer</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Utf8Manager.Utf8Encode(System.String,System.Byte[],System.Int32)">
            <summary>
                Utf the 8 encode using the specified str
            </summary>
            <param name="str">The str</param>
            <param name="buffer">The buffer</param>
            <param name="bufferSize">The buffer size</param>
            <returns>The buffer</returns>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Utf8Manager.Utf8Size(System.String)">
            <summary>
                Utf the 8 size using the specified str
            </summary>
            <param name="str">The str</param>
            <returns>The int</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.ValidationExtensions">
            <summary>
                The validation extensions class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.ValidationExtensions.Validate``1(``0)">
            <summary>
                Validates the attributes using the specified value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
            <returns>The value</returns>
        </member>
        <member name="T:Alis.Core.Aspect.Memory.Validator">
            <summary>
                The validator class
            </summary>
        </member>
        <member name="M:Alis.Core.Aspect.Memory.Validator.Validate``1(``0)">
            <summary>
                Validate the value
            </summary>
            <typeparam name="T">The </typeparam>
            <param name="value">The value</param>
        </member>
        <member name="T:Alis.Core.Aspect.Time.TimeStep">
            <summary>This is an internal class.</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTime">
            <summary>Time step (Delta time)</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.DeltaTimeRatio">
            <summary>dt * inv_dt0</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTime">
            <summary>Inverse time step (0 if dt == 0).</summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.InvertedDeltaTimeZero">
            <summary>
                The inverted delta time
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.PositionIterations">
            <summary>
                The position iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.VelocityIterations">
            <summary>
                The velocity iterations
            </summary>
        </member>
        <member name="F:Alis.Core.Aspect.Time.TimeStep.WarmStarting">
            <summary>
                The warm starting
            </summary>
        </member>
    </members>
</doc>
